Return-Path: <virtualization-bounces@lists.linux-foundation.org>
X-Original-To: lists.virtualization@lfdr.de
Delivered-To: lists.virtualization@lfdr.de
Received: from fraxinus.osuosl.org (smtp4.osuosl.org [140.211.166.137])
	by mail.lfdr.de (Postfix) with ESMTPS id 931362C3CFD
	for <lists.virtualization@lfdr.de>; Wed, 25 Nov 2020 10:52:29 +0100 (CET)
Received: from localhost (localhost [127.0.0.1])
	by fraxinus.osuosl.org (Postfix) with ESMTP id 201A586B66;
	Wed, 25 Nov 2020 09:52:28 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from fraxinus.osuosl.org ([127.0.0.1])
	by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id U9_jpnomjMCt; Wed, 25 Nov 2020 09:52:25 +0000 (UTC)
Received: from lists.linuxfoundation.org (lf-lists.osuosl.org [140.211.9.56])
	by fraxinus.osuosl.org (Postfix) with ESMTP id CC52D86BA9;
	Wed, 25 Nov 2020 09:52:19 +0000 (UTC)
Received: from lf-lists.osuosl.org (localhost [127.0.0.1])
	by lists.linuxfoundation.org (Postfix) with ESMTP id B588CC1DA0;
	Wed, 25 Nov 2020 09:52:19 +0000 (UTC)
X-Original-To: virtualization@lists.linux-foundation.org
Delivered-To: virtualization@lists.linuxfoundation.org
Received: from fraxinus.osuosl.org (smtp4.osuosl.org [140.211.166.137])
 by lists.linuxfoundation.org (Postfix) with ESMTP id 7FFB8C1DA0
 for <virtualization@lists.linux-foundation.org>;
 Wed, 25 Nov 2020 09:52:04 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by fraxinus.osuosl.org (Postfix) with ESMTP id 6021C86B24
 for <virtualization@lists.linux-foundation.org>;
 Wed, 25 Nov 2020 09:52:04 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from fraxinus.osuosl.org ([127.0.0.1])
 by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id O9ln-UwUTz8C
 for <virtualization@lists.linux-foundation.org>;
 Wed, 25 Nov 2020 09:52:00 +0000 (UTC)
X-Greylist: from auto-whitelisted by SQLgrey-1.7.6
Received: from mx01.bbu.dsd.mx.bitdefender.com
 (mx01.bbu.dsd.mx.bitdefender.com [91.199.104.161])
 by fraxinus.osuosl.org (Postfix) with ESMTPS id 7A67086A75
 for <virtualization@lists.linux-foundation.org>;
 Wed, 25 Nov 2020 09:51:59 +0000 (UTC)
Received: from smtp.bitdefender.com (smtp01.buh.bitdefender.com [10.17.80.75])
 by mx01.bbu.dsd.mx.bitdefender.com (Postfix) with ESMTPS id
 4127230462D4; Wed, 25 Nov 2020 11:35:54 +0200 (EET)
Received: from localhost.localdomain (unknown [91.199.104.27])
 by smtp.bitdefender.com (Postfix) with ESMTPSA id 1B1CE3072784;
 Wed, 25 Nov 2020 11:35:54 +0200 (EET)
From: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>
To: kvm@vger.kernel.org
Subject: [PATCH v10 70/81] KVM: introspection: add KVMI_VCPU_EVENT_DESCRIPTOR
Date: Wed, 25 Nov 2020 11:35:49 +0200
Message-Id: <20201125093600.2766-71-alazar@bitdefender.com>
In-Reply-To: <20201125093600.2766-1-alazar@bitdefender.com>
References: <20201125093600.2766-1-alazar@bitdefender.com>
MIME-Version: 1.0
Cc: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>,
 Paolo Bonzini <pbonzini@redhat.com>,
 =?UTF-8?q?Nicu=C8=99or=20C=C3=AE=C8=9Bu?= <nicu.citu@icloud.com>,
 virtualization@lists.linux-foundation.org
X-BeenThere: virtualization@lists.linux-foundation.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Linux virtualization <virtualization.lists.linux-foundation.org>
List-Unsubscribe: <https://lists.linuxfoundation.org/mailman/options/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=unsubscribe>
List-Archive: <http://lists.linuxfoundation.org/pipermail/virtualization/>
List-Post: <mailto:virtualization@lists.linux-foundation.org>
List-Help: <mailto:virtualization-request@lists.linux-foundation.org?subject=help>
List-Subscribe: <https://lists.linuxfoundation.org/mailman/listinfo/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: virtualization-bounces@lists.linux-foundation.org
Sender: "Virtualization" <virtualization-bounces@lists.linux-foundation.org>

RnJvbTogTmljdciZb3IgQ8OuyJt1IDxuaWN1LmNpdHVAaWNsb3VkLmNvbT4KClRoaXMgZXZlbnQg
aXMgc2VudCB3aGVuIElEVFIsIEdEVFIsIExEVFIgb3IgVFIgYXJlIGFjY2Vzc2VkLgoKVGhlc2Ug
Y291bGQgYmUgdXNlZCB0byBpbXBsZW1lbnQgYSB0aW55IGFnZW50IHdoaWNoIHJ1bnMgaW4gdGhl
IGNvbnRleHQKb2YgYW4gaW50cm9zcGVjdGVkIGd1ZXN0IGFuZCB1c2VzIHZpcnR1YWxpemVkIGV4
Y2VwdGlvbnMgKCNWRSkgYW5kCmFsdGVybmF0ZSBFUFQgdmlld3MgKFZNRlVOQyAjMCkgdG8gZmls
dGVyIGNvbnZlcnRlZCBWTUVYSVRTLiBUaGUgZXZlbnRzCm9mIGludGVyZXN0ZWQgd2lsbCBiZSBz
dXBwcmVzc2VkIChhZnRlciBzb21lIGFwcHJvcHJpYXRlIGd1ZXN0LXNpZGUKaGFuZGxpbmcpIHdo
aWxlIHRoZSByZXN0IHdpbGwgYmUgc2VudCB0byB0aGUgaW50cm9zcGVjdG9yIHZpYSBhIFZNQ0FM
TC4KClNpZ25lZC1vZmYtYnk6IE5pY3XImW9yIEPDrsibdSA8bmljdS5jaXR1QGljbG91ZC5jb20+
CkNvLWRldmVsb3BlZC1ieTogQWRhbGJlcnQgTGF6xINyIDxhbGF6YXJAYml0ZGVmZW5kZXIuY29t
PgpTaWduZWQtb2ZmLWJ5OiBBZGFsYmVydCBMYXrEg3IgPGFsYXphckBiaXRkZWZlbmRlci5jb20+
Ci0tLQogRG9jdW1lbnRhdGlvbi92aXJ0L2t2bS9rdm1pLnJzdCAgICAgICAgICAgICAgIHwgNDMg
KysrKysrKysrKysKIGFyY2gveDg2L2luY2x1ZGUvYXNtL2t2bWlfaG9zdC5oICAgICAgICAgICAg
ICB8ICAzICsKIGFyY2gveDg2L2luY2x1ZGUvdWFwaS9hc20va3ZtaS5oICAgICAgICAgICAgICB8
IDEzICsrKysKIGFyY2gveDg2L2t2bS9rdm1pLmMgICAgICAgICAgICAgICAgICAgICAgICAgICB8
IDU4ICsrKysrKysrKysrKysrCiBhcmNoL3g4Ni9rdm0va3ZtaS5oICAgICAgICAgICAgICAgICAg
ICAgICAgICAgfCAgMSArCiBhcmNoL3g4Ni9rdm0va3ZtaV9tc2cuYyAgICAgICAgICAgICAgICAg
ICAgICAgfCAxOSArKysrKwogYXJjaC94ODYva3ZtL3N2bS9zdm0uYyAgICAgICAgICAgICAgICAg
ICAgICAgIHwgMzMgKysrKysrKysKIGFyY2gveDg2L2t2bS92bXgvdm14LmMgICAgICAgICAgICAg
ICAgICAgICAgICB8IDIzICsrKysrKwogaW5jbHVkZS91YXBpL2xpbnV4L2t2bWkuaCAgICAgICAg
ICAgICAgICAgICAgIHwgIDEgKwogLi4uL3Rlc3Rpbmcvc2VsZnRlc3RzL2t2bS94ODZfNjQva3Zt
aV90ZXN0LmMgIHwgNzUgKysrKysrKysrKysrKysrKysrKwogMTAgZmlsZXMgY2hhbmdlZCwgMjY5
IGluc2VydGlvbnMoKykKCmRpZmYgLS1naXQgYS9Eb2N1bWVudGF0aW9uL3ZpcnQva3ZtL2t2bWku
cnN0IGIvRG9jdW1lbnRhdGlvbi92aXJ0L2t2bS9rdm1pLnJzdAppbmRleCA1OGI1MDQ2NGI1ZjYu
LjY0OWE2NzlhNDg1YiAxMDA2NDQKLS0tIGEvRG9jdW1lbnRhdGlvbi92aXJ0L2t2bS9rdm1pLnJz
dAorKysgYi9Eb2N1bWVudGF0aW9uL3ZpcnQva3ZtL2t2bWkucnN0CkBAIC01NDAsNiArNTQwLDcg
QEAgdGhlIGZvbGxvd2luZyBldmVudHM6OgogCiAJS1ZNSV9WQ1BVX0VWRU5UX0JSRUFLUE9JTlQK
IAlLVk1JX1ZDUFVfRVZFTlRfQ1IKKwlLVk1JX1ZDUFVfRVZFTlRfREVTQ1JJUFRPUgogCUtWTUlf
VkNQVV9FVkVOVF9IWVBFUkNBTEwKIAlLVk1JX1ZDUFVfRVZFTlRfWFNFVEJWCiAKQEAgLTU2Myw2
ICs1NjQsOCBAQCB0aGUgKktWTUlfVk1fQ09OVFJPTF9FVkVOVFMqIGNvbW1hbmQuCiAqIC1LVk1f
RUlOVkFMIC0gdGhlIGV2ZW50IElEIGlzIHVua25vd24gKHVzZSAqS1ZNSV9WTV9DSEVDS19FVkVO
VCogZmlyc3QpCiAqIC1LVk1fRVBFUk0gLSB0aGUgYWNjZXNzIGlzIGRpc2FsbG93ZWQgKHVzZSAq
S1ZNSV9WTV9DSEVDS19FVkVOVCogZmlyc3QpCiAqIC1LVk1fRUFHQUlOIC0gdGhlIHNlbGVjdGVk
IHZDUFUgY2FuJ3QgYmUgaW50cm9zcGVjdGVkIHlldAorKiAtS1ZNX0VPUE5PVFNVUFAgLSB0aGUg
ZXZlbnQgY2FuJ3QgYmUgaW50ZXJjZXB0ZWQgaW4gdGhlIGN1cnJlbnQgc2V0dXAKKyAgICAgICAg
ICAgICAgICAgICAgKGUuZy4gS1ZNSV9WQ1BVX0VWRU5UX0RFU0NSSVBUT1Igd2l0aCBBTUQpCiAq
IC1LVk1fRUJVU1kgLSB0aGUgZXZlbnQgY2FuJ3QgYmUgaW50ZXJjZXB0ZWQgcmlnaHQgbm93CiAg
ICAgICAgICAgICAgICAoZS5nLiBLVk1JX1ZDUFVfRVZFTlRfQlJFQUtQT0lOVCBpZiB0aGUgI0JQ
IGV2ZW50CiAgICAgICAgICAgICAgICAgaXMgYWxyZWFkeSBpbnRlcmNlcHRlZCBieSB1c2Vyc3Bh
Y2UpCkBAIC0xMjE3LDMgKzEyMjAsNDMgQEAgdG8gYmUgY2hhbmdlZCBhbmQgdGhlIGludHJvc3Bl
Y3Rpb24gaGFzIGJlZW4gZW5hYmxlZCBmb3IgdGhpcyBldmVudAogYGBrdm1pX3ZjcHVfZXZlbnRg
YCAod2l0aCB0aGUgdkNQVSBzdGF0ZSksIHRoZSBleHRlbmRlZCBjb250cm9sIHJlZ2lzdGVyCiBu
dW1iZXIgKGBgeGNyYGApLCB0aGUgb2xkIHZhbHVlIChgYG9sZF92YWx1ZWBgKSBhbmQgdGhlIG5l
dyB2YWx1ZQogKGBgbmV3X3ZhbHVlYGApIGFyZSBzZW50IHRvIHRoZSBpbnRyb3NwZWN0aW9uIHRv
b2wuCisKKzguIEtWTUlfVkNQVV9FVkVOVF9ERVNDUklQVE9SCistLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLQorCis6QXJjaGl0ZWN0dXJlczogeDg2Cis6VmVyc2lvbnM6ID49IDEKKzpBY3Rp
b25zOiBDT05USU5VRSwgUkVUUlksIENSQVNICis6UGFyYW1ldGVyczoKKworOjoKKworCXN0cnVj
dCBrdm1pX3ZjcHVfZXZlbnQ7CisJc3RydWN0IGt2bWlfdmNwdV9ldmVudF9kZXNjcmlwdG9yIHsK
KwkJX191OCBkZXNjcmlwdG9yOworCQlfX3U4IHdyaXRlOworCQlfX3U4IHBhZGRpbmdbNl07CisJ
fTsKKworOlJldHVybnM6CisKKzo6CisKKwlzdHJ1Y3Qga3ZtaV92Y3B1X2hkcjsKKwlzdHJ1Y3Qg
a3ZtaV92Y3B1X2V2ZW50X3JlcGx5OworCitUaGlzIGV2ZW50IGlzIHNlbnQgd2hlbiBhIGRlc2Ny
aXB0b3IgdGFibGUgcmVnaXN0ZXIgaXMgYWNjZXNzZWQgYW5kIHRoZQoraW50cm9zcGVjdGlvbiBo
YXMgYmVlbiBlbmFibGVkIGZvciB0aGlzIGV2ZW50IChzZWUgKipLVk1JX1ZDUFVfQ09OVFJPTF9F
VkVOVFMqKikuCisKK2Bga3ZtaV92Y3B1X2V2ZW50YGAgKHdpdGggdGhlIHZDUFUgc3RhdGUpLCB0
aGUgZGVzY3JpcHRvci10YWJsZSByZWdpc3RlcgorKGBgZGVzY3JpcHRvcmBgKSBhbmQgdGhlIGFj
Y2VzcyB0eXBlIChgYHdyaXRlYGApIGFyZSBzZW50IHRvIHRoZQoraW50cm9zcGVjdGlvbiB0b29s
LgorCitgYGRlc2NyaXB0b3JgYCBjYW4gYmUgb25lIG9mOjoKKworCUtWTUlfREVTQ19JRFRSCisJ
S1ZNSV9ERVNDX0dEVFIKKwlLVk1JX0RFU0NfTERUUgorCUtWTUlfREVTQ19UUgorCitgYHdyaXRl
YGAgaXMgMSBpZiB0aGUgZGVzY3JpcHRvciB3YXMgd3JpdHRlbiwgMCBvdGhlcndpc2UuCmRpZmYg
LS1naXQgYS9hcmNoL3g4Ni9pbmNsdWRlL2FzbS9rdm1pX2hvc3QuaCBiL2FyY2gveDg2L2luY2x1
ZGUvYXNtL2t2bWlfaG9zdC5oCmluZGV4IGQ2NjM0OTIwOGE2Yi4uYTI0YmE4NzAzNmY3IDEwMDY0
NAotLS0gYS9hcmNoL3g4Ni9pbmNsdWRlL2FzbS9rdm1pX2hvc3QuaAorKysgYi9hcmNoL3g4Ni9p
bmNsdWRlL2FzbS9rdm1pX2hvc3QuaApAQCAtNDgsNiArNDgsNyBAQCBib29sIGt2bWlfbW9uaXRv
cl9jcjN3X2ludGVyY2VwdChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsIGJvb2wgZW5hYmxlKTsKIHZv
aWQga3ZtaV9lbnRlcl9ndWVzdChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUpOwogdm9pZCBrdm1pX3hz
ZXRidl9ldmVudChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsIHU4IHhjciwKIAkJICAgICAgIHU2NCBv
bGRfdmFsdWUsIHU2NCBuZXdfdmFsdWUpOworYm9vbCBrdm1pX2Rlc2NyaXB0b3JfZXZlbnQoc3Ry
dWN0IGt2bV92Y3B1ICp2Y3B1LCB1OCBkZXNjcmlwdG9yLCBib29sIHdyaXRlKTsKIAogI2Vsc2Ug
LyogQ09ORklHX0tWTV9JTlRST1NQRUNUSU9OICovCiAKQEAgLTYzLDYgKzY0LDggQEAgc3RhdGlj
IGlubGluZSBib29sIGt2bWlfbW9uaXRvcl9jcjN3X2ludGVyY2VwdChzdHJ1Y3Qga3ZtX3ZjcHUg
KnZjcHUsCiBzdGF0aWMgaW5saW5lIHZvaWQga3ZtaV9lbnRlcl9ndWVzdChzdHJ1Y3Qga3ZtX3Zj
cHUgKnZjcHUpIHsgfQogc3RhdGljIGlubGluZSB2b2lkIGt2bWlfeHNldGJ2X2V2ZW50KHN0cnVj
dCBrdm1fdmNwdSAqdmNwdSwgdTggeGNyLAogCQkJCQl1NjQgb2xkX3ZhbHVlLCB1NjQgbmV3X3Zh
bHVlKSB7IH0KK3N0YXRpYyBpbmxpbmUgYm9vbCBrdm1pX2Rlc2NyaXB0b3JfZXZlbnQoc3RydWN0
IGt2bV92Y3B1ICp2Y3B1LCB1OCBkZXNjcmlwdG9yLAorCQkJCQkgYm9vbCB3cml0ZSkgeyByZXR1
cm4gdHJ1ZTsgfQogCiAjZW5kaWYgLyogQ09ORklHX0tWTV9JTlRST1NQRUNUSU9OICovCiAKZGlm
ZiAtLWdpdCBhL2FyY2gveDg2L2luY2x1ZGUvdWFwaS9hc20va3ZtaS5oIGIvYXJjaC94ODYvaW5j
bHVkZS91YXBpL2FzbS9rdm1pLmgKaW5kZXggOTk4ODc4MjE1MDc4Li5kYjAxYzU2YTk1ZmYgMTAw
NjQ0Ci0tLSBhL2FyY2gveDg2L2luY2x1ZGUvdWFwaS9hc20va3ZtaS5oCisrKyBiL2FyY2gveDg2
L2luY2x1ZGUvdWFwaS9hc20va3ZtaS5oCkBAIC0xMjgsNCArMTI4LDE3IEBAIHN0cnVjdCBrdm1p
X3ZjcHVfZ2V0X210cnJfdHlwZV9yZXBseSB7CiAJX191OCBwYWRkaW5nWzddOwogfTsKIAorZW51
bSB7CisJS1ZNSV9ERVNDX0lEVFIgPSAxLAorCUtWTUlfREVTQ19HRFRSID0gMiwKKwlLVk1JX0RF
U0NfTERUUiA9IDMsCisJS1ZNSV9ERVNDX1RSICAgPSA0LAorfTsKKworc3RydWN0IGt2bWlfdmNw
dV9ldmVudF9kZXNjcmlwdG9yIHsKKwlfX3U4IGRlc2NyaXB0b3I7CisJX191OCB3cml0ZTsKKwlf
X3U4IHBhZGRpbmdbNl07Cit9OworCiAjZW5kaWYgLyogX1VBUElfQVNNX1g4Nl9LVk1JX0ggKi8K
ZGlmZiAtLWdpdCBhL2FyY2gveDg2L2t2bS9rdm1pLmMgYi9hcmNoL3g4Ni9rdm0va3ZtaS5jCmlu
ZGV4IDUyMTliNmZhZjRiNS4uM2Q1YjA0MWRlNjM0IDEwMDY0NAotLS0gYS9hcmNoL3g4Ni9rdm0v
a3ZtaS5jCisrKyBiL2FyY2gveDg2L2t2bS9rdm1pLmMKQEAgLTE1LDYgKzE1LDcgQEAgdm9pZCBr
dm1pX2FyY2hfaW5pdF92Y3B1X2V2ZW50c19tYXNrKHVuc2lnbmVkIGxvbmcgKnN1cHBvcnRlZCkK
IAlzZXRfYml0KEtWTUlfVkNQVV9FVkVOVF9CUkVBS1BPSU5ULCBzdXBwb3J0ZWQpOwogCXNldF9i
aXQoS1ZNSV9WQ1BVX0VWRU5UX0NSLCBzdXBwb3J0ZWQpOwogCXNldF9iaXQoS1ZNSV9WQ1BVX0VW
RU5UX0hZUEVSQ0FMTCwgc3VwcG9ydGVkKTsKKwlzZXRfYml0KEtWTUlfVkNQVV9FVkVOVF9ERVND
UklQVE9SLCBzdXBwb3J0ZWQpOwogCXNldF9iaXQoS1ZNSV9WQ1BVX0VWRU5UX1RSQVAsIHN1cHBv
cnRlZCk7CiAJc2V0X2JpdChLVk1JX1ZDUFVfRVZFTlRfWFNFVEJWLCBzdXBwb3J0ZWQpOwogfQpA
QCAtMjg1LDYgKzI4NiwyMSBAQCBzdGF0aWMgdm9pZCBrdm1pX2FyY2hfZGlzYWJsZV9jcjN3X2lu
dGVyY2VwdChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUpCiAJdmNwdS0+YXJjaC5rdm1pLT5jcjN3Lmt2
bV9pbnRlcmNlcHRlZCA9IGZhbHNlOwogfQogCitzdGF0aWMgaW50IGt2bWlfY29udHJvbF9kZXNj
X2ludGVyY2VwdChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsIGJvb2wgZW5hYmxlKQoreworCWlmICgh
a3ZtX3g4Nl9vcHMuZGVzY19jdHJsX3N1cHBvcnRlZCgpKQorCQlyZXR1cm4gLUtWTV9FT1BOT1RT
VVBQOworCisJa3ZtX3g4Nl9vcHMuY29udHJvbF9kZXNjX2ludGVyY2VwdCh2Y3B1LCBlbmFibGUp
OworCisJcmV0dXJuIDA7Cit9CisKK3N0YXRpYyB2b2lkIGt2bWlfYXJjaF9kaXNhYmxlX2Rlc2Nf
aW50ZXJjZXB0KHN0cnVjdCBrdm1fdmNwdSAqdmNwdSkKK3sKKwlrdm1pX2NvbnRyb2xfZGVzY19p
bnRlcmNlcHQodmNwdSwgZmFsc2UpOworfQorCiBpbnQga3ZtaV9hcmNoX2NtZF9jb250cm9sX2lu
dGVyY2VwdChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsCiAJCQkJICAgIHVuc2lnbmVkIGludCBldmVu
dF9pZCwgYm9vbCBlbmFibGUpCiB7CkBAIC0yOTQsNiArMzEwLDkgQEAgaW50IGt2bWlfYXJjaF9j
bWRfY29udHJvbF9pbnRlcmNlcHQoc3RydWN0IGt2bV92Y3B1ICp2Y3B1LAogCWNhc2UgS1ZNSV9W
Q1BVX0VWRU5UX0JSRUFLUE9JTlQ6CiAJCWVyciA9IGt2bWlfY29udHJvbF9icF9pbnRlcmNlcHQo
dmNwdSwgZW5hYmxlKTsKIAkJYnJlYWs7CisJY2FzZSBLVk1JX1ZDUFVfRVZFTlRfREVTQ1JJUFRP
UjoKKwkJZXJyID0ga3ZtaV9jb250cm9sX2Rlc2NfaW50ZXJjZXB0KHZjcHUsIGVuYWJsZSk7CisJ
CWJyZWFrOwogCWRlZmF1bHQ6CiAJCWJyZWFrOwogCX0KQEAgLTMyNSw2ICszNDQsNyBAQCBzdGF0
aWMgdm9pZCBrdm1pX2FyY2hfcmVzdG9yZV9pbnRlcmNlcHRpb24oc3RydWN0IGt2bV92Y3B1ICp2
Y3B1KQogewogCWt2bWlfYXJjaF9kaXNhYmxlX2JwX2ludGVyY2VwdCh2Y3B1KTsKIAlrdm1pX2Fy
Y2hfZGlzYWJsZV9jcjN3X2ludGVyY2VwdCh2Y3B1KTsKKwlrdm1pX2FyY2hfZGlzYWJsZV9kZXNj
X2ludGVyY2VwdCh2Y3B1KTsKIH0KIAogYm9vbCBrdm1pX2FyY2hfY2xlYW5fdXBfaW50ZXJjZXB0
aW9uKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSkKQEAgLTU5NywzICs2MTcsNDEgQEAgdm9pZCBrdm1p
X3hzZXRidl9ldmVudChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsIHU4IHhjciwKIAogCWt2bWlfcHV0
KHZjcHUtPmt2bSk7CiB9CisKK3N0YXRpYyBib29sIF9fa3ZtaV9kZXNjcmlwdG9yX2V2ZW50KHN0
cnVjdCBrdm1fdmNwdSAqdmNwdSwgdTggZGVzY3JpcHRvciwKKwkJCQkgICAgYm9vbCB3cml0ZSkK
K3sKKwlib29sIHJldCA9IGZhbHNlOworCXUzMiBhY3Rpb247CisKKwlhY3Rpb24gPSBrdm1pX21z
Z19zZW5kX3ZjcHVfZGVzY3JpcHRvcih2Y3B1LCBkZXNjcmlwdG9yLCB3cml0ZSk7CisJc3dpdGNo
IChhY3Rpb24pIHsKKwljYXNlIEtWTUlfRVZFTlRfQUNUSU9OX0NPTlRJTlVFOgorCQlyZXQgPSB0
cnVlOworCQlicmVhazsKKwljYXNlIEtWTUlfRVZFTlRfQUNUSU9OX1JFVFJZOgorCQlicmVhazsK
KwlkZWZhdWx0OgorCQlrdm1pX2hhbmRsZV9jb21tb25fZXZlbnRfYWN0aW9ucyh2Y3B1LCBhY3Rp
b24pOworCX0KKworCXJldHVybiByZXQ7Cit9CisKK2Jvb2wga3ZtaV9kZXNjcmlwdG9yX2V2ZW50
KHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwgdTggZGVzY3JpcHRvciwgYm9vbCB3cml0ZSkKK3sKKwlz
dHJ1Y3Qga3ZtX2ludHJvc3BlY3Rpb24gKmt2bWk7CisJYm9vbCByZXQgPSB0cnVlOworCisJa3Zt
aSA9IGt2bWlfZ2V0KHZjcHUtPmt2bSk7CisJaWYgKCFrdm1pKQorCQlyZXR1cm4gdHJ1ZTsKKwor
CWlmIChpc192Y3B1X2V2ZW50X2VuYWJsZWQodmNwdSwgS1ZNSV9WQ1BVX0VWRU5UX0RFU0NSSVBU
T1IpKQorCQlyZXQgPSBfX2t2bWlfZGVzY3JpcHRvcl9ldmVudCh2Y3B1LCBkZXNjcmlwdG9yLCB3
cml0ZSk7CisKKwlrdm1pX3B1dCh2Y3B1LT5rdm0pOworCisJcmV0dXJuIHJldDsKK30KK0VYUE9S
VF9TWU1CT0woa3ZtaV9kZXNjcmlwdG9yX2V2ZW50KTsKZGlmZiAtLWdpdCBhL2FyY2gveDg2L2t2
bS9rdm1pLmggYi9hcmNoL3g4Ni9rdm0va3ZtaS5oCmluZGV4IDQzYmM5NTZkNzQwYy4uOTI0MjJl
MmU1N2NmIDEwMDY0NAotLS0gYS9hcmNoL3g4Ni9rdm0va3ZtaS5oCisrKyBiL2FyY2gveDg2L2t2
bS9rdm1pLmgKQEAgLTE2LDUgKzE2LDYgQEAgdTMyIGt2bWlfbXNnX3NlbmRfdmNwdV9jcihzdHJ1
Y3Qga3ZtX3ZjcHUgKnZjcHUsIHUzMiBjciwgdTY0IG9sZF92YWx1ZSwKIHUzMiBrdm1pX21zZ19z
ZW5kX3ZjcHVfdHJhcChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUpOwogdTMyIGt2bWlfbXNnX3NlbmRf
dmNwdV94c2V0YnYoc3RydWN0IGt2bV92Y3B1ICp2Y3B1LCB1OCB4Y3IsCiAJCQkgICAgICB1NjQg
b2xkX3ZhbHVlLCB1NjQgbmV3X3ZhbHVlKTsKK3UzMiBrdm1pX21zZ19zZW5kX3ZjcHVfZGVzY3Jp
cHRvcihzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsIHU4IGRlc2MsIGJvb2wgd3JpdGUpOwogCiAjZW5k
aWYKZGlmZiAtLWdpdCBhL2FyY2gveDg2L2t2bS9rdm1pX21zZy5jIGIvYXJjaC94ODYva3ZtL2t2
bWlfbXNnLmMKaW5kZXggZmM0ZWU2YWNjZTRhLi43YTg1MWI0ZDU5ODMgMTAwNjQ0Ci0tLSBhL2Fy
Y2gveDg2L2t2bS9rdm1pX21zZy5jCisrKyBiL2FyY2gveDg2L2t2bS9rdm1pX21zZy5jCkBAIC0z
MzEsMyArMzMxLDIyIEBAIHUzMiBrdm1pX21zZ19zZW5kX3ZjcHVfeHNldGJ2KHN0cnVjdCBrdm1f
dmNwdSAqdmNwdSwgdTggeGNyLAogCiAJcmV0dXJuIGFjdGlvbjsKIH0KKwordTMyIGt2bWlfbXNn
X3NlbmRfdmNwdV9kZXNjcmlwdG9yKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwgdTggZGVzYywgYm9v
bCB3cml0ZSkKK3sKKwlzdHJ1Y3Qga3ZtaV92Y3B1X2V2ZW50X2Rlc2NyaXB0b3IgZTsKKwl1MzIg
YWN0aW9uOworCWludCBlcnI7CisKKwltZW1zZXQoJmUsIDAsIHNpemVvZihlKSk7CisJZS5kZXNj
cmlwdG9yID0gZGVzYzsKKwllLndyaXRlID0gd3JpdGUgPyAxIDogMDsKKworCWVyciA9IGt2bWlf
c2VuZF92Y3B1X2V2ZW50KHZjcHUsIEtWTUlfVkNQVV9FVkVOVF9ERVNDUklQVE9SLAorCQkJCSAg
ICZlLCBzaXplb2YoZSksIE5VTEwsIDAsICZhY3Rpb24pOworCWlmIChlcnIpCisJCWFjdGlvbiA9
IEtWTUlfRVZFTlRfQUNUSU9OX0NPTlRJTlVFOworCisJcmV0dXJuIGFjdGlvbjsKKworfQpkaWZm
IC0tZ2l0IGEvYXJjaC94ODYva3ZtL3N2bS9zdm0uYyBiL2FyY2gveDg2L2t2bS9zdm0vc3ZtLmMK
aW5kZXggZjNlYzc5ZTZjMzlhLi41YjY4OWQzZmUzZTQgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L2t2
bS9zdm0vc3ZtLmMKKysrIGIvYXJjaC94ODYva3ZtL3N2bS9zdm0uYwpAQCAtMjQ0OSw2ICsyNDQ5
LDM5IEBAIHN0YXRpYyBpbnQgZGVzY3JpcHRvcl9hY2Nlc3NfaW50ZXJjZXB0aW9uKHN0cnVjdCB2
Y3B1X3N2bSAqc3ZtKQogewogCXN0cnVjdCBrdm1fdmNwdSAqdmNwdSA9ICZzdm0tPnZjcHU7CiAK
KyNpZmRlZiBDT05GSUdfS1ZNX0lOVFJPU1BFQ1RJT04KKwlzdHJ1Y3Qgdm1jYl9jb250cm9sX2Fy
ZWEgKmMgPSAmc3ZtLT52bWNiLT5jb250cm9sOworCWJvb2wgY29udDsKKworCXN3aXRjaCAoYy0+
ZXhpdF9jb2RlKSB7CisJY2FzZSBTVk1fRVhJVF9JRFRSX1JFQUQ6CisJY2FzZSBTVk1fRVhJVF9J
RFRSX1dSSVRFOgorCQljb250ID0ga3ZtaV9kZXNjcmlwdG9yX2V2ZW50KHZjcHUsIEtWTUlfREVT
Q19JRFRSLAorCQkJCSAgICAgIGMtPmV4aXRfY29kZSA9PSBTVk1fRVhJVF9JRFRSX1dSSVRFKTsK
KwkJYnJlYWs7CisJY2FzZSBTVk1fRVhJVF9HRFRSX1JFQUQ6CisJY2FzZSBTVk1fRVhJVF9HRFRS
X1dSSVRFOgorCQljb250ID0ga3ZtaV9kZXNjcmlwdG9yX2V2ZW50KHZjcHUsIEtWTUlfREVTQ19H
RFRSLAorCQkJCSAgICAgIGMtPmV4aXRfY29kZSA9PSBTVk1fRVhJVF9HRFRSX1dSSVRFKTsKKwkJ
YnJlYWs7CisJY2FzZSBTVk1fRVhJVF9MRFRSX1JFQUQ6CisJY2FzZSBTVk1fRVhJVF9MRFRSX1dS
SVRFOgorCQljb250ID0ga3ZtaV9kZXNjcmlwdG9yX2V2ZW50KHZjcHUsIEtWTUlfREVTQ19MRFRS
LAorCQkJCSAgICAgIGMtPmV4aXRfY29kZSA9PSBTVk1fRVhJVF9MRFRSX1dSSVRFKTsKKwkJYnJl
YWs7CisJY2FzZSBTVk1fRVhJVF9UUl9SRUFEOgorCWNhc2UgU1ZNX0VYSVRfVFJfV1JJVEU6CisJ
CWNvbnQgPSBrdm1pX2Rlc2NyaXB0b3JfZXZlbnQodmNwdSwgS1ZNSV9ERVNDX1RSLAorCQkJCSAg
ICAgIGMtPmV4aXRfY29kZSA9PSBTVk1fRVhJVF9UUl9XUklURSk7CisJCWJyZWFrOworCWRlZmF1
bHQ6CisJCWNvbnQgPSB0cnVlOworCQlicmVhazsKKwl9CisJaWYgKCFjb250KQorCQlyZXR1cm4g
MTsKKyNlbmRpZiAvKiBDT05GSUdfS1ZNX0lOVFJPU1BFQ1RJT04gKi8KKwogCXJldHVybiBrdm1f
ZW11bGF0ZV9pbnN0cnVjdGlvbih2Y3B1LCAwKTsKIH0KIApkaWZmIC0tZ2l0IGEvYXJjaC94ODYv
a3ZtL3ZteC92bXguYyBiL2FyY2gveDg2L2t2bS92bXgvdm14LmMKaW5kZXggODM3NDQ3NTQxNzEw
Li4zYWZkZjUzMmIwMzAgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L2t2bS92bXgvdm14LmMKKysrIGIv
YXJjaC94ODYva3ZtL3ZteC92bXguYwpAQCAtNTA0Myw3ICs1MDQzLDMwIEBAIHN0YXRpYyBpbnQg
aGFuZGxlX3NldF9jcjQoc3RydWN0IGt2bV92Y3B1ICp2Y3B1LCB1bnNpZ25lZCBsb25nIHZhbCkK
IAogc3RhdGljIGludCBoYW5kbGVfZGVzYyhzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUpCiB7CisjaWZk
ZWYgQ09ORklHX0tWTV9JTlRST1NQRUNUSU9OCisJc3RydWN0IHZjcHVfdm14ICp2bXggPSB0b192
bXgodmNwdSk7CisJdTMyIGV4aXRfcmVhc29uID0gdm14LT5leGl0X3JlYXNvbjsKKwl1MzIgdm14
X2luc3RydWN0aW9uX2luZm8gPSB2bWNzX3JlYWQzMihWTVhfSU5TVFJVQ1RJT05fSU5GTyk7CisJ
dTggc3RvcmUgPSAodm14X2luc3RydWN0aW9uX2luZm8gPj4gMjkpICYgMHgxOworCXU4IGRlc2Ny
aXB0b3IgPSAwOworCisJaWYgKGV4aXRfcmVhc29uID09IEVYSVRfUkVBU09OX0dEVFJfSURUUikg
eworCQlpZiAoKHZteF9pbnN0cnVjdGlvbl9pbmZvID4+IDI4KSAmIDB4MSkKKwkJCWRlc2NyaXB0
b3IgPSBLVk1JX0RFU0NfSURUUjsKKwkJZWxzZQorCQkJZGVzY3JpcHRvciA9IEtWTUlfREVTQ19H
RFRSOworCX0gZWxzZSB7CisJCWlmICgodm14X2luc3RydWN0aW9uX2luZm8gPj4gMjgpICYgMHgx
KQorCQkJZGVzY3JpcHRvciA9IEtWTUlfREVTQ19UUjsKKwkJZWxzZQorCQkJZGVzY3JpcHRvciA9
IEtWTUlfREVTQ19MRFRSOworCX0KKworCWlmICgha3ZtaV9kZXNjcmlwdG9yX2V2ZW50KHZjcHUs
IGRlc2NyaXB0b3IsIHN0b3JlKSkKKwkJcmV0dXJuIDE7CisjZWxzZQogCVdBUk5fT04oISh2Y3B1
LT5hcmNoLmNyNCAmIFg4Nl9DUjRfVU1JUCkpOworI2VuZGlmIC8qIENPTkZJR19LVk1fSU5UUk9T
UEVDVElPTiAqLwogCXJldHVybiBrdm1fZW11bGF0ZV9pbnN0cnVjdGlvbih2Y3B1LCAwKTsKIH0K
IApkaWZmIC0tZ2l0IGEvaW5jbHVkZS91YXBpL2xpbnV4L2t2bWkuaCBiL2luY2x1ZGUvdWFwaS9s
aW51eC9rdm1pLmgKaW5kZXggOGQ3YzYwMjdmMTJjLi4wOWY3OGMwZWZjNGYgMTAwNjQ0Ci0tLSBh
L2luY2x1ZGUvdWFwaS9saW51eC9rdm1pLmgKKysrIGIvaW5jbHVkZS91YXBpL2xpbnV4L2t2bWku
aApAQCAtNjgsNiArNjgsNyBAQCBlbnVtIHsKIAlLVk1JX1ZDUFVfRVZFTlRfQ1IgICAgICAgICA9
IEtWTUlfVkNQVV9FVkVOVF9JRCgzKSwKIAlLVk1JX1ZDUFVfRVZFTlRfVFJBUCAgICAgICA9IEtW
TUlfVkNQVV9FVkVOVF9JRCg0KSwKIAlLVk1JX1ZDUFVfRVZFTlRfWFNFVEJWICAgICA9IEtWTUlf
VkNQVV9FVkVOVF9JRCg1KSwKKwlLVk1JX1ZDUFVfRVZFTlRfREVTQ1JJUFRPUiA9IEtWTUlfVkNQ
VV9FVkVOVF9JRCg2KSwKIAogCUtWTUlfTkVYVF9WQ1BVX0VWRU5UCiB9OwpkaWZmIC0tZ2l0IGEv
dG9vbHMvdGVzdGluZy9zZWxmdGVzdHMva3ZtL3g4Nl82NC9rdm1pX3Rlc3QuYyBiL3Rvb2xzL3Rl
c3Rpbmcvc2VsZnRlc3RzL2t2bS94ODZfNjQva3ZtaV90ZXN0LmMKaW5kZXggYjA5MDZjN2ZiOTU0
Li5kMjZkZjNhOWZmZmYgMTAwNjQ0Ci0tLSBhL3Rvb2xzL3Rlc3Rpbmcvc2VsZnRlc3RzL2t2bS94
ODZfNjQva3ZtaV90ZXN0LmMKKysrIGIvdG9vbHMvdGVzdGluZy9zZWxmdGVzdHMva3ZtL3g4Nl82
NC9rdm1pX3Rlc3QuYwpAQCAtNTgsNiArNTgsNyBAQCBlbnVtIHsKIAlHVUVTVF9URVNUX05PT1Ag
PSAwLAogCUdVRVNUX1RFU1RfQlAsCiAJR1VFU1RfVEVTVF9DUiwKKwlHVUVTVF9URVNUX0RFU0NS
SVBUT1IsCiAJR1VFU1RfVEVTVF9IWVBFUkNBTEwsCiAJR1VFU1RfVEVTVF9YU0VUQlYsCiB9OwpA
QCAtODcsNiArODgsMTQgQEAgc3RhdGljIHZvaWQgZ3Vlc3RfY3JfdGVzdCh2b2lkKQogCXNldF9j
cjQoZ2V0X2NyNCgpIHwgWDg2X0NSNF9PU1hTQVZFKTsKIH0KIAorc3RhdGljIHZvaWQgZ3Vlc3Rf
ZGVzY3JpcHRvcl90ZXN0KHZvaWQpCit7CisJdm9pZCAqcHRyOworCisJYXNtIHZvbGF0aWxlKCJz
Z2R0ICUwIiA6OiAibSIocHRyKSk7CisJYXNtIHZvbGF0aWxlKCJsZ2R0ICUwIiA6OiAibSIocHRy
KSk7Cit9CisKIHN0YXRpYyB2b2lkIGd1ZXN0X2h5cGVyY2FsbF90ZXN0KHZvaWQpCiB7CiAJYXNt
IHZvbGF0aWxlKCJtb3YgJDM0LCAlcmF4Iik7CkBAIC0xNDYsNiArMTU1LDkgQEAgc3RhdGljIHZv
aWQgZ3Vlc3RfY29kZSh2b2lkKQogCQljYXNlIEdVRVNUX1RFU1RfQ1I6CiAJCQlndWVzdF9jcl90
ZXN0KCk7CiAJCQlicmVhazsKKwkJY2FzZSBHVUVTVF9URVNUX0RFU0NSSVBUT1I6CisJCQlndWVz
dF9kZXNjcmlwdG9yX3Rlc3QoKTsKKwkJCWJyZWFrOwogCQljYXNlIEdVRVNUX1RFU1RfSFlQRVJD
QUxMOgogCQkJZ3Vlc3RfaHlwZXJjYWxsX3Rlc3QoKTsKIAkJCWJyZWFrOwpAQCAtMTUwNSw2ICsx
NTE3LDY4IEBAIHN0YXRpYyB2b2lkIHRlc3RfY21kX3ZjcHVfZ2V0X210cnJfdHlwZShzdHJ1Y3Qg
a3ZtX3ZtICp2bSkKIAlwcl9kZWJ1ZygibXRycl90eXBlOiBncGEgMHglbHggdHlwZSAweCV4XG4i
LCB0ZXN0X2dwYSwgcnBsLnR5cGUpOwogfQogCitzdGF0aWMgdm9pZCB0ZXN0X2Rlc2NfcmVhZF9h
Y2Nlc3MoX191MTYgZXZlbnRfaWQpCit7CisJc3RydWN0IGt2bWlfbXNnX2hkciBoZHI7CisJc3Ry
dWN0IHsKKwkJc3RydWN0IHZjcHVfZXZlbnQgdmNwdV9ldjsKKwkJc3RydWN0IGt2bWlfdmNwdV9l
dmVudF9kZXNjcmlwdG9yIGRlc2M7CisJfSBldjsKKwlzdHJ1Y3QgdmNwdV9yZXBseSBycGwgPSB7
fTsKKworCXJlY2VpdmVfdmNwdV9ldmVudCgmaGRyLCAmZXYudmNwdV9ldiwgc2l6ZW9mKGV2KSwg
ZXZlbnRfaWQpOworCisJcHJfaW5mbygiRGVzY3JpcHRvciBldmVudCAocmVhZCksIGRlc2NyaXB0
b3IgJXUsIHdyaXRlICV1XG4iLAorCQlldi5kZXNjLmRlc2NyaXB0b3IsIGV2LmRlc2Mud3JpdGUp
OworCisJVEVTVF9BU1NFUlQoZXYuZGVzYy53cml0ZSA9PSAwLAorCQkiUmVjZWl2ZWQgYSB3cml0
ZSBkZXNjcmlwdG9yIGFjY2Vzc1xuIik7CisKKwlyZXBseV90b19ldmVudCgmaGRyLCAmZXYudmNw
dV9ldiwgS1ZNSV9FVkVOVF9BQ1RJT05fQ09OVElOVUUsCisJCQkmcnBsLCBzaXplb2YocnBsKSk7
Cit9CisKK3N0YXRpYyB2b2lkIHRlc3RfZGVzY193cml0ZV9hY2Nlc3MoX191MTYgZXZlbnRfaWQp
Cit7CisJc3RydWN0IGt2bWlfbXNnX2hkciBoZHI7CisJc3RydWN0IHsKKwkJc3RydWN0IHZjcHVf
ZXZlbnQgdmNwdV9ldjsKKwkJc3RydWN0IGt2bWlfdmNwdV9ldmVudF9kZXNjcmlwdG9yIGRlc2M7
CisJfSBldjsKKwlzdHJ1Y3QgdmNwdV9yZXBseSBycGwgPSB7fTsKKworCXJlY2VpdmVfdmNwdV9l
dmVudCgmaGRyLCAmZXYudmNwdV9ldiwgc2l6ZW9mKGV2KSwgZXZlbnRfaWQpOworCisJcHJfZGVi
dWcoIkRlc2NyaXB0b3IgZXZlbnQgKHdyaXRlKSwgZGVzY3JpcHRvciAldSwgd3JpdGUgJXVcbiIs
CisJCWV2LmRlc2MuZGVzY3JpcHRvciwgZXYuZGVzYy53cml0ZSk7CisKKwlURVNUX0FTU0VSVChl
di5kZXNjLndyaXRlID09IDEsCisJCSJSZWNlaXZlZCBhIHJlYWQgZGVzY3JpcHRvciBhY2Nlc3Nc
biIpOworCisJcmVwbHlfdG9fZXZlbnQoJmhkciwgJmV2LnZjcHVfZXYsIEtWTUlfRVZFTlRfQUNU
SU9OX0NPTlRJTlVFLAorCQkJJnJwbCwgc2l6ZW9mKHJwbCkpOworfQorCitzdGF0aWMgdm9pZCB0
ZXN0X2V2ZW50X2Rlc2NyaXB0b3Ioc3RydWN0IGt2bV92bSAqdm0pCit7CisJc3RydWN0IHZjcHVf
d29ya2VyX2RhdGEgZGF0YSA9IHsKKwkJLnZtID0gdm0sCisJCS52Y3B1X2lkID0gVkNQVV9JRCwK
KwkJLnRlc3RfaWQgPSBHVUVTVF9URVNUX0RFU0NSSVBUT1IsCisJfTsKKwlfX3UxNiBldmVudF9p
ZCA9IEtWTUlfVkNQVV9FVkVOVF9ERVNDUklQVE9SOworCXB0aHJlYWRfdCB2Y3B1X3RocmVhZDsK
KworCWVuYWJsZV92Y3B1X2V2ZW50KHZtLCBldmVudF9pZCk7CisJdmNwdV90aHJlYWQgPSBzdGFy
dF92Y3B1X3dvcmtlcigmZGF0YSk7CisKKwl0ZXN0X2Rlc2NfcmVhZF9hY2Nlc3MoZXZlbnRfaWQp
OworCXRlc3RfZGVzY193cml0ZV9hY2Nlc3MoZXZlbnRfaWQpOworCisJd2FpdF92Y3B1X3dvcmtl
cih2Y3B1X3RocmVhZCk7CisJZGlzYWJsZV92Y3B1X2V2ZW50KHZtLCBldmVudF9pZCk7Cit9CisK
IHN0YXRpYyB2b2lkIHRlc3RfaW50cm9zcGVjdGlvbihzdHJ1Y3Qga3ZtX3ZtICp2bSkKIHsKIAlz
cmFuZG9tKHRpbWUoMCkpOwpAQCAtMTUzNSw2ICsxNjA5LDcgQEAgc3RhdGljIHZvaWQgdGVzdF9p
bnRyb3NwZWN0aW9uKHN0cnVjdCBrdm1fdm0gKnZtKQogCXRlc3RfY21kX3ZjcHVfZ2V0X3hjcih2
bSk7CiAJdGVzdF9jbWRfdmNwdV94c2F2ZSh2bSk7CiAJdGVzdF9jbWRfdmNwdV9nZXRfbXRycl90
eXBlKHZtKTsKKwl0ZXN0X2V2ZW50X2Rlc2NyaXB0b3Iodm0pOwogCiAJdW5ob29rX2ludHJvc3Bl
Y3Rpb24odm0pOwogfQpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fXwpWaXJ0dWFsaXphdGlvbiBtYWlsaW5nIGxpc3QKVmlydHVhbGl6YXRpb25AbGlzdHMubGlu
dXgtZm91bmRhdGlvbi5vcmcKaHR0cHM6Ly9saXN0cy5saW51eGZvdW5kYXRpb24ub3JnL21haWxt
YW4vbGlzdGluZm8vdmlydHVhbGl6YXRpb24=
