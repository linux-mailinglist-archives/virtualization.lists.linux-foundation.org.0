Return-Path: <virtualization-bounces@lists.linux-foundation.org>
X-Original-To: lists.virtualization@lfdr.de
Delivered-To: lists.virtualization@lfdr.de
Received: from fraxinus.osuosl.org (smtp4.osuosl.org [140.211.166.137])
	by mail.lfdr.de (Postfix) with ESMTPS id 02409155E43
	for <lists.virtualization@lfdr.de>; Fri,  7 Feb 2020 19:36:20 +0100 (CET)
Received: from localhost (localhost [127.0.0.1])
	by fraxinus.osuosl.org (Postfix) with ESMTP id E4267869AC;
	Fri,  7 Feb 2020 18:36:17 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from fraxinus.osuosl.org ([127.0.0.1])
	by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id 0KiE6Z_nmE_e; Fri,  7 Feb 2020 18:36:13 +0000 (UTC)
Received: from lists.linuxfoundation.org (lf-lists.osuosl.org [140.211.9.56])
	by fraxinus.osuosl.org (Postfix) with ESMTP id AF002869F7;
	Fri,  7 Feb 2020 18:36:07 +0000 (UTC)
Received: from lf-lists.osuosl.org (localhost [127.0.0.1])
	by lists.linuxfoundation.org (Postfix) with ESMTP id 959CDC013E;
	Fri,  7 Feb 2020 18:36:07 +0000 (UTC)
X-Original-To: virtualization@lists.linux-foundation.org
Delivered-To: virtualization@lists.linuxfoundation.org
Received: from whitealder.osuosl.org (smtp1.osuosl.org [140.211.166.138])
 by lists.linuxfoundation.org (Postfix) with ESMTP id C65CFC1D8A
 for <virtualization@lists.linux-foundation.org>;
 Fri,  7 Feb 2020 18:36:00 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by whitealder.osuosl.org (Postfix) with ESMTP id B49B686E68
 for <virtualization@lists.linux-foundation.org>;
 Fri,  7 Feb 2020 18:36:00 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from whitealder.osuosl.org ([127.0.0.1])
 by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id 2Re+vCrLeG+f
 for <virtualization@lists.linux-foundation.org>;
 Fri,  7 Feb 2020 18:35:56 +0000 (UTC)
X-Greylist: domain auto-whitelisted by SQLgrey-1.7.6
Received: from mx01.bbu.dsd.mx.bitdefender.com
 (mx01.bbu.dsd.mx.bitdefender.com [91.199.104.161])
 by whitealder.osuosl.org (Postfix) with ESMTPS id 4BD7786E4E
 for <virtualization@lists.linux-foundation.org>;
 Fri,  7 Feb 2020 18:35:56 +0000 (UTC)
Received: from smtp.bitdefender.com (smtp01.buh.bitdefender.com [10.17.80.75])
 by mx01.bbu.dsd.mx.bitdefender.com (Postfix) with ESMTPS id
 B43E2305D361; Fri,  7 Feb 2020 20:16:41 +0200 (EET)
Received: from host.bbu.bitdefender.biz (unknown [195.210.4.22])
 by smtp.bitdefender.com (Postfix) with ESMTPSA id A2D1E3052076;
 Fri,  7 Feb 2020 20:16:41 +0200 (EET)
From: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>
To: kvm@vger.kernel.org
Subject: [RFC PATCH v7 67/78] KVM: introspection: add KVMI_EVENT_DESCRIPTOR
Date: Fri,  7 Feb 2020 20:16:25 +0200
Message-Id: <20200207181636.1065-68-alazar@bitdefender.com>
In-Reply-To: <20200207181636.1065-1-alazar@bitdefender.com>
References: <20200207181636.1065-1-alazar@bitdefender.com>
MIME-Version: 1.0
Cc: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>,
 Paolo Bonzini <pbonzini@redhat.com>,
 =?UTF-8?q?Nicu=C8=99or=20C=C3=AE=C8=9Bu?= <ncitu@bitdefender.com>,
 Sean Christopherson <sean.j.christopherson@intel.com>,
 virtualization@lists.linux-foundation.org
X-BeenThere: virtualization@lists.linux-foundation.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Linux virtualization <virtualization.lists.linux-foundation.org>
List-Unsubscribe: <https://lists.linuxfoundation.org/mailman/options/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=unsubscribe>
List-Archive: <http://lists.linuxfoundation.org/pipermail/virtualization/>
List-Post: <mailto:virtualization@lists.linux-foundation.org>
List-Help: <mailto:virtualization-request@lists.linux-foundation.org?subject=help>
List-Subscribe: <https://lists.linuxfoundation.org/mailman/listinfo/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: virtualization-bounces@lists.linux-foundation.org
Sender: "Virtualization" <virtualization-bounces@lists.linux-foundation.org>

RnJvbTogTmljdciZb3IgQ8OuyJt1IDxuY2l0dUBiaXRkZWZlbmRlci5jb20+CgpUaGlzIGV2ZW50
IGlzIHNlbnQgd2hlbiBJRFRSLCBHRFRSLCBMRFRSIG9yIFRSIGFyZSBhY2Nlc3NlZC4KClRoZXNl
IGNvdWxkIGJlIHVzZWQgdG8gaW1wbGVtZW50IGEgdGlueSBhZ2VudCB3aGljaCBydW5zIGluIHRo
ZSBjb250ZXh0Cm9mIGFuIGludHJvc3BlY3RlZCBndWVzdCBhbmQgdXNlcyB2aXJ0dWFsaXplZCBl
eGNlcHRpb25zICgjVkUpIGFuZAphbHRlcm5hdGUgRVBUIHZpZXdzIChWTUZVTkMgIzApIHRvIGZp
bHRlciBjb252ZXJ0ZWQgVk1FWElUUy4gVGhlIGV2ZW50cwpvZiBpbnRlcmVzdGVkIHdpbGwgYmUg
c3VwcHJlc3NlZCAoYWZ0ZXIgc29tZSBhcHByb3ByaWF0ZSBndWVzdC1zaWRlCmhhbmRsaW5nKSB3
aGlsZSB0aGUgcmVzdCB3aWxsIGJlIHNlbnQgdG8gdGhlIGludHJvc3BlY3RvciB2aWEgYSBWTUNB
TEwuCgpTaWduZWQtb2ZmLWJ5OiBOaWN1yJlvciBDw67Im3UgPG5jaXR1QGJpdGRlZmVuZGVyLmNv
bT4KQ28tZGV2ZWxvcGVkLWJ5OiBBZGFsYmVydCBMYXrEg3IgPGFsYXphckBiaXRkZWZlbmRlci5j
b20+ClNpZ25lZC1vZmYtYnk6IEFkYWxiZXJ0IExhesSDciA8YWxhemFyQGJpdGRlZmVuZGVyLmNv
bT4KLS0tCiBEb2N1bWVudGF0aW9uL3ZpcnQva3ZtL2t2bWkucnN0ICAgICAgICAgICAgICAgfCAz
OSArKysrKysrKysrKysKIGFyY2gveDg2L2luY2x1ZGUvYXNtL2t2bWlfaG9zdC5oICAgICAgICAg
ICAgICB8ICAzICsKIGFyY2gveDg2L2luY2x1ZGUvdWFwaS9hc20va3ZtaS5oICAgICAgICAgICAg
ICB8IDExICsrKysKIGFyY2gveDg2L2t2bS9rdm1pLmMgICAgICAgICAgICAgICAgICAgICAgICAg
ICB8IDU3ICsrKysrKysrKysrKysrKysrKwogYXJjaC94ODYva3ZtL3N2bS5jICAgICAgICAgICAg
ICAgICAgICAgICAgICAgIHwgNDUgKysrKysrKysrKysrKysKIGFyY2gveDg2L2t2bS92bXgvdm14
LmMgICAgICAgICAgICAgICAgICAgICAgICB8IDM3ICsrKysrKysrKysrLQogaW5jbHVkZS91YXBp
L2xpbnV4L2t2bWkuaCAgICAgICAgICAgICAgICAgICAgIHwgIDEgKwogLi4uL3Rlc3Rpbmcvc2Vs
ZnRlc3RzL2t2bS94ODZfNjQva3ZtaV90ZXN0LmMgIHwgNjAgKysrKysrKysrKysrKysrKysrKwog
dmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pX2ludC5oICAgICAgICAgICAgIHwgIDIgKwogdmly
dC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pX21zZy5jICAgICAgICAgICAgIHwgMTcgKysrKysrCiAx
MCBmaWxlcyBjaGFuZ2VkLCAyNzAgaW5zZXJ0aW9ucygrKSwgMiBkZWxldGlvbnMoLSkKCmRpZmYg
LS1naXQgYS9Eb2N1bWVudGF0aW9uL3ZpcnQva3ZtL2t2bWkucnN0IGIvRG9jdW1lbnRhdGlvbi92
aXJ0L2t2bS9rdm1pLnJzdAppbmRleCBhZThlMjQyYzQ3MjEuLjBhMGU1MzA1YTBhZiAxMDA2NDQK
LS0tIGEvRG9jdW1lbnRhdGlvbi92aXJ0L2t2bS9rdm1pLnJzdAorKysgYi9Eb2N1bWVudGF0aW9u
L3ZpcnQva3ZtL2t2bWkucnN0CkBAIC01MzIsNiArNTMyLDcgQEAgdGhlIGZvbGxvd2luZyBldmVu
dHM6OgogCiAJS1ZNSV9FVkVOVF9CUkVBS1BPSU5UCiAJS1ZNSV9FVkVOVF9DUgorCUtWTUlfRVZF
TlRfREVTQ1JJUFRPUgogCUtWTUlfRVZFTlRfSFlQRVJDQUxMCiAJS1ZNSV9FVkVOVF9UUkFQCiAJ
S1ZNSV9FVkVOVF9YU0VUQlYKQEAgLTEwODgsMyArMTA4OSw0MSBAQCB0byBiZSBjaGFuZ2VkIGFu
ZCB0aGUgaW50cm9zcGVjdGlvbiBoYXMgYmVlbiBlbmFibGVkIGZvciB0aGlzIGV2ZW50CiAoc2Vl
ICpLVk1JX1ZDUFVfQ09OVFJPTF9FVkVOVFMqKS4KIAogYGBrdm1pX2V2ZW50YGAgaXMgc2VudCB0
byB0aGUgaW50cm9zcGVjdGlvbiB0b29sLgorCis4LiBLVk1JX0VWRU5UX0RFU0NSSVBUT1IKKy0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLQorCis6QXJjaGl0ZWN0dXJlOiB4ODYKKzpWZXJzaW9uczog
Pj0gMQorOkFjdGlvbnM6IENPTlRJTlVFLCBSRVRSWSwgQ1JBU0gKKzpQYXJhbWV0ZXJzOgorCis6
OgorCisJc3RydWN0IGt2bWlfZXZlbnQ7CisJc3RydWN0IGt2bWlfZXZlbnRfZGVzY3JpcHRvciB7
CisJCV9fdTggZGVzY3JpcHRvcjsKKwkJX191OCB3cml0ZTsKKwkJX191OCBwYWRkaW5nWzZdOwor
CX07CisKKzpSZXR1cm5zOgorCis6OgorCisJc3RydWN0IGt2bWlfdmNwdV9oZHI7CisJc3RydWN0
IGt2bWlfZXZlbnRfcmVwbHk7CisKK1RoaXMgZXZlbnQgaXMgc2VudCB3aGVuIGEgZGVzY3JpcHRv
ciB0YWJsZSByZWdpc3RlciBpcyBhY2Nlc3NlZCBhbmQgdGhlCitpbnRyb3NwZWN0aW9uIGhhcyBi
ZWVuIGVuYWJsZWQgZm9yIHRoaXMgZXZlbnQgKHNlZSAqKktWTUlfVkNQVV9DT05UUk9MX0VWRU5U
UyoqKS4KKworYGBrdm1pX2V2ZW50YGAgYW5kIGBga3ZtaV9ldmVudF9kZXNjcmlwdG9yYGAgYXJl
IHNlbnQgdG8gdGhlIGludHJvc3BlY3Rpb24gdG9vbC4KKworYGBkZXNjcmlwdG9yYGAgY2FuIGJl
IG9uZSBvZjo6CisKKwlLVk1JX0RFU0NfSURUUgorCUtWTUlfREVTQ19HRFRSCisJS1ZNSV9ERVND
X0xEVFIKKwlLVk1JX0RFU0NfVFIKKworYGB3cml0ZWBgIGlzIDEgaWYgdGhlIGRlc2NyaXB0b3Ig
d2FzIHdyaXR0ZW4sIDAgb3RoZXJ3aXNlLgpkaWZmIC0tZ2l0IGEvYXJjaC94ODYvaW5jbHVkZS9h
c20va3ZtaV9ob3N0LmggYi9hcmNoL3g4Ni9pbmNsdWRlL2FzbS9rdm1pX2hvc3QuaAppbmRleCBi
M2ZhOTUwMzYyZGIuLjhmOWU2YmQyOTUzYSAxMDA2NDQKLS0tIGEvYXJjaC94ODYvaW5jbHVkZS9h
c20va3ZtaV9ob3N0LmgKKysrIGIvYXJjaC94ODYvaW5jbHVkZS9hc20va3ZtaV9ob3N0LmgKQEAg
LTMxLDYgKzMxLDcgQEAgYm9vbCBrdm1pX2NyX2V2ZW50KHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwg
dW5zaWduZWQgaW50IGNyLAogYm9vbCBrdm1pX2NyM19pbnRlcmNlcHRlZChzdHJ1Y3Qga3ZtX3Zj
cHUgKnZjcHUpOwogYm9vbCBrdm1pX21vbml0b3JfY3Izd19pbnRlcmNlcHQoc3RydWN0IGt2bV92
Y3B1ICp2Y3B1LCBib29sIGVuYWJsZSk7CiB2b2lkIGt2bWlfeHNldGJ2X2V2ZW50KHN0cnVjdCBr
dm1fdmNwdSAqdmNwdSk7Citib29sIGt2bWlfZGVzY3JpcHRvcl9ldmVudChzdHJ1Y3Qga3ZtX3Zj
cHUgKnZjcHUsIHU4IGRlc2NyaXB0b3IsIHU4IHdyaXRlKTsKIAogI2Vsc2UgLyogQ09ORklHX0tW
TV9JTlRST1NQRUNUSU9OICovCiAKQEAgLTQzLDYgKzQ0LDggQEAgc3RhdGljIGlubGluZSBib29s
IGt2bWlfY3IzX2ludGVyY2VwdGVkKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSkgeyByZXR1cm4gZmFs
c2U7IH0KIHN0YXRpYyBpbmxpbmUgYm9vbCBrdm1pX21vbml0b3JfY3Izd19pbnRlcmNlcHQoc3Ry
dWN0IGt2bV92Y3B1ICp2Y3B1LAogCQkJCQkJYm9vbCBlbmFibGUpIHsgcmV0dXJuIGZhbHNlOyB9
CiBzdGF0aWMgaW5saW5lIHZvaWQga3ZtaV94c2V0YnZfZXZlbnQoc3RydWN0IGt2bV92Y3B1ICp2
Y3B1KSB7IH0KK3N0YXRpYyBpbmxpbmUgYm9vbCBrdm1pX2Rlc2NyaXB0b3JfZXZlbnQoc3RydWN0
IGt2bV92Y3B1ICp2Y3B1LCB1OCBkZXNjcmlwdG9yLAorCQkJCQkgdTggd3JpdGUpIHsgcmV0dXJu
IHRydWU7IH0KIAogI2VuZGlmIC8qIENPTkZJR19LVk1fSU5UUk9TUEVDVElPTiAqLwogCmRpZmYg
LS1naXQgYS9hcmNoL3g4Ni9pbmNsdWRlL3VhcGkvYXNtL2t2bWkuaCBiL2FyY2gveDg2L2luY2x1
ZGUvdWFwaS9hc20va3ZtaS5oCmluZGV4IDFkYzNmYzAyZDNlYy4uNmY0MTFiOWJhNDQ5IDEwMDY0
NAotLS0gYS9hcmNoL3g4Ni9pbmNsdWRlL3VhcGkvYXNtL2t2bWkuaAorKysgYi9hcmNoL3g4Ni9p
bmNsdWRlL3VhcGkvYXNtL2t2bWkuaApAQCAtMTEwLDQgKzExMCwxNSBAQCBzdHJ1Y3Qga3ZtaV92
Y3B1X2dldF9tdHJyX3R5cGVfcmVwbHkgewogCV9fdTggcGFkZGluZ1s3XTsKIH07CiAKKyNkZWZp
bmUgS1ZNSV9ERVNDX0lEVFIgIDEKKyNkZWZpbmUgS1ZNSV9ERVNDX0dEVFIgIDIKKyNkZWZpbmUg
S1ZNSV9ERVNDX0xEVFIgIDMKKyNkZWZpbmUgS1ZNSV9ERVNDX1RSICAgIDQKKworc3RydWN0IGt2
bWlfZXZlbnRfZGVzY3JpcHRvciB7CisJX191OCBkZXNjcmlwdG9yOworCV9fdTggd3JpdGU7CisJ
X191OCBwYWRkaW5nWzZdOworfTsKKwogI2VuZGlmIC8qIF9VQVBJX0FTTV9YODZfS1ZNSV9IICov
CmRpZmYgLS1naXQgYS9hcmNoL3g4Ni9rdm0va3ZtaS5jIGIvYXJjaC94ODYva3ZtL2t2bWkuYwpp
bmRleCBkM2NkZGQzNDMyNmIuLmVkOWI0NTA2MGUyYSAxMDA2NDQKLS0tIGEvYXJjaC94ODYva3Zt
L2t2bWkuYworKysgYi9hcmNoL3g4Ni9rdm0va3ZtaS5jCkBAIC0zMTEsNiArMzExLDIxIEBAIHN0
YXRpYyB2b2lkIGt2bWlfYXJjaF9kaXNhYmxlX2NyM3dfaW50ZXJjZXB0KHN0cnVjdCBrdm1fdmNw
dSAqdmNwdSkKIAl2Y3B1LT5hcmNoLmt2bWktPmNyM3cua3ZtX2ludGVyY2VwdGVkID0gZmFsc2U7
CiB9CiAKK3N0YXRpYyBpbnQga3ZtaV9jb250cm9sX2Rlc2NfaW50ZXJjZXB0KHN0cnVjdCBrdm1f
dmNwdSAqdmNwdSwgYm9vbCBlbmFibGUpCit7CisJaWYgKCFrdm1feDg2X29wcy0+dW1pcF9lbXVs
YXRlZCgpKQorCQlyZXR1cm4gLUtWTV9FT1BOT1RTVVBQOworCisJa3ZtX3g4Nl9vcHMtPmNvbnRy
b2xfZGVzY19pbnRlcmNlcHQodmNwdSwgZW5hYmxlKTsKKworCXJldHVybiAwOworfQorCitzdGF0
aWMgdm9pZCBrdm1pX2FyY2hfZGlzYWJsZV9kZXNjX2ludGVyY2VwdChzdHJ1Y3Qga3ZtX3ZjcHUg
KnZjcHUpCit7CisJa3ZtaV9jb250cm9sX2Rlc2NfaW50ZXJjZXB0KHZjcHUsIGZhbHNlKTsKK30K
KwogaW50IGt2bWlfYXJjaF9jbWRfY29udHJvbF9pbnRlcmNlcHQoc3RydWN0IGt2bV92Y3B1ICp2
Y3B1LAogCQkJCSAgICB1bnNpZ25lZCBpbnQgZXZlbnRfaWQsIGJvb2wgZW5hYmxlKQogewpAQCAt
MzIwLDYgKzMzNSw5IEBAIGludCBrdm1pX2FyY2hfY21kX2NvbnRyb2xfaW50ZXJjZXB0KHN0cnVj
dCBrdm1fdmNwdSAqdmNwdSwKIAljYXNlIEtWTUlfRVZFTlRfQlJFQUtQT0lOVDoKIAkJZXJyID0g
a3ZtaV9jb250cm9sX2JwX2ludGVyY2VwdCh2Y3B1LCBlbmFibGUpOwogCQlicmVhazsKKwljYXNl
IEtWTUlfRVZFTlRfREVTQ1JJUFRPUjoKKwkJZXJyID0ga3ZtaV9jb250cm9sX2Rlc2NfaW50ZXJj
ZXB0KHZjcHUsIGVuYWJsZSk7CisJCWJyZWFrOwogCWRlZmF1bHQ6CiAJCWJyZWFrOwogCX0KQEAg
LTM1Niw2ICszNzQsNyBAQCBib29sIGt2bWlfYXJjaF9yZXN0b3JlX2ludGVyY2VwdGlvbihzdHJ1
Y3Qga3ZtX3ZjcHUgKnZjcHUpCiAKIAlrdm1pX2FyY2hfZGlzYWJsZV9icF9pbnRlcmNlcHQodmNw
dSk7CiAJa3ZtaV9hcmNoX2Rpc2FibGVfY3Izd19pbnRlcmNlcHQodmNwdSk7CisJa3ZtaV9hcmNo
X2Rpc2FibGVfZGVzY19pbnRlcmNlcHQodmNwdSk7CiAKIAlyZXR1cm4gdHJ1ZTsKIH0KQEAgLTY0
NCwzICs2NjMsNDEgQEAgaW50IGt2bWlfYXJjaF9jbWRfdmNwdV9nZXRfbXRycl90eXBlKHN0cnVj
dCBrdm1fdmNwdSAqdmNwdSwgdTY0IGdwYSwgdTggKnR5cGUpCiAKIAlyZXR1cm4gMDsKIH0KKwor
c3RhdGljIGJvb2wgX19rdm1pX2Rlc2NyaXB0b3JfZXZlbnQoc3RydWN0IGt2bV92Y3B1ICp2Y3B1
LCB1OCBkZXNjcmlwdG9yLAorCQkJCSAgICB1OCB3cml0ZSkKK3sKKwlib29sIHJldCA9IGZhbHNl
OworCXUzMiBhY3Rpb247CisKKwlhY3Rpb24gPSBrdm1pX21zZ19zZW5kX2Rlc2NyaXB0b3IodmNw
dSwgZGVzY3JpcHRvciwgd3JpdGUpOworCXN3aXRjaCAoYWN0aW9uKSB7CisJY2FzZSBLVk1JX0VW
RU5UX0FDVElPTl9DT05USU5VRToKKwkJcmV0ID0gdHJ1ZTsKKwkJYnJlYWs7CisJY2FzZSBLVk1J
X0VWRU5UX0FDVElPTl9SRVRSWToKKwkJYnJlYWs7CisJZGVmYXVsdDoKKwkJa3ZtaV9oYW5kbGVf
Y29tbW9uX2V2ZW50X2FjdGlvbnModmNwdS0+a3ZtLCBhY3Rpb24sICJERVNDIik7CisJfQorCisJ
cmV0dXJuIHJldDsKK30KKworYm9vbCBrdm1pX2Rlc2NyaXB0b3JfZXZlbnQoc3RydWN0IGt2bV92
Y3B1ICp2Y3B1LCB1OCBkZXNjcmlwdG9yLCB1OCB3cml0ZSkKK3sKKwlzdHJ1Y3Qga3ZtX2ludHJv
c3BlY3Rpb24gKmt2bWk7CisJYm9vbCByZXQgPSB0cnVlOworCisJa3ZtaSA9IGt2bWlfZ2V0KHZj
cHUtPmt2bSk7CisJaWYgKCFrdm1pKQorCQlyZXR1cm4gdHJ1ZTsKKworCWlmIChpc19ldmVudF9l
bmFibGVkKHZjcHUsIEtWTUlfRVZFTlRfREVTQ1JJUFRPUikpCisJCXJldCA9IF9fa3ZtaV9kZXNj
cmlwdG9yX2V2ZW50KHZjcHUsIGRlc2NyaXB0b3IsIHdyaXRlKTsKKworCWt2bWlfcHV0KHZjcHUt
Pmt2bSk7CisKKwlyZXR1cm4gcmV0OworfQorRVhQT1JUX1NZTUJPTChrdm1pX2Rlc2NyaXB0b3Jf
ZXZlbnQpOwpkaWZmIC0tZ2l0IGEvYXJjaC94ODYva3ZtL3N2bS5jIGIvYXJjaC94ODYva3ZtL3N2
bS5jCmluZGV4IDkwOTMwODcxMWJiNy4uOTg4ZWI2OTM3NTE1IDEwMDY0NAotLS0gYS9hcmNoL3g4
Ni9rdm0vc3ZtLmMKKysrIGIvYXJjaC94ODYva3ZtL3N2bS5jCkBAIC00ODA4LDYgKzQ4MDgsNDEg
QEAgc3RhdGljIGludCBhdmljX3VuYWNjZWxlcmF0ZWRfYWNjZXNzX2ludGVyY2VwdGlvbihzdHJ1
Y3QgdmNwdV9zdm0gKnN2bSkKIAlyZXR1cm4gcmV0OwogfQogCisjaWZkZWYgQ09ORklHX0tWTV9J
TlRST1NQRUNUSU9OCitzdGF0aWMgaW50IGRlc2NyaXB0b3JfYWNjZXNzX2ludGVyY2VwdGlvbihz
dHJ1Y3QgdmNwdV9zdm0gKnN2bSkKK3sKKwlzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUgPSAmc3ZtLT52
Y3B1OworCXN0cnVjdCB2bWNiX2NvbnRyb2xfYXJlYSAqYyA9ICZzdm0tPnZtY2ItPmNvbnRyb2w7
CisKKwlzd2l0Y2ggKGMtPmV4aXRfY29kZSkgeworCWNhc2UgU1ZNX0VYSVRfSURUUl9SRUFEOgor
CWNhc2UgU1ZNX0VYSVRfSURUUl9XUklURToKKwkJa3ZtaV9kZXNjcmlwdG9yX2V2ZW50KHZjcHUs
IEtWTUlfREVTQ19JRFRSLAorCQkJCSAgICAgIGMtPmV4aXRfY29kZSA9PSBTVk1fRVhJVF9JRFRS
X1dSSVRFKTsKKwkJYnJlYWs7CisJY2FzZSBTVk1fRVhJVF9HRFRSX1JFQUQ6CisJY2FzZSBTVk1f
RVhJVF9HRFRSX1dSSVRFOgorCQlrdm1pX2Rlc2NyaXB0b3JfZXZlbnQodmNwdSwgS1ZNSV9ERVND
X0dEVFIsCisJCQkJICAgICAgYy0+ZXhpdF9jb2RlID09IFNWTV9FWElUX0dEVFJfV1JJVEUpOwor
CQlicmVhazsKKwljYXNlIFNWTV9FWElUX0xEVFJfUkVBRDoKKwljYXNlIFNWTV9FWElUX0xEVFJf
V1JJVEU6CisJCWt2bWlfZGVzY3JpcHRvcl9ldmVudCh2Y3B1LCBLVk1JX0RFU0NfTERUUiwKKwkJ
CQkgICAgICBjLT5leGl0X2NvZGUgPT0gU1ZNX0VYSVRfTERUUl9XUklURSk7CisJCWJyZWFrOwor
CWNhc2UgU1ZNX0VYSVRfVFJfUkVBRDoKKwljYXNlIFNWTV9FWElUX1RSX1dSSVRFOgorCQlrdm1p
X2Rlc2NyaXB0b3JfZXZlbnQodmNwdSwgS1ZNSV9ERVNDX1RSLAorCQkJCSAgICAgIGMtPmV4aXRf
Y29kZSA9PSBTVk1fRVhJVF9UUl9XUklURSk7CisJCWJyZWFrOworCWRlZmF1bHQ6CisJCWJyZWFr
OworCX0KKworCXJldHVybiBrdm1fZW11bGF0ZV9pbnN0cnVjdGlvbih2Y3B1LCAwKTsKK30KKyNl
bmRpZiAvKiBDT05GSUdfS1ZNX0lOVFJPU1BFQ1RJT04gKi8KKwogc3RhdGljIGludCAoKmNvbnN0
IHN2bV9leGl0X2hhbmRsZXJzW10pKHN0cnVjdCB2Y3B1X3N2bSAqc3ZtKSA9IHsKIAlbU1ZNX0VY
SVRfUkVBRF9DUjBdCQkJPSBjcl9pbnRlcmNlcHRpb24sCiAJW1NWTV9FWElUX1JFQURfQ1IzXQkJ
CT0gY3JfaW50ZXJjZXB0aW9uLApAQCAtNDg3NCw2ICs0OTA5LDE2IEBAIHN0YXRpYyBpbnQgKCpj
b25zdCBzdm1fZXhpdF9oYW5kbGVyc1tdKShzdHJ1Y3QgdmNwdV9zdm0gKnN2bSkgPSB7CiAJW1NW
TV9FWElUX1JTTV0gICAgICAgICAgICAgICAgICAgICAgICAgID0gcnNtX2ludGVyY2VwdGlvbiwK
IAlbU1ZNX0VYSVRfQVZJQ19JTkNPTVBMRVRFX0lQSV0JCT0gYXZpY19pbmNvbXBsZXRlX2lwaV9p
bnRlcmNlcHRpb24sCiAJW1NWTV9FWElUX0FWSUNfVU5BQ0NFTEVSQVRFRF9BQ0NFU1NdCT0gYXZp
Y191bmFjY2VsZXJhdGVkX2FjY2Vzc19pbnRlcmNlcHRpb24sCisjaWZkZWYgQ09ORklHX0tWTV9J
TlRST1NQRUNUSU9OCisJW1NWTV9FWElUX0lEVFJfUkVBRF0JCQk9IGRlc2NyaXB0b3JfYWNjZXNz
X2ludGVyY2VwdGlvbiwKKwlbU1ZNX0VYSVRfR0RUUl9SRUFEXQkJCT0gZGVzY3JpcHRvcl9hY2Nl
c3NfaW50ZXJjZXB0aW9uLAorCVtTVk1fRVhJVF9MRFRSX1JFQURdCQkJPSBkZXNjcmlwdG9yX2Fj
Y2Vzc19pbnRlcmNlcHRpb24sCisJW1NWTV9FWElUX1RSX1JFQURdCQkJPSBkZXNjcmlwdG9yX2Fj
Y2Vzc19pbnRlcmNlcHRpb24sCisJW1NWTV9FWElUX0lEVFJfV1JJVEVdCQkJPSBkZXNjcmlwdG9y
X2FjY2Vzc19pbnRlcmNlcHRpb24sCisJW1NWTV9FWElUX0dEVFJfV1JJVEVdCQkJPSBkZXNjcmlw
dG9yX2FjY2Vzc19pbnRlcmNlcHRpb24sCisJW1NWTV9FWElUX0xEVFJfV1JJVEVdCQkJPSBkZXNj
cmlwdG9yX2FjY2Vzc19pbnRlcmNlcHRpb24sCisJW1NWTV9FWElUX1RSX1dSSVRFXQkJCT0gZGVz
Y3JpcHRvcl9hY2Nlc3NfaW50ZXJjZXB0aW9uLAorI2VuZGlmIC8qIENPTkZJR19LVk1fSU5UUk9T
UEVDVElPTiAqLwogfTsKIAogc3RhdGljIHZvaWQgZHVtcF92bWNiKHN0cnVjdCBrdm1fdmNwdSAq
dmNwdSkKZGlmZiAtLWdpdCBhL2FyY2gveDg2L2t2bS92bXgvdm14LmMgYi9hcmNoL3g4Ni9rdm0v
dm14L3ZteC5jCmluZGV4IDE1N2RmYzNmNzU2YS4uNjg5ODZmNjAwZjk4IDEwMDY0NAotLS0gYS9h
cmNoL3g4Ni9rdm0vdm14L3ZteC5jCisrKyBiL2FyY2gveDg2L2t2bS92bXgvdm14LmMKQEAgLTMw
NzAsMTEgKzMwNzAsMTEgQEAgaW50IHZteF9zZXRfY3I0KHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwg
dW5zaWduZWQgbG9uZyBjcjQpCiAKIAlpZiAoIWJvb3RfY3B1X2hhcyhYODZfRkVBVFVSRV9VTUlQ
KSAmJiB2bXhfdW1pcF9lbXVsYXRlZCgpKSB7CiAJCWlmIChjcjQgJiBYODZfQ1I0X1VNSVApIHsK
LQkJCXNlY29uZGFyeV9leGVjX2NvbnRyb2xzX3NldGJpdCh2bXgsIFNFQ09OREFSWV9FWEVDX0RF
U0MpOworCQkJdm14X2NvbnRyb2xfZGVzY19pbnRlcmNlcHQodmNwdSwgdHJ1ZSk7CiAJCQlod19j
cjQgJj0gflg4Nl9DUjRfVU1JUDsKIAkJfSBlbHNlIGlmICghaXNfZ3Vlc3RfbW9kZSh2Y3B1KSB8
fAogCQkJIW5lc3RlZF9jcHVfaGFzMihnZXRfdm1jczEyKHZjcHUpLCBTRUNPTkRBUllfRVhFQ19E
RVNDKSkgewotCQkJc2Vjb25kYXJ5X2V4ZWNfY29udHJvbHNfY2xlYXJiaXQodm14LCBTRUNPTkRB
UllfRVhFQ19ERVNDKTsKKwkJCXZteF9jb250cm9sX2Rlc2NfaW50ZXJjZXB0KHZjcHUsIGZhbHNl
KTsKIAkJfQogCX0KIApAQCAtNDgzMSw3ICs0ODMxLDQwIEBAIHN0YXRpYyBpbnQgaGFuZGxlX3Nl
dF9jcjQoc3RydWN0IGt2bV92Y3B1ICp2Y3B1LCB1bnNpZ25lZCBsb25nIHZhbCkKIAogc3RhdGlj
IGludCBoYW5kbGVfZGVzYyhzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUpCiB7CisjaWZkZWYgQ09ORklH
X0tWTV9JTlRST1NQRUNUSU9OCisJc3RydWN0IHZjcHVfdm14ICp2bXggPSB0b192bXgodmNwdSk7
CisJdTMyIGV4aXRfcmVhc29uID0gdm14LT5leGl0X3JlYXNvbjsKKwl1MzIgdm14X2luc3RydWN0
aW9uX2luZm8gPSB2bWNzX3JlYWQzMihWTVhfSU5TVFJVQ1RJT05fSU5GTyk7CisJdTggc3RvcmUg
PSAodm14X2luc3RydWN0aW9uX2luZm8gPj4gMjkpICYgMHgxOworCXU4IGRlc2NyaXB0b3IgPSAw
OworCisJaWYgKGV4aXRfcmVhc29uID09IEVYSVRfUkVBU09OX0dEVFJfSURUUikgeworCQlpZiAo
KHZteF9pbnN0cnVjdGlvbl9pbmZvID4+IDI4KSAmIDB4MSkKKwkJCWRlc2NyaXB0b3IgPSBLVk1J
X0RFU0NfSURUUjsKKwkJZWxzZQorCQkJZGVzY3JpcHRvciA9IEtWTUlfREVTQ19HRFRSOworCX0g
ZWxzZSB7CisJCWlmICgodm14X2luc3RydWN0aW9uX2luZm8gPj4gMjgpICYgMHgxKQorCQkJZGVz
Y3JpcHRvciA9IEtWTUlfREVTQ19UUjsKKwkJZWxzZQorCQkJZGVzY3JpcHRvciA9IEtWTUlfREVT
Q19MRFRSOworCX0KKworCS8qCisJICogRm9yIG5vdywgdGhpcyBmdW5jdGlvbiByZXR1cm5zIGZh
bHNlIG9ubHkgd2hlbiB0aGUgZ3Vlc3QKKwkgKiBpcyB1bmdyYWNlZnVsbHkgc3RvcHBlZCAoY3Jh
c2hlZCkgb3IgdGhlIGN1cnJlbnQgaW5zdHJ1Y3Rpb24KKwkgKiBpcyBza2lwcGVkIGJ5IHRoZSBp
bnRyb3NwZWN0aW9uIHRvb2wuCisJICovCisJaWYgKCFrdm1pX2Rlc2NyaXB0b3JfZXZlbnQodmNw
dSwgZGVzY3JpcHRvciwgc3RvcmUpKQorCQlyZXR1cm4gMTsKKworCS8qCisJICogV2UgYXJlIGhl
cmUgYmVjYXVzZSBYODZfQ1I0X1VNSVAgd2FzIHNldCBvcgorCSAqIEtWTUkgZW5hYmxlZCB0aGUg
aW50ZXJjZXB0aW9uLgorCSAqLworI2Vsc2UKIAlXQVJOX09OKCEodmNwdS0+YXJjaC5jcjQgJiBY
ODZfQ1I0X1VNSVApKTsKKyNlbmRpZiAvKiBDT05GSUdfS1ZNX0lOVFJPU1BFQ1RJT04gKi8KIAly
ZXR1cm4ga3ZtX2VtdWxhdGVfaW5zdHJ1Y3Rpb24odmNwdSwgMCk7CiB9CiAKZGlmZiAtLWdpdCBh
L2luY2x1ZGUvdWFwaS9saW51eC9rdm1pLmggYi9pbmNsdWRlL3VhcGkvbGludXgva3ZtaS5oCmlu
ZGV4IDVlOTExY2E3YTYzNi4uYThmNWRjNDE1ZTNkIDEwMDY0NAotLS0gYS9pbmNsdWRlL3VhcGkv
bGludXgva3ZtaS5oCisrKyBiL2luY2x1ZGUvdWFwaS9saW51eC9rdm1pLmgKQEAgLTUxLDYgKzUx
LDcgQEAgZW51bSB7CiAJS1ZNSV9FVkVOVF9DUiAgICAgICAgID0gNCwKIAlLVk1JX0VWRU5UX1RS
QVAgICAgICAgPSA1LAogCUtWTUlfRVZFTlRfWFNFVEJWICAgICA9IDYsCisJS1ZNSV9FVkVOVF9E
RVNDUklQVE9SID0gNywKIAogCUtWTUlfTlVNX0VWRU5UUwogfTsKZGlmZiAtLWdpdCBhL3Rvb2xz
L3Rlc3Rpbmcvc2VsZnRlc3RzL2t2bS94ODZfNjQva3ZtaV90ZXN0LmMgYi90b29scy90ZXN0aW5n
L3NlbGZ0ZXN0cy9rdm0veDg2XzY0L2t2bWlfdGVzdC5jCmluZGV4IDYwMGQ2NTkyMmJmNC4uNDMw
OGNiOTk1Y2UzIDEwMDY0NAotLS0gYS90b29scy90ZXN0aW5nL3NlbGZ0ZXN0cy9rdm0veDg2XzY0
L2t2bWlfdGVzdC5jCisrKyBiL3Rvb2xzL3Rlc3Rpbmcvc2VsZnRlc3RzL2t2bS94ODZfNjQva3Zt
aV90ZXN0LmMKQEAgLTU0LDYgKzU0LDcgQEAgZW51bSB7CiAJR1VFU1RfVEVTVF9OT09QID0gMCwK
IAlHVUVTVF9URVNUX0JQLAogCUdVRVNUX1RFU1RfQ1IsCisJR1VFU1RfVEVTVF9ERVNDUklQVE9S
LAogCUdVRVNUX1RFU1RfSFlQRVJDQUxMLAogCUdVRVNUX1RFU1RfWFNFVEJWLAogfTsKQEAgLTc5
LDYgKzgwLDE0IEBAIHN0YXRpYyB2b2lkIGd1ZXN0X2NyX3Rlc3Qodm9pZCkKIAlzZXRfY3I0KGdl
dF9jcjQoKSB8IFg4Nl9DUjRfT1NYU0FWRSk7CiB9CiAKK3N0YXRpYyB2b2lkIGd1ZXN0X2Rlc2Ny
aXB0b3JfdGVzdCh2b2lkKQoreworCXZvaWQgKnB0cjsKKworCWFzbSB2b2xhdGlsZSgic2dkdCAl
MCIgOjogIm0iKHB0cikpOworCWFzbSB2b2xhdGlsZSgibGdkdCAlMCIgOjogIm0iKHB0cikpOwor
fQorCiBzdGF0aWMgdm9pZCBndWVzdF9oeXBlcmNhbGxfdGVzdCh2b2lkKQogewogCWFzbSB2b2xh
dGlsZSgibW92ICQzNCwgJXJheCIpOwpAQCAtMTM4LDYgKzE0Nyw5IEBAIHN0YXRpYyB2b2lkIGd1
ZXN0X2NvZGUodm9pZCkKIAkJY2FzZSBHVUVTVF9URVNUX0NSOgogCQkJZ3Vlc3RfY3JfdGVzdCgp
OwogCQkJYnJlYWs7CisJCWNhc2UgR1VFU1RfVEVTVF9ERVNDUklQVE9SOgorCQkJZ3Vlc3RfZGVz
Y3JpcHRvcl90ZXN0KCk7CisJCQlicmVhazsKIAkJY2FzZSBHVUVTVF9URVNUX0hZUEVSQ0FMTDoK
IAkJCWd1ZXN0X2h5cGVyY2FsbF90ZXN0KCk7CiAJCQlicmVhazsKQEAgLTEzNjAsNiArMTM3Miw1
MyBAQCBzdGF0aWMgdm9pZCB0ZXN0X2NtZF92Y3B1X2dldF9tdHJyX3R5cGUoc3RydWN0IGt2bV92
bSAqdm0pCiAJREVCVUcoIm10cnJfdHlwZTogZ3BhIDB4JWx4IHR5cGUgMHgleFxuIiwgdGVzdF9n
cGEsIHJwbC50eXBlKTsKIH0KIAorc3RhdGljIHZvaWQgdGVzdF9ldmVudF9kZXNjcmlwdG9yKHN0
cnVjdCBrdm1fdm0gKnZtKQoreworCXN0cnVjdCB2Y3B1X3dvcmtlcl9kYXRhIGRhdGEgPSB7CisJ
CS52bSA9IHZtLAorCQkudmNwdV9pZCA9IFZDUFVfSUQsCisJCS50ZXN0X2lkID0gR1VFU1RfVEVT
VF9ERVNDUklQVE9SLAorCX07CisJc3RydWN0IGt2bWlfbXNnX2hkciBoZHI7CisJc3RydWN0IHsK
KwkJc3RydWN0IGt2bWlfZXZlbnQgY29tbW9uOworCQlzdHJ1Y3Qga3ZtaV9ldmVudF9kZXNjcmlw
dG9yIGRlc2M7CisJfSBldjsKKwlzdHJ1Y3QgdmNwdV9yZXBseSBycGwgPSB7fTsKKwlfX3UxNiBl
dmVudF9pZCA9IEtWTUlfRVZFTlRfREVTQ1JJUFRPUjsKKwlwdGhyZWFkX3QgdmNwdV90aHJlYWQ7
CisKKwllbmFibGVfdmNwdV9ldmVudCh2bSwgZXZlbnRfaWQpOworCisJdmNwdV90aHJlYWQgPSBz
dGFydF92Y3B1X3dvcmtlcigmZGF0YSk7CisKKwlyZWNlaXZlX2V2ZW50KCZoZHIsICZldi5jb21t
b24sIHNpemVvZihldiksIGV2ZW50X2lkKTsKKworCURFQlVHKCJEZXNjcmlwdG9yIGV2ZW50IChy
ZWFkKSwgZGVzY3JpcHRvciAldSwgd3JpdGUgJXVcbiIsCisJCWV2LmRlc2MuZGVzY3JpcHRvciwg
ZXYuZGVzYy53cml0ZSk7CisKKwlURVNUX0FTU0VSVChldi5kZXNjLndyaXRlID09IDAsCisJCSJS
ZWNlaXZlZCBhIHdyaXRlIGRlc2NyaXB0b3IgYWNjZXNzXG4iKTsKKworCXJlcGx5X3RvX2V2ZW50
KCZoZHIsICZldi5jb21tb24sIEtWTUlfRVZFTlRfQUNUSU9OX0NPTlRJTlVFLAorCQkJJnJwbCwg
c2l6ZW9mKHJwbCkpOworCisJcmVjZWl2ZV9ldmVudCgmaGRyLCAmZXYuY29tbW9uLCBzaXplb2Yo
ZXYpLCBldmVudF9pZCk7CisKKwlERUJVRygiRGVzY3JpcHRvciBldmVudCAod3JpdGUpLCBkZXNj
cmlwdG9yICV1LCB3cml0ZSAldVxuIiwKKwkJZXYuZGVzYy5kZXNjcmlwdG9yLCBldi5kZXNjLndy
aXRlKTsKKworCVRFU1RfQVNTRVJUKGV2LmRlc2Mud3JpdGUgPT0gMSwKKwkJIlJlY2VpdmVkIGEg
cmVhZCBkZXNjcmlwdG9yIGFjY2Vzc1xuIik7CisKKwlyZXBseV90b19ldmVudCgmaGRyLCAmZXYu
Y29tbW9uLCBLVk1JX0VWRU5UX0FDVElPTl9DT05USU5VRSwKKwkJCSZycGwsIHNpemVvZihycGwp
KTsKKworCXN0b3BfdmNwdV93b3JrZXIodmNwdV90aHJlYWQsICZkYXRhKTsKKworCWRpc2FibGVf
dmNwdV9ldmVudCh2bSwgZXZlbnRfaWQpOworfQorCiBzdGF0aWMgdm9pZCB0ZXN0X2ludHJvc3Bl
Y3Rpb24oc3RydWN0IGt2bV92bSAqdm0pCiB7CiAJc2V0dXBfc29ja2V0KCk7CkBAIC0xMzg3LDYg
KzE0NDYsNyBAQCBzdGF0aWMgdm9pZCB0ZXN0X2ludHJvc3BlY3Rpb24oc3RydWN0IGt2bV92bSAq
dm0pCiAJdGVzdF9ldmVudF94c2V0YnYodm0pOwogCXRlc3RfY21kX3ZjcHVfZ2V0X3hzYXZlKHZt
KTsKIAl0ZXN0X2NtZF92Y3B1X2dldF9tdHJyX3R5cGUodm0pOworCXRlc3RfZXZlbnRfZGVzY3Jp
cHRvcih2bSk7CiAKIAl1bmhvb2tfaW50cm9zcGVjdGlvbih2bSk7CiB9CmRpZmYgLS1naXQgYS92
aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWlfaW50LmggYi92aXJ0L2t2bS9pbnRyb3NwZWN0aW9u
L2t2bWlfaW50LmgKaW5kZXggMWUyODM1NWVhNGQ3Li42ZDJjMDlhMTJjNDkgMTAwNjQ0Ci0tLSBh
L3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9pbnQuaAorKysgYi92aXJ0L2t2bS9pbnRyb3Nw
ZWN0aW9uL2t2bWlfaW50LmgKQEAgLTI0LDYgKzI0LDcgQEAKICNkZWZpbmUgS1ZNSV9LTk9XTl9W
Q1BVX0VWRU5UUyAoIFwKIAkJCSAgICBCSVQoS1ZNSV9FVkVOVF9CUkVBS1BPSU5UKSBcCiAJCQkg
IHwgQklUKEtWTUlfRVZFTlRfQ1IpIFwKKwkJCSAgfCBCSVQoS1ZNSV9FVkVOVF9ERVNDUklQVE9S
KSBcCiAJCQkgIHwgQklUKEtWTUlfRVZFTlRfSFlQRVJDQUxMKSBcCiAJCQkgIHwgQklUKEtWTUlf
RVZFTlRfVFJBUCkgXAogCQkJICB8IEJJVChLVk1JX0VWRU5UX1BBVVNFX1ZDUFUpIFwKQEAgLTc5
LDYgKzgwLDcgQEAgaW50IGt2bWlfbXNnX3NlbmRfdW5ob29rKHN0cnVjdCBrdm1faW50cm9zcGVj
dGlvbiAqa3ZtaSk7CiB1MzIga3ZtaV9tc2dfc2VuZF92Y3B1X3BhdXNlKHN0cnVjdCBrdm1fdmNw
dSAqdmNwdSk7CiB1MzIga3ZtaV9tc2dfc2VuZF9oeXBlcmNhbGwoc3RydWN0IGt2bV92Y3B1ICp2
Y3B1KTsKIHUzMiBrdm1pX21zZ19zZW5kX2JwKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwgdTY0IGdw
YSwgdTggaW5zbl9sZW4pOwordTMyIGt2bWlfbXNnX3NlbmRfZGVzY3JpcHRvcihzdHJ1Y3Qga3Zt
X3ZjcHUgKnZjcHUsIHU4IGRlc2NyaXB0b3IsIHU4IHdyaXRlKTsKIAogLyoga3ZtaS5jICovCiB2
b2lkICprdm1pX21zZ19hbGxvYyh2b2lkKTsKZGlmZiAtLWdpdCBhL3ZpcnQva3ZtL2ludHJvc3Bl
Y3Rpb24va3ZtaV9tc2cuYyBiL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9tc2cuYwppbmRl
eCA2ZjIzYmM3NTE3YWEuLmZlZDQ4M2JlYzkzNiAxMDA2NDQKLS0tIGEvdmlydC9rdm0vaW50cm9z
cGVjdGlvbi9rdm1pX21zZy5jCisrKyBiL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9tc2cu
YwpAQCAtMTAyOSwzICsxMDI5LDIwIEBAIHZvaWQga3ZtaV94c2V0YnZfZXZlbnQoc3RydWN0IGt2
bV92Y3B1ICp2Y3B1KQogCiAJa3ZtaV9wdXQodmNwdS0+a3ZtKTsKIH0KKwordTMyIGt2bWlfbXNn
X3NlbmRfZGVzY3JpcHRvcihzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsIHU4IGRlc2NyaXB0b3IsIHU4
IHdyaXRlKQoreworCXN0cnVjdCBrdm1pX2V2ZW50X2Rlc2NyaXB0b3IgZTsKKwlpbnQgZXJyLCBh
Y3Rpb247CisKKwltZW1zZXQoJmUsIDAsIHNpemVvZihlKSk7CisJZS5kZXNjcmlwdG9yID0gZGVz
Y3JpcHRvcjsKKwllLndyaXRlID0gd3JpdGU7CisKKwllcnIgPSBrdm1pX3NlbmRfZXZlbnQodmNw
dSwgS1ZNSV9FVkVOVF9ERVNDUklQVE9SLCAmZSwgc2l6ZW9mKGUpLAorCQkJICAgICAgTlVMTCwg
MCwgJmFjdGlvbik7CisJaWYgKGVycikKKwkJcmV0dXJuIEtWTUlfRVZFTlRfQUNUSU9OX0NPTlRJ
TlVFOworCisJcmV0dXJuIGFjdGlvbjsKK30KX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX18KVmlydHVhbGl6YXRpb24gbWFpbGluZyBsaXN0ClZpcnR1YWxpemF0
aW9uQGxpc3RzLmxpbnV4LWZvdW5kYXRpb24ub3JnCmh0dHBzOi8vbGlzdHMubGludXhmb3VuZGF0
aW9uLm9yZy9tYWlsbWFuL2xpc3RpbmZvL3ZpcnR1YWxpemF0aW9u
