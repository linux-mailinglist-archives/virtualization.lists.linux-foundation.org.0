Return-Path: <virtualization-bounces@lists.linux-foundation.org>
X-Original-To: lists.virtualization@lfdr.de
Delivered-To: lists.virtualization@lfdr.de
Received: from silver.osuosl.org (smtp3.osuosl.org [140.211.166.136])
	by mail.lfdr.de (Postfix) with ESMTPS id A2BD42D1AEF
	for <lists.virtualization@lfdr.de>; Mon,  7 Dec 2020 21:47:44 +0100 (CET)
Received: from localhost (localhost [127.0.0.1])
	by silver.osuosl.org (Postfix) with ESMTP id 2ADD42E273;
	Mon,  7 Dec 2020 20:47:43 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from silver.osuosl.org ([127.0.0.1])
	by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id dXCHqs5NjF28; Mon,  7 Dec 2020 20:47:15 +0000 (UTC)
Received: from lists.linuxfoundation.org (lf-lists.osuosl.org [140.211.9.56])
	by silver.osuosl.org (Postfix) with ESMTP id 8D0D22E272;
	Mon,  7 Dec 2020 20:46:43 +0000 (UTC)
Received: from lf-lists.osuosl.org (localhost [127.0.0.1])
	by lists.linuxfoundation.org (Postfix) with ESMTP id 72BF0C013B;
	Mon,  7 Dec 2020 20:46:43 +0000 (UTC)
X-Original-To: virtualization@lists.linux-foundation.org
Delivered-To: virtualization@lists.linuxfoundation.org
Received: from silver.osuosl.org (smtp3.osuosl.org [140.211.166.136])
 by lists.linuxfoundation.org (Postfix) with ESMTP id BAB19C013B
 for <virtualization@lists.linux-foundation.org>;
 Mon,  7 Dec 2020 20:46:41 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by silver.osuosl.org (Postfix) with ESMTP id 94BEA2E28B
 for <virtualization@lists.linux-foundation.org>;
 Mon,  7 Dec 2020 20:46:41 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from silver.osuosl.org ([127.0.0.1])
 by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id xcVV+pid0oN7
 for <virtualization@lists.linux-foundation.org>;
 Mon,  7 Dec 2020 20:46:26 +0000 (UTC)
X-Greylist: from auto-whitelisted by SQLgrey-1.7.6
Received: from mx01.bbu.dsd.mx.bitdefender.com
 (mx01.bbu.dsd.mx.bitdefender.com [91.199.104.161])
 by silver.osuosl.org (Postfix) with ESMTPS id 2F4AF2E28F
 for <virtualization@lists.linux-foundation.org>;
 Mon,  7 Dec 2020 20:46:20 +0000 (UTC)
Received: from smtp.bitdefender.com (smtp01.buh.bitdefender.com [10.17.80.75])
 by mx01.bbu.dsd.mx.bitdefender.com (Postfix) with ESMTPS id
 B8C9A305D467; Mon,  7 Dec 2020 22:46:18 +0200 (EET)
Received: from localhost.localdomain (unknown [91.199.104.27])
 by smtp.bitdefender.com (Postfix) with ESMTPSA id 905C13072784;
 Mon,  7 Dec 2020 22:46:18 +0200 (EET)
From: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>
To: kvm@vger.kernel.org
Subject: [PATCH v11 40/81] KVM: introspection: add KVMI_VM_EVENT_UNHOOK
Date: Mon,  7 Dec 2020 22:45:41 +0200
Message-Id: <20201207204622.15258-41-alazar@bitdefender.com>
In-Reply-To: <20201207204622.15258-1-alazar@bitdefender.com>
References: <20201207204622.15258-1-alazar@bitdefender.com>
MIME-Version: 1.0
Cc: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>,
 Paolo Bonzini <pbonzini@redhat.com>, virtualization@lists.linux-foundation.org
X-BeenThere: virtualization@lists.linux-foundation.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Linux virtualization <virtualization.lists.linux-foundation.org>
List-Unsubscribe: <https://lists.linuxfoundation.org/mailman/options/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=unsubscribe>
List-Archive: <http://lists.linuxfoundation.org/pipermail/virtualization/>
List-Post: <mailto:virtualization@lists.linux-foundation.org>
List-Help: <mailto:virtualization-request@lists.linux-foundation.org?subject=help>
List-Subscribe: <https://lists.linuxfoundation.org/mailman/listinfo/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: virtualization-bounces@lists.linux-foundation.org
Sender: "Virtualization" <virtualization-bounces@lists.linux-foundation.org>

VGhpcyBldmVudCBpcyBzZW50IHdoZW4gdGhlIGd1ZXN0IGlzIGFib3V0IHRvIGJlCnBhdXNlZC9z
dXNwZW5kZWQvbWlncmF0ZWQuIFRoZSBpbnRyb3NwZWN0aW9uIHRvb2wgaGFzIHRoZSBjaGFuY2Ug
dG8KcmVtb3ZlIGl0cyBob29rcyAoZS5nLiBicmVha3BvaW50cykgd2hpbGUgdGhlIGd1ZXN0IGlz
IHN0aWxsIHJ1bm5pbmcuCgpTaWduZWQtb2ZmLWJ5OiBBZGFsYmVydCBMYXrEg3IgPGFsYXphckBi
aXRkZWZlbmRlci5jb20+Ci0tLQogRG9jdW1lbnRhdGlvbi92aXJ0L2t2bS9rdm1pLnJzdCAgICAg
ICAgICAgICAgIHwgMzEgKysrKysrKysrCiBhcmNoL3g4Ni9rdm0vTWFrZWZpbGUgICAgICAgICAg
ICAgICAgICAgICAgICAgfCAgMiArLQogYXJjaC94ODYva3ZtL2t2bWkuYyAgICAgICAgICAgICAg
ICAgICAgICAgICAgIHwgMTAgKysrCiBpbmNsdWRlL2xpbnV4L2t2bWlfaG9zdC5oICAgICAgICAg
ICAgICAgICAgICAgfCAgMiArCiBpbmNsdWRlL3VhcGkvbGludXgva3ZtaS5oICAgICAgICAgICAg
ICAgICAgICAgfCAgOSArKysKIC4uLi90ZXN0aW5nL3NlbGZ0ZXN0cy9rdm0veDg2XzY0L2t2bWlf
dGVzdC5jICB8IDY4ICsrKysrKysrKysrKysrKysrKy0KIHZpcnQva3ZtL2ludHJvc3BlY3Rpb24v
a3ZtaS5jICAgICAgICAgICAgICAgICB8IDEzICsrKy0KIHZpcnQva3ZtL2ludHJvc3BlY3Rpb24v
a3ZtaV9pbnQuaCAgICAgICAgICAgICB8ICAzICsKIHZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3Zt
aV9tc2cuYyAgICAgICAgICAgICB8IDQyICsrKysrKysrKysrLQogOSBmaWxlcyBjaGFuZ2VkLCAx
NzMgaW5zZXJ0aW9ucygrKSwgNyBkZWxldGlvbnMoLSkKIGNyZWF0ZSBtb2RlIDEwMDY0NCBhcmNo
L3g4Ni9rdm0va3ZtaS5jCgpkaWZmIC0tZ2l0IGEvRG9jdW1lbnRhdGlvbi92aXJ0L2t2bS9rdm1p
LnJzdCBiL0RvY3VtZW50YXRpb24vdmlydC9rdm0va3ZtaS5yc3QKaW5kZXggMzM0OTBiYzlkMWMx
Li5lOWM0MGM3YWUxNTQgMTAwNjQ0Ci0tLSBhL0RvY3VtZW50YXRpb24vdmlydC9rdm0va3ZtaS5y
c3QKKysrIGIvRG9jdW1lbnRhdGlvbi92aXJ0L2t2bS9rdm1pLnJzdApAQCAtMzMxLDMgKzMzMSwz
NCBAQCBUaGlzIGNvbW1hbmQgaXMgYWx3YXlzIGFsbG93ZWQuCiAJfTsKIAogUmV0dXJucyB0aGUg
bnVtYmVyIG9mIG9ubGluZSB2Q1BVcy4KKworRXZlbnRzCis9PT09PT0KKworVGhlIFZNIGludHJv
c3BlY3Rpb24gZXZlbnRzIGFyZSBzZW50IHVzaW5nIHRoZSBLVk1JX1ZNX0VWRU5UIG1lc3NhZ2Ug
aWQuCitUaGUgbWVzc2FnZSBkYXRhIGJlZ2lucyB3aXRoIGEgY29tbW9uIHN0cnVjdHVyZSBoYXZp
bmcgdGhlIGV2ZW50IGlkOjoKKworCXN0cnVjdCBrdm1pX2V2ZW50X2hkciB7CisJCV9fdTE2IGV2
ZW50OworCQlfX3UxNiBwYWRkaW5nWzNdOworCX07CisKK1NwZWNpZmljIGV2ZW50IGRhdGEgY2Fu
IGZvbGxvdyB0aGlzIGNvbW1vbiBzdHJ1Y3R1cmUuCisKKzEuIEtWTUlfVk1fRVZFTlRfVU5IT09L
CistLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQorCis6QXJjaGl0ZWN0dXJlczogYWxsCis6VmVyc2lv
bnM6ID49IDEKKzpBY3Rpb25zOiBub25lCis6UGFyYW1ldGVyczoKKworOjoKKworCXN0cnVjdCBr
dm1pX2V2ZW50X2hkcjsKKworOlJldHVybnM6IG5vbmUKKworVGhpcyBldmVudCBpcyBzZW50IHdo
ZW4gdGhlIGRldmljZSBtYW5hZ2VyIGhhcyB0byBwYXVzZS9zdG9wL21pZ3JhdGUgdGhlCitndWVz
dCAoc2VlICoqVW5ob29raW5nKiopLiAgVGhlIGludHJvc3BlY3Rpb24gdG9vbCBoYXMgYSBjaGFu
Y2UgdG8gdW5ob29rCithbmQgY2xvc2UgdGhlIEtWTUkgY2hhbm5lbCAoc2lnbmFsaW5nIHRoYXQg
dGhlIG9wZXJhdGlvbiBjYW4gcHJvY2VlZCkuCmRpZmYgLS1naXQgYS9hcmNoL3g4Ni9rdm0vTWFr
ZWZpbGUgYi9hcmNoL3g4Ni9rdm0vTWFrZWZpbGUKaW5kZXggZGI0MTIxYjQxMTJkLi44ZmFkNDA2
NDliY2YgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L2t2bS9NYWtlZmlsZQorKysgYi9hcmNoL3g4Ni9r
dm0vTWFrZWZpbGUKQEAgLTE0LDcgKzE0LDcgQEAga3ZtLXkJCQkrPSAkKEtWTSkva3ZtX21haW4u
byAkKEtWTSkvY29hbGVzY2VkX21taW8ubyBcCiAJCQkJJChLVk0pL2V2ZW50ZmQubyAkKEtWTSkv
aXJxY2hpcC5vICQoS1ZNKS92ZmlvLm8gXAogCQkJCSQoS1ZNKS9kaXJ0eV9yaW5nLm8KIGt2bS0k
KENPTkZJR19LVk1fQVNZTkNfUEYpCSs9ICQoS1ZNKS9hc3luY19wZi5vCi1rdm0tJChDT05GSUdf
S1ZNX0lOVFJPU1BFQ1RJT04pICs9ICQoS1ZNSSkva3ZtaS5vICQoS1ZNSSkva3ZtaV9tc2cubwor
a3ZtLSQoQ09ORklHX0tWTV9JTlRST1NQRUNUSU9OKSArPSAkKEtWTUkpL2t2bWkubyAkKEtWTUkp
L2t2bWlfbXNnLm8ga3ZtaS5vCiAKIGt2bS15CQkJKz0geDg2Lm8gZW11bGF0ZS5vIGk4MjU5Lm8g
aXJxLm8gbGFwaWMubyBcCiAJCQkgICBpODI1NC5vIGlvYXBpYy5vIGlycV9jb21tLm8gY3B1aWQu
byBwbXUubyBtdHJyLm8gXApkaWZmIC0tZ2l0IGEvYXJjaC94ODYva3ZtL2t2bWkuYyBiL2FyY2gv
eDg2L2t2bS9rdm1pLmMKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwLi4z
NTc0MmQ5MjdiZTUKLS0tIC9kZXYvbnVsbAorKysgYi9hcmNoL3g4Ni9rdm0va3ZtaS5jCkBAIC0w
LDAgKzEsMTAgQEAKKy8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBHUEwtMi4wCisvKgorICog
S1ZNIGludHJvc3BlY3Rpb24gLSB4ODYKKyAqCisgKiBDb3B5cmlnaHQgKEMpIDIwMTktMjAyMCBC
aXRkZWZlbmRlciBTLlIuTC4KKyAqLworCit2b2lkIGt2bWlfYXJjaF9pbml0X3ZjcHVfZXZlbnRz
X21hc2sodW5zaWduZWQgbG9uZyAqc3VwcG9ydGVkKQoreworfQpkaWZmIC0tZ2l0IGEvaW5jbHVk
ZS9saW51eC9rdm1pX2hvc3QuaCBiL2luY2x1ZGUvbGludXgva3ZtaV9ob3N0LmgKaW5kZXggODFl
YWM5ZjUzYTNmLi42NDc2YzdkNmE0ZDMgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvbGludXgva3ZtaV9o
b3N0LmgKKysrIGIvaW5jbHVkZS9saW51eC9rdm1pX2hvc3QuaApAQCAtMTcsNiArMTcsOCBAQCBz
dHJ1Y3Qga3ZtX2ludHJvc3BlY3Rpb24gewogCiAJdW5zaWduZWQgbG9uZyAqY21kX2FsbG93X21h
c2s7CiAJdW5zaWduZWQgbG9uZyAqZXZlbnRfYWxsb3dfbWFzazsKKworCWF0b21pY190IGV2X3Nl
cTsKIH07CiAKIGludCBrdm1pX3ZlcnNpb24odm9pZCk7CmRpZmYgLS1naXQgYS9pbmNsdWRlL3Vh
cGkvbGludXgva3ZtaS5oIGIvaW5jbHVkZS91YXBpL2xpbnV4L2t2bWkuaAppbmRleCBlMDZhN2I4
MGQ0ZDkuLjE4ZmI1MTA3OGQ0OCAxMDA2NDQKLS0tIGEvaW5jbHVkZS91YXBpL2xpbnV4L2t2bWku
aAorKysgYi9pbmNsdWRlL3VhcGkvbGludXgva3ZtaS5oCkBAIC0xNyw2ICsxNyw4IEBAIGVudW0g
ewogI2RlZmluZSBLVk1JX1ZDUFVfTUVTU0FHRV9JRChpZCkgKCgoaWQpIDw8IDEpIHwgMSkKIAog
ZW51bSB7CisJS1ZNSV9WTV9FVkVOVCA9IEtWTUlfVk1fTUVTU0FHRV9JRCgwKSwKKwogCUtWTUlf
R0VUX1ZFUlNJT04gICAgICA9IEtWTUlfVk1fTUVTU0FHRV9JRCgxKSwKIAlLVk1JX1ZNX0NIRUNL
X0NPTU1BTkQgPSBLVk1JX1ZNX01FU1NBR0VfSUQoMiksCiAJS1ZNSV9WTV9DSEVDS19FVkVOVCAg
ID0gS1ZNSV9WTV9NRVNTQUdFX0lEKDMpLApAQCAtMzMsNiArMzUsOCBAQCBlbnVtIHsKICNkZWZp
bmUgS1ZNSV9WQ1BVX0VWRU5UX0lEKGlkKSAoKChpZCkgPDwgMSkgfCAxKQogCiBlbnVtIHsKKwlL
Vk1JX1ZNX0VWRU5UX1VOSE9PSyA9IEtWTUlfVk1fRVZFTlRfSUQoMCksCisKIAlLVk1JX05FWFRf
Vk1fRVZFTlQKIH07CiAKQEAgLTczLDQgKzc3LDkgQEAgc3RydWN0IGt2bWlfdm1fZ2V0X2luZm9f
cmVwbHkgewogCV9fdTMyIHBhZGRpbmdbM107CiB9OwogCitzdHJ1Y3Qga3ZtaV9ldmVudF9oZHIg
eworCV9fdTE2IGV2ZW50OworCV9fdTE2IHBhZGRpbmdbM107Cit9OworCiAjZW5kaWYgLyogX1VB
UElfX0xJTlVYX0tWTUlfSCAqLwpkaWZmIC0tZ2l0IGEvdG9vbHMvdGVzdGluZy9zZWxmdGVzdHMv
a3ZtL3g4Nl82NC9rdm1pX3Rlc3QuYyBiL3Rvb2xzL3Rlc3Rpbmcvc2VsZnRlc3RzL2t2bS94ODZf
NjQva3ZtaV90ZXN0LmMKaW5kZXggZDYwZWUyM2ZhODMzLi4wMWIyNjAzNzljMmEgMTAwNjQ0Ci0t
LSBhL3Rvb2xzL3Rlc3Rpbmcvc2VsZnRlc3RzL2t2bS94ODZfNjQva3ZtaV90ZXN0LmMKKysrIGIv
dG9vbHMvdGVzdGluZy9zZWxmdGVzdHMva3ZtL3g4Nl82NC9rdm1pX3Rlc3QuYwpAQCAtNjgsNiAr
NjgsMTEgQEAgc3RhdGljIHZvaWQgc2V0X2V2ZW50X3Blcm0oc3RydWN0IGt2bV92bSAqdm0sIF9f
czMyIGlkLCBfX3UzMiBhbGxvdywKIAkJICJLVk1fSU5UUk9TUEVDVElPTl9FVkVOVCIpOwogfQog
CitzdGF0aWMgdm9pZCBkaXNhbGxvd19ldmVudChzdHJ1Y3Qga3ZtX3ZtICp2bSwgX19zMzIgZXZl
bnRfaWQpCit7CisJc2V0X2V2ZW50X3Blcm0odm0sIGV2ZW50X2lkLCAwLCAwKTsKK30KKwogc3Rh
dGljIHZvaWQgYWxsb3dfZXZlbnQoc3RydWN0IGt2bV92bSAqdm0sIF9fczMyIGV2ZW50X2lkKQog
ewogCXNldF9ldmVudF9wZXJtKHZtLCBldmVudF9pZCwgMSwgMCk7CkBAIC0yOTEsMTEgKzI5Niwx
NiBAQCBzdGF0aWMgdm9pZCBjbWRfdm1fY2hlY2tfZXZlbnQoX191MTYgaWQsIGludCBleHBlY3Rl
ZF9lcnIpCiAJCQlleHBlY3RlZF9lcnIpOwogfQogCi1zdGF0aWMgdm9pZCB0ZXN0X2NtZF92bV9j
aGVja19ldmVudCh2b2lkKQorc3RhdGljIHZvaWQgdGVzdF9jbWRfdm1fY2hlY2tfZXZlbnQoc3Ry
dWN0IGt2bV92bSAqdm0pCiB7Ci0JX191MTYgaW52YWxpZF9pZCA9IDB4ZmZmZjsKKwlfX3UxNiB2
YWxpZF9pZCA9IEtWTUlfVk1fRVZFTlRfVU5IT09LLCBpbnZhbGlkX2lkID0gMHhmZmZmOwogCiAJ
Y21kX3ZtX2NoZWNrX2V2ZW50KGludmFsaWRfaWQsIC1LVk1fRU5PRU5UKTsKKwljbWRfdm1fY2hl
Y2tfZXZlbnQodmFsaWRfaWQsIDApOworCisJZGlzYWxsb3dfZXZlbnQodm0sIHZhbGlkX2lkKTsK
KwljbWRfdm1fY2hlY2tfZXZlbnQodmFsaWRfaWQsIC1LVk1fRVBFUk0pOworCWFsbG93X2V2ZW50
KHZtLCB2YWxpZF9pZCk7CiB9CiAKIHN0YXRpYyB2b2lkIHRlc3RfY21kX3ZtX2dldF9pbmZvKHZv
aWQpCkBAIC0zMTIsNiArMzIyLDU3IEBAIHN0YXRpYyB2b2lkIHRlc3RfY21kX3ZtX2dldF9pbmZv
KHZvaWQpCiAJcHJfZGVidWcoInZjcHUgY291bnQ6ICV1XG4iLCBycGwudmNwdV9jb3VudCk7CiB9
CiAKK3N0YXRpYyB2b2lkIHRyaWdnZXJfZXZlbnRfdW5ob29rX25vdGlmaWNhdGlvbihzdHJ1Y3Qg
a3ZtX3ZtICp2bSkKK3sKKwlpbnQgcjsKKworCXIgPSBpb2N0bCh2bS0+ZmQsIEtWTV9JTlRST1NQ
RUNUSU9OX1BSRVVOSE9PSywgTlVMTCk7CisJVEVTVF9BU1NFUlQociA9PSAwLAorCQkiS1ZNX0lO
VFJPU1BFQ1RJT05fUFJFVU5IT09LIGZhaWxlZCwgZXJybm8gJWQgKCVzKVxuIiwKKwkJZXJybm8s
IHN0cmVycm9yKGVycm5vKSk7Cit9CisKK3N0YXRpYyB2b2lkIHJlY2VpdmVfZXZlbnQoc3RydWN0
IGt2bWlfbXNnX2hkciAqbXNnX2hkciwgdTE2IG1zZ19pZCwKKwkJCSAgc3RydWN0IGt2bWlfZXZl
bnRfaGRyICpldl9oZHIsIHUxNiBldmVudF9pZCwKKwkJCSAgc2l6ZV90IGV2X3NpemUpCit7CisJ
c2l6ZV90IHRvX3JlYWQgPSBldl9zaXplOworCisJcmVjZWl2ZV9kYXRhKG1zZ19oZHIsIHNpemVv
ZigqbXNnX2hkcikpOworCisJVEVTVF9BU1NFUlQobXNnX2hkci0+aWQgPT0gbXNnX2lkLAorCQki
VW5leHBlY3RlZCBtZXNzYWdlcyBpZCAlZCwgZXhwZWN0ZWQgJWRcbiIsCisJCW1zZ19oZHItPmlk
LCBtc2dfaWQpOworCisJaWYgKHRvX3JlYWQgPiBtc2dfaGRyLT5zaXplKQorCQl0b19yZWFkID0g
bXNnX2hkci0+c2l6ZTsKKworCXJlY2VpdmVfZGF0YShldl9oZHIsIHRvX3JlYWQpOworCVRFU1Rf
QVNTRVJUKGV2X2hkci0+ZXZlbnQgPT0gZXZlbnRfaWQsCisJCSJVbmV4cGVjdGVkIGV2ZW50ICVk
LCBleHBlY3RlZCAlZFxuIiwKKwkJZXZfaGRyLT5ldmVudCwgZXZlbnRfaWQpOworCisJVEVTVF9B
U1NFUlQobXNnX2hkci0+c2l6ZSA9PSBldl9zaXplLAorCQkiSW52YWxpZCBldmVudCBzaXplICVk
LCBleHBlY3RlZCAlemQgYnl0ZXNcbiIsCisJCW1zZ19oZHItPnNpemUsIGV2X3NpemUpOworfQor
CitzdGF0aWMgdm9pZCByZWNlaXZlX3ZtX2V2ZW50X3VuaG9vayh2b2lkKQoreworCXN0cnVjdCBr
dm1pX21zZ19oZHIgbXNnX2hkcjsKKwlzdHJ1Y3Qga3ZtaV9ldmVudF9oZHIgZXZfaGRyOworCisJ
cmVjZWl2ZV9ldmVudCgmbXNnX2hkciwgS1ZNSV9WTV9FVkVOVCwKKwkJICAgICAgJmV2X2hkciwg
S1ZNSV9WTV9FVkVOVF9VTkhPT0ssIHNpemVvZihldl9oZHIpKTsKK30KKworc3RhdGljIHZvaWQg
dGVzdF9ldmVudF91bmhvb2soc3RydWN0IGt2bV92bSAqdm0pCit7CisJdHJpZ2dlcl9ldmVudF91
bmhvb2tfbm90aWZpY2F0aW9uKHZtKTsKKworCXJlY2VpdmVfdm1fZXZlbnRfdW5ob29rKCk7Cit9
CisKIHN0YXRpYyB2b2lkIHRlc3RfaW50cm9zcGVjdGlvbihzdHJ1Y3Qga3ZtX3ZtICp2bSkKIHsK
IAlzZXR1cF9zb2NrZXQoKTsKQEAgLTMyMCw4ICszODEsOSBAQCBzdGF0aWMgdm9pZCB0ZXN0X2lu
dHJvc3BlY3Rpb24oc3RydWN0IGt2bV92bSAqdm0pCiAJdGVzdF9jbWRfaW52YWxpZCgpOwogCXRl
c3RfY21kX2dldF92ZXJzaW9uKCk7CiAJdGVzdF9jbWRfdm1fY2hlY2tfY29tbWFuZCh2bSk7Ci0J
dGVzdF9jbWRfdm1fY2hlY2tfZXZlbnQoKTsKKwl0ZXN0X2NtZF92bV9jaGVja19ldmVudCh2bSk7
CiAJdGVzdF9jbWRfdm1fZ2V0X2luZm8oKTsKKwl0ZXN0X2V2ZW50X3VuaG9vayh2bSk7CiAKIAl1
bmhvb2tfaW50cm9zcGVjdGlvbih2bSk7CiB9CmRpZmYgLS1naXQgYS92aXJ0L2t2bS9pbnRyb3Nw
ZWN0aW9uL2t2bWkuYyBiL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaS5jCmluZGV4IGZhMmZh
NDFmMDBhMS4uMGFlMDM5MmY5ZTNkIDEwMDY0NAotLS0gYS92aXJ0L2t2bS9pbnRyb3NwZWN0aW9u
L2t2bWkuYworKysgYi92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWkuYwpAQCAtMTcsNiArMTcs
OCBAQAogCiBzdGF0aWMgREVDTEFSRV9CSVRNQVAoS3ZtaV9hbHdheXNfYWxsb3dlZF9jb21tYW5k
cywgS1ZNSV9OVU1fQ09NTUFORFMpOwogc3RhdGljIERFQ0xBUkVfQklUTUFQKEt2bWlfa25vd25f
ZXZlbnRzLCBLVk1JX05VTV9FVkVOVFMpOworc3RhdGljIERFQ0xBUkVfQklUTUFQKEt2bWlfa25v
d25fdm1fZXZlbnRzLCBLVk1JX05VTV9FVkVOVFMpOworc3RhdGljIERFQ0xBUkVfQklUTUFQKEt2
bWlfa25vd25fdmNwdV9ldmVudHMsIEtWTUlfTlVNX0VWRU5UUyk7CiAKIHN0YXRpYyBzdHJ1Y3Qg
a21lbV9jYWNoZSAqbXNnX2NhY2hlOwogCkBAIC03Niw3ICs3OCwxNCBAQCBzdGF0aWMgdm9pZCBr
dm1pX2luaXRfYWx3YXlzX2FsbG93ZWRfY29tbWFuZHModm9pZCkKIAogc3RhdGljIHZvaWQga3Zt
aV9pbml0X2tub3duX2V2ZW50cyh2b2lkKQogewotCWJpdG1hcF96ZXJvKEt2bWlfa25vd25fZXZl
bnRzLCBLVk1JX05VTV9FVkVOVFMpOworCWJpdG1hcF96ZXJvKEt2bWlfa25vd25fdm1fZXZlbnRz
LCBLVk1JX05VTV9FVkVOVFMpOworCXNldF9iaXQoS1ZNSV9WTV9FVkVOVF9VTkhPT0ssIEt2bWlf
a25vd25fdm1fZXZlbnRzKTsKKworCWJpdG1hcF96ZXJvKEt2bWlfa25vd25fdmNwdV9ldmVudHMs
IEtWTUlfTlVNX0VWRU5UUyk7CisJa3ZtaV9hcmNoX2luaXRfdmNwdV9ldmVudHNfbWFzayhLdm1p
X2tub3duX3ZjcHVfZXZlbnRzKTsKKworCWJpdG1hcF9vcihLdm1pX2tub3duX2V2ZW50cywgS3Zt
aV9rbm93bl92bV9ldmVudHMsCisJCSAgS3ZtaV9rbm93bl92Y3B1X2V2ZW50cywgS1ZNSV9OVU1f
RVZFTlRTKTsKIH0KIAogaW50IGt2bWlfaW5pdCh2b2lkKQpAQCAtMTMwLDYgKzEzOSw4IEBAIGt2
bWlfYWxsb2Moc3RydWN0IGt2bSAqa3ZtLCBjb25zdCBzdHJ1Y3Qga3ZtX2ludHJvc3BlY3Rpb25f
aG9vayAqaG9vaykKIAliaXRtYXBfY29weShrdm1pLT5jbWRfYWxsb3dfbWFzaywgS3ZtaV9hbHdh
eXNfYWxsb3dlZF9jb21tYW5kcywKIAkJICAgIEtWTUlfTlVNX0NPTU1BTkRTKTsKIAorCWF0b21p
Y19zZXQoJmt2bWktPmV2X3NlcSwgMCk7CisKIAlrdm1pLT5rdm0gPSBrdm07CiAKIAlyZXR1cm4g
a3ZtaTsKZGlmZiAtLWdpdCBhL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9pbnQuaCBiL3Zp
cnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9pbnQuaAppbmRleCBlZjQ4NTBlOGJmYWUuLjU3YzIy
ZjIwZTc0ZiAxMDA2NDQKLS0tIGEvdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pX2ludC5oCisr
KyBiL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9pbnQuaApAQCAtMjcsNCArMjcsNyBAQCBi
b29sIGt2bWlfaXNfY29tbWFuZF9hbGxvd2VkKHN0cnVjdCBrdm1faW50cm9zcGVjdGlvbiAqa3Zt
aSwgdTE2IGlkKTsKIGJvb2wga3ZtaV9pc19ldmVudF9hbGxvd2VkKHN0cnVjdCBrdm1faW50cm9z
cGVjdGlvbiAqa3ZtaSwgdTE2IGlkKTsKIGJvb2wga3ZtaV9pc19rbm93bl9ldmVudCh1MTYgaWQp
OwogCisvKiBhcmNoICovCit2b2lkIGt2bWlfYXJjaF9pbml0X3ZjcHVfZXZlbnRzX21hc2sodW5z
aWduZWQgbG9uZyAqc3VwcG9ydGVkKTsKKwogI2VuZGlmCmRpZmYgLS1naXQgYS92aXJ0L2t2bS9p
bnRyb3NwZWN0aW9uL2t2bWlfbXNnLmMgYi92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWlfbXNn
LmMKaW5kZXggNTEzNjgxMjkwMzA1Li40YWNkYjU5NTMwMWQgMTAwNjQ0Ci0tLSBhL3ZpcnQva3Zt
L2ludHJvc3BlY3Rpb24va3ZtaV9tc2cuYworKysgYi92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2
bWlfbXNnLmMKQEAgLTE4Niw3ICsxODYsNyBAQCBzdGF0aWMgYm9vbCBpc192bV9tZXNzYWdlKHUx
NiBpZCkKIAogc3RhdGljIGJvb2wgaXNfdm1fY29tbWFuZCh1MTYgaWQpCiB7Ci0JcmV0dXJuIGlz
X3ZtX21lc3NhZ2UoaWQpOworCXJldHVybiBpc192bV9tZXNzYWdlKGlkKSAmJiBpZCAhPSBLVk1J
X1ZNX0VWRU5UOwogfQogCiBzdGF0aWMgc3RydWN0IGt2bWlfbXNnX2hkciAqa3ZtaV9tc2dfcmVj
dihzdHJ1Y3Qga3ZtX2ludHJvc3BlY3Rpb24gKmt2bWkpCkBAIC0yNjEsNyArMjYxLDQ1IEBAIGJv
b2wga3ZtaV9tc2dfcHJvY2VzcyhzdHJ1Y3Qga3ZtX2ludHJvc3BlY3Rpb24gKmt2bWkpCiAJcmV0
dXJuIGVyciA9PSAwOwogfQogCitzdGF0aWMgdm9pZCBrdm1pX2ZpbGxfZXZfbXNnX2hkcihzdHJ1
Y3Qga3ZtX2ludHJvc3BlY3Rpb24gKmt2bWksCisJCQkJIHN0cnVjdCBrdm1pX21zZ19oZHIgKm1z
Z19oZHIsCisJCQkJIHN0cnVjdCBrdm1pX2V2ZW50X2hkciAqZXZfaGRyLAorCQkJCSB1MTYgbXNn
X2lkLCB1MzIgbXNnX3NlcSwKKwkJCQkgc2l6ZV90IG1zZ19zaXplLCB1MTYgZXZfaWQpCit7CisJ
bWVtc2V0KG1zZ19oZHIsIDAsIHNpemVvZigqbXNnX2hkcikpOworCW1zZ19oZHItPmlkID0gbXNn
X2lkOworCW1zZ19oZHItPnNlcSA9IG1zZ19zZXE7CisJbXNnX2hkci0+c2l6ZSA9IG1zZ19zaXpl
IC0gc2l6ZW9mKCptc2dfaGRyKTsKKworCW1lbXNldChldl9oZHIsIDAsIHNpemVvZigqZXZfaGRy
KSk7CisJZXZfaGRyLT5ldmVudCA9IGV2X2lkOworfQorCitzdGF0aWMgdm9pZCBrdm1pX2ZpbGxf
dm1fZXZlbnQoc3RydWN0IGt2bV9pbnRyb3NwZWN0aW9uICprdm1pLAorCQkJICAgICAgIHN0cnVj
dCBrdm1pX21zZ19oZHIgKm1zZ19oZHIsCisJCQkgICAgICAgc3RydWN0IGt2bWlfZXZlbnRfaGRy
ICpldl9oZHIsCisJCQkgICAgICAgdTE2IGV2X2lkLCBzaXplX3QgbXNnX3NpemUpCit7CisJdTMy
IG1zZ19zZXEgPSBhdG9taWNfaW5jX3JldHVybigma3ZtaS0+ZXZfc2VxKTsKKworCWt2bWlfZmls
bF9ldl9tc2dfaGRyKGt2bWksIG1zZ19oZHIsIGV2X2hkciwgS1ZNSV9WTV9FVkVOVCwKKwkJCSAg
ICAgbXNnX3NlcSwgbXNnX3NpemUsIGV2X2lkKTsKK30KKwogaW50IGt2bWlfbXNnX3NlbmRfdW5o
b29rKHN0cnVjdCBrdm1faW50cm9zcGVjdGlvbiAqa3ZtaSkKIHsKLQlyZXR1cm4gLTE7CisJc3Ry
dWN0IGt2bWlfbXNnX2hkciBtc2dfaGRyOworCXN0cnVjdCBrdm1pX2V2ZW50X2hkciBldl9oZHI7
CisJc3RydWN0IGt2ZWMgdmVjW10gPSB7CisJCXsuaW92X2Jhc2UgPSAmbXNnX2hkciwgLmlvdl9s
ZW4gPSBzaXplb2YobXNnX2hkcil9LAorCQl7Lmlvdl9iYXNlID0gJmV2X2hkciwgIC5pb3ZfbGVu
ID0gc2l6ZW9mKGV2X2hkcikgfSwKKwl9OworCXNpemVfdCBtc2dfc2l6ZSA9IHNpemVvZihtc2df
aGRyKSArIHNpemVvZihldl9oZHIpOworCXNpemVfdCBuID0gQVJSQVlfU0laRSh2ZWMpOworCisJ
a3ZtaV9maWxsX3ZtX2V2ZW50KGt2bWksICZtc2dfaGRyLCAmZXZfaGRyLAorCQkJICAgS1ZNSV9W
TV9FVkVOVF9VTkhPT0ssIG1zZ19zaXplKTsKKworCXJldHVybiBrdm1pX3NvY2tfd3JpdGUoa3Zt
aSwgdmVjLCBuLCBtc2dfc2l6ZSk7CiB9Cl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fClZpcnR1YWxpemF0aW9uIG1haWxpbmcgbGlzdApWaXJ0dWFsaXphdGlv
bkBsaXN0cy5saW51eC1mb3VuZGF0aW9uLm9yZwpodHRwczovL2xpc3RzLmxpbnV4Zm91bmRhdGlv
bi5vcmcvbWFpbG1hbi9saXN0aW5mby92aXJ0dWFsaXphdGlvbg==
