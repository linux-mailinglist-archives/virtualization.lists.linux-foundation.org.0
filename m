Return-Path: <virtualization-bounces@lists.linux-foundation.org>
X-Original-To: lists.virtualization@lfdr.de
Delivered-To: lists.virtualization@lfdr.de
Received: from smtp2.osuosl.org (smtp2.osuosl.org [IPv6:2605:bc80:3010::133])
	by mail.lfdr.de (Postfix) with ESMTPS id 6DFEE4244C5
	for <lists.virtualization@lfdr.de>; Wed,  6 Oct 2021 19:41:09 +0200 (CEST)
Received: from localhost (localhost [127.0.0.1])
	by smtp2.osuosl.org (Postfix) with ESMTP id 9A99E40DA3;
	Wed,  6 Oct 2021 17:41:00 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from smtp2.osuosl.org ([127.0.0.1])
	by localhost (smtp2.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id ElIniAoW3Go7; Wed,  6 Oct 2021 17:40:59 +0000 (UTC)
Received: from lists.linuxfoundation.org (lf-lists.osuosl.org [140.211.9.56])
	by smtp2.osuosl.org (Postfix) with ESMTPS id 57B7940D99;
	Wed,  6 Oct 2021 17:40:58 +0000 (UTC)
Received: from lf-lists.osuosl.org (localhost [127.0.0.1])
	by lists.linuxfoundation.org (Postfix) with ESMTP id CACCCC0026;
	Wed,  6 Oct 2021 17:40:55 +0000 (UTC)
X-Original-To: virtualization@lists.linux-foundation.org
Delivered-To: virtualization@lists.linuxfoundation.org
Received: from smtp2.osuosl.org (smtp2.osuosl.org [140.211.166.133])
 by lists.linuxfoundation.org (Postfix) with ESMTP id 06CCAC0011
 for <virtualization@lists.linux-foundation.org>;
 Wed,  6 Oct 2021 17:40:50 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by smtp2.osuosl.org (Postfix) with ESMTP id 675EF40886
 for <virtualization@lists.linux-foundation.org>;
 Wed,  6 Oct 2021 17:40:46 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from smtp2.osuosl.org ([127.0.0.1])
 by localhost (smtp2.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id qadiCD1JIMM6
 for <virtualization@lists.linux-foundation.org>;
 Wed,  6 Oct 2021 17:40:45 +0000 (UTC)
X-Greylist: from auto-whitelisted by SQLgrey-1.8.0
Received: from mx01.bbu.dsd.mx.bitdefender.com
 (mx01.bbu.dsd.mx.bitdefender.com [91.199.104.161])
 by smtp2.osuosl.org (Postfix) with ESMTPS id B3D0E407EA
 for <virtualization@lists.linux-foundation.org>;
 Wed,  6 Oct 2021 17:40:44 +0000 (UTC)
Received: from smtp.bitdefender.com (smtp01.buh.bitdefender.com [10.17.80.75])
 by mx01.bbu.dsd.mx.bitdefender.com (Postfix) with ESMTPS id
 8B5D9305D35B; Wed,  6 Oct 2021 20:31:16 +0300 (EEST)
Received: from localhost (unknown [91.199.104.28])
 by smtp.bitdefender.com (Postfix) with ESMTPSA id 6CA523064495;
 Wed,  6 Oct 2021 20:31:16 +0300 (EEST)
X-Is-Junk-Enabled: fGZTSsP0qEJE2AIKtlSuFiRRwg9xyHmJ
From: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>
To: kvm@vger.kernel.org
Subject: [PATCH v12 54/77] KVM: introspection: add KVMI_VCPU_EVENT_BREAKPOINT
Date: Wed,  6 Oct 2021 20:30:50 +0300
Message-Id: <20211006173113.26445-55-alazar@bitdefender.com>
In-Reply-To: <20211006173113.26445-1-alazar@bitdefender.com>
References: <20211006173113.26445-1-alazar@bitdefender.com>
MIME-Version: 1.0
Cc: Tamas K Lengyel <tamas@tklengyel.com>, Wanpeng Li <wanpengli@tencent.com>,
 =?UTF-8?q?Nicu=C8=99or=20C=C3=AE=C8=9Bu?= <nicu.citu@icloud.com>,
 Sean Christopherson <seanjc@google.com>, Joerg Roedel <joro@8bytes.org>,
 virtualization@lists.linux-foundation.org,
 =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>,
 Mathieu Tarral <mathieu.tarral@protonmail.com>,
 Paolo Bonzini <pbonzini@redhat.com>,
 =?UTF-8?q?Mihai=20Don=C8=9Bu?= <mdontu@bitdefender.com>,
 Jim Mattson <jmattson@google.com>
X-BeenThere: virtualization@lists.linux-foundation.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Linux virtualization <virtualization.lists.linux-foundation.org>
List-Unsubscribe: <https://lists.linuxfoundation.org/mailman/options/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=unsubscribe>
List-Archive: <http://lists.linuxfoundation.org/pipermail/virtualization/>
List-Post: <mailto:virtualization@lists.linux-foundation.org>
List-Help: <mailto:virtualization-request@lists.linux-foundation.org?subject=help>
List-Subscribe: <https://lists.linuxfoundation.org/mailman/listinfo/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: virtualization-bounces@lists.linux-foundation.org
Sender: "Virtualization" <virtualization-bounces@lists.linux-foundation.org>

RnJvbTogTWloYWkgRG9uyJt1IDxtZG9udHVAYml0ZGVmZW5kZXIuY29tPgoKVGhpcyBldmVudCBp
cyBzZW50IHdoZW4gYSBicmVha3BvaW50IHdhcyByZWFjaGVkLgoKVGhlIGludHJvc3BlY3Rpb24g
dG9vbCBjYW4gcGxhY2UgYnJlYWtwb2ludHMgYW5kIHVzZSB0aGVtIGFzIG5vdGlmaWNhdGlvbgpm
b3Igd2hlbiB0aGUgT1Mgb3IgYW4gYXBwbGljYXRpb24gaGFzIHJlYWNoZWQgYSBjZXJ0YWluIHN0
YXRlIG9yIGlzCnRyeWluZyB0byBwZXJmb3JtIGEgY2VydGFpbiBvcGVyYXRpb24gKGVnLiBjcmVh
dGUgYSBwcm9jZXNzKS4KClNpZ25lZC1vZmYtYnk6IE1paGFpIERvbsibdSA8bWRvbnR1QGJpdGRl
ZmVuZGVyLmNvbT4KQ28tZGV2ZWxvcGVkLWJ5OiBOaWN1yJlvciBDw67Im3UgPG5pY3UuY2l0dUBp
Y2xvdWQuY29tPgpTaWduZWQtb2ZmLWJ5OiBOaWN1yJlvciBDw67Im3UgPG5pY3UuY2l0dUBpY2xv
dWQuY29tPgpDby1kZXZlbG9wZWQtYnk6IEFkYWxiZXJ0IExhesSDciA8YWxhemFyQGJpdGRlZmVu
ZGVyLmNvbT4KU2lnbmVkLW9mZi1ieTogQWRhbGJlcnQgTGF6xINyIDxhbGF6YXJAYml0ZGVmZW5k
ZXIuY29tPgotLS0KIERvY3VtZW50YXRpb24vdmlydC9rdm0va3ZtaS5yc3QgICAgICAgICAgICAg
ICB8IDQ4ICsrKysrKysrKysrKysrKysrKwogYXJjaC94ODYva3ZtL2t2bWkuYyAgICAgICAgICAg
ICAgICAgICAgICAgICAgIHwgNTAgKysrKysrKysrKysrKysrKysrKwogYXJjaC94ODYva3ZtL3N2
bS9zdm0uYyAgICAgICAgICAgICAgICAgICAgICAgIHwgMzQgKysrKysrKysrKysrKwogYXJjaC94
ODYva3ZtL3ZteC92bXguYyAgICAgICAgICAgICAgICAgICAgICAgIHwgMTMgKysrKy0KIGluY2x1
ZGUvbGludXgva3ZtaV9ob3N0LmggICAgICAgICAgICAgICAgICAgICB8ICAzICsrCiBpbmNsdWRl
L3VhcGkvbGludXgva3ZtaS5oICAgICAgICAgICAgICAgICAgICAgfCAxMSArKystCiAuLi4vdGVz
dGluZy9zZWxmdGVzdHMva3ZtL3g4Nl82NC9rdm1pX3Rlc3QuYyAgfCA0NiArKysrKysrKysrKysr
KysrKwogdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pLmMgICAgICAgICAgICAgICAgIHwgMjUg
KysrKysrKysrKwogdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pX2ludC5oICAgICAgICAgICAg
IHwgIDQgKysKIHZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9tc2cuYyAgICAgICAgICAgICB8
IDE4ICsrKysrKysKIDEwIGZpbGVzIGNoYW5nZWQsIDI0OCBpbnNlcnRpb25zKCspLCA0IGRlbGV0
aW9ucygtKQoKZGlmZiAtLWdpdCBhL0RvY3VtZW50YXRpb24vdmlydC9rdm0va3ZtaS5yc3QgYi9E
b2N1bWVudGF0aW9uL3ZpcnQva3ZtL2t2bWkucnN0CmluZGV4IDBmYWNkYzQ1OTVlZC4uNTZjZjY0
ZjMyNzQwIDEwMDY0NAotLS0gYS9Eb2N1bWVudGF0aW9uL3ZpcnQva3ZtL2t2bWkucnN0CisrKyBi
L0RvY3VtZW50YXRpb24vdmlydC9rdm0va3ZtaS5yc3QKQEAgLTUzOCw2ICs1MzgsNyBAQCBjb21t
YW5kKSBiZWZvcmUgcmV0dXJuaW5nIHRvIGd1ZXN0LgogRW5hYmxlcy9kaXNhYmxlcyB2Q1BVIGlu
dHJvc3BlY3Rpb24gZXZlbnRzLiBUaGlzIGNvbW1hbmQgY2FuIGJlIHVzZWQgd2l0aAogdGhlIGZv
bGxvd2luZyBldmVudHM6OgogCisJS1ZNSV9WQ1BVX0VWRU5UX0JSRUFLUE9JTlQKIAlLVk1JX1ZD
UFVfRVZFTlRfSFlQRVJDQUxMCiAKIFdoZW4gYW4gZXZlbnQgaXMgZW5hYmxlZCwgdGhlIGludHJv
c3BlY3Rpb24gdG9vbCBpcyBub3RpZmllZCBhbmQKQEAgLTU1OSw2ICs1NjAsOSBAQCB0aGUgKktW
TUlfVk1fQ09OVFJPTF9FVkVOVFMqIGNvbW1hbmQuCiAqIC1LVk1fRUlOVkFMIC0gdGhlIGV2ZW50
IElEIGlzIHVua25vd24gKHVzZSAqS1ZNSV9WTV9DSEVDS19FVkVOVCogZmlyc3QpCiAqIC1LVk1f
RVBFUk0gLSB0aGUgYWNjZXNzIGlzIGRpc2FsbG93ZWQgKHVzZSAqS1ZNSV9WTV9DSEVDS19FVkVO
VCogZmlyc3QpCiAqIC1LVk1fRUFHQUlOIC0gdGhlIHNlbGVjdGVkIHZDUFUgY2FuJ3QgYmUgaW50
cm9zcGVjdGVkIHlldAorKiAtS1ZNX0VCVVNZIC0gdGhlIGV2ZW50IGNhbid0IGJlIGludGVyY2Vw
dGVkIHJpZ2h0IG5vdworICAgICAgICAgICAgICAgKGUuZy4gS1ZNSV9WQ1BVX0VWRU5UX0JSRUFL
UE9JTlQgaWYgdGhlICNCUCBldmVudAorICAgICAgICAgICAgICAgIGlzIGFscmVhZHkgaW50ZXJj
ZXB0ZWQgYnkgdXNlcnNwYWNlKQogCiAxMS4gS1ZNSV9WQ1BVX0dFVF9SRUdJU1RFUlMKIC0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLQpAQCAtODE3LDMgKzgyMSw0NyBAQCBmb3VuZCBkdXJpbmcg
YSBzY2FuLgogCiBUaGUgbW9zdCB1c2VmdWwgcmVnaXN0ZXJzIGRlc2NyaWJpbmcgdGhlIHZDUFUg
c3RhdGUgY2FuIGJlIHJlYWQgZnJvbQogYGBrdm1pX3ZjcHVfZXZlbnQuYXJjaC5yZWdzYGAuCisK
KzQuIEtWTUlfVkNQVV9FVkVOVF9CUkVBS1BPSU5UCistLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLQorCis6QXJjaGl0ZWN0dXJlczogeDg2Cis6VmVyc2lvbnM6ID49IDEKKzpBY3Rpb25zOiBD
T05USU5VRSwgQ1JBU0gsIFJFVFJZCis6UGFyYW1ldGVyczoKKworOjoKKworCXN0cnVjdCBrdm1p
X2V2ZW50X2hkcjsKKwlzdHJ1Y3Qga3ZtaV92Y3B1X2V2ZW50OworCXN0cnVjdCBrdm1pX3ZjcHVf
ZXZlbnRfYnJlYWtwb2ludCB7CisJCV9fdTY0IGdwYTsKKwkJX191OCBpbnNuX2xlbjsKKwkJX191
OCBwYWRkaW5nWzddOworCX07CisKKzpSZXR1cm5zOgorCis6OgorCisJc3RydWN0IGt2bWlfdmNw
dV9oZHI7CisJc3RydWN0IGt2bWlfdmNwdV9ldmVudF9yZXBseTsKKworVGhpcyBldmVudCBpcyBz
ZW50IHdoZW4gYSBicmVha3BvaW50IHdhcyByZWFjaGVkIGFuZCB0aGUgaW50cm9zcGVjdGlvbiBo
YXMKK2JlZW4gZW5hYmxlZCBmb3IgdGhpcyBldmVudCAoc2VlICpLVk1JX1ZDUFVfQ09OVFJPTF9F
VkVOVFMqKS4KKworU29tZSBvZiB0aGVzZSBicmVha3BvaW50cyBjb3VsZCBoYXZlIGJlZW4gaW5q
ZWN0ZWQgYnkgdGhlIGludHJvc3BlY3Rpb24gdG9vbCwKK3BsYWNlZCBpbiB0aGUgc2xhY2sgc3Bh
Y2Ugb2YgdmFyaW91cyBmdW5jdGlvbnMgYW5kIHVzZWQgYXMgbm90aWZpY2F0aW9uCitmb3Igd2hl
biB0aGUgT1Mgb3IgYW4gYXBwbGljYXRpb24gaGFzIHJlYWNoZWQgYSBjZXJ0YWluIHN0YXRlIG9y
IGlzCit0cnlpbmcgdG8gcGVyZm9ybSBhIGNlcnRhaW4gb3BlcmF0aW9uIChsaWtlIGNyZWF0aW5n
IGEgcHJvY2VzcykuCisKK2Bga3ZtaV92Y3B1X2V2ZW50YGAgKHdpdGggdGhlIHZDUFUgc3RhdGUp
LCB0aGUgZ3Vlc3QgcGh5c2ljYWwgYWRkcmVzcworKGBgZ3BhYGApIHdoZXJlIHRoZSBicmVha3Bv
aW50IGluc3RydWN0aW9uIGlzIHBsYWNlZCBhbmQgdGhlIGJyZWFrcG9pbnQKK2luc3RydWN0aW9u
IGxlbmd0aCAoYGBpbnNuX2xlbmBgKSBhcmUgc2VudCB0byB0aGUgaW50cm9zcGVjdGlvbiB0b29s
LgorCitUaGUgKlJFVFJZKiBhY3Rpb24gaXMgdXNlZCBieSB0aGUgaW50cm9zcGVjdGlvbiB0b29s
IGZvciBpdHMgb3duCiticmVha3BvaW50cy4gSW4gbW9zdCBjYXNlcywgdGhlIHRvb2wgd2lsbCBj
aGFuZ2UgdGhlIGluc3RydWN0aW9uIHBvaW50ZXIKK2JlZm9yZSByZXR1cm5pbmcgdGhpcyBhY3Rp
b24uCisKK1RoZSAqQ09OVElOVUUqIGFjdGlvbiB3aWxsIGNhdXNlIHRoZSBicmVha3BvaW50IGV4
Y2VwdGlvbiB0byBiZSByZWluamVjdGVkCisodGhlIE9TIHdpbGwgaGFuZGxlIGl0KS4KZGlmZiAt
LWdpdCBhL2FyY2gveDg2L2t2bS9rdm1pLmMgYi9hcmNoL3g4Ni9rdm0va3ZtaS5jCmluZGV4IDVk
OTg5MTI5OWE1Ni4uZTQzNThiYzNmMDlhIDEwMDY0NAotLS0gYS9hcmNoL3g4Ni9rdm0va3ZtaS5j
CisrKyBiL2FyY2gveDg2L2t2bS9rdm1pLmMKQEAgLTExLDYgKzExLDcgQEAKIAogdm9pZCBrdm1p
X2FyY2hfaW5pdF92Y3B1X2V2ZW50c19tYXNrKHVuc2lnbmVkIGxvbmcgKnN1cHBvcnRlZCkKIHsK
KwlzZXRfYml0KEtWTUlfVkNQVV9FVkVOVF9CUkVBS1BPSU5ULCBzdXBwb3J0ZWQpOwogCXNldF9i
aXQoS1ZNSV9WQ1BVX0VWRU5UX0hZUEVSQ0FMTCwgc3VwcG9ydGVkKTsKIH0KIApAQCAtMTYwLDMg
KzE2MSw1MiBAQCBib29sIGt2bWlfYXJjaF9pc19hZ2VudF9oeXBlcmNhbGwoc3RydWN0IGt2bV92
Y3B1ICp2Y3B1KQogCXJldHVybiAoc3ViZnVuYzEgPT0gS1ZNX0hDX1hFTl9IVk1fT1BfR1VFU1Rf
UkVRVUVTVF9WTV9FVkVOVAogCQkmJiBzdWJmdW5jMiA9PSAwKTsKIH0KKworc3RhdGljIGludCBr
dm1pX2NvbnRyb2xfYnBfaW50ZXJjZXB0KHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwgYm9vbCBlbmFi
bGUpCit7CisJc3RydWN0IGt2bV9ndWVzdF9kZWJ1ZyBkYmcgPSB7fTsKKwlpbnQgZXJyID0gMDsK
KworCWlmIChlbmFibGUpCisJCWRiZy5jb250cm9sID0gS1ZNX0dVRVNUREJHX0VOQUJMRSB8IEtW
TV9HVUVTVERCR19VU0VfU1dfQlA7CisKKwllcnIgPSBrdm1fYXJjaF92Y3B1X3NldF9ndWVzdF9k
ZWJ1Zyh2Y3B1LCAmZGJnKTsKKworCXJldHVybiBlcnI7Cit9CisKK2ludCBrdm1pX2FyY2hfY21k
X2NvbnRyb2xfaW50ZXJjZXB0KHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwKKwkJCQkgICAgdW5zaWdu
ZWQgaW50IGV2ZW50X2lkLCBib29sIGVuYWJsZSkKK3sKKwlpbnQgZXJyID0gMDsKKworCXN3aXRj
aCAoZXZlbnRfaWQpIHsKKwljYXNlIEtWTUlfVkNQVV9FVkVOVF9CUkVBS1BPSU5UOgorCQllcnIg
PSBrdm1pX2NvbnRyb2xfYnBfaW50ZXJjZXB0KHZjcHUsIGVuYWJsZSk7CisJCWJyZWFrOworCWRl
ZmF1bHQ6CisJCWJyZWFrOworCX0KKworCXJldHVybiBlcnI7Cit9CisKK3ZvaWQga3ZtaV9hcmNo
X2JyZWFrcG9pbnRfZXZlbnQoc3RydWN0IGt2bV92Y3B1ICp2Y3B1LCB1NjQgZ3ZhLCB1OCBpbnNu
X2xlbikKK3sKKwl1MzIgYWN0aW9uOworCXU2NCBncGE7CisKKwlncGEgPSBrdm1fbW11X2d2YV90
b19ncGFfc3lzdGVtKHZjcHUsIGd2YSwgMCwgTlVMTCk7CisKKwlhY3Rpb24gPSBrdm1pX21zZ19z
ZW5kX3ZjcHVfYnAodmNwdSwgZ3BhLCBpbnNuX2xlbik7CisJc3dpdGNoIChhY3Rpb24pIHsKKwlj
YXNlIEtWTUlfRVZFTlRfQUNUSU9OX0NPTlRJTlVFOgorCQlrdm1fcXVldWVfZXhjZXB0aW9uKHZj
cHUsIEJQX1ZFQ1RPUik7CisJCWJyZWFrOworCWNhc2UgS1ZNSV9FVkVOVF9BQ1RJT05fUkVUUlk6
CisJCS8qIHJpcCB3YXMgbW9zdCBsaWtlbHkgYWRqdXN0ZWQgcGFzdCB0aGUgSU5UIDMgaW5zdHJ1
Y3Rpb24gKi8KKwkJYnJlYWs7CisJZGVmYXVsdDoKKwkJa3ZtaV9oYW5kbGVfY29tbW9uX2V2ZW50
X2FjdGlvbnModmNwdSwgYWN0aW9uKTsKKwl9Cit9CmRpZmYgLS1naXQgYS9hcmNoL3g4Ni9rdm0v
c3ZtL3N2bS5jIGIvYXJjaC94ODYva3ZtL3N2bS9zdm0uYwppbmRleCA1NDA5NDM4NzY2ZWUuLjg0
ZjRmNTliYTcwMyAxMDA2NDQKLS0tIGEvYXJjaC94ODYva3ZtL3N2bS9zdm0uYworKysgYi9hcmNo
L3g4Ni9rdm0vc3ZtL3N2bS5jCkBAIC0yNSw2ICsyNSw3IEBACiAjaW5jbHVkZSA8bGludXgvcGFn
ZW1hcC5oPgogI2luY2x1ZGUgPGxpbnV4L3N3YXAuaD4KICNpbmNsdWRlIDxsaW51eC9yd3NlbS5o
PgorI2luY2x1ZGUgPGxpbnV4L2t2bWlfaG9zdC5oPgogCiAjaW5jbHVkZSA8YXNtL2FwaWMuaD4K
ICNpbmNsdWRlIDxhc20vcGVyZl9ldmVudC5oPgpAQCAtMjExOSwxMSArMjEyMCw0NCBAQCBzdGF0
aWMgaW50IGRiX2ludGVyY2VwdGlvbihzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUpCiAJcmV0dXJuIDE7
CiB9CiAKK3N0YXRpYyB1bnNpZ25lZCBpbnQgc3ZtX2dldF9pbnN0cnVjdGlvbl9sZW4oc3RydWN0
IGt2bV92Y3B1ICp2Y3B1KQoreworCXN0cnVjdCB2Y3B1X3N2bSAqc3ZtID0gdG9fc3ZtKHZjcHUp
OworCXVuc2lnbmVkIGxvbmcgcmlwID0ga3ZtX3JpcF9yZWFkKHZjcHUpOworCXVuc2lnbmVkIGxv
bmcgbmV4dF9yaXAgPSAwOworCXVuc2lnbmVkIGludCBpbnNuX2xlbjsKKworCWlmIChzdGF0aWNf
Y3B1X2hhcyhYODZfRkVBVFVSRV9OUklQUykpCisJCW5leHRfcmlwID0gc3ZtLT52bWNiLT5jb250
cm9sLm5leHRfcmlwOworCisJaWYgKCFuZXh0X3JpcCkgeworCQlpZiAoIWt2bV9lbXVsYXRlX2lu
c3RydWN0aW9uKHZjcHUsIEVNVUxUWVBFX1NLSVApKQorCQkJcmV0dXJuIDA7CisKKwkJbmV4dF9y
aXAgPSBrdm1fcmlwX3JlYWQodmNwdSk7CisJCWt2bV9yaXBfd3JpdGUodmNwdSwgcmlwKTsKKwl9
CisKKwlpbnNuX2xlbiA9IG5leHRfcmlwIC0gcmlwOworCWlmIChpbnNuX2xlbiA+IE1BWF9JTlNU
X1NJWkUpIHsKKwkJcHJfZXJyKCIlczogaXAgMHglbHggbmV4dCAweCVseFxuIiwKKwkJICAgICAg
IF9fZnVuY19fLCByaXAsIG5leHRfcmlwKTsKKwkJcmV0dXJuIDA7CisJfQorCisJcmV0dXJuIGlu
c25fbGVuOworfQorCiBzdGF0aWMgaW50IGJwX2ludGVyY2VwdGlvbihzdHJ1Y3Qga3ZtX3ZjcHUg
KnZjcHUpCiB7CiAJc3RydWN0IHZjcHVfc3ZtICpzdm0gPSB0b19zdm0odmNwdSk7CiAJc3RydWN0
IGt2bV9ydW4gKmt2bV9ydW4gPSB2Y3B1LT5ydW47CiAKKwlpZiAoIWt2bWlfYnJlYWtwb2ludF9l
dmVudCh2Y3B1LCBzdm0tPnZtY2ItPnNhdmUuY3MuYmFzZSArCisJCQkJCSBzdm0tPnZtY2ItPnNh
dmUucmlwLAorCQkJCSAgIHN2bV9nZXRfaW5zdHJ1Y3Rpb25fbGVuKHZjcHUpKSkKKwkJcmV0dXJu
IDE7CisKIAlrdm1fcnVuLT5leGl0X3JlYXNvbiA9IEtWTV9FWElUX0RFQlVHOwogCWt2bV9ydW4t
PmRlYnVnLmFyY2gucGMgPSBzdm0tPnZtY2ItPnNhdmUuY3MuYmFzZSArIHN2bS0+dm1jYi0+c2F2
ZS5yaXA7CiAJa3ZtX3J1bi0+ZGVidWcuYXJjaC5leGNlcHRpb24gPSBCUF9WRUNUT1I7CmRpZmYg
LS1naXQgYS9hcmNoL3g4Ni9rdm0vdm14L3ZteC5jIGIvYXJjaC94ODYva3ZtL3ZteC92bXguYwpp
bmRleCA4NmZhODQyMDVkMjMuLmFjMWQ3NTA0MjQ3ZiAxMDA2NDQKLS0tIGEvYXJjaC94ODYva3Zt
L3ZteC92bXguYworKysgYi9hcmNoL3g4Ni9rdm0vdm14L3ZteC5jCkBAIC0yOCw2ICsyOCw3IEBA
CiAjaW5jbHVkZSA8bGludXgvdGJvb3QuaD4KICNpbmNsdWRlIDxsaW51eC90cmFjZV9ldmVudHMu
aD4KICNpbmNsdWRlIDxsaW51eC9lbnRyeS1rdm0uaD4KKyNpbmNsdWRlIDxsaW51eC9rdm1pX2hv
c3QuaD4KIAogI2luY2x1ZGUgPGFzbS9hcGljLmg+CiAjaW5jbHVkZSA8YXNtL2FzbS5oPgpAQCAt
NDkyMSw3ICs0OTIyLDkgQEAgc3RhdGljIGludCBoYW5kbGVfZXhjZXB0aW9uX25taShzdHJ1Y3Qg
a3ZtX3ZjcHUgKnZjcHUpCiAJCWt2bV9ydW4tPmRlYnVnLmFyY2guZHI2ID0gZHI2IHwgRFI2X0FD
VElWRV9MT1c7CiAJCWt2bV9ydW4tPmRlYnVnLmFyY2guZHI3ID0gdm1jc19yZWFkbChHVUVTVF9E
UjcpOwogCQlmYWxsdGhyb3VnaDsKLQljYXNlIEJQX1ZFQ1RPUjoKKwljYXNlIEJQX1ZFQ1RPUjog
eworCQl1bnNpZ25lZCBsb25nIGd2YSA9IGt2bV9nZXRfbGluZWFyX3JpcCh2Y3B1KTsKKwogCQkv
KgogCQkgKiBVcGRhdGUgaW5zdHJ1Y3Rpb24gbGVuZ3RoIGFzIHdlIG1heSByZWluamVjdCAjQlAg
ZnJvbQogCQkgKiB1c2VyIHNwYWNlIHdoaWxlIGluIGd1ZXN0IGRlYnVnZ2luZyBtb2RlLiBSZWFk
aW5nIGl0IGZvcgpAQCAtNDkyOSwxMCArNDkzMiwxNiBAQCBzdGF0aWMgaW50IGhhbmRsZV9leGNl
cHRpb25fbm1pKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSkKIAkJICovCiAJCXZteC0+dmNwdS5hcmNo
LmV2ZW50X2V4aXRfaW5zdF9sZW4gPQogCQkJdm1jc19yZWFkMzIoVk1fRVhJVF9JTlNUUlVDVElP
Tl9MRU4pOworCisJCWlmICgha3ZtaV9icmVha3BvaW50X2V2ZW50KHZjcHUsIGd2YSwKKwkJCQkJ
ICAgdm14LT52Y3B1LmFyY2guZXZlbnRfZXhpdF9pbnN0X2xlbikpCisJCQlyZXR1cm4gMTsKKwog
CQlrdm1fcnVuLT5leGl0X3JlYXNvbiA9IEtWTV9FWElUX0RFQlVHOwotCQlrdm1fcnVuLT5kZWJ1
Zy5hcmNoLnBjID0ga3ZtX2dldF9saW5lYXJfcmlwKHZjcHUpOworCQlrdm1fcnVuLT5kZWJ1Zy5h
cmNoLnBjID0gZ3ZhOwogCQlrdm1fcnVuLT5kZWJ1Zy5hcmNoLmV4Y2VwdGlvbiA9IGV4X25vOwog
CQlicmVhazsKKwl9CiAJY2FzZSBBQ19WRUNUT1I6CiAJCWlmICh2bXhfZ3Vlc3RfaW5qZWN0X2Fj
KHZjcHUpKSB7CiAJCQlrdm1fcXVldWVfZXhjZXB0aW9uX2UodmNwdSwgQUNfVkVDVE9SLCBlcnJv
cl9jb2RlKTsKZGlmZiAtLWdpdCBhL2luY2x1ZGUvbGludXgva3ZtaV9ob3N0LmggYi9pbmNsdWRl
L2xpbnV4L2t2bWlfaG9zdC5oCmluZGV4IDFmYjc3NWIwZGUzMy4uMzBiNzI2OTQ2OGRkIDEwMDY0
NAotLS0gYS9pbmNsdWRlL2xpbnV4L2t2bWlfaG9zdC5oCisrKyBiL2luY2x1ZGUvbGludXgva3Zt
aV9ob3N0LmgKQEAgLTcwLDYgKzcwLDcgQEAgaW50IGt2bWlfaW9jdGxfcHJldW5ob29rKHN0cnVj
dCBrdm0gKmt2bSk7CiAKIHZvaWQga3ZtaV9oYW5kbGVfcmVxdWVzdHMoc3RydWN0IGt2bV92Y3B1
ICp2Y3B1KTsKIGJvb2wga3ZtaV9oeXBlcmNhbGxfZXZlbnQoc3RydWN0IGt2bV92Y3B1ICp2Y3B1
KTsKK2Jvb2wga3ZtaV9icmVha3BvaW50X2V2ZW50KHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwgdTY0
IGd2YSwgdTggaW5zbl9sZW4pOwogCiAjZWxzZQogCkBAIC04Miw2ICs4Myw4IEBAIHN0YXRpYyBp
bmxpbmUgdm9pZCBrdm1pX3ZjcHVfdW5pbml0KHN0cnVjdCBrdm1fdmNwdSAqdmNwdSkgeyB9CiAK
IHN0YXRpYyBpbmxpbmUgdm9pZCBrdm1pX2hhbmRsZV9yZXF1ZXN0cyhzdHJ1Y3Qga3ZtX3ZjcHUg
KnZjcHUpIHsgfQogc3RhdGljIGlubGluZSBib29sIGt2bWlfaHlwZXJjYWxsX2V2ZW50KHN0cnVj
dCBrdm1fdmNwdSAqdmNwdSkgeyByZXR1cm4gZmFsc2U7IH0KK3N0YXRpYyBpbmxpbmUgYm9vbCBr
dm1pX2JyZWFrcG9pbnRfZXZlbnQoc3RydWN0IGt2bV92Y3B1ICp2Y3B1LCB1NjQgZ3ZhLAorCQkJ
CQkgdTggaW5zbl9sZW4pIHsgcmV0dXJuIHRydWU7IH0KIAogI2VuZGlmIC8qIENPTkZJR19LVk1f
SU5UUk9TUEVDVElPTiAqLwogCmRpZmYgLS1naXQgYS9pbmNsdWRlL3VhcGkvbGludXgva3ZtaS5o
IGIvaW5jbHVkZS91YXBpL2xpbnV4L2t2bWkuaAppbmRleCAzZGZjMzQ4NmNjNDYuLmVhNjZmM2Y4
MDNlNyAxMDA2NDQKLS0tIGEvaW5jbHVkZS91YXBpL2xpbnV4L2t2bWkuaAorKysgYi9pbmNsdWRl
L3VhcGkvbGludXgva3ZtaS5oCkBAIC01NCw4ICs1NCw5IEBAIGVudW0gewogfTsKIAogZW51bSB7
Ci0JS1ZNSV9WQ1BVX0VWRU5UX1BBVVNFICAgICA9IEtWTUlfVkNQVV9FVkVOVF9JRCgwKSwKLQlL
Vk1JX1ZDUFVfRVZFTlRfSFlQRVJDQUxMID0gS1ZNSV9WQ1BVX0VWRU5UX0lEKDEpLAorCUtWTUlf
VkNQVV9FVkVOVF9QQVVTRSAgICAgID0gS1ZNSV9WQ1BVX0VWRU5UX0lEKDApLAorCUtWTUlfVkNQ
VV9FVkVOVF9IWVBFUkNBTEwgID0gS1ZNSV9WQ1BVX0VWRU5UX0lEKDEpLAorCUtWTUlfVkNQVV9F
VkVOVF9CUkVBS1BPSU5UID0gS1ZNSV9WQ1BVX0VWRU5UX0lEKDIpLAogCiAJS1ZNSV9ORVhUX1ZD
UFVfRVZFTlQKIH07CkBAIC0xNjAsNCArMTYxLDEwIEBAIHN0cnVjdCBrdm1pX3ZjcHVfY29udHJv
bF9ldmVudHMgewogCV9fdTMyIHBhZGRpbmcyOwogfTsKIAorc3RydWN0IGt2bWlfdmNwdV9ldmVu
dF9icmVha3BvaW50IHsKKwlfX3U2NCBncGE7CisJX191OCBpbnNuX2xlbjsKKwlfX3U4IHBhZGRp
bmdbN107Cit9OworCiAjZW5kaWYgLyogX1VBUElfX0xJTlVYX0tWTUlfSCAqLwpkaWZmIC0tZ2l0
IGEvdG9vbHMvdGVzdGluZy9zZWxmdGVzdHMva3ZtL3g4Nl82NC9rdm1pX3Rlc3QuYyBiL3Rvb2xz
L3Rlc3Rpbmcvc2VsZnRlc3RzL2t2bS94ODZfNjQva3ZtaV90ZXN0LmMKaW5kZXggOTM1NzMzMDc4
ODhmLi42ZGQ5YWFiNDYxZTggMTAwNjQ0Ci0tLSBhL3Rvb2xzL3Rlc3Rpbmcvc2VsZnRlc3RzL2t2
bS94ODZfNjQva3ZtaV90ZXN0LmMKKysrIGIvdG9vbHMvdGVzdGluZy9zZWxmdGVzdHMva3ZtL3g4
Nl82NC9rdm1pX3Rlc3QuYwpAQCAtNTMsNiArNTMsNyBAQCBzdHJ1Y3QgdmNwdV93b3JrZXJfZGF0
YSB7CiAKIGVudW0gewogCUdVRVNUX1RFU1RfTk9PUCA9IDAsCisJR1VFU1RfVEVTVF9CUCwKIAlH
VUVTVF9URVNUX0hZUEVSQ0FMTCwKIH07CiAKQEAgLTcxLDYgKzcyLDExIEBAIHN0YXRpYyBpbnQg
Z3Vlc3RfdGVzdF9pZCh2b2lkKQogCXJldHVybiBSRUFEX09OQ0UodGVzdF9pZCk7CiB9CiAKK3N0
YXRpYyB2b2lkIGd1ZXN0X2JwX3Rlc3Qodm9pZCkKK3sKKwlhc20gdm9sYXRpbGUoImludDMiKTsK
K30KKwogc3RhdGljIHZvaWQgZ3Vlc3RfaHlwZXJjYWxsX3Rlc3Qodm9pZCkKIHsKIAlhc20gdm9s
YXRpbGUoIm1vdiAkMzQsICVyYXgiKTsKQEAgLTg1LDYgKzkxLDkgQEAgc3RhdGljIHZvaWQgZ3Vl
c3RfY29kZSh2b2lkKQogCQlzd2l0Y2ggKGd1ZXN0X3Rlc3RfaWQoKSkgewogCQljYXNlIEdVRVNU
X1RFU1RfTk9PUDoKIAkJCWJyZWFrOworCQljYXNlIEdVRVNUX1RFU1RfQlA6CisJCQlndWVzdF9i
cF90ZXN0KCk7CisJCQlicmVhazsKIAkJY2FzZSBHVUVTVF9URVNUX0hZUEVSQ0FMTDoKIAkJCWd1
ZXN0X2h5cGVyY2FsbF90ZXN0KCk7CiAJCQlicmVhazsKQEAgLTEwMzIsNiArMTA0MSw0MiBAQCBz
dGF0aWMgdm9pZCB0ZXN0X2V2ZW50X2h5cGVyY2FsbChzdHJ1Y3Qga3ZtX3ZtICp2bSkKIAlkaXNh
YmxlX3ZjcHVfZXZlbnQodm0sIGV2ZW50X2lkKTsKIH0KIAorc3RhdGljIHZvaWQgdGVzdF9ldmVu
dF9icmVha3BvaW50KHN0cnVjdCBrdm1fdm0gKnZtKQoreworCXN0cnVjdCB2Y3B1X3dvcmtlcl9k
YXRhIGRhdGEgPSB7CisJCS52bSA9IHZtLAorCQkudmNwdV9pZCA9IFZDUFVfSUQsCisJCS50ZXN0
X2lkID0gR1VFU1RfVEVTVF9CUCwKKwl9OworCXN0cnVjdCBrdm1pX21zZ19oZHIgaGRyOworCXN0
cnVjdCB7CisJCXN0cnVjdCB2Y3B1X2V2ZW50IHZjcHVfZXY7CisJCXN0cnVjdCBrdm1pX3ZjcHVf
ZXZlbnRfYnJlYWtwb2ludCBicDsKKwl9IGV2OworCXN0cnVjdCB2Y3B1X3JlcGx5IHJwbCA9IHt9
OworCV9fdTE2IGV2ZW50X2lkID0gS1ZNSV9WQ1BVX0VWRU5UX0JSRUFLUE9JTlQ7CisJcHRocmVh
ZF90IHZjcHVfdGhyZWFkOworCisJZW5hYmxlX3ZjcHVfZXZlbnQodm0sIGV2ZW50X2lkKTsKKwor
CXZjcHVfdGhyZWFkID0gc3RhcnRfdmNwdV93b3JrZXIoJmRhdGEpOworCisJcmVjZWl2ZV92Y3B1
X2V2ZW50KCZoZHIsICZldi52Y3B1X2V2LCBzaXplb2YoZXYpLCBldmVudF9pZCk7CisKKwlwcl9k
ZWJ1ZygiQnJlYWtwb2ludCBldmVudCwgcmlwIDB4JWxseCwgbGVuICV1XG4iLAorCQlldi52Y3B1
X2V2LmNvbW1vbi5hcmNoLnJlZ3MucmlwLCBldi5icC5pbnNuX2xlbik7CisKKwlldi52Y3B1X2V2
LmNvbW1vbi5hcmNoLnJlZ3MucmlwICs9IGV2LmJwLmluc25fbGVuOworCV9fc2V0X3JlZ2lzdGVy
cyh2bSwgJmV2LnZjcHVfZXYuY29tbW9uLmFyY2gucmVncyk7CisKKwlyZXBseV90b19ldmVudCgm
aGRyLCAmZXYudmNwdV9ldiwgS1ZNSV9FVkVOVF9BQ1RJT05fUkVUUlksCisJCQkmcnBsLCBzaXpl
b2YocnBsKSk7CisKKwl3YWl0X3ZjcHVfd29ya2VyKHZjcHVfdGhyZWFkKTsKKworCWRpc2FibGVf
dmNwdV9ldmVudCh2bSwgZXZlbnRfaWQpOworfQorCiBzdGF0aWMgdm9pZCB0ZXN0X2ludHJvc3Bl
Y3Rpb24oc3RydWN0IGt2bV92bSAqdm0pCiB7CiAJc3JhbmRvbSh0aW1lKDApKTsKQEAgLTEwNTMs
NiArMTA5OCw3IEBAIHN0YXRpYyB2b2lkIHRlc3RfaW50cm9zcGVjdGlvbihzdHJ1Y3Qga3ZtX3Zt
ICp2bSkKIAl0ZXN0X2NtZF92Y3B1X3NldF9yZWdpc3RlcnModm0pOwogCXRlc3RfY21kX3ZjcHVf
Z2V0X2NwdWlkKHZtKTsKIAl0ZXN0X2V2ZW50X2h5cGVyY2FsbCh2bSk7CisJdGVzdF9ldmVudF9i
cmVha3BvaW50KHZtKTsKIAogCXVuaG9va19pbnRyb3NwZWN0aW9uKHZtKTsKIH0KZGlmZiAtLWdp
dCBhL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaS5jIGIvdmlydC9rdm0vaW50cm9zcGVjdGlv
bi9rdm1pLmMKaW5kZXggZjIzYzAyNTk3OGZhLi4zMDRiYWU0M2NiNzggMTAwNjQ0Ci0tLSBhL3Zp
cnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaS5jCisrKyBiL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24v
a3ZtaS5jCkBAIC02MzksNiArNjM5LDExIEBAIGludCBrdm1pX2NtZF92Y3B1X2NvbnRyb2xfZXZl
bnRzKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwKIAkJCQkgdTE2IGV2ZW50X2lkLCBib29sIGVuYWJs
ZSkKIHsKIAlzdHJ1Y3Qga3ZtX3ZjcHVfaW50cm9zcGVjdGlvbiAqdmNwdWkgPSBWQ1BVSSh2Y3B1
KTsKKwlpbnQgZXJyOworCisJZXJyID0ga3ZtaV9hcmNoX2NtZF9jb250cm9sX2ludGVyY2VwdCh2
Y3B1LCBldmVudF9pZCwgZW5hYmxlKTsKKwlpZiAoZXJyKQorCQlyZXR1cm4gZXJyOwogCiAJaWYg
KGVuYWJsZSkKIAkJc2V0X2JpdChldmVudF9pZCwgdmNwdWktPmV2X2VuYWJsZV9tYXNrKTsKQEAg
LTg3NSwzICs4ODAsMjMgQEAgYm9vbCBrdm1pX2h5cGVyY2FsbF9ldmVudChzdHJ1Y3Qga3ZtX3Zj
cHUgKnZjcHUpCiAKIAlyZXR1cm4gcmV0OwogfQorCitib29sIGt2bWlfYnJlYWtwb2ludF9ldmVu
dChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsIHU2NCBndmEsIHU4IGluc25fbGVuKQoreworCXN0cnVj
dCBrdm1faW50cm9zcGVjdGlvbiAqa3ZtaTsKKwlib29sIHJldCA9IHRydWU7CisKKwlrdm1pID0g
a3ZtaV9nZXQodmNwdS0+a3ZtKTsKKwlpZiAoIWt2bWkpCisJCXJldHVybiByZXQ7CisKKwlpZiAo
aXNfdmNwdV9ldmVudF9lbmFibGVkKHZjcHUsIEtWTUlfVkNQVV9FVkVOVF9CUkVBS1BPSU5UKSkg
eworCQlrdm1pX2FyY2hfYnJlYWtwb2ludF9ldmVudCh2Y3B1LCBndmEsIGluc25fbGVuKTsKKwkJ
cmV0ID0gZmFsc2U7CisJfQorCisJa3ZtaV9wdXQodmNwdS0+a3ZtKTsKKworCXJldHVybiByZXQ7
Cit9CitFWFBPUlRfU1lNQk9MKGt2bWlfYnJlYWtwb2ludF9ldmVudCk7CmRpZmYgLS1naXQgYS92
aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWlfaW50LmggYi92aXJ0L2t2bS9pbnRyb3NwZWN0aW9u
L2t2bWlfaW50LmgKaW5kZXggNzJmMGI3NWQyY2Y1Li5mZjc0NWUzY2ViYWYgMTAwNjQ0Ci0tLSBh
L3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9pbnQuaAorKysgYi92aXJ0L2t2bS9pbnRyb3Nw
ZWN0aW9uL2t2bWlfaW50LmgKQEAgLTQ1LDYgKzQ1LDcgQEAgaW50IGt2bWlfbXNnX3ZjcHVfcmVw
bHkoY29uc3Qgc3RydWN0IGt2bWlfdmNwdV9tc2dfam9iICpqb2IsCiAJCQljb25zdCB2b2lkICpy
cGwsIHNpemVfdCBycGxfc2l6ZSk7CiB1MzIga3ZtaV9tc2dfc2VuZF92Y3B1X3BhdXNlKHN0cnVj
dCBrdm1fdmNwdSAqdmNwdSk7CiB1MzIga3ZtaV9tc2dfc2VuZF92Y3B1X2h5cGVyY2FsbChzdHJ1
Y3Qga3ZtX3ZjcHUgKnZjcHUpOwordTMyIGt2bWlfbXNnX3NlbmRfdmNwdV9icChzdHJ1Y3Qga3Zt
X3ZjcHUgKnZjcHUsIHU2NCBncGEsIHU4IGluc25fbGVuKTsKIAogLyoga3ZtaS5jICovCiB2b2lk
ICprdm1pX21zZ19hbGxvYyh2b2lkKTsKQEAgLTc5LDUgKzgwLDggQEAgdm9pZCBrdm1pX2FyY2hf
c2V0dXBfdmNwdV9ldmVudChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsCiAJCQkJc3RydWN0IGt2bWlf
dmNwdV9ldmVudCAqZXYpOwogdm9pZCBrdm1pX2FyY2hfcG9zdF9yZXBseShzdHJ1Y3Qga3ZtX3Zj
cHUgKnZjcHUpOwogYm9vbCBrdm1pX2FyY2hfaXNfYWdlbnRfaHlwZXJjYWxsKHN0cnVjdCBrdm1f
dmNwdSAqdmNwdSk7Cit2b2lkIGt2bWlfYXJjaF9icmVha3BvaW50X2V2ZW50KHN0cnVjdCBrdm1f
dmNwdSAqdmNwdSwgdTY0IGd2YSwgdTggaW5zbl9sZW4pOworaW50IGt2bWlfYXJjaF9jbWRfY29u
dHJvbF9pbnRlcmNlcHQoc3RydWN0IGt2bV92Y3B1ICp2Y3B1LAorCQkJCSAgICB1bnNpZ25lZCBp
bnQgZXZlbnRfaWQsIGJvb2wgZW5hYmxlKTsKIAogI2VuZGlmCmRpZmYgLS1naXQgYS92aXJ0L2t2
bS9pbnRyb3NwZWN0aW9uL2t2bWlfbXNnLmMgYi92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWlf
bXNnLmMKaW5kZXggMWZlMjgwZDVhMmQ2Li4zMDkzMzViNWFlNWIgMTAwNjQ0Ci0tLSBhL3ZpcnQv
a3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9tc2cuYworKysgYi92aXJ0L2t2bS9pbnRyb3NwZWN0aW9u
L2t2bWlfbXNnLmMKQEAgLTc1NywzICs3NTcsMjEgQEAgdTMyIGt2bWlfbXNnX3NlbmRfdmNwdV9o
eXBlcmNhbGwoc3RydWN0IGt2bV92Y3B1ICp2Y3B1KQogCiAJcmV0dXJuIGFjdGlvbjsKIH0KKwor
dTMyIGt2bWlfbXNnX3NlbmRfdmNwdV9icChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsIHU2NCBncGEs
IHU4IGluc25fbGVuKQoreworCXN0cnVjdCBrdm1pX3ZjcHVfZXZlbnRfYnJlYWtwb2ludCBlOwor
CXUzMiBhY3Rpb247CisJaW50IGVycjsKKworCW1lbXNldCgmZSwgMCwgc2l6ZW9mKGUpKTsKKwll
LmdwYSA9IGdwYTsKKwllLmluc25fbGVuID0gaW5zbl9sZW47CisKKwllcnIgPSBrdm1pX3NlbmRf
dmNwdV9ldmVudCh2Y3B1LCBLVk1JX1ZDUFVfRVZFTlRfQlJFQUtQT0lOVCwKKwkJCQkgICAmZSwg
c2l6ZW9mKGUpLCBOVUxMLCAwLCAmYWN0aW9uKTsKKwlpZiAoZXJyKQorCQlyZXR1cm4gS1ZNSV9F
VkVOVF9BQ1RJT05fQ09OVElOVUU7CisKKwlyZXR1cm4gYWN0aW9uOworfQpfX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpWaXJ0dWFsaXphdGlvbiBtYWlsaW5n
IGxpc3QKVmlydHVhbGl6YXRpb25AbGlzdHMubGludXgtZm91bmRhdGlvbi5vcmcKaHR0cHM6Ly9s
aXN0cy5saW51eGZvdW5kYXRpb24ub3JnL21haWxtYW4vbGlzdGluZm8vdmlydHVhbGl6YXRpb24=
