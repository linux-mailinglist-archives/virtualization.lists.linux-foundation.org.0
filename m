Return-Path: <virtualization-bounces@lists.linux-foundation.org>
X-Original-To: lists.virtualization@lfdr.de
Delivered-To: lists.virtualization@lfdr.de
Received: from silver.osuosl.org (smtp3.osuosl.org [140.211.166.136])
	by mail.lfdr.de (Postfix) with ESMTPS id 5B4C1155E35
	for <lists.virtualization@lfdr.de>; Fri,  7 Feb 2020 19:36:13 +0100 (CET)
Received: from localhost (localhost [127.0.0.1])
	by silver.osuosl.org (Postfix) with ESMTP id 801612265B;
	Fri,  7 Feb 2020 18:36:11 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from silver.osuosl.org ([127.0.0.1])
	by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id 4qe2k7-zHGR8; Fri,  7 Feb 2020 18:36:04 +0000 (UTC)
Received: from lists.linuxfoundation.org (lf-lists.osuosl.org [140.211.9.56])
	by silver.osuosl.org (Postfix) with ESMTP id 473312269B;
	Fri,  7 Feb 2020 18:35:59 +0000 (UTC)
Received: from lf-lists.osuosl.org (localhost [127.0.0.1])
	by lists.linuxfoundation.org (Postfix) with ESMTP id 128DEC1D81;
	Fri,  7 Feb 2020 18:35:59 +0000 (UTC)
X-Original-To: virtualization@lists.linux-foundation.org
Delivered-To: virtualization@lists.linuxfoundation.org
Received: from fraxinus.osuosl.org (smtp4.osuosl.org [140.211.166.137])
 by lists.linuxfoundation.org (Postfix) with ESMTP id 2D473C013E
 for <virtualization@lists.linux-foundation.org>;
 Fri,  7 Feb 2020 18:35:56 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by fraxinus.osuosl.org (Postfix) with ESMTP id 19A208697E
 for <virtualization@lists.linux-foundation.org>;
 Fri,  7 Feb 2020 18:35:56 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from fraxinus.osuosl.org ([127.0.0.1])
 by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id X40wDbdgR3MW
 for <virtualization@lists.linux-foundation.org>;
 Fri,  7 Feb 2020 18:35:54 +0000 (UTC)
X-Greylist: domain auto-whitelisted by SQLgrey-1.7.6
Received: from mx01.bbu.dsd.mx.bitdefender.com
 (mx01.bbu.dsd.mx.bitdefender.com [91.199.104.161])
 by fraxinus.osuosl.org (Postfix) with ESMTPS id 01957860BE
 for <virtualization@lists.linux-foundation.org>;
 Fri,  7 Feb 2020 18:35:54 +0000 (UTC)
Received: from smtp.bitdefender.com (smtp01.buh.bitdefender.com [10.17.80.75])
 by mx01.bbu.dsd.mx.bitdefender.com (Postfix) with ESMTPS id
 74EBD305D347; Fri,  7 Feb 2020 20:16:40 +0200 (EET)
Received: from host.bbu.bitdefender.biz (unknown [195.210.4.22])
 by smtp.bitdefender.com (Postfix) with ESMTPSA id 698D03052066;
 Fri,  7 Feb 2020 20:16:40 +0200 (EET)
From: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>
To: kvm@vger.kernel.org
Subject: [RFC PATCH v7 41/78] KVM: introspection: add KVMI_VM_CHECK_COMMAND
 and KVMI_VM_CHECK_EVENT
Date: Fri,  7 Feb 2020 20:15:59 +0200
Message-Id: <20200207181636.1065-42-alazar@bitdefender.com>
In-Reply-To: <20200207181636.1065-1-alazar@bitdefender.com>
References: <20200207181636.1065-1-alazar@bitdefender.com>
MIME-Version: 1.0
Cc: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>,
 Paolo Bonzini <pbonzini@redhat.com>,
 Sean Christopherson <sean.j.christopherson@intel.com>,
 virtualization@lists.linux-foundation.org
X-BeenThere: virtualization@lists.linux-foundation.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Linux virtualization <virtualization.lists.linux-foundation.org>
List-Unsubscribe: <https://lists.linuxfoundation.org/mailman/options/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=unsubscribe>
List-Archive: <http://lists.linuxfoundation.org/pipermail/virtualization/>
List-Post: <mailto:virtualization@lists.linux-foundation.org>
List-Help: <mailto:virtualization-request@lists.linux-foundation.org?subject=help>
List-Subscribe: <https://lists.linuxfoundation.org/mailman/listinfo/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: virtualization-bounces@lists.linux-foundation.org
Sender: "Virtualization" <virtualization-bounces@lists.linux-foundation.org>

VGhlc2UgY29tbWFuZHMgY2FuIGJlIHVzZWQgYnkgdGhlIGludHJvc3BlY3Rpb24gdG9vbCB0byBj
aGVjayB3aGF0CmludHJvc3BlY3Rpb24gY29tbWFuZHMgYW5kIGV2ZW50cyBhcmUgc3VwcG9ydGVk
IChieSBLVk1pKSBhbmQgYWxsb3dlZAooYnkgdXNlcnNwYWNlKS4KClRoZSBpbnRyb3NwZWN0aW9u
IHRvb2wgd2lsbCBnZXQgb25lIG9mIHRoZSBmb2xsb3dpbmcgZXJyb3IgY29kZXM6CiAgKiAtS1ZN
X0VOT1NZUyAodW5zdXBwb3J0ZWQgY29tbWFuZC9ldmVudCkKICAqIC1LVk1fUEVSTSAoZGlzYWxs
b3dlZCBjb21tYW5kL2V2ZW50KQogICogLUtWTV9FSU5WQUwgKHRoZSBwYWRkaW5nIHNwYWNlLCB1
c2VkIGZvciBmdXR1cmUgZXh0ZW5zaW9ucywKICAgICAgICAgICAgICAgICBpcyBub3QgemVybykK
ICAqIDAgKHRoZSBjb21tYW5kL2V2ZW50IGlzIHN1cHBvcnRlZCBhbmQgYWxsb3dlZCkKClRoZXNl
IGNvbW1hbmRzIGNhbiBiZSBzZWVuIGFzIGFsdGVybmF0aXZlIG1ldGhvZHMgdG8gS1ZNSV9HRVRf
VkVSU0lPTgppbiBjaGVja2luZyBpZiB0aGUgaW50cm9zcGVjdGlvbiBzdXBwb3J0cyBhIHNwZWNp
ZmljIGNvbW1hbmQvZXZlbnQuCgpBcyB3aXRoIHRoZSBLVk1JX0dFVF9WRVJTSU9OIGNvbW1hbmQs
IHRoZXNlIHR3byBjb21tYW5kcyBjYW4gbmV2ZXIgYmUKZGlzYWxsb3dlZCBieSB1c2Vyc3BhY2Uu
CgpTaWduZWQtb2ZmLWJ5OiBBZGFsYmVydCBMYXrEg3IgPGFsYXphckBiaXRkZWZlbmRlci5jb20+
Ci0tLQogRG9jdW1lbnRhdGlvbi92aXJ0L2t2bS9rdm1pLnJzdCAgICAgICAgICAgICAgIHwgNjIg
KysrKysrKysrKysrKysrKysrKwogaW5jbHVkZS91YXBpL2xpbnV4L2t2bWkuaCAgICAgICAgICAg
ICAgICAgICAgIHwgMTYgKysrKy0KIC4uLi90ZXN0aW5nL3NlbGZ0ZXN0cy9rdm0veDg2XzY0L2t2
bWlfdGVzdC5jICB8IDU1ICsrKysrKysrKysrKysrKysKIHZpcnQva3ZtL2ludHJvc3BlY3Rpb24v
a3ZtaS5jICAgICAgICAgICAgICAgICB8ICA4ICsrLQogdmlydC9rdm0vaW50cm9zcGVjdGlvbi9r
dm1pX2ludC5oICAgICAgICAgICAgIHwgIDIgKwogdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1p
X21zZy5jICAgICAgICAgICAgIHwgNDYgKysrKysrKysrKysrKy0KIDYgZmlsZXMgY2hhbmdlZCwg
MTg1IGluc2VydGlvbnMoKyksIDQgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvRG9jdW1lbnRh
dGlvbi92aXJ0L2t2bS9rdm1pLnJzdCBiL0RvY3VtZW50YXRpb24vdmlydC9rdm0va3ZtaS5yc3QK
aW5kZXggMzZmOGNkNGE4MzZkLi45MjA1ZjUxZmE1YTAgMTAwNjQ0Ci0tLSBhL0RvY3VtZW50YXRp
b24vdmlydC9rdm0va3ZtaS5yc3QKKysrIGIvRG9jdW1lbnRhdGlvbi92aXJ0L2t2bS9rdm1pLnJz
dApAQCAtMjUxLDMgKzI1MSw2NSBAQCBSZXR1cm5zIHRoZSBpbnRyb3NwZWN0aW9uIEFQSSB2ZXJz
aW9uLgogCiBUaGlzIGNvbW1hbmQgaXMgYWx3YXlzIGFsbG93ZWQgYW5kIHN1Y2Nlc3NmdWwgKGlm
IHRoZSBpbnRyb3NwZWN0aW9uIGlzCiBidWlsdCBpbiBrZXJuZWwpLgorCisyLiBLVk1JX1ZNX0NI
RUNLX0NPTU1BTkQKKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQorCis6QXJjaGl0ZWN0dXJlczog
YWxsCis6VmVyc2lvbnM6ID49IDEKKzpQYXJhbWV0ZXJzOgorCis6OgorCisJc3RydWN0IGt2bWlf
dm1fY2hlY2tfY29tbWFuZCB7CisJCV9fdTE2IGlkOworCQlfX3UxNiBwYWRkaW5nMTsKKwkJX191
MzIgcGFkZGluZzI7CisJfTsKKworOlJldHVybnM6CisKKzo6CisKKwlzdHJ1Y3Qga3ZtaV9lcnJv
cl9jb2RlOworCitDaGVja3MgaWYgdGhlIGNvbW1hbmQgc3BlY2lmaWVkIGJ5IGBgaWRgYCBpcyBh
bGxvd2VkLgorCitUaGlzIGNvbW1hbmQgaXMgYWx3YXlzIGFsbG93ZWQuCisKKzpFcnJvcnM6CisK
KyogLUtWTV9FUEVSTSAtIHRoZSBjb21tYW5kIHNwZWNpZmllZCBieSBgYGlkYGAgaXMgZGlzYWxs
b3dlZAorKiAtS1ZNX0VJTlZBTCAtIHBhZGRpbmcgaXMgbm90IHplcm8KKyogLUtWTV9FSU5WQUwg
LSB0aGUgY29tbWFuZCBzcGVjaWZpZWQgYnkgYGBpZGBgIGlzIG5vdCBrbm93bgorCiszLiBLVk1J
X1ZNX0NIRUNLX0VWRU5UCistLS0tLS0tLS0tLS0tLS0tLS0tLS0tCisKKzpBcmNoaXRlY3R1cmVz
OiBhbGwKKzpWZXJzaW9uczogPj0gMQorOlBhcmFtZXRlcnM6CisKKzo6CisKKwlzdHJ1Y3Qga3Zt
aV92bV9jaGVja19ldmVudCB7CisJCV9fdTE2IGlkOworCQlfX3UxNiBwYWRkaW5nMTsKKwkJX191
MzIgcGFkZGluZzI7CisJfTsKKworOlJldHVybnM6CisKKzo6CisKKwlzdHJ1Y3Qga3ZtaV9lcnJv
cl9jb2RlOworCitDaGVja3MgaWYgdGhlIGV2ZW50IHNwZWNpZmllZCBieSBgYGlkYGAgaXMgYWxs
b3dlZC4KKworVGhpcyBjb21tYW5kIGlzIGFsd2F5cyBhbGxvd2VkLgorCis6RXJyb3JzOgorCisq
IC1LVk1fRVBFUk0gLSB0aGUgZXZlbnQgc3BlY2lmaWVkIGJ5IGBgaWRgYCBpcyBkaXNhbGxvd2Vk
CisqIC1LVk1fRUlOVkFMIC0gcGFkZGluZyBpcyBub3QgemVybworKiAtS1ZNX0VJTlZBTCAtIHRo
ZSBldmVudCBzcGVjaWZpZWQgYnkgYGBpZGBgIGlzIG5vdCBrbm93bgpkaWZmIC0tZ2l0IGEvaW5j
bHVkZS91YXBpL2xpbnV4L2t2bWkuaCBiL2luY2x1ZGUvdWFwaS9saW51eC9rdm1pLmgKaW5kZXgg
ZWU4MTdjYjA1Y2M2Li5iYTU1MGU5ZmFlMmUgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvdWFwaS9saW51
eC9rdm1pLmgKKysrIGIvaW5jbHVkZS91YXBpL2xpbnV4L2t2bWkuaApAQCAtMTQsNyArMTQsOSBA
QCBlbnVtIHsKIH07CiAKIGVudW0gewotCUtWTUlfR0VUX1ZFUlNJT04gPSAyLAorCUtWTUlfR0VU
X1ZFUlNJT04gICAgICA9IDIsCisJS1ZNSV9WTV9DSEVDS19DT01NQU5EID0gMywKKwlLVk1JX1ZN
X0NIRUNLX0VWRU5UICAgPSA0LAogCiAJS1ZNSV9OVU1fTUVTU0FHRVMKIH07CkBAIC00Myw0ICs0
NSwxNiBAQCBzdHJ1Y3Qga3ZtaV9nZXRfdmVyc2lvbl9yZXBseSB7CiAJX191MzIgcGFkZGluZzsK
IH07CiAKK3N0cnVjdCBrdm1pX3ZtX2NoZWNrX2NvbW1hbmQgeworCV9fdTE2IGlkOworCV9fdTE2
IHBhZGRpbmcxOworCV9fdTMyIHBhZGRpbmcyOworfTsKKworc3RydWN0IGt2bWlfdm1fY2hlY2tf
ZXZlbnQgeworCV9fdTE2IGlkOworCV9fdTE2IHBhZGRpbmcxOworCV9fdTMyIHBhZGRpbmcyOwor
fTsKKwogI2VuZGlmIC8qIF9VQVBJX19MSU5VWF9LVk1JX0ggKi8KZGlmZiAtLWdpdCBhL3Rvb2xz
L3Rlc3Rpbmcvc2VsZnRlc3RzL2t2bS94ODZfNjQva3ZtaV90ZXN0LmMgYi90b29scy90ZXN0aW5n
L3NlbGZ0ZXN0cy9rdm0veDg2XzY0L2t2bWlfdGVzdC5jCmluZGV4IDczM2U4MjQ3OGY2ZS4uZTNl
NTFmZTNmODVmIDEwMDY0NAotLS0gYS90b29scy90ZXN0aW5nL3NlbGZ0ZXN0cy9rdm0veDg2XzY0
L2t2bWlfdGVzdC5jCisrKyBiL3Rvb2xzL3Rlc3Rpbmcvc2VsZnRlc3RzL2t2bS94ODZfNjQva3Zt
aV90ZXN0LmMKQEAgLTIwMSw2ICsyMDEsNTkgQEAgc3RhdGljIHZvaWQgdGVzdF9jbWRfZ2V0X3Zl
cnNpb24odm9pZCkKIAlERUJVRygiS1ZNSSB2ZXJzaW9uOiAldVxuIiwgcnBsLnZlcnNpb24pOwog
fQogCitzdGF0aWMgaW50IGNtZF9jaGVja19jb21tYW5kKF9fdTE2IGlkKQoreworCXN0cnVjdCB7
CisJCXN0cnVjdCBrdm1pX21zZ19oZHIgaGRyOworCQlzdHJ1Y3Qga3ZtaV92bV9jaGVja19jb21t
YW5kIGNtZDsKKwl9IHJlcSA9IHt9OworCisJcmVxLmNtZC5pZCA9IGlkOworCisJcmV0dXJuIGRv
X2NvbW1hbmQoS1ZNSV9WTV9DSEVDS19DT01NQU5ELCAmcmVxLmhkciwgc2l6ZW9mKHJlcSksIE5V
TEwsCisJCQkgICAgIDApOworfQorCitzdGF0aWMgdm9pZCB0ZXN0X2NtZF9jaGVja19jb21tYW5k
KHZvaWQpCit7CisJX191MTYgdmFsaWRfaWQgPSBLVk1JX0dFVF9WRVJTSU9OOworCV9fdTE2IGlu
dmFsaWRfaWQgPSAweGZmZmY7CisJaW50IHI7CisKKwlyID0gY21kX2NoZWNrX2NvbW1hbmQodmFs
aWRfaWQpOworCVRFU1RfQVNTRVJUKHIgPT0gMCwKKwkJIktWTUlfVk1fQ0hFQ0tfQ09NTUFORCBm
YWlsZWQsIGVycm9yICVkICglcylcbiIsCisJCS1yLCBrdm1fc3RyZXJyb3IoLXIpKTsKKworCXIg
PSBjbWRfY2hlY2tfY29tbWFuZChpbnZhbGlkX2lkKTsKKwlURVNUX0FTU0VSVChyID09IC1LVk1f
RUlOVkFMLAorCQkiS1ZNSV9WTV9DSEVDS19DT01NQU5EIGRpZG4ndCBmYWlsZWQgd2l0aCAtS1ZN
X0VJTlZBTCwgZXJyb3IgJWQgKCVzKVxuIiwKKwkJLXIsIGt2bV9zdHJlcnJvcigtcikpOworfQor
CitzdGF0aWMgaW50IGNtZF9jaGVja19ldmVudChfX3UxNiBpZCkKK3sKKwlzdHJ1Y3QgeworCQlz
dHJ1Y3Qga3ZtaV9tc2dfaGRyIGhkcjsKKwkJc3RydWN0IGt2bWlfdm1fY2hlY2tfZXZlbnQgY21k
OworCX0gcmVxID0ge307CisKKwlyZXEuY21kLmlkID0gaWQ7CisKKwlyZXR1cm4gZG9fY29tbWFu
ZChLVk1JX1ZNX0NIRUNLX0VWRU5ULCAmcmVxLmhkciwgc2l6ZW9mKHJlcSksIE5VTEwsIDApOwor
fQorCitzdGF0aWMgdm9pZCB0ZXN0X2NtZF9jaGVja19ldmVudCh2b2lkKQoreworCV9fdTE2IGlu
dmFsaWRfaWQgPSAweGZmZmY7CisJaW50IHI7CisKKwlyID0gY21kX2NoZWNrX2V2ZW50KGludmFs
aWRfaWQpOworCVRFU1RfQVNTRVJUKHIgPT0gLUtWTV9FSU5WQUwsCisJCSJLVk1JX1ZNX0NIRUNL
X0VWRU5UIGRpZG4ndCBmYWlsZWQgd2l0aCAtS1ZNX0VJTlZBTCwgZXJyb3IgJWQgKCVzKVxuIiwK
KwkJLXIsIGt2bV9zdHJlcnJvcigtcikpOworfQorCiBzdGF0aWMgdm9pZCB0ZXN0X2ludHJvc3Bl
Y3Rpb24oc3RydWN0IGt2bV92bSAqdm0pCiB7CiAJc2V0dXBfc29ja2V0KCk7CkBAIC0yMDgsNiAr
MjYxLDggQEAgc3RhdGljIHZvaWQgdGVzdF9pbnRyb3NwZWN0aW9uKHN0cnVjdCBrdm1fdm0gKnZt
KQogCiAJdGVzdF9jbWRfaW52YWxpZCgpOwogCXRlc3RfY21kX2dldF92ZXJzaW9uKCk7CisJdGVz
dF9jbWRfY2hlY2tfY29tbWFuZCgpOworCXRlc3RfY21kX2NoZWNrX2V2ZW50KCk7CiAKIAl1bmhv
b2tfaW50cm9zcGVjdGlvbih2bSk7CiB9CmRpZmYgLS1naXQgYS92aXJ0L2t2bS9pbnRyb3NwZWN0
aW9uL2t2bWkuYyBiL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaS5jCmluZGV4IDg1OTdiNmVm
MGNmYi4uOGY4ZTE4Njk2Nzk0IDEwMDY0NAotLS0gYS92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2
bWkuYworKysgYi92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWkuYwpAQCAtNzcsNiArNzcsOCBA
QCBhbGxvY19rdm1pKHN0cnVjdCBrdm0gKmt2bSwgY29uc3Qgc3RydWN0IGt2bV9pbnRyb3NwZWN0
aW9uX2hvb2sgKmhvb2spCiAJbWVtY3B5KCZrdm1pLT51dWlkLCAmaG9vay0+dXVpZCwgc2l6ZW9m
KGt2bWktPnV1aWQpKTsKIAogCXNldF9iaXQoS1ZNSV9HRVRfVkVSU0lPTiwga3ZtaS0+Y21kX2Fs
bG93X21hc2spOworCXNldF9iaXQoS1ZNSV9WTV9DSEVDS19DT01NQU5ELCBrdm1pLT5jbWRfYWxs
b3dfbWFzayk7CisJc2V0X2JpdChLVk1JX1ZNX0NIRUNLX0VWRU5ULCBrdm1pLT5jbWRfYWxsb3df
bWFzayk7CiAKIAlrdm1pLT5rdm0gPSBrdm07CiAKQEAgLTMwNCwxMCArMzA2LDE0IEBAIGludCBr
dm1pX2lvY3RsX2NvbW1hbmQoc3RydWN0IGt2bSAqa3ZtLCB2b2lkIF9fdXNlciAqYXJncCkKIAlp
ZiAoIWFsbG93KSB7CiAJCURFQ0xBUkVfQklUTUFQKGFsd2F5c19hbGxvd2VkLCBLVk1JX05VTV9D
T01NQU5EUyk7CiAKLQkJaWYgKGlkID09IEtWTUlfR0VUX1ZFUlNJT04pCisJCWlmIChpZCA9PSBL
Vk1JX0dFVF9WRVJTSU9OCisJCQkJfHwgaWQgPT0gS1ZNSV9WTV9DSEVDS19DT01NQU5ECisJCQkJ
fHwgaWQgPT0gS1ZNSV9WTV9DSEVDS19FVkVOVCkKIAkJCXJldHVybiAtRVBFUk07CiAKIAkJc2V0
X2JpdChLVk1JX0dFVF9WRVJTSU9OLCBhbHdheXNfYWxsb3dlZCk7CisJCXNldF9iaXQoS1ZNSV9W
TV9DSEVDS19DT01NQU5ELCBhbHdheXNfYWxsb3dlZCk7CisJCXNldF9iaXQoS1ZNSV9WTV9DSEVD
S19FVkVOVCwgYWx3YXlzX2FsbG93ZWQpOwogCiAJCWJpdG1hcF9hbmRub3QocmVxdWVzdGVkLCBy
ZXF1ZXN0ZWQsIGFsd2F5c19hbGxvd2VkLAogCQkJICAgICAgS1ZNSV9OVU1fQ09NTUFORFMpOwpk
aWZmIC0tZ2l0IGEvdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pX2ludC5oIGIvdmlydC9rdm0v
aW50cm9zcGVjdGlvbi9rdm1pX2ludC5oCmluZGV4IDk0N2FmNDYxNWZhNS4uZmViODNiOGQwZjEy
IDEwMDY0NAotLS0gYS92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWlfaW50LmgKKysrIGIvdmly
dC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pX2ludC5oCkBAIC0yMiw2ICsyMiw4IEBACiAKICNkZWZp
bmUgS1ZNSV9LTk9XTl9DT01NQU5EUyAoIFwKIAkJCSAgQklUKEtWTUlfR0VUX1ZFUlNJT04pIFwK
KwkJCXwgQklUKEtWTUlfVk1fQ0hFQ0tfQ09NTUFORCkgXAorCQkJfCBCSVQoS1ZNSV9WTV9DSEVD
S19FVkVOVCkgXAogCQkpCiAKICNkZWZpbmUgS1ZNSShrdm0pICgoc3RydWN0IGt2bV9pbnRyb3Nw
ZWN0aW9uICopKChrdm0pLT5rdm1pKSkKZGlmZiAtLWdpdCBhL3ZpcnQva3ZtL2ludHJvc3BlY3Rp
b24va3ZtaV9tc2cuYyBiL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9tc2cuYwppbmRleCA4
MWU0MmM2NWRhMTYuLmI3ZGE1Y2M3Mjg2ZiAxMDA2NDQKLS0tIGEvdmlydC9rdm0vaW50cm9zcGVj
dGlvbi9rdm1pX21zZy5jCisrKyBiL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9tc2cuYwpA
QCAtOSw3ICs5LDkgQEAKICNpbmNsdWRlICJrdm1pX2ludC5oIgogCiBzdGF0aWMgY29uc3QgY2hh
ciAqY29uc3QgbXNnX0lEc1tdID0gewotCVtLVk1JX0dFVF9WRVJTSU9OXSA9ICJLVk1JX0dFVF9W
RVJTSU9OIiwKKwlbS1ZNSV9HRVRfVkVSU0lPTl0gICAgICA9ICJLVk1JX0dFVF9WRVJTSU9OIiwK
KwlbS1ZNSV9WTV9DSEVDS19DT01NQU5EXSA9ICJLVk1JX1ZNX0NIRUNLX0NPTU1BTkQiLAorCVtL
Vk1JX1ZNX0NIRUNLX0VWRU5UXSAgID0gIktWTUlfVk1fQ0hFQ0tfRVZFTlQiLAogfTsKIAogc3Rh
dGljIGJvb2wgaXNfa25vd25fbWVzc2FnZSh1MTYgaWQpCkBAIC0xMjgsMTIgKzEzMCw1MiBAQCBz
dGF0aWMgaW50IGhhbmRsZV9nZXRfdmVyc2lvbihzdHJ1Y3Qga3ZtX2ludHJvc3BlY3Rpb24gKmt2
bWksCiAJcmV0dXJuIGt2bWlfbXNnX3ZtX3JlcGx5KGt2bWksIG1zZywgMCwgJnJwbCwgc2l6ZW9m
KHJwbCkpOwogfQogCitzdGF0aWMgaW50IGhhbmRsZV9jaGVja19jb21tYW5kKHN0cnVjdCBrdm1f
aW50cm9zcGVjdGlvbiAqa3ZtaSwKKwkJCQljb25zdCBzdHJ1Y3Qga3ZtaV9tc2dfaGRyICptc2cs
CisJCQkJY29uc3Qgdm9pZCAqX3JlcSkKK3sKKwljb25zdCBzdHJ1Y3Qga3ZtaV92bV9jaGVja19j
b21tYW5kICpyZXEgPSBfcmVxOworCWludCBlYyA9IDA7CisKKwlpZiAocmVxLT5wYWRkaW5nMSB8
fCByZXEtPnBhZGRpbmcyKQorCQllYyA9IC1LVk1fRUlOVkFMOworCWVsc2UgaWYgKHJlcS0+aWQg
Pj0gS1ZNSV9OVU1fQ09NTUFORFMpCisJCWVjID0gLUtWTV9FSU5WQUw7CisJZWxzZSBpZiAoIWlz
X2NvbW1hbmRfYWxsb3dlZChrdm1pLCByZXEtPmlkKSkKKwkJZWMgPSAtS1ZNX0VQRVJNOworCisJ
cmV0dXJuIGt2bWlfbXNnX3ZtX3JlcGx5KGt2bWksIG1zZywgZWMsIE5VTEwsIDApOworfQorCitz
dGF0aWMgYm9vbCBpc19ldmVudF9hbGxvd2VkKHN0cnVjdCBrdm1faW50cm9zcGVjdGlvbiAqa3Zt
aSwgaW50IGlkKQoreworCXJldHVybiB0ZXN0X2JpdChpZCwga3ZtaS0+ZXZlbnRfYWxsb3dfbWFz
ayk7Cit9CisKK3N0YXRpYyBpbnQgaGFuZGxlX2NoZWNrX2V2ZW50KHN0cnVjdCBrdm1faW50cm9z
cGVjdGlvbiAqa3ZtaSwKKwkJCSAgICAgIGNvbnN0IHN0cnVjdCBrdm1pX21zZ19oZHIgKm1zZywg
Y29uc3Qgdm9pZCAqX3JlcSkKK3sKKwljb25zdCBzdHJ1Y3Qga3ZtaV92bV9jaGVja19ldmVudCAq
cmVxID0gX3JlcTsKKwlpbnQgZWMgPSAwOworCisJaWYgKHJlcS0+cGFkZGluZzEgfHwgcmVxLT5w
YWRkaW5nMikKKwkJZWMgPSAtS1ZNX0VJTlZBTDsKKwllbHNlIGlmIChyZXEtPmlkID49IEtWTUlf
TlVNX0VWRU5UUykKKwkJZWMgPSAtS1ZNX0VJTlZBTDsKKwllbHNlIGlmICghaXNfZXZlbnRfYWxs
b3dlZChrdm1pLCByZXEtPmlkKSkKKwkJZWMgPSAtS1ZNX0VQRVJNOworCisJcmV0dXJuIGt2bWlf
bXNnX3ZtX3JlcGx5KGt2bWksIG1zZywgZWMsIE5VTEwsIDApOworfQorCiAvKgogICogVGhlc2Ug
Y29tbWFuZHMgYXJlIGV4ZWN1dGVkIGJ5IHRoZSByZWNlaXZpbmcgdGhyZWFkL3dvcmtlci4KICAq
Lwogc3RhdGljIGludCgqY29uc3QgbXNnX3ZtW10pKHN0cnVjdCBrdm1faW50cm9zcGVjdGlvbiAq
LAogCQkJICAgIGNvbnN0IHN0cnVjdCBrdm1pX21zZ19oZHIgKiwgY29uc3Qgdm9pZCAqKSA9IHsK
LQlbS1ZNSV9HRVRfVkVSU0lPTl0gPSBoYW5kbGVfZ2V0X3ZlcnNpb24sCisJW0tWTUlfR0VUX1ZF
UlNJT05dICAgICAgPSBoYW5kbGVfZ2V0X3ZlcnNpb24sCisJW0tWTUlfVk1fQ0hFQ0tfQ09NTUFO
RF0gPSBoYW5kbGVfY2hlY2tfY29tbWFuZCwKKwlbS1ZNSV9WTV9DSEVDS19FVkVOVF0gICA9IGhh
bmRsZV9jaGVja19ldmVudCwKIH07CiAKIHN0YXRpYyBib29sIGlzX3ZtX21lc3NhZ2UodTE2IGlk
KQpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpWaXJ0dWFs
aXphdGlvbiBtYWlsaW5nIGxpc3QKVmlydHVhbGl6YXRpb25AbGlzdHMubGludXgtZm91bmRhdGlv
bi5vcmcKaHR0cHM6Ly9saXN0cy5saW51eGZvdW5kYXRpb24ub3JnL21haWxtYW4vbGlzdGluZm8v
dmlydHVhbGl6YXRpb24=
