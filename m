Return-Path: <virtualization-bounces@lists.linux-foundation.org>
X-Original-To: lists.virtualization@lfdr.de
Delivered-To: lists.virtualization@lfdr.de
Received: from fraxinus.osuosl.org (smtp4.osuosl.org [140.211.166.137])
	by mail.lfdr.de (Postfix) with ESMTPS id 512DF155DF2
	for <lists.virtualization@lfdr.de>; Fri,  7 Feb 2020 19:26:04 +0100 (CET)
Received: from localhost (localhost [127.0.0.1])
	by fraxinus.osuosl.org (Postfix) with ESMTP id CC8D886966;
	Fri,  7 Feb 2020 18:26:02 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from fraxinus.osuosl.org ([127.0.0.1])
	by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id EsVWcpc7b9ec; Fri,  7 Feb 2020 18:25:56 +0000 (UTC)
Received: from lists.linuxfoundation.org (lf-lists.osuosl.org [140.211.9.56])
	by fraxinus.osuosl.org (Postfix) with ESMTP id 5229A86937;
	Fri,  7 Feb 2020 18:25:55 +0000 (UTC)
Received: from lf-lists.osuosl.org (localhost [127.0.0.1])
	by lists.linuxfoundation.org (Postfix) with ESMTP id 25E7BC1D81;
	Fri,  7 Feb 2020 18:25:55 +0000 (UTC)
X-Original-To: virtualization@lists.linux-foundation.org
Delivered-To: virtualization@lists.linuxfoundation.org
Received: from fraxinus.osuosl.org (smtp4.osuosl.org [140.211.166.137])
 by lists.linuxfoundation.org (Postfix) with ESMTP id 440B5C013E
 for <virtualization@lists.linux-foundation.org>;
 Fri,  7 Feb 2020 18:25:53 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by fraxinus.osuosl.org (Postfix) with ESMTP id 32C14868EF
 for <virtualization@lists.linux-foundation.org>;
 Fri,  7 Feb 2020 18:25:53 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from fraxinus.osuosl.org ([127.0.0.1])
 by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id 3rkLfa24UKR4
 for <virtualization@lists.linux-foundation.org>;
 Fri,  7 Feb 2020 18:25:51 +0000 (UTC)
X-Greylist: domain auto-whitelisted by SQLgrey-1.7.6
Received: from mx01.bbu.dsd.mx.bitdefender.com
 (mx01.bbu.dsd.mx.bitdefender.com [91.199.104.161])
 by fraxinus.osuosl.org (Postfix) with ESMTPS id 7F56386910
 for <virtualization@lists.linux-foundation.org>;
 Fri,  7 Feb 2020 18:25:51 +0000 (UTC)
Received: from smtp.bitdefender.com (smtp01.buh.bitdefender.com [10.17.80.75])
 by mx01.bbu.dsd.mx.bitdefender.com (Postfix) with ESMTPS id
 E78F9305D352; Fri,  7 Feb 2020 20:16:40 +0200 (EET)
Received: from host.bbu.bitdefender.biz (unknown [195.210.4.22])
 by smtp.bitdefender.com (Postfix) with ESMTPSA id D95F0305206A;
 Fri,  7 Feb 2020 20:16:40 +0200 (EET)
From: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>
To: kvm@vger.kernel.org
Subject: [RFC PATCH v7 52/78] KVM: introspection: add KVMI_EVENT_PAUSE_VCPU
Date: Fri,  7 Feb 2020 20:16:10 +0200
Message-Id: <20200207181636.1065-53-alazar@bitdefender.com>
In-Reply-To: <20200207181636.1065-1-alazar@bitdefender.com>
References: <20200207181636.1065-1-alazar@bitdefender.com>
MIME-Version: 1.0
Cc: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>,
 Paolo Bonzini <pbonzini@redhat.com>,
 Sean Christopherson <sean.j.christopherson@intel.com>,
 virtualization@lists.linux-foundation.org
X-BeenThere: virtualization@lists.linux-foundation.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Linux virtualization <virtualization.lists.linux-foundation.org>
List-Unsubscribe: <https://lists.linuxfoundation.org/mailman/options/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=unsubscribe>
List-Archive: <http://lists.linuxfoundation.org/pipermail/virtualization/>
List-Post: <mailto:virtualization@lists.linux-foundation.org>
List-Help: <mailto:virtualization-request@lists.linux-foundation.org?subject=help>
List-Subscribe: <https://lists.linuxfoundation.org/mailman/listinfo/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: virtualization-bounces@lists.linux-foundation.org
Sender: "Virtualization" <virtualization-bounces@lists.linux-foundation.org>

VGhpcyBldmVudCBpcyBzZW5kIGJ5IHRoZSB2Q1BVIHRocmVhZCBhbmQgaGFzIGEgbG93IHByaW9y
aXR5LiBJdAp3aWxsIGJlIHNlbnQgYWZ0ZXIgYW55IG90aGVyIHZDUFUgaW50cm9zcGVjdGlvbiBl
dmVudCBhbmQgd2hlbiBubyB2Q1BVCmludHJvc3BlY3Rpb24gY29tbWFuZCBpcyBxdWV1ZWQuCgpT
aWduZWQtb2ZmLWJ5OiBBZGFsYmVydCBMYXrEg3IgPGFsYXphckBiaXRkZWZlbmRlci5jb20+Ci0t
LQogRG9jdW1lbnRhdGlvbi92aXJ0L2t2bS9rdm1pLnJzdCAgICAgICAgICAgICAgIHwgIDIzICsr
LQogYXJjaC94ODYva3ZtL2t2bWkuYyAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgIDUzICsr
KysrKwogaW5jbHVkZS9saW51eC9rdm1pX2hvc3QuaCAgICAgICAgICAgICAgICAgICAgIHwgIDEx
ICsrCiBpbmNsdWRlL3VhcGkvbGludXgva3ZtaS5oICAgICAgICAgICAgICAgICAgICAgfCAgMTQg
KysKIC4uLi90ZXN0aW5nL3NlbGZ0ZXN0cy9rdm0veDg2XzY0L2t2bWlfdGVzdC5jICB8ICA0OCAr
KysrKy0KIHZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaS5jICAgICAgICAgICAgICAgICB8ICA0
OSArKysrKy0KIHZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9pbnQuaCAgICAgICAgICAgICB8
ICAgMyArCiB2aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWlfbXNnLmMgICAgICAgICAgICAgfCAx
NTMgKysrKysrKysrKysrKysrKystCiA4IGZpbGVzIGNoYW5nZWQsIDM0NyBpbnNlcnRpb25zKCsp
LCA3IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL0RvY3VtZW50YXRpb24vdmlydC9rdm0va3Zt
aS5yc3QgYi9Eb2N1bWVudGF0aW9uL3ZpcnQva3ZtL2t2bWkucnN0CmluZGV4IGJhMDFiOWEyNDlh
Mi4uOGJmOWI4ZjZkZDdjIDEwMDY0NAotLS0gYS9Eb2N1bWVudGF0aW9uL3ZpcnQva3ZtL2t2bWku
cnN0CisrKyBiL0RvY3VtZW50YXRpb24vdmlydC9rdm0va3ZtaS5yc3QKQEAgLTU0OCw2ICs1NDgs
MjcgQEAgT24geDg2IHRoZSBzdHJ1Y3R1cmUgbG9va3MgbGlrZSB0aGlzOjoKIAogSXQgY29udGFp
bnMgaW5mb3JtYXRpb24gYWJvdXQgdGhlIHZDUFUgc3RhdGUgYXQgdGhlIHRpbWUgb2YgdGhlIGV2
ZW50LgogCitUaGUgcmVwbHkgdG8gZXZlbnRzIHVzZXMgdGhlICpLVk1JX0VWRU5UX1JFUExZKiBt
ZXNzYWdlIGlkIGFuZCBiZWdpbnMKK3dpdGggdHdvIGNvbW1vbiBzdHJ1Y3R1cmVzOjoKKworCXN0
cnVjdCBrdm1pX3ZjcHVfaGRyOworCXN0cnVjdCBrdm1pX2V2ZW50X3JlcGx5IHsKKwkJX191OCBh
Y3Rpb247CisJCV9fdTggZXZlbnQ7CisJCV9fdTE2IHBhZGRpbmcxOworCQlfX3UzMiBwYWRkaW5n
MjsKKwl9OworCitBbGwgZXZlbnRzIGFjY2VwdCB0aGUgS1ZNSV9FVkVOVF9BQ1RJT05fQ1JBU0gg
YWN0aW9uLCB3aGljaCBzdG9wcyB0aGUKK2d1ZXN0IHVuZ3JhY2VmdWxseSwgYnV0IGFzIHNvb24g
YXMgcG9zc2libGUuCisKK01vc3Qgb2YgdGhlIGV2ZW50cyBhY2NlcHQgdGhlIEtWTUlfRVZFTlRf
QUNUSU9OX0NPTlRJTlVFIGFjdGlvbiwgd2hpY2gKK2xldHMgdGhlIGluc3RydWN0aW9uIHRoYXQg
Y2F1c2VkIHRoZSBldmVudCB0byBjb250aW51ZSAodW5sZXNzIHNwZWNpZmllZAorb3RoZXJ3aXNl
KS4KKworU29tZSBvZiB0aGUgZXZlbnRzIGFjY2VwdCB0aGUgS1ZNSV9FVkVOVF9BQ1RJT05fUkVU
UlkgYWN0aW9uLCB0byBjb250aW51ZQorYnkgcmUtZW50ZXJpbmcgdGhlIGd1ZXN0LgorCiBTcGVj
aWZpYyBkYXRhIGNhbiBmb2xsb3cgdGhlc2UgY29tbW9uIHN0cnVjdHVyZXMuCiAKIDEuIEtWTUlf
RVZFTlRfVU5IT09LCkBAIC01NzAsNyArNTkxLDcgQEAgZm9yIHRoaXMgZXZlbnQgKHNlZSAqKktW
TUlfVk1fQ09OVFJPTF9FVkVOVFMqKikuIFRoZSBpbnRyb3NwZWN0aW9uIHRvb2wKIGhhcyBhIGNo
YW5jZSB0byB1bmhvb2sgYW5kIGNsb3NlIHRoZSBLVk1JIGNoYW5uZWwgKHNpZ25hbGluZyB0aGF0
IHRoZQogb3BlcmF0aW9uIGNhbiBwcm9jZWVkKS4KIAotMS4gS1ZNSV9FVkVOVF9QQVVTRV9WQ1BV
CisyLiBLVk1JX0VWRU5UX1BBVVNFX1ZDUFUKIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQogCiA6
QXJjaGl0ZWN0dXJlczogYWxsCmRpZmYgLS1naXQgYS9hcmNoL3g4Ni9rdm0va3ZtaS5jIGIvYXJj
aC94ODYva3ZtL2t2bWkuYwppbmRleCAyYWZiM2FiYzk3ZmEuLjg0MmQ2YWJlYmI0MSAxMDA2NDQK
LS0tIGEvYXJjaC94ODYva3ZtL2t2bWkuYworKysgYi9hcmNoL3g4Ni9rdm0va3ZtaS5jCkBAIC01
LDggKzUsNjEgQEAKICAqIENvcHlyaWdodCAoQykgMjAxOS0yMDIwIEJpdGRlZmVuZGVyIFMuUi5M
LgogICovCiAKKyNpbmNsdWRlICJsaW51eC9rdm1faG9zdC5oIgorI2luY2x1ZGUgIng4Ni5oIgog
I2luY2x1ZGUgIi4uLy4uLy4uL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9pbnQuaCIKIAor
c3RhdGljIHVuc2lnbmVkIGludCBrdm1pX3ZjcHVfbW9kZShjb25zdCBzdHJ1Y3Qga3ZtX3ZjcHUg
KnZjcHUsCisJCQkJICAgY29uc3Qgc3RydWN0IGt2bV9zcmVncyAqc3JlZ3MpCit7CisJdW5zaWdu
ZWQgaW50IG1vZGUgPSAwOworCisJaWYgKGlzX2xvbmdfbW9kZSgoc3RydWN0IGt2bV92Y3B1ICop
IHZjcHUpKSB7CisJCWlmIChzcmVncy0+Y3MubCkKKwkJCW1vZGUgPSA4OworCQllbHNlIGlmICgh
c3JlZ3MtPmNzLmRiKQorCQkJbW9kZSA9IDI7CisJCWVsc2UKKwkJCW1vZGUgPSA0OworCX0gZWxz
ZSBpZiAoc3JlZ3MtPmNyMCAmIFg4Nl9DUjBfUEUpIHsKKwkJaWYgKCFzcmVncy0+Y3MuZGIpCisJ
CQltb2RlID0gMjsKKwkJZWxzZQorCQkJbW9kZSA9IDQ7CisJfSBlbHNlIGlmICghc3JlZ3MtPmNz
LmRiKSB7CisJCW1vZGUgPSAyOworCX0gZWxzZSB7CisJCW1vZGUgPSA0OworCX0KKworCXJldHVy
biBtb2RlOworfQorCitzdGF0aWMgdm9pZCBrdm1pX2dldF9tc3JzKHN0cnVjdCBrdm1fdmNwdSAq
dmNwdSwgc3RydWN0IGt2bWlfZXZlbnRfYXJjaCAqZXYpCit7CisJX19rdm1fZ2V0X21zcih2Y3B1
LCBNU1JfSUEzMl9TWVNFTlRFUl9DUywgJmV2LT5tc3JzLnN5c2VudGVyX2NzLCB0cnVlKTsKKwlf
X2t2bV9nZXRfbXNyKHZjcHUsIE1TUl9JQTMyX1NZU0VOVEVSX0VTUCwgJmV2LT5tc3JzLnN5c2Vu
dGVyX2VzcCwKKwkJCXRydWUpOworCV9fa3ZtX2dldF9tc3IodmNwdSwgTVNSX0lBMzJfU1lTRU5U
RVJfRUlQLCAmZXYtPm1zcnMuc3lzZW50ZXJfZWlwLAorCQkJdHJ1ZSk7CisJX19rdm1fZ2V0X21z
cih2Y3B1LCBNU1JfRUZFUiwgJmV2LT5tc3JzLmVmZXIsIHRydWUpOworCV9fa3ZtX2dldF9tc3Io
dmNwdSwgTVNSX1NUQVIsICZldi0+bXNycy5zdGFyLCB0cnVlKTsKKwlfX2t2bV9nZXRfbXNyKHZj
cHUsIE1TUl9MU1RBUiwgJmV2LT5tc3JzLmxzdGFyLCB0cnVlKTsKKwlfX2t2bV9nZXRfbXNyKHZj
cHUsIE1TUl9DU1RBUiwgJmV2LT5tc3JzLmNzdGFyLCB0cnVlKTsKKwlfX2t2bV9nZXRfbXNyKHZj
cHUsIE1TUl9JQTMyX0NSX1BBVCwgJmV2LT5tc3JzLnBhdCwgdHJ1ZSk7CisJX19rdm1fZ2V0X21z
cih2Y3B1LCBNU1JfS0VSTkVMX0dTX0JBU0UsICZldi0+bXNycy5zaGFkb3dfZ3MsIHRydWUpOwor
fQorCit2b2lkIGt2bWlfYXJjaF9zZXR1cF9ldmVudChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsIHN0
cnVjdCBrdm1pX2V2ZW50ICpldikKK3sKKwlzdHJ1Y3Qga3ZtaV9ldmVudF9hcmNoICpldmVudCA9
ICZldi0+YXJjaDsKKworCWt2bV9hcmNoX3ZjcHVfZ2V0X3JlZ3ModmNwdSwgJmV2ZW50LT5yZWdz
KTsKKwlrdm1fYXJjaF92Y3B1X2dldF9zcmVncyh2Y3B1LCAmZXZlbnQtPnNyZWdzKTsKKwlldi0+
YXJjaC5tb2RlID0ga3ZtaV92Y3B1X21vZGUodmNwdSwgJmV2ZW50LT5zcmVncyk7CisJa3ZtaV9n
ZXRfbXNycyh2Y3B1LCBldmVudCk7Cit9CisKIGludCBrdm1pX2FyY2hfY21kX3ZjcHVfZ2V0X2lu
Zm8oc3RydWN0IGt2bV92Y3B1ICp2Y3B1LAogCQkJCXN0cnVjdCBrdm1pX3ZjcHVfZ2V0X2luZm9f
cmVwbHkgKnJwbCkKIHsKZGlmZiAtLWdpdCBhL2luY2x1ZGUvbGludXgva3ZtaV9ob3N0LmggYi9p
bmNsdWRlL2xpbnV4L2t2bWlfaG9zdC5oCmluZGV4IDk4ODkyN2MyOWJmNS4uNDllNjg3NzdhMzkw
IDEwMDY0NAotLS0gYS9pbmNsdWRlL2xpbnV4L2t2bWlfaG9zdC5oCisrKyBiL2luY2x1ZGUvbGlu
dXgva3ZtaV9ob3N0LmgKQEAgLTExLDYgKzExLDE0IEBAIHN0cnVjdCBrdm1fdmNwdTsKIAogI2Rl
ZmluZSBLVk1JX05VTV9DT01NQU5EUyBLVk1JX05VTV9NRVNTQUdFUwogCitzdHJ1Y3Qga3ZtaV92
Y3B1X3JlcGx5IHsKKwlpbnQgZXJyb3I7CisJaW50IGFjdGlvbjsKKwl1MzIgc2VxOworCXZvaWQg
KmRhdGE7CisJc2l6ZV90IHNpemU7Cit9OworCiBzdHJ1Y3Qga3ZtaV9qb2IgewogCXN0cnVjdCBs
aXN0X2hlYWQgbGluazsKIAl2b2lkICpjdHg7CkBAIC0yNSw2ICszMyw5IEBAIHN0cnVjdCBrdm1f
dmNwdV9pbnRyb3NwZWN0aW9uIHsKIAlzcGlubG9ja190IGpvYl9sb2NrOwogCiAJYXRvbWljX3Qg
cGF1c2VfcmVxdWVzdHM7CisKKwlzdHJ1Y3Qga3ZtaV92Y3B1X3JlcGx5IHJlcGx5OworCWJvb2wg
d2FpdGluZ19mb3JfcmVwbHk7CiB9OwogCiBzdHJ1Y3Qga3ZtX2ludHJvc3BlY3Rpb24gewpkaWZm
IC0tZ2l0IGEvaW5jbHVkZS91YXBpL2xpbnV4L2t2bWkuaCBiL2luY2x1ZGUvdWFwaS9saW51eC9r
dm1pLmgKaW5kZXggNTRhNzg4YzFjMjA0Li4yZWIxZTViMjBkNTMgMTAwNjQ0Ci0tLSBhL2luY2x1
ZGUvdWFwaS9saW51eC9rdm1pLmgKKysrIGIvaW5jbHVkZS91YXBpL2xpbnV4L2t2bWkuaApAQCAt
MTUsNiArMTUsNyBAQCBlbnVtIHsKIH07CiAKIGVudW0geworCUtWTUlfRVZFTlRfUkVQTFkgICAg
ICAgPSAwLAogCUtWTUlfRVZFTlQgICAgICAgICAgICAgPSAxLAogCiAJS1ZNSV9HRVRfVkVSU0lP
TiAgICAgICA9IDIsCkBAIC0zOCw2ICszOSwxMiBAQCBlbnVtIHsKIAlLVk1JX05VTV9FVkVOVFMK
IH07CiAKK2VudW0geworCUtWTUlfRVZFTlRfQUNUSU9OX0NPTlRJTlVFID0gMCwKKwlLVk1JX0VW
RU5UX0FDVElPTl9SRVRSWSAgICA9IDEsCisJS1ZNSV9FVkVOVF9BQ1RJT05fQ1JBU0ggICAgPSAy
LAorfTsKKwogc3RydWN0IGt2bWlfbXNnX2hkciB7CiAJX191MTYgaWQ7CiAJX191MTYgc2l6ZTsK
QEAgLTExNCw0ICsxMjEsMTEgQEAgc3RydWN0IGt2bWlfZXZlbnQgewogCXN0cnVjdCBrdm1pX2V2
ZW50X2FyY2ggYXJjaDsKIH07CiAKK3N0cnVjdCBrdm1pX2V2ZW50X3JlcGx5IHsKKwlfX3U4IGFj
dGlvbjsKKwlfX3U4IGV2ZW50OworCV9fdTE2IHBhZGRpbmcxOworCV9fdTMyIHBhZGRpbmcyOwor
fTsKKwogI2VuZGlmIC8qIF9VQVBJX19MSU5VWF9LVk1JX0ggKi8KZGlmZiAtLWdpdCBhL3Rvb2xz
L3Rlc3Rpbmcvc2VsZnRlc3RzL2t2bS94ODZfNjQva3ZtaV90ZXN0LmMgYi90b29scy90ZXN0aW5n
L3NlbGZ0ZXN0cy9rdm0veDg2XzY0L2t2bWlfdGVzdC5jCmluZGV4IDk0MjYwMWY2MTc3Yi4uMjdk
ZTVmYjI0NTgwIDEwMDY0NAotLS0gYS90b29scy90ZXN0aW5nL3NlbGZ0ZXN0cy9rdm0veDg2XzY0
L2t2bWlfdGVzdC5jCisrKyBiL3Rvb2xzL3Rlc3Rpbmcvc2VsZnRlc3RzL2t2bS94ODZfNjQva3Zt
aV90ZXN0LmMKQEAgLTMzLDYgKzMzLDEyIEBAIHN0YXRpYyB2bV9wYWRkcl90IHRlc3RfZ3BhOwog
c3RhdGljIHVpbnQ4X3QgdGVzdF93cml0ZV9wYXR0ZXJuOwogc3RhdGljIGludCBwYWdlX3NpemU7
CiAKK3N0cnVjdCB2Y3B1X3JlcGx5IHsKKwlzdHJ1Y3Qga3ZtaV9tc2dfaGRyIGhkcjsKKwlzdHJ1
Y3Qga3ZtaV92Y3B1X2hkciB2Y3B1X2hkcjsKKwlzdHJ1Y3Qga3ZtaV9ldmVudF9yZXBseSByZXBs
eTsKK307CisKIHN0cnVjdCB2Y3B1X3dvcmtlcl9kYXRhIHsKIAlzdHJ1Y3Qga3ZtX3ZtICp2bTsK
IAlpbnQgdmNwdV9pZDsKQEAgLTU1MCw3ICs1NTYsNyBAQCBzdGF0aWMgdm9pZCAqdmNwdV93b3Jr
ZXIodm9pZCAqZGF0YSkKIAogCXJ1biA9IHZjcHVfc3RhdGUoY3R4LT52bSwgY3R4LT52Y3B1X2lk
KTsKIAotCXdoaWxlICghY3R4LT5zdG9wKSB7CisJd2hpbGUgKCFSRUFEX09OQ0UoY3R4LT5zdG9w
KSkgewogCQlzdHJ1Y3QgdWNhbGwgdWM7CiAKIAkJdmNwdV9ydW4oY3R4LT52bSwgY3R4LT52Y3B1
X2lkKTsKQEAgLTU4OSw3ICs1OTUsNyBAQCBzdGF0aWMgdm9pZCB3YWl0X3ZjcHVfd29ya2VyKHB0
aHJlYWRfdCB2Y3B1X3RocmVhZCkKIHN0YXRpYyB2b2lkIHN0b3BfdmNwdV93b3JrZXIocHRocmVh
ZF90IHZjcHVfdGhyZWFkLAogCQkJICAgICBzdHJ1Y3QgdmNwdV93b3JrZXJfZGF0YSAqZGF0YSkK
IHsKLQlkYXRhLT5zdG9wID0gdHJ1ZTsKKwlXUklURV9PTkNFKGRhdGEtPnN0b3AsIHRydWUpOwog
CiAJd2FpdF92Y3B1X3dvcmtlcih2Y3B1X3RocmVhZCk7CiB9CkBAIC02NzMsOSArNjc5LDQ3IEBA
IHN0YXRpYyB2b2lkIHBhdXNlX3ZjcHUoc3RydWN0IGt2bV92bSAqdm0pCiAJCS1yLCBrdm1fc3Ry
ZXJyb3IoLXIpKTsKIH0KIAorc3RhdGljIHZvaWQgcmVwbHlfdG9fZXZlbnQoc3RydWN0IGt2bWlf
bXNnX2hkciAqZXZfaGRyLCBzdHJ1Y3Qga3ZtaV9ldmVudCAqZXYsCisJCQkgICBfX3U4IGFjdGlv
biwgc3RydWN0IHZjcHVfcmVwbHkgKnJwbCwgc2l6ZV90IHJwbF9zaXplKQoreworCXNzaXplX3Qg
cjsKKworCXJwbC0+aGRyLmlkID0gS1ZNSV9FVkVOVF9SRVBMWTsKKwlycGwtPmhkci5zZXEgPSBl
dl9oZHItPnNlcTsKKwlycGwtPmhkci5zaXplID0gcnBsX3NpemUgLSBzaXplb2YocnBsLT5oZHIp
OworCisJcnBsLT52Y3B1X2hkci52Y3B1ID0gZXYtPnZjcHU7CisKKwlycGwtPnJlcGx5LmFjdGlv
biA9IGFjdGlvbjsKKwlycGwtPnJlcGx5LmV2ZW50ID0gZXYtPmV2ZW50OworCisJciA9IHNlbmQo
VXNlcnNwYWNlX3NvY2tldCwgcnBsLCBycGxfc2l6ZSwgMCk7CisJVEVTVF9BU1NFUlQociA9PSBy
cGxfc2l6ZSwKKwkJInNlbmQoKSBmYWlsZWQsIHNlbmRpbmcgJWQsIHJlc3VsdCAlZCwgZXJybm8g
JWQgKCVzKVxuIiwKKwkJcnBsX3NpemUsIHIsIGVycm5vLCBzdHJlcnJvcihlcnJubykpOworfQor
CiBzdGF0aWMgdm9pZCB0ZXN0X3BhdXNlKHN0cnVjdCBrdm1fdm0gKnZtKQogeworCXN0cnVjdCB2
Y3B1X3dvcmtlcl9kYXRhIGRhdGEgPSB7LnZtID0gdm0sIC52Y3B1X2lkID0gVkNQVV9JRH07CisJ
X191MTYgZXZlbnRfaWQgPSBLVk1JX0VWRU5UX1BBVVNFX1ZDUFU7CisJc3RydWN0IHZjcHVfcmVw
bHkgcnBsID0ge307CisJc3RydWN0IGt2bWlfbXNnX2hkciBoZHI7CisJcHRocmVhZF90IHZjcHVf
dGhyZWFkOworCXN0cnVjdCBrdm1pX2V2ZW50IGV2OworCisJYWxsb3dfZXZlbnQodm0sIGV2ZW50
X2lkKTsKKwogCXBhdXNlX3ZjcHUodm0pOworCisJdmNwdV90aHJlYWQgPSBzdGFydF92Y3B1X3dv
cmtlcigmZGF0YSk7CisKKwlyZWNlaXZlX2V2ZW50KCZoZHIsICZldiwgc2l6ZW9mKGV2KSwgZXZl
bnRfaWQpOworCisJcmVwbHlfdG9fZXZlbnQoJmhkciwgJmV2LCBLVk1JX0VWRU5UX0FDVElPTl9D
T05USU5VRSwKKwkJCSZycGwsIHNpemVvZihycGwpKTsKKworCXN0b3BfdmNwdV93b3JrZXIodmNw
dV90aHJlYWQsICZkYXRhKTsKIH0KIAogc3RhdGljIHZvaWQgdGVzdF9pbnRyb3NwZWN0aW9uKHN0
cnVjdCBrdm1fdm0gKnZtKQpkaWZmIC0tZ2l0IGEvdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1p
LmMgYi92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWkuYwppbmRleCA1MWMwOTBhNTYyNDIuLjY3
MGMxNGM5NjgzZiAxMDA2NDQKLS0tIGEvdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pLmMKKysr
IGIvdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pLmMKQEAgLTI5MSw2ICsyOTEsNyBAQCBzdGF0
aWMgdm9pZCBrdm1pX2pvYl9yZWxlYXNlX3ZjcHUoc3RydWN0IGt2bV92Y3B1ICp2Y3B1LCB2b2lk
ICpjdHgpCiAJc3RydWN0IGt2bV92Y3B1X2ludHJvc3BlY3Rpb24gKnZjcHVpID0gVkNQVUkodmNw
dSk7CiAKIAlhdG9taWNfc2V0KCZ2Y3B1aS0+cGF1c2VfcmVxdWVzdHMsIDApOworCXZjcHVpLT53
YWl0aW5nX2Zvcl9yZXBseSA9IGZhbHNlOwogfQogCiBzdGF0aWMgdm9pZCBrdm1pX3JlbGVhc2Vf
dmNwdXMoc3RydWN0IGt2bSAqa3ZtKQpAQCAtNzAyLDEyICs3MDMsNTggQEAgdm9pZCBrdm1pX3J1
bl9qb2JzKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSkKIAl9CiB9CiAKK3N0YXRpYyBpbnQga3ZtaV92
Y3B1X2tpbGwoaW50IHNpZywgc3RydWN0IGt2bV92Y3B1ICp2Y3B1KQoreworCXN0cnVjdCBrZXJu
ZWxfc2lnaW5mbyBzaWdpbmZvWzFdID0ge307CisJaW50IGVyciA9IC1FU1JDSDsKKwlzdHJ1Y3Qg
cGlkICpwaWQ7CisKKwlyY3VfcmVhZF9sb2NrKCk7CisJcGlkID0gcmN1X2RlcmVmZXJlbmNlKHZj
cHUtPnBpZCk7CisJaWYgKHBpZCkKKwkJZXJyID0ga2lsbF9waWRfaW5mbyhzaWcsIHNpZ2luZm8s
IHBpZCk7CisJcmN1X3JlYWRfdW5sb2NrKCk7CisKKwlyZXR1cm4gZXJyOworfQorCitzdGF0aWMg
dm9pZCBrdm1pX3ZtX3NodXRkb3duKHN0cnVjdCBrdm0gKmt2bSkKK3sKKwlzdHJ1Y3Qga3ZtX3Zj
cHUgKnZjcHU7CisJaW50IGk7CisKKwlrdm1fZm9yX2VhY2hfdmNwdShpLCB2Y3B1LCBrdm0pCisJ
CWt2bWlfdmNwdV9raWxsKFNJR1RFUk0sIHZjcHUpOworfQorCit2b2lkIGt2bWlfaGFuZGxlX2Nv
bW1vbl9ldmVudF9hY3Rpb25zKHN0cnVjdCBrdm0gKmt2bSwKKwkJCQkgICAgICB1MzIgYWN0aW9u
LCBjb25zdCBjaGFyICpzdHIpCit7CisJc3dpdGNoIChhY3Rpb24pIHsKKwljYXNlIEtWTUlfRVZF
TlRfQUNUSU9OX0NSQVNIOgorCQlrdm1pX3ZtX3NodXRkb3duKGt2bSk7CisJCWJyZWFrOworCisJ
ZGVmYXVsdDoKKwkJa3ZtaV9lcnIoS1ZNSShrdm0pLCAiVW5zdXBwb3J0ZWQgYWN0aW9uICVkIGZv
ciBldmVudCAlc1xuIiwKKwkJCSBhY3Rpb24sIHN0cik7CisJfQorfQorCiBzdGF0aWMgdm9pZCBr
dm1pX3ZjcHVfcGF1c2VfZXZlbnQoc3RydWN0IGt2bV92Y3B1ICp2Y3B1KQogewogCXN0cnVjdCBr
dm1fdmNwdV9pbnRyb3NwZWN0aW9uICp2Y3B1aSA9IFZDUFVJKHZjcHUpOworCXUzMiBhY3Rpb247
CiAKIAlhdG9taWNfZGVjKCZ2Y3B1aS0+cGF1c2VfcmVxdWVzdHMpOwotCS8qIHRvIGJlIGltcGxl
bWVudGVkICovCisKKwlhY3Rpb24gPSBrdm1pX21zZ19zZW5kX3ZjcHVfcGF1c2UodmNwdSk7CisJ
c3dpdGNoIChhY3Rpb24pIHsKKwljYXNlIEtWTUlfRVZFTlRfQUNUSU9OX0NPTlRJTlVFOgorCQli
cmVhazsKKwlkZWZhdWx0OgorCQlrdm1pX2hhbmRsZV9jb21tb25fZXZlbnRfYWN0aW9ucyh2Y3B1
LT5rdm0sIGFjdGlvbiwgIlBBVVNFIik7CisJfQogfQogCiB2b2lkIGt2bWlfaGFuZGxlX3JlcXVl
c3RzKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSkKZGlmZiAtLWdpdCBhL3ZpcnQva3ZtL2ludHJvc3Bl
Y3Rpb24va3ZtaV9pbnQuaCBiL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9pbnQuaAppbmRl
eCBkMWQ5MzQ4OGFmMWMuLjUwYjJiOThkZDk5YiAxMDA2NDQKLS0tIGEvdmlydC9rdm0vaW50cm9z
cGVjdGlvbi9rdm1pX2ludC5oCisrKyBiL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9pbnQu
aApAQCAtNTQsNiArNTQsNyBAQCB2b2lkIGt2bWlfc29ja19zaHV0ZG93bihzdHJ1Y3Qga3ZtX2lu
dHJvc3BlY3Rpb24gKmt2bWkpOwogdm9pZCBrdm1pX3NvY2tfcHV0KHN0cnVjdCBrdm1faW50cm9z
cGVjdGlvbiAqa3ZtaSk7CiBib29sIGt2bWlfbXNnX3Byb2Nlc3Moc3RydWN0IGt2bV9pbnRyb3Nw
ZWN0aW9uICprdm1pKTsKIGludCBrdm1pX21zZ19zZW5kX3VuaG9vayhzdHJ1Y3Qga3ZtX2ludHJv
c3BlY3Rpb24gKmt2bWkpOwordTMyIGt2bWlfbXNnX3NlbmRfdmNwdV9wYXVzZShzdHJ1Y3Qga3Zt
X3ZjcHUgKnZjcHUpOwogCiAvKiBrdm1pLmMgKi8KIHZvaWQgKmt2bWlfbXNnX2FsbG9jKHZvaWQp
OwpAQCAtNjIsNiArNjMsNyBAQCB2b2lkIGt2bWlfbXNnX2ZyZWUodm9pZCAqYWRkcik7CiBpbnQg
a3ZtaV9hZGRfam9iKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwKIAkJIHZvaWQgKCpmY3QpKHN0cnVj
dCBrdm1fdmNwdSAqdmNwdSwgdm9pZCAqY3R4KSwKIAkJIHZvaWQgKmN0eCwgdm9pZCAoKmZyZWVf
ZmN0KSh2b2lkICpjdHgpKTsKK3ZvaWQga3ZtaV9ydW5fam9icyhzdHJ1Y3Qga3ZtX3ZjcHUgKnZj
cHUpOwogaW50IGt2bWlfY21kX3ZtX2NvbnRyb2xfZXZlbnRzKHN0cnVjdCBrdm1faW50cm9zcGVj
dGlvbiAqa3ZtaSwKIAkJCQl1bnNpZ25lZCBpbnQgZXZlbnRfaWQsIGJvb2wgZW5hYmxlKTsKIGlu
dCBrdm1pX2NtZF9yZWFkX3BoeXNpY2FsKHN0cnVjdCBrdm0gKmt2bSwgdTY0IGdwYSwgdTY0IHNp
emUsCkBAIC03Niw1ICs3OCw2IEBAIGludCBrdm1pX2NtZF92Y3B1X3BhdXNlKHN0cnVjdCBrdm1f
dmNwdSAqdmNwdSwgYm9vbCB3YWl0KTsKIC8qIGFyY2ggKi8KIGludCBrdm1pX2FyY2hfY21kX3Zj
cHVfZ2V0X2luZm8oc3RydWN0IGt2bV92Y3B1ICp2Y3B1LAogCQkJCXN0cnVjdCBrdm1pX3ZjcHVf
Z2V0X2luZm9fcmVwbHkgKnJwbCk7Cit2b2lkIGt2bWlfYXJjaF9zZXR1cF9ldmVudChzdHJ1Y3Qg
a3ZtX3ZjcHUgKnZjcHUsIHN0cnVjdCBrdm1pX2V2ZW50ICpldik7CiAKICNlbmRpZgpkaWZmIC0t
Z2l0IGEvdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pX21zZy5jIGIvdmlydC9rdm0vaW50cm9z
cGVjdGlvbi9rdm1pX21zZy5jCmluZGV4IDFlYWUwYTlhOGUwYS4uNjlhYmNhOTk5Y2QyIDEwMDY0
NAotLS0gYS92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWlfbXNnLmMKKysrIGIvdmlydC9rdm0v
aW50cm9zcGVjdGlvbi9rdm1pX21zZy5jCkBAIC0xNyw2ICsxNyw3IEBAIHN0cnVjdCBrdm1pX3Zj
cHVfY21kX2pvYiB7CiB9OwogCiBzdGF0aWMgY29uc3QgY2hhciAqY29uc3QgbXNnX0lEc1tdID0g
eworCVtLVk1JX0VWRU5UX1JFUExZXSAgICAgICA9ICJLVk1JX0VWRU5UX1JFUExZIiwKIAlbS1ZN
SV9HRVRfVkVSU0lPTl0gICAgICAgPSAiS1ZNSV9HRVRfVkVSU0lPTiIsCiAJW0tWTUlfVk1fQ0hF
Q0tfQ09NTUFORF0gID0gIktWTUlfVk1fQ0hFQ0tfQ09NTUFORCIsCiAJW0tWTUlfVk1fQ0hFQ0tf
RVZFTlRdICAgID0gIktWTUlfVk1fQ0hFQ0tfRVZFTlQiLApAQCAtMzU2LDYgKzM1Nyw1NiBAQCBz
dGF0aWMgaW50IGhhbmRsZV9nZXRfdmNwdV9pbmZvKGNvbnN0IHN0cnVjdCBrdm1pX3ZjcHVfY21k
X2pvYiAqam9iLAogCXJldHVybiBrdm1pX21zZ192Y3B1X3JlcGx5KGpvYiwgbXNnLCAwLCAmcnBs
LCBzaXplb2YocnBsKSk7CiB9CiAKK3N0YXRpYyBpbnQgaGFuZGxlX2V2ZW50X3JlcGx5KGNvbnN0
IHN0cnVjdCBrdm1pX3ZjcHVfY21kX2pvYiAqam9iLAorCQkJICAgICAgY29uc3Qgc3RydWN0IGt2
bWlfbXNnX2hkciAqbXNnLCBjb25zdCB2b2lkICpycGwpCit7CisJc3RydWN0IGt2bV92Y3B1X2lu
dHJvc3BlY3Rpb24gKnZjcHVpID0gVkNQVUkoam9iLT52Y3B1KTsKKwlzdHJ1Y3Qga3ZtX2ludHJv
c3BlY3Rpb24gKmt2bWkgPSBLVk1JKGpvYi0+dmNwdS0+a3ZtKTsKKwlzdHJ1Y3Qga3ZtaV92Y3B1
X3JlcGx5ICpleHBlY3RlZCA9ICZ2Y3B1aS0+cmVwbHk7CisJY29uc3Qgc3RydWN0IGt2bWlfZXZl
bnRfcmVwbHkgKnJlcGx5ID0gcnBsOworCXNpemVfdCB1c2VmdWwsIHJlY2VpdmVkLCBjb21tb247
CisKKwlpZiAodW5saWtlbHkobXNnLT5zZXEgIT0gZXhwZWN0ZWQtPnNlcSkpCisJCWdvdG8gb3V0
X3dha2V1cDsKKworCWNvbW1vbiA9IHNpemVvZihzdHJ1Y3Qga3ZtaV92Y3B1X2hkcikgKyBzaXpl
b2YoKnJlcGx5KTsKKwlpZiAodW5saWtlbHkobXNnLT5zaXplIDwgY29tbW9uKSkKKwkJZ290byBv
dXRfd2FrZXVwOworCisJaWYgKHVubGlrZWx5KHJlcGx5LT5wYWRkaW5nMSB8fCByZXBseS0+cGFk
ZGluZzIpKQorCQlnb3RvIG91dF93YWtldXA7CisKKwlyZWNlaXZlZCA9IG1zZy0+c2l6ZSAtIGNv
bW1vbjsKKwkvKiBEb24ndCBhY2NlcHQgbmV3ZXIvYmlnZ2VyIHN0cnVjdHVyZXMgKi8KKwlpZiAo
dW5saWtlbHkocmVjZWl2ZWQgPiBleHBlY3RlZC0+c2l6ZSkpCisJCWdvdG8gb3V0X3dha2V1cDsK
KworCXVzZWZ1bCA9IG1pbihyZWNlaXZlZCwgZXhwZWN0ZWQtPnNpemUpOworCWlmICh1c2VmdWwp
CisJCW1lbWNweShleHBlY3RlZC0+ZGF0YSwgcmVwbHkgKyAxLCB1c2VmdWwpOworCisJaWYgKHVz
ZWZ1bCA8IGV4cGVjdGVkLT5zaXplKQorCQltZW1zZXQoKGNoYXIgKilleHBlY3RlZC0+ZGF0YSAr
IHVzZWZ1bCwgMCwKKwkJCWV4cGVjdGVkLT5zaXplIC0gdXNlZnVsKTsKKworCWV4cGVjdGVkLT5h
Y3Rpb24gPSByZXBseS0+YWN0aW9uOworCWV4cGVjdGVkLT5lcnJvciA9IDA7CisKK291dF93YWtl
dXA6CisKKwlpZiAodW5saWtlbHkoZXhwZWN0ZWQtPmVycm9yKSkKKwkJa3ZtaV9lcnIoa3ZtaSwg
IkludmFsaWQgZXZlbnQgJWQvJWQgcmVwbHkgc2VxICV4LyV4IHNpemUgJXUgbWluICV6dSBleHBl
Y3RlZCAlenUgcGFkZGluZyAldSwldVxuIiwKKwkJCSByZXBseS0+ZXZlbnQsIHJlcGx5LT5hY3Rp
b24sCisJCQkgbXNnLT5zZXEsIGV4cGVjdGVkLT5zZXEsCisJCQkgbXNnLT5zaXplLCBjb21tb24s
CisJCQkgY29tbW9uICsgZXhwZWN0ZWQtPnNpemUsCisJCQkgcmVwbHktPnBhZGRpbmcxLAorCQkJ
IHJlcGx5LT5wYWRkaW5nMik7CisKKwl2Y3B1aS0+d2FpdGluZ19mb3JfcmVwbHkgPSBmYWxzZTsK
KwlyZXR1cm4gZXhwZWN0ZWQtPmVycm9yOworfQorCiAvKgogICogVGhlc2UgY29tbWFuZHMgYXJl
IGV4ZWN1dGVkIG9uIHRoZSB2Q1BVIHRocmVhZC4gVGhlIHJlY2VpdmluZyB0aHJlYWQKICAqIHBh
c3NlcyB0aGUgbWVzc2FnZXMgdXNpbmcgYSBuZXdseSBhbGxvY2F0ZWQgJ3N0cnVjdCBrdm1pX3Zj
cHVfY21kX2pvYicKQEAgLTM2NCw2ICs0MTUsNyBAQCBzdGF0aWMgaW50IGhhbmRsZV9nZXRfdmNw
dV9pbmZvKGNvbnN0IHN0cnVjdCBrdm1pX3ZjcHVfY21kX2pvYiAqam9iLAogICovCiBzdGF0aWMg
aW50KCpjb25zdCBtc2dfdmNwdVtdKShjb25zdCBzdHJ1Y3Qga3ZtaV92Y3B1X2NtZF9qb2IgKiwK
IAkJCSAgICAgIGNvbnN0IHN0cnVjdCBrdm1pX21zZ19oZHIgKiwgY29uc3Qgdm9pZCAqKSA9IHsK
KwlbS1ZNSV9FVkVOVF9SRVBMWV0gICA9IGhhbmRsZV9ldmVudF9yZXBseSwKIAlbS1ZNSV9WQ1BV
X0dFVF9JTkZPXSA9IGhhbmRsZV9nZXRfdmNwdV9pbmZvLAogfTsKIApAQCAtNDg5LDcgKzU0MSw4
IEBAIHN0YXRpYyBpbnQga3ZtaV9tc2dfZGlzcGF0Y2hfdm1fY21kKHN0cnVjdCBrdm1faW50cm9z
cGVjdGlvbiAqa3ZtaSwKIAogc3RhdGljIGJvb2wgdmNwdV9jYW5faGFuZGxlX2NvbW1hbmRzKHN0
cnVjdCBrdm1fdmNwdSAqdmNwdSkKIHsKLQlyZXR1cm4gdmNwdS0+YXJjaC5tcF9zdGF0ZSAhPSBL
Vk1fTVBfU1RBVEVfVU5JTklUSUFMSVpFRDsKKwlyZXR1cm4gVkNQVUkodmNwdSktPndhaXRpbmdf
Zm9yX3JlcGx5CisJCXx8IHZjcHUtPmFyY2gubXBfc3RhdGUgIT0gS1ZNX01QX1NUQVRFX1VOSU5J
VElBTElaRUQ7CiB9CiAKIHN0YXRpYyBpbnQga3ZtaV9nZXRfdmNwdV9pZl9yZWFkeShzdHJ1Y3Qg
a3ZtX2ludHJvc3BlY3Rpb24gKmt2bWksCkBAIC01NjksNiArNjIyLDkgQEAgc3RhdGljIGludCBr
dm1pX21zZ19kaXNwYXRjaChzdHJ1Y3Qga3ZtX2ludHJvc3BlY3Rpb24gKmt2bWksCiAKIHN0YXRp
YyBib29sIGlzX21lc3NhZ2VfYWxsb3dlZChzdHJ1Y3Qga3ZtX2ludHJvc3BlY3Rpb24gKmt2bWks
IF9fdTE2IGlkKQogeworCWlmIChpZCA9PSBLVk1JX0VWRU5UX1JFUExZKQorCQlyZXR1cm4gdHJ1
ZTsKKwogCWlmIChpZCA+PSBLVk1JX05VTV9DT01NQU5EUykKIAkJcmV0dXJuIGZhbHNlOwogCkBA
IC02MTYsMTQgKzY3MiwyMyBAQCBzdGF0aWMgaW5saW5lIHUzMiBuZXdfc2VxKHN0cnVjdCBrdm1f
aW50cm9zcGVjdGlvbiAqa3ZtaSkKIAlyZXR1cm4gYXRvbWljX2luY19yZXR1cm4oJmt2bWktPmV2
X3NlcSk7CiB9CiAKLXN0YXRpYyB2b2lkIGt2bWlfc2V0dXBfZXZlbnRfY29tbW9uKHN0cnVjdCBr
dm1pX2V2ZW50ICpldiwgdTMyIGV2X2lkKQorc3RhdGljIHZvaWQga3ZtaV9zZXR1cF9ldmVudF9j
b21tb24oc3RydWN0IGt2bWlfZXZlbnQgKmV2LCB1MzIgZXZfaWQsCisJCQkJICAgIHVuc2lnbmVk
IHNob3J0IHZjcHVfaWR4KQogewogCW1lbXNldChldiwgMCwgc2l6ZW9mKCpldikpOwogCisJZXYt
PnZjcHUgPSB2Y3B1X2lkeDsKIAlldi0+ZXZlbnQgPSBldl9pZDsKIAlldi0+c2l6ZSA9IHNpemVv
ZigqZXYpOwogfQogCitzdGF0aWMgdm9pZCBrdm1pX3NldHVwX2V2ZW50KHN0cnVjdCBrdm1fdmNw
dSAqdmNwdSwgc3RydWN0IGt2bWlfZXZlbnQgKmV2LAorCQkJICAgICB1MzIgZXZfaWQpCit7CisJ
a3ZtaV9zZXR1cF9ldmVudF9jb21tb24oZXYsIGV2X2lkLCBrdm1fdmNwdV9nZXRfaWR4KHZjcHUp
KTsKKwlrdm1pX2FyY2hfc2V0dXBfZXZlbnQodmNwdSwgZXYpOworfQorCiBpbnQga3ZtaV9tc2df
c2VuZF91bmhvb2soc3RydWN0IGt2bV9pbnRyb3NwZWN0aW9uICprdm1pKQogewogCXN0cnVjdCBr
dm1pX21zZ19oZHIgaGRyOwpAQCAtNjQwLDcgKzcwNSw4OSBAQCBpbnQga3ZtaV9tc2dfc2VuZF91
bmhvb2soc3RydWN0IGt2bV9pbnRyb3NwZWN0aW9uICprdm1pKQogCWhkci5zZXEgPSBuZXdfc2Vx
KGt2bWkpOwogCWhkci5zaXplID0gbXNnX3NpemUgLSBzaXplb2YoaGRyKTsKIAotCWt2bWlfc2V0
dXBfZXZlbnRfY29tbW9uKCZjb21tb24sIEtWTUlfRVZFTlRfVU5IT09LKTsKKwlrdm1pX3NldHVw
X2V2ZW50X2NvbW1vbigmY29tbW9uLCBLVk1JX0VWRU5UX1VOSE9PSywgMCk7CiAKIAlyZXR1cm4g
a3ZtaV9zb2NrX3dyaXRlKGt2bWksIHZlYywgbiwgbXNnX3NpemUpOwogfQorCitzdGF0aWMgaW50
IGt2bWlfd2FpdF9mb3JfcmVwbHkoc3RydWN0IGt2bV92Y3B1ICp2Y3B1KQoreworCXN0cnVjdCBz
d2FpdF9xdWV1ZV9oZWFkICp3cSA9IGt2bV9hcmNoX3ZjcHVfd3EodmNwdSk7CisJc3RydWN0IGt2
bV92Y3B1X2ludHJvc3BlY3Rpb24gKnZjcHVpID0gVkNQVUkodmNwdSk7CisJaW50IGVyciA9IDA7
CisKKwl2Y3B1aS0+d2FpdGluZ19mb3JfcmVwbHkgPSB0cnVlOworCisJd2hpbGUgKHZjcHVpLT53
YWl0aW5nX2Zvcl9yZXBseSAmJiAhZXJyKSB7CisJCWt2bWlfcnVuX2pvYnModmNwdSk7CisKKwkJ
ZXJyID0gc3dhaXRfZXZlbnRfa2lsbGFibGVfZXhjbHVzaXZlKCp3cSwKKwkJCSF2Y3B1aS0+d2Fp
dGluZ19mb3JfcmVwbHkgfHwKKwkJCSFsaXN0X2VtcHR5KCZ2Y3B1aS0+am9iX2xpc3QpKTsKKwl9
CisKKwlyZXR1cm4gZXJyOworfQorCitzdGF0aWMgaW50IGt2bWlfc2VuZF9ldmVudChzdHJ1Y3Qg
a3ZtX3ZjcHUgKnZjcHUsIHUzMiBldl9pZCwKKwkJCSAgIHZvaWQgKmV2LCBzaXplX3QgZXZfc2l6
ZSwKKwkJCSAgIHZvaWQgKnJwbCwgc2l6ZV90IHJwbF9zaXplLCBpbnQgKmFjdGlvbikKK3sKKwlz
dHJ1Y3Qga3ZtaV9tc2dfaGRyIGhkcjsKKwlzdHJ1Y3Qga3ZtaV9ldmVudCBjb21tb247CisJc3Ry
dWN0IGt2ZWMgdmVjW10gPSB7CisJCXsuaW92X2Jhc2UgPSAmaGRyLAkuaW92X2xlbiA9IHNpemVv
ZihoZHIpCSB9LAorCQl7Lmlvdl9iYXNlID0gJmNvbW1vbiwJLmlvdl9sZW4gPSBzaXplb2YoY29t
bW9uKX0sCisJCXsuaW92X2Jhc2UgPSBldiwJLmlvdl9sZW4gPSBldl9zaXplCSB9LAorCX07CisJ
c2l6ZV90IG1zZ19zaXplID0gc2l6ZW9mKGhkcikgKyBzaXplb2YoY29tbW9uKSArIGV2X3NpemU7
CisJc2l6ZV90IG4gPSBldl9zaXplID8gQVJSQVlfU0laRSh2ZWMpIDogQVJSQVlfU0laRSh2ZWMp
LTE7CisJc3RydWN0IGt2bV92Y3B1X2ludHJvc3BlY3Rpb24gKnZjcHVpID0gVkNQVUkodmNwdSk7
CisJc3RydWN0IGt2bV9pbnRyb3NwZWN0aW9uICprdm1pID0gS1ZNSSh2Y3B1LT5rdm0pOworCWlu
dCBlcnI7CisKKwltZW1zZXQoJmhkciwgMCwgc2l6ZW9mKGhkcikpOworCWhkci5pZCA9IEtWTUlf
RVZFTlQ7CisJaGRyLnNlcSA9IG5ld19zZXEoa3ZtaSk7CisJaGRyLnNpemUgPSBtc2dfc2l6ZSAt
IHNpemVvZihoZHIpOworCisJa3ZtaV9zZXR1cF9ldmVudCh2Y3B1LCAmY29tbW9uLCBldl9pZCk7
CisKKwltZW1zZXQoJnZjcHVpLT5yZXBseSwgMCwgc2l6ZW9mKHZjcHVpLT5yZXBseSkpOworCisJ
dmNwdWktPnJlcGx5LnNlcSA9IGhkci5zZXE7CisJdmNwdWktPnJlcGx5LmRhdGEgPSBycGw7CisJ
dmNwdWktPnJlcGx5LnNpemUgPSBycGxfc2l6ZTsKKwl2Y3B1aS0+cmVwbHkuZXJyb3IgPSAtRUlO
VFI7CisKKwllcnIgPSBrdm1pX3NvY2tfd3JpdGUoa3ZtaSwgdmVjLCBuLCBtc2dfc2l6ZSk7CisJ
aWYgKGVycikKKwkJZ290byBvdXQ7CisKKwllcnIgPSBrdm1pX3dhaXRfZm9yX3JlcGx5KHZjcHUp
OworCWlmIChlcnIpCisJCWdvdG8gb3V0OworCisJZXJyID0gdmNwdWktPnJlcGx5LmVycm9yOwor
CWlmIChlcnIpCisJCWdvdG8gb3V0OworCisJKmFjdGlvbiA9IHZjcHVpLT5yZXBseS5hY3Rpb247
CisKK291dDoKKwlpZiAoZXJyKQorCQlrdm1pX3NvY2tfc2h1dGRvd24oa3ZtaSk7CisJcmV0dXJu
IGVycjsKK30KKwordTMyIGt2bWlfbXNnX3NlbmRfdmNwdV9wYXVzZShzdHJ1Y3Qga3ZtX3ZjcHUg
KnZjcHUpCit7CisJaW50IGVyciwgYWN0aW9uOworCisJZXJyID0ga3ZtaV9zZW5kX2V2ZW50KHZj
cHUsIEtWTUlfRVZFTlRfUEFVU0VfVkNQVSwgTlVMTCwgMCwKKwkJCSAgICAgIE5VTEwsIDAsICZh
Y3Rpb24pOworCWlmIChlcnIpCisJCXJldHVybiBLVk1JX0VWRU5UX0FDVElPTl9DT05USU5VRTsK
KworCXJldHVybiBhY3Rpb247Cit9Cl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fClZpcnR1YWxpemF0aW9uIG1haWxpbmcgbGlzdApWaXJ0dWFsaXphdGlvbkBs
aXN0cy5saW51eC1mb3VuZGF0aW9uLm9yZwpodHRwczovL2xpc3RzLmxpbnV4Zm91bmRhdGlvbi5v
cmcvbWFpbG1hbi9saXN0aW5mby92aXJ0dWFsaXphdGlvbg==
