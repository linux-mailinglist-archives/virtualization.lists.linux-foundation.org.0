Return-Path: <virtualization-bounces@lists.linux-foundation.org>
X-Original-To: lists.virtualization@lfdr.de
Delivered-To: lists.virtualization@lfdr.de
Received: from smtp1.osuosl.org (smtp1.osuosl.org [IPv6:2605:bc80:3010::138])
	by mail.lfdr.de (Postfix) with ESMTPS id D20F64244AB
	for <lists.virtualization@lfdr.de>; Wed,  6 Oct 2021 19:40:58 +0200 (CEST)
Received: from localhost (localhost [127.0.0.1])
	by smtp1.osuosl.org (Postfix) with ESMTP id D4B8A83E5B;
	Wed,  6 Oct 2021 17:40:53 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from smtp1.osuosl.org ([127.0.0.1])
	by localhost (smtp1.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id 8N-UN6N9rXCy; Wed,  6 Oct 2021 17:40:52 +0000 (UTC)
Received: from lists.linuxfoundation.org (lf-lists.osuosl.org [IPv6:2605:bc80:3010:104::8cd3:938])
	by smtp1.osuosl.org (Postfix) with ESMTPS id E6E8284086;
	Wed,  6 Oct 2021 17:40:51 +0000 (UTC)
Received: from lf-lists.osuosl.org (localhost [127.0.0.1])
	by lists.linuxfoundation.org (Postfix) with ESMTP id BD701C0025;
	Wed,  6 Oct 2021 17:40:51 +0000 (UTC)
X-Original-To: virtualization@lists.linux-foundation.org
Delivered-To: virtualization@lists.linuxfoundation.org
Received: from smtp4.osuosl.org (smtp4.osuosl.org [IPv6:2605:bc80:3010::137])
 by lists.linuxfoundation.org (Postfix) with ESMTP id 28813C0022
 for <virtualization@lists.linux-foundation.org>;
 Wed,  6 Oct 2021 17:40:46 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by smtp4.osuosl.org (Postfix) with ESMTP id 6BDCB408DF
 for <virtualization@lists.linux-foundation.org>;
 Wed,  6 Oct 2021 17:40:45 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from smtp4.osuosl.org ([127.0.0.1])
 by localhost (smtp4.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id uPQ5SFtq3LDn
 for <virtualization@lists.linux-foundation.org>;
 Wed,  6 Oct 2021 17:40:43 +0000 (UTC)
X-Greylist: from auto-whitelisted by SQLgrey-1.8.0
Received: from mx01.bbu.dsd.mx.bitdefender.com
 (mx01.bbu.dsd.mx.bitdefender.com [91.199.104.161])
 by smtp4.osuosl.org (Postfix) with ESMTPS id B72A8408DB
 for <virtualization@lists.linux-foundation.org>;
 Wed,  6 Oct 2021 17:40:42 +0000 (UTC)
Received: from smtp.bitdefender.com (smtp01.buh.bitdefender.com [10.17.80.75])
 by mx01.bbu.dsd.mx.bitdefender.com (Postfix) with ESMTPS id
 CAFE130828BE; Wed,  6 Oct 2021 20:31:24 +0300 (EEST)
Received: from localhost (unknown [91.199.104.28])
 by smtp.bitdefender.com (Postfix) with ESMTPSA id B15533064495;
 Wed,  6 Oct 2021 20:31:24 +0300 (EEST)
X-Is-Junk-Enabled: fGZTSsP0qEJE2AIKtlSuFiRRwg9xyHmJ
From: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>
To: kvm@vger.kernel.org
Subject: [PATCH v12 74/77] KVM: introspection: add KVMI_VCPU_EVENT_SINGLESTEP
Date: Wed,  6 Oct 2021 20:31:10 +0300
Message-Id: <20211006173113.26445-75-alazar@bitdefender.com>
In-Reply-To: <20211006173113.26445-1-alazar@bitdefender.com>
References: <20211006173113.26445-1-alazar@bitdefender.com>
MIME-Version: 1.0
Cc: Tamas K Lengyel <tamas@tklengyel.com>, Wanpeng Li <wanpengli@tencent.com>,
 =?UTF-8?q?Nicu=C8=99or=20C=C3=AE=C8=9Bu?= <nicu.citu@icloud.com>,
 Sean Christopherson <seanjc@google.com>, Joerg Roedel <joro@8bytes.org>,
 virtualization@lists.linux-foundation.org,
 =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>,
 Mathieu Tarral <mathieu.tarral@protonmail.com>,
 Paolo Bonzini <pbonzini@redhat.com>, Jim Mattson <jmattson@google.com>
X-BeenThere: virtualization@lists.linux-foundation.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Linux virtualization <virtualization.lists.linux-foundation.org>
List-Unsubscribe: <https://lists.linuxfoundation.org/mailman/options/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=unsubscribe>
List-Archive: <http://lists.linuxfoundation.org/pipermail/virtualization/>
List-Post: <mailto:virtualization@lists.linux-foundation.org>
List-Help: <mailto:virtualization-request@lists.linux-foundation.org?subject=help>
List-Subscribe: <https://lists.linuxfoundation.org/mailman/listinfo/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: virtualization-bounces@lists.linux-foundation.org
Sender: "Virtualization" <virtualization-bounces@lists.linux-foundation.org>

RnJvbTogTmljdciZb3IgQ8OuyJt1IDxuaWN1LmNpdHVAaWNsb3VkLmNvbT4KClRoaXMgZXZlbnQg
aXMgc2VudCBhZnRlciBlYWNoIGluc3RydWN0aW9uIHdoZW4gdGhlIHNpbmdsZXN0ZXAgaGFzIGJl
ZW4KZW5hYmxlZCBmb3IgYSB2Q1BVLgoKU2lnbmVkLW9mZi1ieTogTmljdciZb3IgQ8OuyJt1IDxu
aWN1LmNpdHVAaWNsb3VkLmNvbT4KQ28tZGV2ZWxvcGVkLWJ5OiBBZGFsYmVydCBMYXrEg3IgPGFs
YXphckBiaXRkZWZlbmRlci5jb20+ClNpZ25lZC1vZmYtYnk6IEFkYWxiZXJ0IExhesSDciA8YWxh
emFyQGJpdGRlZmVuZGVyLmNvbT4KLS0tCiBEb2N1bWVudGF0aW9uL3ZpcnQva3ZtL2t2bWkucnN0
ICAgICAgICAgICAgICAgfCAzMSArKysrKysrKysrKwogYXJjaC94ODYva3ZtL2t2bWkuYyAgICAg
ICAgICAgICAgICAgICAgICAgICAgIHwgIDEgKwogYXJjaC94ODYva3ZtL2t2bWlfbXNnLmMgICAg
ICAgICAgICAgICAgICAgICAgIHwgIDYgKysrCiBhcmNoL3g4Ni9rdm0vdm14L3ZteC5jICAgICAg
ICAgICAgICAgICAgICAgICAgfCAgNiArKysKIGluY2x1ZGUvbGludXgva3ZtaV9ob3N0LmggICAg
ICAgICAgICAgICAgICAgICB8ICA0ICsrCiBpbmNsdWRlL3VhcGkvbGludXgva3ZtaS5oICAgICAg
ICAgICAgICAgICAgICAgfCAgNiArKysKIC4uLi90ZXN0aW5nL3NlbGZ0ZXN0cy9rdm0veDg2XzY0
L2t2bWlfdGVzdC5jICB8IDU0ICsrKysrKysrKysrKysrKysrLS0KIHZpcnQva3ZtL2ludHJvc3Bl
Y3Rpb24va3ZtaS5jICAgICAgICAgICAgICAgICB8IDQzICsrKysrKysrKysrKysrKwogdmlydC9r
dm0vaW50cm9zcGVjdGlvbi9rdm1pX2ludC5oICAgICAgICAgICAgIHwgIDEgKwogdmlydC9rdm0v
aW50cm9zcGVjdGlvbi9rdm1pX21zZy5jICAgICAgICAgICAgIHwgMTcgKysrKysrCiAxMCBmaWxl
cyBjaGFuZ2VkLCAxNjYgaW5zZXJ0aW9ucygrKSwgMyBkZWxldGlvbnMoLSkKCmRpZmYgLS1naXQg
YS9Eb2N1bWVudGF0aW9uL3ZpcnQva3ZtL2t2bWkucnN0IGIvRG9jdW1lbnRhdGlvbi92aXJ0L2t2
bS9rdm1pLnJzdAppbmRleCA3ZjcwMzQ1ZWJhYWMuLjg0OTIyZDMyNzI1NSAxMDA2NDQKLS0tIGEv
RG9jdW1lbnRhdGlvbi92aXJ0L2t2bS9rdm1pLnJzdAorKysgYi9Eb2N1bWVudGF0aW9uL3ZpcnQv
a3ZtL2t2bWkucnN0CkBAIC01NjUsNiArNTY1LDcgQEAgYmVjYXVzZSB0aGVzZSBhcmUgc2VudCBh
cyBhIHJlc3VsdCBvZiBjZXJ0YWluIGNvbW1hbmRzIChidXQgdGhleSBjYW4gYmUKIGRpc2FsbG93
ZWQgYnkgdGhlIGRldmljZSBtYW5hZ2VyKSA6OgogCiAJS1ZNSV9WQ1BVX0VWRU5UX1BBVVNFCisJ
S1ZNSV9WQ1BVX0VWRU5UX1NJTkdMRVNURVAKIAlLVk1JX1ZDUFVfRVZFTlRfVFJBUAogCiBUaGUg
Vk0gZXZlbnRzIChlLmcuICpLVk1JX1ZNX0VWRU5UX1VOSE9PSyopIGFyZSBjb250cm9sbGVkIHdp
dGgKQEAgLTEwNDQsOCArMTA0NSwxMiBAQCBFbmFibGVzL2Rpc2FibGVzIHNpbmdsZXN0ZXAgZm9y
IHRoZSBzZWxlY3RlZCB2Q1BVLgogVGhlIGludHJvc3BlY3Rpb24gdG9vbCBzaG91bGQgdXNlICpL
Vk1JX0dFVF9WRVJTSU9OKiwgdG8gY2hlY2sKIGlmIHRoZSBoYXJkd2FyZSBzdXBwb3J0cyBzaW5n
bGVzdGVwIChzZWUgKipLVk1JX0dFVF9WRVJTSU9OKiopLgogCitBZnRlciBldmVyeSBpbnN0cnVj
dGlvbiwgYSAqS1ZNSV9WQ1BVX0VWRU5UX1NJTkdMRVNURVAqIGV2ZW50IGlzIHNlbnQKK3RvIHRo
ZSBpbnRyb3NwZWN0aW9uIHRvb2wuCisKIDpFcnJvcnM6CiAKKyogLUtWTV9FUEVSTSAgLSB0aGUg
KktWTUlfVkNQVV9FVkVOVF9TSU5HTEVTVEVQKiBldmVudCBpcyBkaXNhbGxvd2VkCiAqIC1LVk1f
RU9QTk9UU1VQUCAtIHRoZSBoYXJkd2FyZSBkb2Vzbid0IHN1cHBvcnQgc2luZ2xlc3RlcAogKiAt
S1ZNX0VJTlZBTCAtIHRoZSBwYWRkaW5nIGlzIG5vdCB6ZXJvCiAqIC1LVk1fRUFHQUlOIC0gdGhl
IHNlbGVjdGVkIHZDUFUgY2FuJ3QgYmUgaW50cm9zcGVjdGVkIHlldApAQCAtMTQ4OSwzICsxNDk0
LDI5IEBAIGVtdWxhdGlvbikuCiBUaGUgKlJFVFJZKiBhY3Rpb24gaXMgdXNlZCBieSB0aGUgaW50
cm9zcGVjdGlvbiB0b29sIHRvIHJldHJ5IHRoZQogZXhlY3V0aW9uIG9mIHRoZSBjdXJyZW50IGlu
c3RydWN0aW9uLCB1c3VhbGx5IGJlY2F1c2UgaXQgY2hhbmdlZCB0aGUKIGluc3RydWN0aW9uIHBv
aW50ZXIgb3IgdGhlIHBhZ2UgcmVzdHJpY3Rpb25zLgorCisxMS4gS1ZNSV9WQ1BVX0VWRU5UX1NJ
TkdMRVNURVAKKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQorCis6QXJjaGl0ZWN0dXJl
czogeDg2Cis6VmVyc2lvbnM6ID49IDEKKzpBY3Rpb25zOiBDT05USU5VRSwgQ1JBU0gKKzpQYXJh
bWV0ZXJzOgorCis6OgorCisJc3RydWN0IGt2bWlfdmNwdV9ldmVudDsKKworOlJldHVybnM6CisK
Kzo6CisKKwlzdHJ1Y3Qga3ZtaV92Y3B1X2hkcjsKKwlzdHJ1Y3Qga3ZtaV92Y3B1X2V2ZW50X3Jl
cGx5OworCXN0cnVjdCBrdm1pX3ZjcHVfZXZlbnRfc2luZ2xlc3RlcCB7CisJCV9fdTggZmFpbGVk
OworCQlfX3U4IHBhZGRpbmdbN107CisJfTsKKworVGhpcyBldmVudCBpcyBzZW50IGFmdGVyIGVh
Y2ggaW5zdHJ1Y3Rpb24sIGFzIGxvbmcgYXMgdGhlIHNpbmdsZXN0ZXAgaXMKK2VuYWJsZWQgZm9y
IHRoZSBjdXJyZW50IHZDUFUgKHNlZSAqKktWTUlfVkNQVV9DT05UUk9MX1NJTkdMRVNURVAqKiku
CmRpZmYgLS1naXQgYS9hcmNoL3g4Ni9rdm0va3ZtaS5jIGIvYXJjaC94ODYva3ZtL2t2bWkuYwpp
bmRleCBlMjZhMGVlZTE1OTIuLjU4YzJkZWJkODgxNSAxMDA2NDQKLS0tIGEvYXJjaC94ODYva3Zt
L2t2bWkuYworKysgYi9hcmNoL3g4Ni9rdm0va3ZtaS5jCkBAIC0yMCw2ICsyMCw3IEBAIHZvaWQg
a3ZtaV9hcmNoX2luaXRfdmNwdV9ldmVudHNfbWFzayh1bnNpZ25lZCBsb25nICpzdXBwb3J0ZWQp
CiAJc2V0X2JpdChLVk1JX1ZDUFVfRVZFTlRfREVTQ1JJUFRPUiwgc3VwcG9ydGVkKTsKIAlzZXRf
Yml0KEtWTUlfVkNQVV9FVkVOVF9NU1IsIHN1cHBvcnRlZCk7CiAJc2V0X2JpdChLVk1JX1ZDUFVf
RVZFTlRfUEYsIHN1cHBvcnRlZCk7CisJc2V0X2JpdChLVk1JX1ZDUFVfRVZFTlRfU0lOR0xFU1RF
UCwgc3VwcG9ydGVkKTsKIAlzZXRfYml0KEtWTUlfVkNQVV9FVkVOVF9UUkFQLCBzdXBwb3J0ZWQp
OwogCXNldF9iaXQoS1ZNSV9WQ1BVX0VWRU5UX1hTRVRCViwgc3VwcG9ydGVkKTsKIH0KZGlmZiAt
LWdpdCBhL2FyY2gveDg2L2t2bS9rdm1pX21zZy5jIGIvYXJjaC94ODYva3ZtL2t2bWlfbXNnLmMK
aW5kZXggNmQzOTgwZTE4MjgxLi5lYTM4ZWI3Y2NiN2MgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L2t2
bS9rdm1pX21zZy5jCisrKyBiL2FyY2gveDg2L2t2bS9rdm1pX21zZy5jCkBAIC0yODQsNiArMjg0
LDEyIEBAIHN0YXRpYyBpbnQgaGFuZGxlX3ZjcHVfY29udHJvbF9zaW5nbGVzdGVwKGNvbnN0IHN0
cnVjdCBrdm1pX3ZjcHVfbXNnX2pvYiAqam9iLAogCXN0cnVjdCBrdm1fdmNwdSAqdmNwdSA9IGpv
Yi0+dmNwdTsKIAlpbnQgZWMgPSAwOwogCisJaWYgKCFrdm1pX2lzX2V2ZW50X2FsbG93ZWQoS1ZN
SSh2Y3B1LT5rdm0pLAorCQkJCSAgIEtWTUlfVkNQVV9FVkVOVF9TSU5HTEVTVEVQKSkgeworCQll
YyA9IC1LVk1fRVBFUk07CisJCWdvdG8gcmVwbHk7CisJfQorCiAJaWYgKG5vbl96ZXJvX3BhZGRp
bmcocmVxLT5wYWRkaW5nLCBBUlJBWV9TSVpFKHJlcS0+cGFkZGluZykpIHx8CiAJICAgIHJlcS0+
ZW5hYmxlID4gMSkgewogCQllYyA9IC1LVk1fRUlOVkFMOwpkaWZmIC0tZ2l0IGEvYXJjaC94ODYv
a3ZtL3ZteC92bXguYyBiL2FyY2gveDg2L2t2bS92bXgvdm14LmMKaW5kZXggMWRmMGEyOWQxZDhk
Li40ZjViMDRmYjFlZGUgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L2t2bS92bXgvdm14LmMKKysrIGIv
YXJjaC94ODYva3ZtL3ZteC92bXguYwpAQCAtNTU4Nyw2ICs1NTg3LDcgQEAgc3RhdGljIGludCBo
YW5kbGVfcGF1c2Uoc3RydWN0IGt2bV92Y3B1ICp2Y3B1KQogCiBzdGF0aWMgaW50IGhhbmRsZV9t
b25pdG9yX3RyYXAoc3RydWN0IGt2bV92Y3B1ICp2Y3B1KQogeworCWt2bWlfc2luZ2xlc3RlcF9k
b25lKHZjcHUpOwogCXJldHVybiAxOwogfQogCkBAIC02MTM3LDYgKzYxMzgsMTEgQEAgc3RhdGlj
IGludCBfX3ZteF9oYW5kbGVfZXhpdChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsIGZhc3RwYXRoX3Qg
ZXhpdF9mYXN0cGF0aCkKIAkJfQogCX0KIAorCWlmIChrdm1pX3ZjcHVfcnVubmluZ19zaW5nbGVz
dGVwKHZjcHUpICYmCisJICAgIGV4aXRfcmVhc29uLmJhc2ljICE9IEVYSVRfUkVBU09OX0VQVF9W
SU9MQVRJT04gJiYKKwkgICAgZXhpdF9yZWFzb24uYmFzaWMgIT0gRVhJVF9SRUFTT05fTU9OSVRP
Ul9UUkFQX0ZMQUcpCisJCWt2bWlfc2luZ2xlc3RlcF9mYWlsZWQodmNwdSk7CisKIAlpZiAoZXhp
dF9mYXN0cGF0aCAhPSBFWElUX0ZBU1RQQVRIX05PTkUpCiAJCXJldHVybiAxOwogCmRpZmYgLS1n
aXQgYS9pbmNsdWRlL2xpbnV4L2t2bWlfaG9zdC5oIGIvaW5jbHVkZS9saW51eC9rdm1pX2hvc3Qu
aAppbmRleCBlMjEwM2FiOWQwZDUuLmVjMzhlNDM0YzhlOSAxMDA2NDQKLS0tIGEvaW5jbHVkZS9s
aW51eC9rdm1pX2hvc3QuaAorKysgYi9pbmNsdWRlL2xpbnV4L2t2bWlfaG9zdC5oCkBAIC04MSw2
ICs4MSw4IEBAIHZvaWQga3ZtaV9oYW5kbGVfcmVxdWVzdHMoc3RydWN0IGt2bV92Y3B1ICp2Y3B1
KTsKIGJvb2wga3ZtaV9oeXBlcmNhbGxfZXZlbnQoc3RydWN0IGt2bV92Y3B1ICp2Y3B1KTsKIGJv
b2wga3ZtaV9icmVha3BvaW50X2V2ZW50KHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwgdTY0IGd2YSwg
dTggaW5zbl9sZW4pOwogYm9vbCBrdm1pX3ZjcHVfcnVubmluZ19zaW5nbGVzdGVwKHN0cnVjdCBr
dm1fdmNwdSAqdmNwdSk7Cit2b2lkIGt2bWlfc2luZ2xlc3RlcF9kb25lKHN0cnVjdCBrdm1fdmNw
dSAqdmNwdSk7Cit2b2lkIGt2bWlfc2luZ2xlc3RlcF9mYWlsZWQoc3RydWN0IGt2bV92Y3B1ICp2
Y3B1KTsKIAogI2Vsc2UKIApAQCAtOTcsNiArOTksOCBAQCBzdGF0aWMgaW5saW5lIGJvb2wga3Zt
aV9icmVha3BvaW50X2V2ZW50KHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwgdTY0IGd2YSwKIAkJCQkJ
IHU4IGluc25fbGVuKSB7IHJldHVybiB0cnVlOyB9CiBzdGF0aWMgaW5saW5lIGJvb2wga3ZtaV92
Y3B1X3J1bm5pbmdfc2luZ2xlc3RlcChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUpCiAJCQl7IHJldHVy
biBmYWxzZTsgfQorc3RhdGljIGlubGluZSB2b2lkIGt2bWlfc2luZ2xlc3RlcF9kb25lKHN0cnVj
dCBrdm1fdmNwdSAqdmNwdSkgeyB9CitzdGF0aWMgaW5saW5lIHZvaWQga3ZtaV9zaW5nbGVzdGVw
X2ZhaWxlZChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUpIHsgfQogCiAjZW5kaWYgLyogQ09ORklHX0tW
TV9JTlRST1NQRUNUSU9OICovCiAKZGlmZiAtLWdpdCBhL2luY2x1ZGUvdWFwaS9saW51eC9rdm1p
LmggYi9pbmNsdWRlL3VhcGkvbGludXgva3ZtaS5oCmluZGV4IDMxYmYyYjZmMzc3OS4uMTQ4ZDE0
NWRkZWEwIDEwMDY0NAotLS0gYS9pbmNsdWRlL3VhcGkvbGludXgva3ZtaS5oCisrKyBiL2luY2x1
ZGUvdWFwaS9saW51eC9rdm1pLmgKQEAgLTczLDYgKzczLDcgQEAgZW51bSB7CiAJS1ZNSV9WQ1BV
X0VWRU5UX0RFU0NSSVBUT1IgPSBLVk1JX1ZDUFVfRVZFTlRfSUQoNiksCiAJS1ZNSV9WQ1BVX0VW
RU5UX01TUiAgICAgICAgPSBLVk1JX1ZDUFVfRVZFTlRfSUQoNyksCiAJS1ZNSV9WQ1BVX0VWRU5U
X1BGICAgICAgICAgPSBLVk1JX1ZDUFVfRVZFTlRfSUQoOCksCisJS1ZNSV9WQ1BVX0VWRU5UX1NJ
TkdMRVNURVAgPSBLVk1JX1ZDUFVfRVZFTlRfSUQoOSksCiAKIAlLVk1JX05FWFRfVkNQVV9FVkVO
VAogfTsKQEAgLTIyMiw0ICsyMjMsOSBAQCBzdHJ1Y3Qga3ZtaV92Y3B1X2NvbnRyb2xfc2luZ2xl
c3RlcCB7CiAJX191OCBwYWRkaW5nWzddOwogfTsKIAorc3RydWN0IGt2bWlfdmNwdV9ldmVudF9z
aW5nbGVzdGVwIHsKKwlfX3U4IGZhaWxlZDsKKwlfX3U4IHBhZGRpbmdbN107Cit9OworCiAjZW5k
aWYgLyogX1VBUElfX0xJTlVYX0tWTUlfSCAqLwpkaWZmIC0tZ2l0IGEvdG9vbHMvdGVzdGluZy9z
ZWxmdGVzdHMva3ZtL3g4Nl82NC9rdm1pX3Rlc3QuYyBiL3Rvb2xzL3Rlc3Rpbmcvc2VsZnRlc3Rz
L2t2bS94ODZfNjQva3ZtaV90ZXN0LmMKaW5kZXggMWJkMDExMTViZTMxLi5mYWVmOTA4ZWVlZGQg
MTAwNjQ0Ci0tLSBhL3Rvb2xzL3Rlc3Rpbmcvc2VsZnRlc3RzL2t2bS94ODZfNjQva3ZtaV90ZXN0
LmMKKysrIGIvdG9vbHMvdGVzdGluZy9zZWxmdGVzdHMva3ZtL3g4Nl82NC9rdm1pX3Rlc3QuYwpA
QCAtMTgyMywxMiArMTgyMyw2MCBAQCBzdGF0aWMgdm9pZCBjbWRfdmNwdV9zaW5nbGVzdGVwKHN0
cnVjdCBrdm1fdm0gKnZtLCBfX3U4IGVuYWJsZSwKIAkJCSAgICZyZXEuaGRyLCBzaXplb2YocmVx
KSwgTlVMTCwgMCwgZXhwZWN0ZWRfZXJyKTsKIH0KIAorc3RhdGljIHZvaWQgX19jb250cm9sX3Np
bmdsZXN0ZXAoYm9vbCBlbmFibGUpCit7CisJc3RydWN0IHsKKwkJc3RydWN0IGt2bWlfbXNnX2hk
ciBoZHI7CisJCXN0cnVjdCBrdm1pX3ZjcHVfaGRyIHZjcHVfaGRyOworCQlzdHJ1Y3Qga3ZtaV92
Y3B1X2NvbnRyb2xfc2luZ2xlc3RlcCBjbWQ7CisJfSByZXEgPSB7fTsKKwlpbnQgcjsKKworCXJl
cS5jbWQuZW5hYmxlID0gZW5hYmxlID8gMSA6IDA7CisKKwlyID0gX19kb192Y3B1MF9jb21tYW5k
KEtWTUlfVkNQVV9DT05UUk9MX1NJTkdMRVNURVAsCisJCQkgICAgICZyZXEuaGRyLCBzaXplb2Yo
cmVxKSwgTlVMTCwgMCk7CisJVEVTVF9BU1NFUlQociA9PSAwLAorCQkiS1ZNSV9WQ1BVX0NPTlRS
T0xfU0lOR0xFU1RFUCBmYWlsZWQsIGVycm9yICVkKCVzKVxuIiwKKwkJLXIsIGt2bV9zdHJlcnJv
cigtcikpOworfQorCitzdGF0aWMgdm9pZCB0ZXN0X3NpbmdsZXN0ZXBfZXZlbnQoX191MTYgZXZl
bnRfaWQpCit7CisJc3RydWN0IHsKKwkJc3RydWN0IHZjcHVfZXZlbnQgdmNwdV9ldjsKKwkJc3Ry
dWN0IGt2bWlfdmNwdV9ldmVudF9zaW5nbGVzdGVwIHNpbmdsZXN0ZXA7CisJfSBldjsKKwlib29s
IGVuYWJsZSA9IHRydWUsIGRpc2FibGUgPSBmYWxzZTsKKwlzdHJ1Y3QgdmNwdV9yZXBseSBycGwg
PSB7IH07CisJc3RydWN0IGt2bWlfbXNnX2hkciBoZHI7CisKKwlfX2NvbnRyb2xfc2luZ2xlc3Rl
cChlbmFibGUpOworCisJcmVjZWl2ZV92Y3B1X2V2ZW50KCZoZHIsICZldi52Y3B1X2V2LCBzaXpl
b2YoZXYpLCBldmVudF9pZCk7CisKKwlwcl9kZWJ1ZygiU0lOR0xFU1RFUCBldmVudCwgcmlwIDB4
JWxseCBzdWNjZXNzICVkXG4iLAorCQkgZXYudmNwdV9ldi5jb21tb24uYXJjaC5yZWdzLnJpcCwg
IWV2LnNpbmdsZXN0ZXAuZmFpbGVkKTsKKwlURVNUX0FTU0VSVCghZXYuc2luZ2xlc3RlcC5mYWls
ZWQsICJTaW5nbGVzdGVwIGZhaWxlZCIpOworCisJX19jb250cm9sX3NpbmdsZXN0ZXAoZGlzYWJs
ZSk7CisKKwlyZXBseV90b19ldmVudCgmaGRyLCAmZXYudmNwdV9ldiwgS1ZNSV9FVkVOVF9BQ1RJ
T05fQ09OVElOVUUsCisJCSAgICAgICAmcnBsLCBzaXplb2YocnBsKSk7Cit9CisKIHN0YXRpYyB2
b2lkIHRlc3Rfc3VwcG9ydGVkX3NpbmdsZXN0ZXAoc3RydWN0IGt2bV92bSAqdm0pCiB7Ci0JX191
OCBkaXNhYmxlID0gMCwgZW5hYmxlID0gMSwgZW5hYmxlX2ludmFsID0gMjsKKwlzdHJ1Y3QgdmNw
dV93b3JrZXJfZGF0YSBkYXRhID0gey52bSA9IHZtLCAudmNwdV9pZCA9IFZDUFVfSUQgfTsKKwlf
X3UxNiBldmVudF9pZCA9IEtWTUlfVkNQVV9FVkVOVF9TSU5HTEVTVEVQOworCV9fdTggZW5hYmxl
X2ludmFsID0gMjsKKwlwdGhyZWFkX3QgdmNwdV90aHJlYWQ7CiAKLQljbWRfdmNwdV9zaW5nbGVz
dGVwKHZtLCBlbmFibGUsIDApOwotCWNtZF92Y3B1X3NpbmdsZXN0ZXAodm0sIGRpc2FibGUsIDAp
OworCWVuYWJsZV92Y3B1X2V2ZW50KHZtLCBldmVudF9pZCk7CisJdmNwdV90aHJlYWQgPSBzdGFy
dF92Y3B1X3dvcmtlcigmZGF0YSk7CisJdGVzdF9zaW5nbGVzdGVwX2V2ZW50KGV2ZW50X2lkKTsK
Kwl3YWl0X3ZjcHVfd29ya2VyKHZjcHVfdGhyZWFkKTsKKwlkaXNhYmxlX3ZjcHVfZXZlbnQodm0s
IGV2ZW50X2lkKTsKIAogCWNtZF92Y3B1X3NpbmdsZXN0ZXAodm0sIGVuYWJsZV9pbnZhbCwgLUtW
TV9FSU5WQUwpOwogfQpkaWZmIC0tZ2l0IGEvdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pLmMg
Yi92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWkuYwppbmRleCBjMjBjNzA1NDcwNjUuLjRlZDE0
NTQyMWQ2OSAxMDA2NDQKLS0tIGEvdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pLmMKKysrIGIv
dmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pLmMKQEAgLTExOTQsMyArMTE5NCw0NiBAQCBib29s
IGt2bWlfdmNwdV9ydW5uaW5nX3NpbmdsZXN0ZXAoc3RydWN0IGt2bV92Y3B1ICp2Y3B1KQogCXJl
dHVybiByZXQ7CiB9CiBFWFBPUlRfU1lNQk9MKGt2bWlfdmNwdV9ydW5uaW5nX3NpbmdsZXN0ZXAp
OworCitzdGF0aWMgdm9pZCBrdm1pX3NpbmdsZXN0ZXBfZXZlbnQoc3RydWN0IGt2bV92Y3B1ICp2
Y3B1LCBib29sIHN1Y2Nlc3MpCit7CisJdTMyIGFjdGlvbjsKKworCWFjdGlvbiA9IGt2bWlfbXNn
X3NlbmRfdmNwdV9zaW5nbGVzdGVwKHZjcHUsIHN1Y2Nlc3MpOworCXN3aXRjaCAoYWN0aW9uKSB7
CisJY2FzZSBLVk1JX0VWRU5UX0FDVElPTl9DT05USU5VRToKKwkJYnJlYWs7CisJZGVmYXVsdDoK
KwkJa3ZtaV9oYW5kbGVfY29tbW9uX2V2ZW50X2FjdGlvbnModmNwdSwgYWN0aW9uKTsKKwl9Cit9
CisKK3N0YXRpYyB2b2lkIGt2bWlfaGFuZGxlX3NpbmdsZXN0ZXBfZXhpdChzdHJ1Y3Qga3ZtX3Zj
cHUgKnZjcHUsIGJvb2wgc3VjY2VzcykKK3sKKwlzdHJ1Y3Qga3ZtX3ZjcHVfaW50cm9zcGVjdGlv
biAqdmNwdWk7CisJc3RydWN0IGt2bV9pbnRyb3NwZWN0aW9uICprdm1pOworCXN0cnVjdCBrdm0g
Kmt2bSA9IHZjcHUtPmt2bTsKKworCWt2bWkgPSBrdm1pX2dldChrdm0pOworCWlmICgha3ZtaSkK
KwkJcmV0dXJuOworCisJdmNwdWkgPSBWQ1BVSSh2Y3B1KTsKKworCWlmICh2Y3B1aS0+c2luZ2xl
c3RlcC5sb29wKQorCQlrdm1pX3NpbmdsZXN0ZXBfZXZlbnQodmNwdSwgc3VjY2Vzcyk7CisKKwlr
dm1pX3B1dChrdm0pOworfQorCit2b2lkIGt2bWlfc2luZ2xlc3RlcF9kb25lKHN0cnVjdCBrdm1f
dmNwdSAqdmNwdSkKK3sKKwlrdm1pX2hhbmRsZV9zaW5nbGVzdGVwX2V4aXQodmNwdSwgdHJ1ZSk7
Cit9CitFWFBPUlRfU1lNQk9MKGt2bWlfc2luZ2xlc3RlcF9kb25lKTsKKwordm9pZCBrdm1pX3Np
bmdsZXN0ZXBfZmFpbGVkKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSkKK3sKKwlrdm1pX2hhbmRsZV9z
aW5nbGVzdGVwX2V4aXQodmNwdSwgZmFsc2UpOworfQorRVhQT1JUX1NZTUJPTChrdm1pX3Npbmds
ZXN0ZXBfZmFpbGVkKTsKZGlmZiAtLWdpdCBhL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9p
bnQuaCBiL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9pbnQuaAppbmRleCA0ODE1ZmE2MWIx
MzYuLjVmNGJjZGYyN2Q2YSAxMDA2NDQKLS0tIGEvdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1p
X2ludC5oCisrKyBiL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9pbnQuaApAQCAtNjQsNiAr
NjQsNyBAQCB1MzIga3ZtaV9tc2dfc2VuZF92Y3B1X3BhdXNlKHN0cnVjdCBrdm1fdmNwdSAqdmNw
dSk7CiB1MzIga3ZtaV9tc2dfc2VuZF92Y3B1X2h5cGVyY2FsbChzdHJ1Y3Qga3ZtX3ZjcHUgKnZj
cHUpOwogdTMyIGt2bWlfbXNnX3NlbmRfdmNwdV9icChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsIHU2
NCBncGEsIHU4IGluc25fbGVuKTsKIHUzMiBrdm1pX21zZ19zZW5kX3ZjcHVfcGYoc3RydWN0IGt2
bV92Y3B1ICp2Y3B1LCB1NjQgZ3BhLCB1NjQgZ3ZhLCB1OCBhY2Nlc3MpOwordTMyIGt2bWlfbXNn
X3NlbmRfdmNwdV9zaW5nbGVzdGVwKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwgYm9vbCBzdWNjZXNz
KTsKIAogLyoga3ZtaS5jICovCiB2b2lkICprdm1pX21zZ19hbGxvYyh2b2lkKTsKZGlmZiAtLWdp
dCBhL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9tc2cuYyBiL3ZpcnQva3ZtL2ludHJvc3Bl
Y3Rpb24va3ZtaV9tc2cuYwppbmRleCBlMmFlZjc2YmZkMTYuLmYyODBhNGI5ZmVlMyAxMDA2NDQK
LS0tIGEvdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pX21zZy5jCisrKyBiL3ZpcnQva3ZtL2lu
dHJvc3BlY3Rpb24va3ZtaV9tc2cuYwpAQCAtODgzLDMgKzg4MywyMCBAQCB1MzIga3ZtaV9tc2df
c2VuZF92Y3B1X3BmKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwgdTY0IGdwYSwgdTY0IGd2YSwgdTgg
YWNjZXNzKQogCiAJcmV0dXJuIGFjdGlvbjsKIH0KKwordTMyIGt2bWlfbXNnX3NlbmRfdmNwdV9z
aW5nbGVzdGVwKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwgYm9vbCBzdWNjZXNzKQoreworCXN0cnVj
dCBrdm1pX3ZjcHVfZXZlbnRfc2luZ2xlc3RlcCBlOworCXUzMiBhY3Rpb247CisJaW50IGVycjsK
KworCW1lbXNldCgmZSwgMCwgc2l6ZW9mKGUpKTsKKwllLmZhaWxlZCA9IHN1Y2Nlc3MgPyAwIDog
MTsKKworCWVyciA9IGt2bWlfc2VuZF92Y3B1X2V2ZW50KHZjcHUsIEtWTUlfVkNQVV9FVkVOVF9T
SU5HTEVTVEVQLAorCQkJCSAgICZlLCBzaXplb2YoZSksIE5VTEwsIDAsICZhY3Rpb24pOworCWlm
IChlcnIpCisJCXJldHVybiBLVk1JX0VWRU5UX0FDVElPTl9DT05USU5VRTsKKworCXJldHVybiBh
Y3Rpb247Cit9Cl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
ClZpcnR1YWxpemF0aW9uIG1haWxpbmcgbGlzdApWaXJ0dWFsaXphdGlvbkBsaXN0cy5saW51eC1m
b3VuZGF0aW9uLm9yZwpodHRwczovL2xpc3RzLmxpbnV4Zm91bmRhdGlvbi5vcmcvbWFpbG1hbi9s
aXN0aW5mby92aXJ0dWFsaXphdGlvbg==
