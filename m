Return-Path: <virtualization-bounces@lists.linux-foundation.org>
X-Original-To: lists.virtualization@lfdr.de
Delivered-To: lists.virtualization@lfdr.de
Received: from fraxinus.osuosl.org (smtp4.osuosl.org [140.211.166.137])
	by mail.lfdr.de (Postfix) with ESMTPS id 3296B155E0D
	for <lists.virtualization@lfdr.de>; Fri,  7 Feb 2020 19:26:32 +0100 (CET)
Received: from localhost (localhost [127.0.0.1])
	by fraxinus.osuosl.org (Postfix) with ESMTP id 86EBE869FE;
	Fri,  7 Feb 2020 18:26:30 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from fraxinus.osuosl.org ([127.0.0.1])
	by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id iSqoOFu0KJAO; Fri,  7 Feb 2020 18:26:26 +0000 (UTC)
Received: from lists.linuxfoundation.org (lf-lists.osuosl.org [140.211.9.56])
	by fraxinus.osuosl.org (Postfix) with ESMTP id 14FBB86A9E;
	Fri,  7 Feb 2020 18:26:06 +0000 (UTC)
Received: from lf-lists.osuosl.org (localhost [127.0.0.1])
	by lists.linuxfoundation.org (Postfix) with ESMTP id 063A0C013E;
	Fri,  7 Feb 2020 18:26:06 +0000 (UTC)
X-Original-To: virtualization@lists.linux-foundation.org
Delivered-To: virtualization@lists.linuxfoundation.org
Received: from fraxinus.osuosl.org (smtp4.osuosl.org [140.211.166.137])
 by lists.linuxfoundation.org (Postfix) with ESMTP id 5D97CC013E
 for <virtualization@lists.linux-foundation.org>;
 Fri,  7 Feb 2020 18:26:00 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by fraxinus.osuosl.org (Postfix) with ESMTP id 443F98698D
 for <virtualization@lists.linux-foundation.org>;
 Fri,  7 Feb 2020 18:26:00 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from fraxinus.osuosl.org ([127.0.0.1])
 by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id jU4r-9hcST39
 for <virtualization@lists.linux-foundation.org>;
 Fri,  7 Feb 2020 18:25:57 +0000 (UTC)
X-Greylist: domain auto-whitelisted by SQLgrey-1.7.6
Received: from mx01.bbu.dsd.mx.bitdefender.com
 (mx01.bbu.dsd.mx.bitdefender.com [91.199.104.161])
 by fraxinus.osuosl.org (Postfix) with ESMTPS id D1A0C86942
 for <virtualization@lists.linux-foundation.org>;
 Fri,  7 Feb 2020 18:25:55 +0000 (UTC)
Received: from smtp.bitdefender.com (smtp01.buh.bitdefender.com [10.17.80.75])
 by mx01.bbu.dsd.mx.bitdefender.com (Postfix) with ESMTPS id
 C64A1305D363; Fri,  7 Feb 2020 20:16:41 +0200 (EET)
Received: from host.bbu.bitdefender.biz (unknown [195.210.4.22])
 by smtp.bitdefender.com (Postfix) with ESMTPSA id B3347305207B;
 Fri,  7 Feb 2020 20:16:41 +0200 (EET)
From: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>
To: kvm@vger.kernel.org
Subject: [RFC PATCH v7 69/78] KVM: introspection: add KVMI_VCPU_CONTROL_MSR
 and KVMI_EVENT_MSR
Date: Fri,  7 Feb 2020 20:16:27 +0200
Message-Id: <20200207181636.1065-70-alazar@bitdefender.com>
In-Reply-To: <20200207181636.1065-1-alazar@bitdefender.com>
References: <20200207181636.1065-1-alazar@bitdefender.com>
MIME-Version: 1.0
Cc: =?UTF-8?q?Nicu=C8=99or=20C=C3=AE=C8=9Bu?= <ncitu@bitdefender.com>,
 =?UTF-8?q?Mihai=20Don=C8=9Bu?= <mdontu@bitdefender.com>,
 Sean Christopherson <sean.j.christopherson@intel.com>,
 virtualization@lists.linux-foundation.org,
 =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>,
 Paolo Bonzini <pbonzini@redhat.com>
X-BeenThere: virtualization@lists.linux-foundation.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Linux virtualization <virtualization.lists.linux-foundation.org>
List-Unsubscribe: <https://lists.linuxfoundation.org/mailman/options/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=unsubscribe>
List-Archive: <http://lists.linuxfoundation.org/pipermail/virtualization/>
List-Post: <mailto:virtualization@lists.linux-foundation.org>
List-Help: <mailto:virtualization-request@lists.linux-foundation.org?subject=help>
List-Subscribe: <https://lists.linuxfoundation.org/mailman/listinfo/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: virtualization-bounces@lists.linux-foundation.org
Sender: "Virtualization" <virtualization-bounces@lists.linux-foundation.org>

RnJvbTogTWloYWkgRG9uyJt1IDxtZG9udHVAYml0ZGVmZW5kZXIuY29tPgoKVGhpcyBjb21tYW5k
IGlzIHVzZWQgdG8gZW5hYmxlL2Rpc2FibGUgaW50cm9zcGVjdGlvbiBmb3IgYSBzcGVjaWZpYwpN
U1IuIFRoZSBLVk1JX0VWRU5UX01TUiBldmVudCBpcyBzZW5kIHdoZW4gdGhlIHRyYWNrZWQgTVNS
IGlzIGdvaW5nIHRvCmJlIGNoYW5nZWQuIFRoZSBpbnRyb3NwZWN0aW9uIHRvb2wgY2FuIHJlc3Bv
bmQgYnkgYWxsb3dpbmcgdGhlIGd1ZXN0IHRvCmNvbnRpbnVlIHdpdGggbm9ybWFsIGV4ZWN1dGlv
biBvciBieSBkaXNjYXJkaW5nIHRoZSBjaGFuZ2UuCgpUaGlzIGlzIG1lYW50IHRvIHByZXZlbnQg
bWFsaWNpb3VzIGNoYW5nZXMgdG8gTVNScwpzdWNoIGFzIE1TUl9JQTMyX1NZU0VOVEVSX0VJUC4K
ClNpZ25lZC1vZmYtYnk6IE1paGFpIERvbsibdSA8bWRvbnR1QGJpdGRlZmVuZGVyLmNvbT4KQ28t
ZGV2ZWxvcGVkLWJ5OiBOaWN1yJlvciBDw67Im3UgPG5jaXR1QGJpdGRlZmVuZGVyLmNvbT4KU2ln
bmVkLW9mZi1ieTogTmljdciZb3IgQ8OuyJt1IDxuY2l0dUBiaXRkZWZlbmRlci5jb20+CkNvLWRl
dmVsb3BlZC1ieTogQWRhbGJlcnQgTGF6xINyIDxhbGF6YXJAYml0ZGVmZW5kZXIuY29tPgpTaWdu
ZWQtb2ZmLWJ5OiBBZGFsYmVydCBMYXrEg3IgPGFsYXphckBiaXRkZWZlbmRlci5jb20+Ci0tLQog
RG9jdW1lbnRhdGlvbi92aXJ0L2t2bS9rdm1pLnJzdCAgICAgICAgICAgICAgIHwgIDc1ICsrKysr
KysrCiBhcmNoL3g4Ni9pbmNsdWRlL2FzbS9rdm1pX2hvc3QuaCAgICAgICAgICAgICAgfCAgMTIg
KysKIGFyY2gveDg2L2luY2x1ZGUvdWFwaS9hc20va3ZtaS5oICAgICAgICAgICAgICB8ICAxOCAr
KwogYXJjaC94ODYva3ZtL2t2bWkuYyAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgMTYzICsr
KysrKysrKysrKysrKysrKwogYXJjaC94ODYva3ZtL3g4Ni5jICAgICAgICAgICAgICAgICAgICAg
ICAgICAgIHwgICAzICsKIGluY2x1ZGUvdWFwaS9saW51eC9rdm1pLmggICAgICAgICAgICAgICAg
ICAgICB8ICAgMiArCiAuLi4vdGVzdGluZy9zZWxmdGVzdHMva3ZtL3g4Nl82NC9rdm1pX3Rlc3Qu
YyAgfCAxMDIgKysrKysrKysrKysKIHZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9pbnQuaCAg
ICAgICAgICAgICB8ICAgNCArCiB2aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWlfbXNnLmMgICAg
ICAgICAgICAgfCAgMTMgKysKIDkgZmlsZXMgY2hhbmdlZCwgMzkyIGluc2VydGlvbnMoKykKCmRp
ZmYgLS1naXQgYS9Eb2N1bWVudGF0aW9uL3ZpcnQva3ZtL2t2bWkucnN0IGIvRG9jdW1lbnRhdGlv
bi92aXJ0L2t2bS9rdm1pLnJzdAppbmRleCAwYTBlNTMwNWEwYWYuLjQ5MzBhODQyMDBmYyAxMDA2
NDQKLS0tIGEvRG9jdW1lbnRhdGlvbi92aXJ0L2t2bS9rdm1pLnJzdAorKysgYi9Eb2N1bWVudGF0
aW9uL3ZpcnQva3ZtL2t2bWkucnN0CkBAIC01MzQsNiArNTM0LDcgQEAgdGhlIGZvbGxvd2luZyBl
dmVudHM6OgogCUtWTUlfRVZFTlRfQ1IKIAlLVk1JX0VWRU5UX0RFU0NSSVBUT1IKIAlLVk1JX0VW
RU5UX0hZUEVSQ0FMTAorCUtWTUlfRVZFTlRfTVNSCiAJS1ZNSV9FVkVOVF9UUkFQCiAJS1ZNSV9F
VkVOVF9YU0VUQlYKIApAQCAtODIwLDYgKzgyMSw0NSBAQCBSZXR1cm5zIHRoZSBndWVzdCBtZW1v
cnkgdHlwZSBmb3IgYSBzcGVjaWZpYyBwaHlzaWNhbCBhZGRyZXNzLgogKiAtS1ZNX0VJTlZBTCAt
IHBhZGRpbmcgaXMgbm90IHplcm8KICogLUtWTV9FQUdBSU4gLSB0aGUgc2VsZWN0ZWQgdkNQVSBj
YW4ndCBiZSBpbnRyb3NwZWN0ZWQgeWV0CiAKKzE5LiBLVk1JX1ZDUFVfQ09OVFJPTF9NU1IKKy0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KKworOkFyY2hpdGVjdHVyZXM6IHg4NgorOlZlcnNpb25z
OiA+PSAxCis6UGFyYW1ldGVyczoKKworOjoKKworCXN0cnVjdCBrdm1pX3ZjcHVfaGRyOworCXN0
cnVjdCBrdm1pX3ZjcHVfY29udHJvbF9tc3IgeworCQlfX3U4IGVuYWJsZTsKKwkJX191OCBwYWRk
aW5nMTsKKwkJX191MTYgcGFkZGluZzI7CisJCV9fdTMyIG1zcjsKKwl9OworCis6UmV0dXJuczoK
KworOjoKKworCXN0cnVjdCBrdm1pX2Vycm9yX2NvZGUKKworRW5hYmxlcy9kaXNhYmxlcyBpbnRy
b3NwZWN0aW9uIGZvciBhIHNwZWNpZmljIE1TUiBhbmQgbXVzdCBiZSB1c2VkCitpbiBhZGRpdGlv
biB0byAqS1ZNSV9WQ1BVX0NPTlRST0xfRVZFTlRTKiB3aXRoIHRoZSAqS1ZNSV9FVkVOVF9NU1Iq
IElEIHNldC4KKworQ3VycmVudGx5LCBvbmx5IE1TUnMgd2l0aGluIHRoZSBmb2xsb3dpbmcgdHdv
IHJhbmdlcyBhcmUgc3VwcG9ydGVkLiBUcnlpbmcKK3RvIGNvbnRyb2wgZXZlbnRzIGZvciBhbnkg
b3RoZXIgcmVnaXN0ZXIgd2lsbCBmYWlsIHdpdGggLUtWTV9FSU5WQUw6OgorCisJMCAgICAgICAg
ICAuLi4gMHgwMDAwMWZmZgorCTB4YzAwMDAwMDAgLi4uIDB4YzAwMDFmZmYKKworOkVycm9yczoK
KworKiAtS1ZNX0VJTlZBTCAtIHRoZSBzZWxlY3RlZCB2Q1BVIGlzIGludmFsaWQKKyogLUtWTV9F
SU5WQUwgLSB0aGUgc3BlY2lmaWVkIE1TUiBpcyBpbnZhbGlkCisqIC1LVk1fRUlOVkFMIC0gcGFk
ZGluZyBpcyBub3QgemVybworKiAtS1ZNX0VBR0FJTiAtIHRoZSBzZWxlY3RlZCB2Q1BVIGNhbid0
IGJlIGludHJvc3BlY3RlZCB5ZXQKKwogRXZlbnRzCiA9PT09PT0KIApAQCAtMTEyNywzICsxMTY3
LDM4IEBAIGludHJvc3BlY3Rpb24gaGFzIGJlZW4gZW5hYmxlZCBmb3IgdGhpcyBldmVudCAoc2Vl
ICoqS1ZNSV9WQ1BVX0NPTlRST0xfRVZFTlRTKiopCiAJS1ZNSV9ERVNDX1RSCiAKIGBgd3JpdGVg
YCBpcyAxIGlmIHRoZSBkZXNjcmlwdG9yIHdhcyB3cml0dGVuLCAwIG90aGVyd2lzZS4KKworOS4g
S1ZNSV9FVkVOVF9NU1IKKy0tLS0tLS0tLS0tLS0tLS0tCisKKzpBcmNoaXRlY3R1cmVzOiB4ODYK
KzpWZXJzaW9uczogPj0gMQorOkFjdGlvbnM6IENPTlRJTlVFLCBDUkFTSAorOlBhcmFtZXRlcnM6
CisKKzo6CisKKwlzdHJ1Y3Qga3ZtaV9ldmVudDsKKwlzdHJ1Y3Qga3ZtaV9ldmVudF9tc3Igewor
CQlfX3UzMiBtc3I7CisJCV9fdTMyIHBhZGRpbmc7CisJCV9fdTY0IG9sZF92YWx1ZTsKKwkJX191
NjQgbmV3X3ZhbHVlOworCX07CisKKzpSZXR1cm5zOgorCis6OgorCisJc3RydWN0IGt2bWlfdmNw
dV9oZHI7CisJc3RydWN0IGt2bWlfZXZlbnRfcmVwbHk7CisJc3RydWN0IGt2bWlfZXZlbnRfbXNy
X3JlcGx5IHsKKwkJX191NjQgbmV3X3ZhbDsKKwl9OworCitUaGlzIGV2ZW50IGlzIHNlbnQgd2hl
biBhIG1vZGVsIHNwZWNpZmljIHJlZ2lzdGVyIGlzIGdvaW5nIHRvIGJlIGNoYW5nZWQKK2FuZCB0
aGUgaW50cm9zcGVjdGlvbiBoYXMgYmVlbiBlbmFibGVkIGZvciB0aGlzIGV2ZW50IGFuZCBmb3Ig
dGhpcyBzcGVjaWZpYworcmVnaXN0ZXIgKHNlZSAqKktWTUlfVkNQVV9DT05UUk9MX0VWRU5UUyoq
KS4KKworYGBrdm1pX2V2ZW50YGAsIHRoZSBNU1IgbnVtYmVyLCB0aGUgb2xkIHZhbHVlIGFuZCB0
aGUgbmV3IHZhbHVlIGFyZQorc2VudCB0byB0aGUgaW50cm9zcGVjdGlvbiB0b29sLiBUaGUgKkNP
TlRJTlVFKiBhY3Rpb24gd2lsbCBzZXQgdGhlIGBgbmV3X3ZhbGBgLgpkaWZmIC0tZ2l0IGEvYXJj
aC94ODYvaW5jbHVkZS9hc20va3ZtaV9ob3N0LmggYi9hcmNoL3g4Ni9pbmNsdWRlL2FzbS9rdm1p
X2hvc3QuaAppbmRleCAxMGIyNTE4NTZjMGUuLmY5YWFmZjQ1ZDA4MiAxMDA2NDQKLS0tIGEvYXJj
aC94ODYvaW5jbHVkZS9hc20va3ZtaV9ob3N0LmgKKysrIGIvYXJjaC94ODYvaW5jbHVkZS9hc20v
a3ZtaV9ob3N0LmgKQEAgLTIsNyArMiwxMCBAQAogI2lmbmRlZiBfQVNNX1g4Nl9LVk1JX0hPU1Rf
SAogI2RlZmluZSBfQVNNX1g4Nl9LVk1JX0hPU1RfSAogCitzdHJ1Y3QgbXNyX2RhdGE7CisKICNk
ZWZpbmUgS1ZNSV9OVU1fQ1IgNQorI2RlZmluZSBLVk1JX05VTV9NU1IgMHgyMDAwCiAKIHN0cnVj
dCBrdm1pX21vbml0b3JfaW50ZXJjZXB0aW9uIHsKIAlib29sIGt2bWlfaW50ZXJjZXB0ZWQ7CkBA
IC0xNSw2ICsxOCwxMiBAQCBzdHJ1Y3Qga3ZtaV9pbnRlcmNlcHRpb24gewogCXN0cnVjdCBrdm1p
X21vbml0b3JfaW50ZXJjZXB0aW9uIGJyZWFrcG9pbnQ7CiAJc3RydWN0IGt2bWlfbW9uaXRvcl9p
bnRlcmNlcHRpb24gY3IzdzsKIAlzdHJ1Y3Qga3ZtaV9tb25pdG9yX2ludGVyY2VwdGlvbiBkZXNj
cmlwdG9yOworCXN0cnVjdCB7CisJCXN0cnVjdCB7CisJCQlERUNMQVJFX0JJVE1BUChsb3csIEtW
TUlfTlVNX01TUik7CisJCQlERUNMQVJFX0JJVE1BUChoaWdoLCBLVk1JX05VTV9NU1IpOworCQl9
IGt2bWlfbWFzazsKKwl9IG1zcnc7CiB9OwogCiBzdHJ1Y3Qga3ZtX3ZjcHVfYXJjaF9pbnRyb3Nw
ZWN0aW9uIHsKQEAgLTM0LDYgKzQzLDcgQEAgYm9vbCBrdm1pX21vbml0b3JfY3Izd19pbnRlcmNl
cHQoc3RydWN0IGt2bV92Y3B1ICp2Y3B1LCBib29sIGVuYWJsZSk7CiB2b2lkIGt2bWlfeHNldGJ2
X2V2ZW50KHN0cnVjdCBrdm1fdmNwdSAqdmNwdSk7CiBib29sIGt2bWlfbW9uaXRvcl9kZXNjX2lu
dGVyY2VwdChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsIGJvb2wgZW5hYmxlKTsKIGJvb2wga3ZtaV9k
ZXNjcmlwdG9yX2V2ZW50KHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwgdTggZGVzY3JpcHRvciwgdTgg
d3JpdGUpOworYm9vbCBrdm1pX21zcl9ldmVudChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsIHN0cnVj
dCBtc3JfZGF0YSAqbXNyKTsKIAogI2Vsc2UgLyogQ09ORklHX0tWTV9JTlRST1NQRUNUSU9OICov
CiAKQEAgLTUwLDYgKzYwLDggQEAgc3RhdGljIGlubGluZSBib29sIGt2bWlfbW9uaXRvcl9kZXNj
X2ludGVyY2VwdChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsCiAJCQkJCSAgICAgICBib29sIGVuYWJs
ZSkgeyByZXR1cm4gZmFsc2U7IH0KIHN0YXRpYyBpbmxpbmUgYm9vbCBrdm1pX2Rlc2NyaXB0b3Jf
ZXZlbnQoc3RydWN0IGt2bV92Y3B1ICp2Y3B1LCB1OCBkZXNjcmlwdG9yLAogCQkJCQkgdTggd3Jp
dGUpIHsgcmV0dXJuIHRydWU7IH0KK3N0YXRpYyBpbmxpbmUgYm9vbCBrdm1pX21zcl9ldmVudChz
dHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsIHN0cnVjdCBtc3JfZGF0YSAqbXNyKQorCQkJCXsgcmV0dXJu
IHRydWU7IH0KIAogI2VuZGlmIC8qIENPTkZJR19LVk1fSU5UUk9TUEVDVElPTiAqLwogCmRpZmYg
LS1naXQgYS9hcmNoL3g4Ni9pbmNsdWRlL3VhcGkvYXNtL2t2bWkuaCBiL2FyY2gveDg2L2luY2x1
ZGUvdWFwaS9hc20va3ZtaS5oCmluZGV4IDZmNDExYjliYTQ0OS4uZjRiZTdkMTJmNjNhIDEwMDY0
NAotLS0gYS9hcmNoL3g4Ni9pbmNsdWRlL3VhcGkvYXNtL2t2bWkuaAorKysgYi9hcmNoL3g4Ni9p
bmNsdWRlL3VhcGkvYXNtL2t2bWkuaApAQCAtMTIxLDQgKzEyMSwyMiBAQCBzdHJ1Y3Qga3ZtaV9l
dmVudF9kZXNjcmlwdG9yIHsKIAlfX3U4IHBhZGRpbmdbNl07CiB9OwogCitzdHJ1Y3Qga3ZtaV92
Y3B1X2NvbnRyb2xfbXNyIHsKKwlfX3U4IGVuYWJsZTsKKwlfX3U4IHBhZGRpbmcxOworCV9fdTE2
IHBhZGRpbmcyOworCV9fdTMyIG1zcjsKK307CisKK3N0cnVjdCBrdm1pX2V2ZW50X21zciB7CisJ
X191MzIgbXNyOworCV9fdTMyIHBhZGRpbmc7CisJX191NjQgb2xkX3ZhbHVlOworCV9fdTY0IG5l
d192YWx1ZTsKK307CisKK3N0cnVjdCBrdm1pX2V2ZW50X21zcl9yZXBseSB7CisJX191NjQgbmV3
X3ZhbDsKK307CisKICNlbmRpZiAvKiBfVUFQSV9BU01fWDg2X0tWTUlfSCAqLwpkaWZmIC0tZ2l0
IGEvYXJjaC94ODYva3ZtL2t2bWkuYyBiL2FyY2gveDg2L2t2bS9rdm1pLmMKaW5kZXggMDQ4ZjBl
MWY5Zjc5Li43NzA1YWMxNTVjODQgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L2t2bS9rdm1pLmMKKysr
IGIvYXJjaC94ODYva3ZtL2t2bWkuYwpAQCAtMzY5LDYgKzM2OSw3MiBAQCBzdGF0aWMgdm9pZCBr
dm1pX2FyY2hfZGlzYWJsZV9kZXNjX2ludGVyY2VwdChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUpCiAJ
dmNwdS0+YXJjaC5rdm1pLT5kZXNjcmlwdG9yLmt2bV9pbnRlcmNlcHRlZCA9IGZhbHNlOwogfQog
CitzdGF0aWMgdW5zaWduZWQgbG9uZyAqbXNyX21hc2soc3RydWN0IGt2bV92Y3B1ICp2Y3B1LCB1
bnNpZ25lZCBpbnQgKm1zcikKK3sKKwlzd2l0Y2ggKCptc3IpIHsKKwljYXNlIDAgLi4uIDB4MWZm
ZjoKKwkJcmV0dXJuIHZjcHUtPmFyY2gua3ZtaS0+bXNydy5rdm1pX21hc2subG93OworCWNhc2Ug
MHhjMDAwMDAwMCAuLi4gMHhjMDAwMWZmZjoKKwkJKm1zciAmPSAweDFmZmY7CisJCXJldHVybiB2
Y3B1LT5hcmNoLmt2bWktPm1zcncua3ZtaV9tYXNrLmhpZ2g7CisJfQorCisJcmV0dXJuIE5VTEw7
Cit9CisKK3N0YXRpYyBib29sIHRlc3RfbXNyX21hc2soc3RydWN0IGt2bV92Y3B1ICp2Y3B1LCB1
bnNpZ25lZCBpbnQgbXNyKQoreworCXVuc2lnbmVkIGxvbmcgKm1hc2sgPSBtc3JfbWFzayh2Y3B1
LCAmbXNyKTsKKworCWlmICghbWFzaykKKwkJcmV0dXJuIGZhbHNlOworCisJcmV0dXJuICEhdGVz
dF9iaXQobXNyLCBtYXNrKTsKK30KKworc3RhdGljIGJvb2wgbXNyX2NvbnRyb2woc3RydWN0IGt2
bV92Y3B1ICp2Y3B1LCB1bnNpZ25lZCBpbnQgbXNyLCBib29sIGVuYWJsZSkKK3sKKwl1bnNpZ25l
ZCBsb25nICptYXNrID0gbXNyX21hc2sodmNwdSwgJm1zcik7CisKKwlpZiAoIW1hc2spCisJCXJl
dHVybiBmYWxzZTsKKworCWlmIChlbmFibGUpCisJCXNldF9iaXQobXNyLCBtYXNrKTsKKwllbHNl
CisJCWNsZWFyX2JpdChtc3IsIG1hc2spOworCisJcmV0dXJuIHRydWU7Cit9CisKK3N0YXRpYyB1
bnNpZ25lZCBpbnQgbXNyX21hc2tfdG9fYmFzZShzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsIHVuc2ln
bmVkIGxvbmcgKm1hc2spCit7CisJaWYgKG1hc2sgPT0gdmNwdS0+YXJjaC5rdm1pLT5tc3J3Lmt2
bWlfbWFzay5oaWdoKQorCQlyZXR1cm4gMHhjMDAwMDAwMDsKKworCXJldHVybiAwOworfQorCitz
dGF0aWMgdm9pZCBrdm1pX2FyY2hfZGlzYWJsZV9tc3JfaW50ZXJjZXB0KHN0cnVjdCBrdm1fdmNw
dSAqdmNwdSwKKwkJCQkJICAgIHVuc2lnbmVkIGxvbmcgKm1hc2spCit7CisJaW50IG9mZnNldCA9
IC0xOworCXVuc2lnbmVkIGludCBtc3JfYmFzZSA9IG1zcl9tYXNrX3RvX2Jhc2UodmNwdSwgbWFz
ayk7CisKKwlmb3IgKDs7KSB7CisJCW9mZnNldCA9IGZpbmRfbmV4dF9iaXQobWFzaywgS1ZNSV9O
VU1fTVNSLCBvZmZzZXQgKyAxKTsKKworCQlpZiAob2Zmc2V0ID49IEtWTUlfTlVNX01TUikKKwkJ
CWJyZWFrOworCisJCWt2bV94ODZfb3BzLT5jb250cm9sX21zcl9pbnRlcmNlcHQodmNwdSwgbXNy
X2Jhc2UgKyBvZmZzZXQsCisJCQkJCQkgICBNU1JfVFlQRV9XLCBmYWxzZSk7CisJCW1zcl9jb250
cm9sKHZjcHUsIG1zcl9iYXNlICsgb2Zmc2V0LCBmYWxzZSk7CisJfQorCisJYml0bWFwX3plcm8o
bWFzaywgS1ZNSV9OVU1fTVNSKTsKK30KKwogaW50IGt2bWlfYXJjaF9jbWRfY29udHJvbF9pbnRl
cmNlcHQoc3RydWN0IGt2bV92Y3B1ICp2Y3B1LAogCQkJCSAgICB1bnNpZ25lZCBpbnQgZXZlbnRf
aWQsIGJvb2wgZW5hYmxlKQogewpAQCAtNDE4LDYgKzQ4NCw4IEBAIGJvb2wga3ZtaV9hcmNoX3Jl
c3RvcmVfaW50ZXJjZXB0aW9uKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSkKIAlrdm1pX2FyY2hfZGlz
YWJsZV9icF9pbnRlcmNlcHQodmNwdSk7CiAJa3ZtaV9hcmNoX2Rpc2FibGVfY3Izd19pbnRlcmNl
cHQodmNwdSk7CiAJa3ZtaV9hcmNoX2Rpc2FibGVfZGVzY19pbnRlcmNlcHQodmNwdSk7CisJa3Zt
aV9hcmNoX2Rpc2FibGVfbXNyX2ludGVyY2VwdCh2Y3B1LCBhcmNoX3ZjcHVpLT5tc3J3Lmt2bWlf
bWFzay5sb3cpOworCWt2bWlfYXJjaF9kaXNhYmxlX21zcl9pbnRlcmNlcHQodmNwdSwgYXJjaF92
Y3B1aS0+bXNydy5rdm1pX21hc2suaGlnaCk7CiAKIAlyZXR1cm4gdHJ1ZTsKIH0KQEAgLTc0Niwz
ICs4MTQsOTggQEAgYm9vbCBrdm1pX2Rlc2NyaXB0b3JfZXZlbnQoc3RydWN0IGt2bV92Y3B1ICp2
Y3B1LCB1OCBkZXNjcmlwdG9yLCB1OCB3cml0ZSkKIAlyZXR1cm4gcmV0OwogfQogRVhQT1JUX1NZ
TUJPTChrdm1pX2Rlc2NyaXB0b3JfZXZlbnQpOworCitzdGF0aWMgYm9vbCBrdm1pX21zcl92YWxp
ZCh1bnNpZ25lZCBpbnQgbXNyKQoreworCWlmICgobXNyIDwgMHgxZmZmKSB8fCAoKG1zciA+IDB4
YzAwMDAwMDApICYmIChtc3IgPCAweGMwMDAxZmZmKSkpCisJCXJldHVybiB0cnVlOworCisJcmV0
dXJuIGZhbHNlOworfQorCisKK2ludCBrdm1pX2FyY2hfY21kX3ZjcHVfY29udHJvbF9tc3Ioc3Ry
dWN0IGt2bV92Y3B1ICp2Y3B1LAorCQkJCSAgIGNvbnN0IHN0cnVjdCBrdm1pX3ZjcHVfY29udHJv
bF9tc3IgKnJlcSkKK3sKKwlpZiAocmVxLT5wYWRkaW5nMSB8fCByZXEtPnBhZGRpbmcyKQorCQly
ZXR1cm4gLUtWTV9FSU5WQUw7CisKKwlpZiAoIWt2bWlfbXNyX3ZhbGlkKHJlcS0+bXNyKSkKKwkJ
cmV0dXJuIC1LVk1fRUlOVkFMOworCisJa3ZtX3g4Nl9vcHMtPmNvbnRyb2xfbXNyX2ludGVyY2Vw
dCh2Y3B1LCByZXEtPm1zciwgTVNSX1RZUEVfVywKKwkJCQkJICAgcmVxLT5lbmFibGUpOworCW1z
cl9jb250cm9sKHZjcHUsIHJlcS0+bXNyLCByZXEtPmVuYWJsZSk7CisKKwlyZXR1cm4gMDsKK30K
Kworc3RhdGljIHUzMiBrdm1pX3NlbmRfbXNyKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwgdTMyIG1z
ciwgdTY0IG9sZF92YWx1ZSwKKwkJCSB1NjQgbmV3X3ZhbHVlLCB1NjQgKnJldF92YWx1ZSkKK3sK
KwlzdHJ1Y3Qga3ZtaV9ldmVudF9tc3IgZSA9IHsKKwkJLm1zciA9IG1zciwKKwkJLm9sZF92YWx1
ZSA9IG9sZF92YWx1ZSwKKwkJLm5ld192YWx1ZSA9IG5ld192YWx1ZSwKKwl9OworCXN0cnVjdCBr
dm1pX2V2ZW50X21zcl9yZXBseSByOworCWludCBlcnIsIGFjdGlvbjsKKworCWVyciA9IGt2bWlf
c2VuZF9ldmVudCh2Y3B1LCBLVk1JX0VWRU5UX01TUiwgJmUsIHNpemVvZihlKSwKKwkJCSAgICAg
ICZyLCBzaXplb2YociksICZhY3Rpb24pOworCWlmIChlcnIpIHsKKwkJKnJldF92YWx1ZSA9IG5l
d192YWx1ZTsKKwkJcmV0dXJuIEtWTUlfRVZFTlRfQUNUSU9OX0NPTlRJTlVFOworCX0KKworCSpy
ZXRfdmFsdWUgPSByLm5ld192YWw7CisJcmV0dXJuIGFjdGlvbjsKK30KKworc3RhdGljIGJvb2wg
X19rdm1pX21zcl9ldmVudChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsIHN0cnVjdCBtc3JfZGF0YSAq
bXNyKQoreworCXN0cnVjdCBtc3JfZGF0YSBvbGRfbXNyID0geworCQkuaG9zdF9pbml0aWF0ZWQg
PSB0cnVlLAorCQkuaW5kZXggPSBtc3ItPmluZGV4LAorCX07CisJYm9vbCByZXQgPSBmYWxzZTsK
Kwl1NjQgcmV0X3ZhbHVlOworCXUzMiBhY3Rpb247CisKKwlpZiAoIXRlc3RfbXNyX21hc2sodmNw
dSwgbXNyLT5pbmRleCkpCisJCXJldHVybiB0cnVlOworCWlmIChrdm1feDg2X29wcy0+Z2V0X21z
cih2Y3B1LCAmb2xkX21zcikpCisJCXJldHVybiB0cnVlOworCWlmIChvbGRfbXNyLmRhdGEgPT0g
bXNyLT5kYXRhKQorCQlyZXR1cm4gdHJ1ZTsKKworCWFjdGlvbiA9IGt2bWlfc2VuZF9tc3IodmNw
dSwgbXNyLT5pbmRleCwgb2xkX21zci5kYXRhLCBtc3ItPmRhdGEsCisJCQkgICAgICAgJnJldF92
YWx1ZSk7CisJc3dpdGNoIChhY3Rpb24pIHsKKwljYXNlIEtWTUlfRVZFTlRfQUNUSU9OX0NPTlRJ
TlVFOgorCQltc3ItPmRhdGEgPSByZXRfdmFsdWU7CisJCXJldCA9IHRydWU7CisJCWJyZWFrOwor
CWRlZmF1bHQ6CisJCWt2bWlfaGFuZGxlX2NvbW1vbl9ldmVudF9hY3Rpb25zKHZjcHUtPmt2bSwg
YWN0aW9uLCAiTVNSIik7CisJfQorCisJcmV0dXJuIHJldDsKK30KKworYm9vbCBrdm1pX21zcl9l
dmVudChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsIHN0cnVjdCBtc3JfZGF0YSAqbXNyKQoreworCXN0
cnVjdCBrdm1faW50cm9zcGVjdGlvbiAqa3ZtaTsKKwlib29sIHJldCA9IHRydWU7CisKKwlrdm1p
ID0ga3ZtaV9nZXQodmNwdS0+a3ZtKTsKKwlpZiAoIWt2bWkpCisJCXJldHVybiB0cnVlOworCisJ
aWYgKGlzX2V2ZW50X2VuYWJsZWQodmNwdSwgS1ZNSV9FVkVOVF9NU1IpKQorCQlyZXQgPSBfX2t2
bWlfbXNyX2V2ZW50KHZjcHUsIG1zcik7CisKKwlrdm1pX3B1dCh2Y3B1LT5rdm0pOworCisJcmV0
dXJuIHJldDsKK30KZGlmZiAtLWdpdCBhL2FyY2gveDg2L2t2bS94ODYuYyBiL2FyY2gveDg2L2t2
bS94ODYuYwppbmRleCBmYTU4M2Y4MjI5OGUuLjVkNmFjNmM5OTI0NiAxMDA2NDQKLS0tIGEvYXJj
aC94ODYva3ZtL3g4Ni5jCisrKyBiL2FyY2gveDg2L2t2bS94ODYuYwpAQCAtMTQ3MCw2ICsxNDcw
LDkgQEAgc3RhdGljIGludCBfX2t2bV9zZXRfbXNyKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwgdTMy
IGluZGV4LCB1NjQgZGF0YSwKIAltc3IuaW5kZXggPSBpbmRleDsKIAltc3IuaG9zdF9pbml0aWF0
ZWQgPSBob3N0X2luaXRpYXRlZDsKIAorCWlmICghaG9zdF9pbml0aWF0ZWQgJiYgIWt2bWlfbXNy
X2V2ZW50KHZjcHUsICZtc3IpKQorCQlyZXR1cm4gMTsKKwogCXJldHVybiBrdm1feDg2X29wcy0+
c2V0X21zcih2Y3B1LCAmbXNyKTsKIH0KIApkaWZmIC0tZ2l0IGEvaW5jbHVkZS91YXBpL2xpbnV4
L2t2bWkuaCBiL2luY2x1ZGUvdWFwaS9saW51eC9rdm1pLmgKaW5kZXggYThmNWRjNDE1ZTNkLi4y
ZDM3ZDQwN2Y2NWQgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvdWFwaS9saW51eC9rdm1pLmgKKysrIGIv
aW5jbHVkZS91YXBpL2xpbnV4L2t2bWkuaApAQCAtMzksNiArMzksNyBAQCBlbnVtIHsKIAogCUtW
TUlfVkNQVV9HRVRfWFNBVkUgICAgID0gMTgsCiAJS1ZNSV9WQ1BVX0dFVF9NVFJSX1RZUEUgPSAx
OSwKKwlLVk1JX1ZDUFVfQ09OVFJPTF9NU1IgICA9IDIwLAogCiAJS1ZNSV9OVU1fTUVTU0FHRVMK
IH07CkBAIC01Miw2ICs1Myw3IEBAIGVudW0gewogCUtWTUlfRVZFTlRfVFJBUCAgICAgICA9IDUs
CiAJS1ZNSV9FVkVOVF9YU0VUQlYgICAgID0gNiwKIAlLVk1JX0VWRU5UX0RFU0NSSVBUT1IgPSA3
LAorCUtWTUlfRVZFTlRfTVNSICAgICAgICA9IDgsCiAKIAlLVk1JX05VTV9FVkVOVFMKIH07CmRp
ZmYgLS1naXQgYS90b29scy90ZXN0aW5nL3NlbGZ0ZXN0cy9rdm0veDg2XzY0L2t2bWlfdGVzdC5j
IGIvdG9vbHMvdGVzdGluZy9zZWxmdGVzdHMva3ZtL3g4Nl82NC9rdm1pX3Rlc3QuYwppbmRleCA0
MzA4Y2I5OTVjZTMuLjdiZjJiNjRiNjJhMyAxMDA2NDQKLS0tIGEvdG9vbHMvdGVzdGluZy9zZWxm
dGVzdHMva3ZtL3g4Nl82NC9rdm1pX3Rlc3QuYworKysgYi90b29scy90ZXN0aW5nL3NlbGZ0ZXN0
cy9rdm0veDg2XzY0L2t2bWlfdGVzdC5jCkBAIC01Niw2ICs1Niw3IEBAIGVudW0gewogCUdVRVNU
X1RFU1RfQ1IsCiAJR1VFU1RfVEVTVF9ERVNDUklQVE9SLAogCUdVRVNUX1RFU1RfSFlQRVJDQUxM
LAorCUdVRVNUX1RFU1RfTVNSLAogCUdVRVNUX1RFU1RfWFNFVEJWLAogfTsKIApAQCAtOTYsNiAr
OTcsMTUgQEAgc3RhdGljIHZvaWQgZ3Vlc3RfaHlwZXJjYWxsX3Rlc3Qodm9pZCkKIAlhc20gdm9s
YXRpbGUoIi5ieXRlIDB4MGYsMHgwMSwweGMxIik7CiB9CiAKK3N0YXRpYyB2b2lkIGd1ZXN0X21z
cl90ZXN0KHZvaWQpCit7CisJdWludDY0X3QgbXNyOworCisJbXNyID0gcmRtc3IoTVNSX01JU0Nf
RkVBVFVSRVNfRU5BQkxFUyk7CisJbXNyIHw9IDE7IC8qIE1TUl9NSVNDX0ZFQVRVUkVTX0VOQUJM
RVNfQ1BVSURfRkFVTFQgKi8KKwl3cm1zcihNU1JfTUlTQ19GRUFUVVJFU19FTkFCTEVTLCBtc3Ip
OworfQorCiAvKiBmcm9tIGZwdS9pbnRlcm5hbC5oICovCiBzdGF0aWMgdTY0IHhnZXRidih1MzIg
aW5kZXgpCiB7CkBAIC0xNTMsNiArMTYzLDkgQEAgc3RhdGljIHZvaWQgZ3Vlc3RfY29kZSh2b2lk
KQogCQljYXNlIEdVRVNUX1RFU1RfSFlQRVJDQUxMOgogCQkJZ3Vlc3RfaHlwZXJjYWxsX3Rlc3Qo
KTsKIAkJCWJyZWFrOworCQljYXNlIEdVRVNUX1RFU1RfTVNSOgorCQkJZ3Vlc3RfbXNyX3Rlc3Qo
KTsKKwkJCWJyZWFrOwogCQljYXNlIEdVRVNUX1RFU1RfWFNFVEJWOgogCQkJZ3Vlc3RfeHNldGJ2
X3Rlc3QoKTsKIAkJCWJyZWFrOwpAQCAtMTQxOSw2ICsxNDMyLDk0IEBAIHN0YXRpYyB2b2lkIHRl
c3RfZXZlbnRfZGVzY3JpcHRvcihzdHJ1Y3Qga3ZtX3ZtICp2bSkKIAlkaXNhYmxlX3ZjcHVfZXZl
bnQodm0sIGV2ZW50X2lkKTsKIH0KIAorc3RhdGljIGludCBjbWRfY29udHJvbF9tc3Ioc3RydWN0
IGt2bV92bSAqdm0sIF9fdTMyIG1zciwgYm9vbCBlbmFibGUpCit7CisJc3RydWN0IHsKKwkJc3Ry
dWN0IGt2bWlfbXNnX2hkciBoZHI7CisJCXN0cnVjdCBrdm1pX3ZjcHVfaGRyIHZjcHVfaGRyOwor
CQlzdHJ1Y3Qga3ZtaV92Y3B1X2NvbnRyb2xfbXNyIGNtZDsKKwl9IHJlcSA9IHt9OworCisJcmVx
LmNtZC5tc3IgPSBtc3I7CisJcmVxLmNtZC5lbmFibGUgPSBlbmFibGUgPyAxIDogMDsKKworCXJl
dHVybiBkb192Y3B1MF9jb21tYW5kKHZtLCBLVk1JX1ZDUFVfQ09OVFJPTF9NU1IsCisJCQkJJnJl
cS5oZHIsIHNpemVvZihyZXEpLCBOVUxMLCAwKTsKK30KKworc3RhdGljIHZvaWQgZW5hYmxlX21z
cl9ldmVudHMoc3RydWN0IGt2bV92bSAqdm0sIF9fdTMyIG1zcikKK3sKKwlpbnQgcjsKKworCWVu
YWJsZV92Y3B1X2V2ZW50KHZtLCBLVk1JX0VWRU5UX01TUik7CisKKwlyID0gY21kX2NvbnRyb2xf
bXNyKHZtLCBtc3IsIHRydWUpOworCVRFU1RfQVNTRVJUKHIgPT0gMCwKKwkJIktWTUlfRVZFTlRf
TVNSIGZhaWxlZCwgZXJyb3IgJWQoJXMpXG4iLAorCQktciwga3ZtX3N0cmVycm9yKC1yKSk7Cit9
CisKK3N0YXRpYyB2b2lkIGRpc2FibGVfbXNyX2V2ZW50cyhzdHJ1Y3Qga3ZtX3ZtICp2bSwgX191
MzIgbXNyKQoreworCWludCByOworCisJciA9IGNtZF9jb250cm9sX21zcih2bSwgbXNyLCBmYWxz
ZSk7CisJVEVTVF9BU1NFUlQociA9PSAwLAorCQkiS1ZNSV9FVkVOVF9NU1IgZmFpbGVkLCBlcnJv
ciAlZCglcylcbiIsCisJCS1yLCBrdm1fc3RyZXJyb3IoLXIpKTsKKworCWRpc2FibGVfdmNwdV9l
dmVudCh2bSwgS1ZNSV9FVkVOVF9NU1IpOworfQorCitzdGF0aWMgdm9pZCB0ZXN0X2NtZF92Y3B1
X2NvbnRyb2xfbXNyKHN0cnVjdCBrdm1fdm0gKnZtKQoreworCXN0cnVjdCB2Y3B1X3dvcmtlcl9k
YXRhIGRhdGEgPSB7CisJCS52bSA9IHZtLAorCQkudmNwdV9pZCA9IFZDUFVfSUQsCisJCS50ZXN0
X2lkID0gR1VFU1RfVEVTVF9NU1IsCisJfTsKKwlzdHJ1Y3Qga3ZtaV9tc2dfaGRyIGhkcjsKKwlz
dHJ1Y3QgeworCQlzdHJ1Y3Qga3ZtaV9ldmVudCBjb21tb247CisJCXN0cnVjdCBrdm1pX2V2ZW50
X21zciBtc3I7CisJfSBldjsKKwlzdHJ1Y3QgeworCQlzdHJ1Y3QgdmNwdV9yZXBseSBjb21tb247
CisJCXN0cnVjdCBrdm1pX2V2ZW50X21zcl9yZXBseSBtc3I7CisJfSBycGwgPSB7fTsKKwlfX3Ux
NiBldmVudF9pZCA9IEtWTUlfRVZFTlRfTVNSOworCV9fdTMyIG1zciA9IE1TUl9NSVNDX0ZFQVRV
UkVTX0VOQUJMRVM7CisJdWludDY0X3QgbXNyX2RhdGE7CisJcHRocmVhZF90IHZjcHVfdGhyZWFk
OworCisJZW5hYmxlX21zcl9ldmVudHModm0sIG1zcik7CisKKwl2Y3B1X3RocmVhZCA9IHN0YXJ0
X3ZjcHVfd29ya2VyKCZkYXRhKTsKKworCXJlY2VpdmVfZXZlbnQoJmhkciwgJmV2LmNvbW1vbiwg
c2l6ZW9mKGV2KSwgZXZlbnRfaWQpOworCisJREVCVUcoIk1TUiAweCV4LCBvbGQgMHglbGx4LCBu
ZXcgMHglbGx4XG4iLAorCQlldi5tc3IubXNyLCBldi5tc3Iub2xkX3ZhbHVlLCBldi5tc3IubmV3
X3ZhbHVlKTsKKworCVRFU1RfQVNTRVJUKGV2Lm1zci5tc3IgPT0gbXNyLAorCQkiVW5leHBlY3Rl
ZCBNU1IgZXZlbnQsIHJlY2VpdmVkIE1TUiAweCV4LCBleHBlY3RlZCBNU1IgMHgleCIsCisJCWV2
Lm1zci5tc3IsIG1zcik7CisKKwlycGwubXNyLm5ld192YWwgPSBldi5tc3Iub2xkX3ZhbHVlOwor
CisJcmVwbHlfdG9fZXZlbnQoJmhkciwgJmV2LmNvbW1vbiwgS1ZNSV9FVkVOVF9BQ1RJT05fQ09O
VElOVUUsCisJCQkmcnBsLmNvbW1vbiwgc2l6ZW9mKHJwbCkpOworCisJc3RvcF92Y3B1X3dvcmtl
cih2Y3B1X3RocmVhZCwgJmRhdGEpOworCisJZGlzYWJsZV9tc3JfZXZlbnRzKHZtLCBtc3IpOwor
CisJbXNyX2RhdGEgPSB2Y3B1X2dldF9tc3Iodm0sIFZDUFVfSUQsIG1zcik7CisJVEVTVF9BU1NF
UlQobXNyX2RhdGEgPT0gZXYubXNyLm9sZF92YWx1ZSwKKwkJIkZhaWxlZCB0byBibG9jayBNU1Ig
MHgleCB1cGRhdGUsIHZhbHVlIDB4JXgsIGV4cGVjdGVkIDB4JXgiLAorCQltc3IsIG1zcl9kYXRh
LCBldi5tc3Iub2xkX3ZhbHVlKTsKK30KKwogc3RhdGljIHZvaWQgdGVzdF9pbnRyb3NwZWN0aW9u
KHN0cnVjdCBrdm1fdm0gKnZtKQogewogCXNldHVwX3NvY2tldCgpOwpAQCAtMTQ0Nyw2ICsxNTQ4
LDcgQEAgc3RhdGljIHZvaWQgdGVzdF9pbnRyb3NwZWN0aW9uKHN0cnVjdCBrdm1fdm0gKnZtKQog
CXRlc3RfY21kX3ZjcHVfZ2V0X3hzYXZlKHZtKTsKIAl0ZXN0X2NtZF92Y3B1X2dldF9tdHJyX3R5
cGUodm0pOwogCXRlc3RfZXZlbnRfZGVzY3JpcHRvcih2bSk7CisJdGVzdF9jbWRfdmNwdV9jb250
cm9sX21zcih2bSk7CiAKIAl1bmhvb2tfaW50cm9zcGVjdGlvbih2bSk7CiB9CmRpZmYgLS1naXQg
YS92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWlfaW50LmggYi92aXJ0L2t2bS9pbnRyb3NwZWN0
aW9uL2t2bWlfaW50LmgKaW5kZXggNmQyYzA5YTEyYzQ5Li4zMzU0NGRkOWRjZTUgMTAwNjQ0Ci0t
LSBhL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9pbnQuaAorKysgYi92aXJ0L2t2bS9pbnRy
b3NwZWN0aW9uL2t2bWlfaW50LmgKQEAgLTI2LDYgKzI2LDcgQEAKIAkJCSAgfCBCSVQoS1ZNSV9F
VkVOVF9DUikgXAogCQkJICB8IEJJVChLVk1JX0VWRU5UX0RFU0NSSVBUT1IpIFwKIAkJCSAgfCBC
SVQoS1ZNSV9FVkVOVF9IWVBFUkNBTEwpIFwKKwkJCSAgfCBCSVQoS1ZNSV9FVkVOVF9NU1IpIFwK
IAkJCSAgfCBCSVQoS1ZNSV9FVkVOVF9UUkFQKSBcCiAJCQkgIHwgQklUKEtWTUlfRVZFTlRfUEFV
U0VfVkNQVSkgXAogCQkJICB8IEJJVChLVk1JX0VWRU5UX1hTRVRCVikgXApAQCAtNDYsNiArNDcs
NyBAQAogCQkJfCBCSVQoS1ZNSV9WQ1BVX1BBVVNFKSBcCiAJCQl8IEJJVChLVk1JX1ZDUFVfQ09O
VFJPTF9DUikgXAogCQkJfCBCSVQoS1ZNSV9WQ1BVX0NPTlRST0xfRVZFTlRTKSBcCisJCQl8IEJJ
VChLVk1JX1ZDUFVfQ09OVFJPTF9NU1IpIFwKIAkJCXwgQklUKEtWTUlfVkNQVV9HRVRfQ1BVSUQp
IFwKIAkJCXwgQklUKEtWTUlfVkNQVV9HRVRfTVRSUl9UWVBFKSBcCiAJCQl8IEJJVChLVk1JX1ZD
UFVfR0VUX1JFR0lTVEVSUykgXApAQCAtMTQzLDUgKzE0NSw3IEBAIGludCBrdm1pX2FyY2hfY21k
X3ZjcHVfZ2V0X3hzYXZlKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwKIAkJCQkgc3RydWN0IGt2bWlf
dmNwdV9nZXRfeHNhdmVfcmVwbHkgKipkZXN0LAogCQkJCSBzaXplX3QgKmRlc3Rfc2l6ZSk7CiBp
bnQga3ZtaV9hcmNoX2NtZF92Y3B1X2dldF9tdHJyX3R5cGUoc3RydWN0IGt2bV92Y3B1ICp2Y3B1
LCB1NjQgZ3BhLCB1OCAqdHlwZSk7CitpbnQga3ZtaV9hcmNoX2NtZF92Y3B1X2NvbnRyb2xfbXNy
KHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwKKwkJCQkgICBjb25zdCBzdHJ1Y3Qga3ZtaV92Y3B1X2Nv
bnRyb2xfbXNyICpyZXEpOwogCiAjZW5kaWYKZGlmZiAtLWdpdCBhL3ZpcnQva3ZtL2ludHJvc3Bl
Y3Rpb24va3ZtaV9tc2cuYyBiL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9tc2cuYwppbmRl
eCBmZWQ0ODNiZWM5MzYuLmE1MjUwZDliOWIzZCAxMDA2NDQKLS0tIGEvdmlydC9rdm0vaW50cm9z
cGVjdGlvbi9rdm1pX21zZy5jCisrKyBiL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9tc2cu
YwpAQCAtMjgsNiArMjgsNyBAQCBzdGF0aWMgY29uc3QgY2hhciAqY29uc3QgbXNnX0lEc1tdID0g
ewogCVtLVk1JX1ZNX1dSSVRFX1BIWVNJQ0FMXSAgICAgPSAiS1ZNSV9WTV9XUklURV9QSFlTSUNB
TCIsCiAJW0tWTUlfVkNQVV9DT05UUk9MX0NSXSAgICAgICA9ICJLVk1JX1ZDUFVfQ09OVFJPTF9D
UiIsCiAJW0tWTUlfVkNQVV9DT05UUk9MX0VWRU5UU10gICA9ICJLVk1JX1ZDUFVfQ09OVFJPTF9F
VkVOVFMiLAorCVtLVk1JX1ZDUFVfQ09OVFJPTF9NU1JdICAgICAgPSAiS1ZNSV9WQ1BVX0NPTlRS
T0xfTVNSIiwKIAlbS1ZNSV9WQ1BVX0dFVF9DUFVJRF0gICAgICAgID0gIktWTUlfVkNQVV9HRVRf
Q1BVSUQiLAogCVtLVk1JX1ZDUFVfR0VUX0lORk9dICAgICAgICAgPSAiS1ZNSV9WQ1BVX0dFVF9J
TkZPIiwKIAlbS1ZNSV9WQ1BVX0dFVF9NVFJSX1RZUEVdICAgID0gIktWTUlfVkNQVV9HRVRfTVRS
Ul9UWVBFIiwKQEAgLTU1OCw2ICs1NTksMTcgQEAgc3RhdGljIGludCBoYW5kbGVfdmNwdV9nZXRf
bXRycl90eXBlKGNvbnN0IHN0cnVjdCBrdm1pX3ZjcHVfY21kX2pvYiAqam9iLAogCXJldHVybiBr
dm1pX21zZ192Y3B1X3JlcGx5KGpvYiwgbXNnLCBlYywgJnJwbCwgc2l6ZW9mKHJwbCkpOwogfQog
CitzdGF0aWMgaW50IGhhbmRsZV92Y3B1X2NvbnRyb2xfbXNyKGNvbnN0IHN0cnVjdCBrdm1pX3Zj
cHVfY21kX2pvYiAqam9iLAorCQkJCSAgIGNvbnN0IHN0cnVjdCBrdm1pX21zZ19oZHIgKm1zZywK
KwkJCQkgICBjb25zdCB2b2lkICpyZXEpCit7CisJaW50IGVjOworCisJZWMgPSBrdm1pX2FyY2hf
Y21kX3ZjcHVfY29udHJvbF9tc3Ioam9iLT52Y3B1LCByZXEpOworCisJcmV0dXJuIGt2bWlfbXNn
X3ZjcHVfcmVwbHkoam9iLCBtc2csIGVjLCBOVUxMLCAwKTsKK30KKwogLyoKICAqIFRoZXNlIGNv
bW1hbmRzIGFyZSBleGVjdXRlZCBvbiB0aGUgdkNQVSB0aHJlYWQuIFRoZSByZWNlaXZpbmcgdGhy
ZWFkCiAgKiBwYXNzZXMgdGhlIG1lc3NhZ2VzIHVzaW5nIGEgbmV3bHkgYWxsb2NhdGVkICdzdHJ1
Y3Qga3ZtaV92Y3B1X2NtZF9qb2InCkBAIC01NjksNiArNTgxLDcgQEAgc3RhdGljIGludCgqY29u
c3QgbXNnX3ZjcHVbXSkoY29uc3Qgc3RydWN0IGt2bWlfdmNwdV9jbWRfam9iICosCiAJW0tWTUlf
RVZFTlRfUkVQTFldICAgICAgICAgICA9IGhhbmRsZV9ldmVudF9yZXBseSwKIAlbS1ZNSV9WQ1BV
X0NPTlRST0xfQ1JdICAgICAgID0gaGFuZGxlX3ZjcHVfY29udHJvbF9jciwKIAlbS1ZNSV9WQ1BV
X0NPTlRST0xfRVZFTlRTXSAgID0gaGFuZGxlX3ZjcHVfY29udHJvbF9ldmVudHMsCisJW0tWTUlf
VkNQVV9DT05UUk9MX01TUl0gICAgICA9IGhhbmRsZV92Y3B1X2NvbnRyb2xfbXNyLAogCVtLVk1J
X1ZDUFVfR0VUX0NQVUlEXSAgICAgICAgPSBoYW5kbGVfZ2V0X2NwdWlkLAogCVtLVk1JX1ZDUFVf
R0VUX0lORk9dICAgICAgICAgPSBoYW5kbGVfZ2V0X3ZjcHVfaW5mbywKIAlbS1ZNSV9WQ1BVX0dF
VF9NVFJSX1RZUEVdICAgID0gaGFuZGxlX3ZjcHVfZ2V0X210cnJfdHlwZSwKX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KVmlydHVhbGl6YXRpb24gbWFpbGlu
ZyBsaXN0ClZpcnR1YWxpemF0aW9uQGxpc3RzLmxpbnV4LWZvdW5kYXRpb24ub3JnCmh0dHBzOi8v
bGlzdHMubGludXhmb3VuZGF0aW9uLm9yZy9tYWlsbWFuL2xpc3RpbmZvL3ZpcnR1YWxpemF0aW9u
