Return-Path: <virtualization-bounces@lists.linux-foundation.org>
X-Original-To: lists.virtualization@lfdr.de
Delivered-To: lists.virtualization@lfdr.de
Received: from hemlock.osuosl.org (smtp2.osuosl.org [140.211.166.133])
	by mail.lfdr.de (Postfix) with ESMTPS id 7C17B228B2B
	for <lists.virtualization@lfdr.de>; Tue, 21 Jul 2020 23:26:14 +0200 (CEST)
Received: from localhost (localhost [127.0.0.1])
	by hemlock.osuosl.org (Postfix) with ESMTP id 25070884D6;
	Tue, 21 Jul 2020 21:26:13 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from hemlock.osuosl.org ([127.0.0.1])
	by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id 8RiOogiUt1pY; Tue, 21 Jul 2020 21:26:10 +0000 (UTC)
Received: from lists.linuxfoundation.org (lf-lists.osuosl.org [140.211.9.56])
	by hemlock.osuosl.org (Postfix) with ESMTP id 28E8681D3F;
	Tue, 21 Jul 2020 21:26:05 +0000 (UTC)
Received: from lf-lists.osuosl.org (localhost [127.0.0.1])
	by lists.linuxfoundation.org (Postfix) with ESMTP id 13763C016F;
	Tue, 21 Jul 2020 21:26:05 +0000 (UTC)
X-Original-To: virtualization@lists.linux-foundation.org
Delivered-To: virtualization@lists.linuxfoundation.org
Received: from fraxinus.osuosl.org (smtp4.osuosl.org [140.211.166.137])
 by lists.linuxfoundation.org (Postfix) with ESMTP id B1233C016F
 for <virtualization@lists.linux-foundation.org>;
 Tue, 21 Jul 2020 21:26:00 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by fraxinus.osuosl.org (Postfix) with ESMTP id A00A986B7E
 for <virtualization@lists.linux-foundation.org>;
 Tue, 21 Jul 2020 21:26:00 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from fraxinus.osuosl.org ([127.0.0.1])
 by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id 7leoeW_iMhxp
 for <virtualization@lists.linux-foundation.org>;
 Tue, 21 Jul 2020 21:25:58 +0000 (UTC)
X-Greylist: from auto-whitelisted by SQLgrey-1.7.6
Received: from mx01.bbu.dsd.mx.bitdefender.com
 (mx01.bbu.dsd.mx.bitdefender.com [91.199.104.161])
 by fraxinus.osuosl.org (Postfix) with ESMTPS id 82DB886B84
 for <virtualization@lists.linux-foundation.org>;
 Tue, 21 Jul 2020 21:25:57 +0000 (UTC)
Received: from smtp.bitdefender.com (smtp02.buh.bitdefender.net [10.17.80.76])
 by mx01.bbu.dsd.mx.bitdefender.com (Postfix) with ESMTPS id
 DC7EE305D508; Wed, 22 Jul 2020 00:09:31 +0300 (EEST)
Received: from localhost.localdomain (unknown [91.199.104.27])
 by smtp.bitdefender.com (Postfix) with ESMTPSA id BBF67304FA12;
 Wed, 22 Jul 2020 00:09:31 +0300 (EEST)
From: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>
To: kvm@vger.kernel.org
Subject: [PATCH v9 80/84] KVM: introspection: add KVMI_VCPU_CONTROL_SINGLESTEP
Date: Wed, 22 Jul 2020 00:09:18 +0300
Message-Id: <20200721210922.7646-81-alazar@bitdefender.com>
In-Reply-To: <20200721210922.7646-1-alazar@bitdefender.com>
References: <20200721210922.7646-1-alazar@bitdefender.com>
MIME-Version: 1.0
Cc: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>,
 Paolo Bonzini <pbonzini@redhat.com>,
 =?UTF-8?q?Nicu=C8=99or=20C=C3=AE=C8=9Bu?= <ncitu@bitdefender.com>,
 virtualization@lists.linux-foundation.org
X-BeenThere: virtualization@lists.linux-foundation.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Linux virtualization <virtualization.lists.linux-foundation.org>
List-Unsubscribe: <https://lists.linuxfoundation.org/mailman/options/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=unsubscribe>
List-Archive: <http://lists.linuxfoundation.org/pipermail/virtualization/>
List-Post: <mailto:virtualization@lists.linux-foundation.org>
List-Help: <mailto:virtualization-request@lists.linux-foundation.org?subject=help>
List-Subscribe: <https://lists.linuxfoundation.org/mailman/listinfo/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: virtualization-bounces@lists.linux-foundation.org
Sender: "Virtualization" <virtualization-bounces@lists.linux-foundation.org>

RnJvbTogTmljdciZb3IgQ8OuyJt1IDxuY2l0dUBiaXRkZWZlbmRlci5jb20+CgpUaGUgbmV4dCBj
b21taXQgdGhhdCBhZGRzIHRoZSBLVk1JX0VWRU5UX1NJTkdMRVNURVAgZXZlbnQgd2lsbCBtYWtl
IHRoaXMKY29tbWFuZCBtb3JlIHVzZWZ1bC4KClNpZ25lZC1vZmYtYnk6IE5pY3XImW9yIEPDrsib
dSA8bmNpdHVAYml0ZGVmZW5kZXIuY29tPgpDby1kZXZlbG9wZWQtYnk6IEFkYWxiZXJ0IExhesSD
ciA8YWxhemFyQGJpdGRlZmVuZGVyLmNvbT4KU2lnbmVkLW9mZi1ieTogQWRhbGJlcnQgTGF6xINy
IDxhbGF6YXJAYml0ZGVmZW5kZXIuY29tPgotLS0KIERvY3VtZW50YXRpb24vdmlydC9rdm0va3Zt
aS5yc3QgICAgICAgICAgICAgICB8IDMyICsrKysrKysrKysKIGFyY2gveDg2L2t2bS9rdm1pLmMg
ICAgICAgICAgICAgICAgICAgICAgICAgICB8IDE4ICsrKysrKwogYXJjaC94ODYva3ZtL3g4Ni5j
ICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgMTIgKysrLQogaW5jbHVkZS9saW51eC9rdm1p
X2hvc3QuaCAgICAgICAgICAgICAgICAgICAgIHwgIDcgKysrCiBpbmNsdWRlL3VhcGkvbGludXgv
a3ZtaS5oICAgICAgICAgICAgICAgICAgICAgfCAgNyArKysKIC4uLi90ZXN0aW5nL3NlbGZ0ZXN0
cy9rdm0veDg2XzY0L2t2bWlfdGVzdC5jICB8IDQ2ICsrKysrKysrKysrKysrCiB2aXJ0L2t2bS9p
bnRyb3NwZWN0aW9uL2t2bWkuYyAgICAgICAgICAgICAgICAgfCAyNiArKysrKysrLQogdmlydC9r
dm0vaW50cm9zcGVjdGlvbi9rdm1pX2ludC5oICAgICAgICAgICAgIHwgIDIgKwogdmlydC9rdm0v
aW50cm9zcGVjdGlvbi9rdm1pX21zZy5jICAgICAgICAgICAgIHwgNjAgKysrKysrKysrKysrKysr
LS0tLQogOSBmaWxlcyBjaGFuZ2VkLCAxOTMgaW5zZXJ0aW9ucygrKSwgMTcgZGVsZXRpb25zKC0p
CgpkaWZmIC0tZ2l0IGEvRG9jdW1lbnRhdGlvbi92aXJ0L2t2bS9rdm1pLnJzdCBiL0RvY3VtZW50
YXRpb24vdmlydC9rdm0va3ZtaS5yc3QKaW5kZXggNDczODdmMjk3MDI5Li4wYTA3ZWYxMDEzMDIg
MTAwNjQ0Ci0tLSBhL0RvY3VtZW50YXRpb24vdmlydC9rdm0va3ZtaS5yc3QKKysrIGIvRG9jdW1l
bnRhdGlvbi92aXJ0L2t2bS9rdm1pLnJzdApAQCAtMTA0OSw2ICsxMDQ5LDM4IEBAIEluIG9yZGVy
IHRvICdmb3JnZXQnIGFuIGFkZHJlc3MsIGFsbCB0aHJlZSBiaXRzICgncnd4JykgbXVzdCBiZSBz
ZXQuCiAqIC1LVk1fRUFHQUlOIC0gdGhlIHNlbGVjdGVkIHZDUFUgY2FuJ3QgYmUgaW50cm9zcGVj
dGVkIHlldAogKiAtS1ZNX0VOT01FTSAtIHRoZXJlIGlzIG5vdCBlbm91Z2ggbWVtb3J5IHRvIGFk
ZCB0aGUgcGFnZSB0cmFja2luZyBzdHJ1Y3R1cmVzCiAKKzI0LiBLVk1JX1ZDUFVfQ09OVFJPTF9T
SU5HTEVTVEVQCistLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQorCis6QXJjaGl0ZWN0
dXJlczogeDg2ICh2bXgpCis6VmVyc2lvbnM6ID49IDEKKzpQYXJhbWV0ZXJzOgorCis6OgorCisJ
c3RydWN0IGt2bWlfdmNwdV9oZHI7CisJc3RydWN0IGt2bWlfdmNwdV9jb250cm9sX3NpbmdsZXN0
ZXAgeworCQlfX3U4IGVuYWJsZTsKKwkJX191OCBwYWRkaW5nWzddOworCX07CisKKzpSZXR1cm5z
OgorCis6OgorCisJc3RydWN0IGt2bWlfZXJyb3JfY29kZTsKKworRW5hYmxlcy9kaXNhYmxlcyBz
aW5nbGVzdGVwIGZvciB0aGUgc2VsZWN0ZWQgdkNQVS4KKworVGhlIGludHJvc3BlY3Rpb24gdG9v
bCBzaG91bGQgdXNlICpLVk1JX0dFVF9WRVJTSU9OKiwgdG8gY2hlY2sKK2lmIHRoZSBoYXJkd2Fy
ZSBzdXBwb3J0cyBzaW5nbGVzdGVwIChzZWUgKipLVk1JX0dFVF9WRVJTSU9OKiopLgorCis6RXJy
b3JzOgorCisqIC1LVk1fRU9QTk9UU1VQUCAtIHRoZSBoYXJkd2FyZSBkb2Vzbid0IHN1cHBvcnQg
c2luZ2xlc3RlcAorKiAtS1ZNX0VJTlZBTCAtIHRoZSBwYWRkaW5nIGlzIG5vdCB6ZXJvCisqIC1L
Vk1fRUFHQUlOIC0gdGhlIHNlbGVjdGVkIHZDUFUgY2FuJ3QgYmUgaW50cm9zcGVjdGVkIHlldAor
CiBFdmVudHMKID09PT09PQogCmRpZmYgLS1naXQgYS9hcmNoL3g4Ni9rdm0va3ZtaS5jIGIvYXJj
aC94ODYva3ZtL2t2bWkuYwppbmRleCA2NzJhMTEzYjNiZjQuLjE4NzEzMDA0MTUyZCAxMDA2NDQK
LS0tIGEvYXJjaC94ODYva3ZtL2t2bWkuYworKysgYi9hcmNoL3g4Ni9rdm0va3ZtaS5jCkBAIC0x
MzU1LDMgKzEzNTUsMjEgQEAgdm9pZCBrdm1pX2FyY2hfZmVhdHVyZXMoc3RydWN0IGt2bWlfZmVh
dHVyZXMgKmZlYXQpCiB7CiAJZmVhdC0+c2luZ2xlc3RlcCA9ICEha3ZtX3g4Nl9vcHMuY29udHJv
bF9zaW5nbGVzdGVwOwogfQorCitib29sIGt2bWlfYXJjaF9zdGFydF9zaW5nbGVzdGVwKHN0cnVj
dCBrdm1fdmNwdSAqdmNwdSkKK3sKKwlpZiAoIWt2bV94ODZfb3BzLmNvbnRyb2xfc2luZ2xlc3Rl
cCkKKwkJcmV0dXJuIGZhbHNlOworCisJa3ZtX3g4Nl9vcHMuY29udHJvbF9zaW5nbGVzdGVwKHZj
cHUsIHRydWUpOworCXJldHVybiB0cnVlOworfQorCitib29sIGt2bWlfYXJjaF9zdG9wX3Npbmds
ZXN0ZXAoc3RydWN0IGt2bV92Y3B1ICp2Y3B1KQoreworCWlmICgha3ZtX3g4Nl9vcHMuY29udHJv
bF9zaW5nbGVzdGVwKQorCQlyZXR1cm4gZmFsc2U7CisKKwlrdm1feDg2X29wcy5jb250cm9sX3Np
bmdsZXN0ZXAodmNwdSwgZmFsc2UpOworCXJldHVybiB0cnVlOworfQpkaWZmIC0tZ2l0IGEvYXJj
aC94ODYva3ZtL3g4Ni5jIGIvYXJjaC94ODYva3ZtL3g4Ni5jCmluZGV4IDBhZGQwYjBiOGYyZC4u
MDJiNzRhNTdjYTAxIDEwMDY0NAotLS0gYS9hcmNoL3g4Ni9rdm0veDg2LmMKKysrIGIvYXJjaC94
ODYva3ZtL3g4Ni5jCkBAIC04NTE1LDkgKzg1MTUsMTUgQEAgc3RhdGljIGludCB2Y3B1X2VudGVy
X2d1ZXN0KHN0cnVjdCBrdm1fdmNwdSAqdmNwdSkKIAkJCWdvdG8gb3V0OwogCQl9CiAKLQkJaW5q
ZWN0X3BlbmRpbmdfZXZlbnQodmNwdSwgJnJlcV9pbW1lZGlhdGVfZXhpdCk7Ci0JCWlmIChyZXFf
aW50X3dpbikKLQkJCWt2bV94ODZfb3BzLmVuYWJsZV9pcnFfd2luZG93KHZjcHUpOworCQlpZiAo
IWt2bWlfdmNwdV9ydW5uaW5nX3NpbmdsZXN0ZXAodmNwdSkpIHsKKwkJCS8qCisJCQkgKiBXZSBj
YW5ub3QgaW5qZWN0IGV2ZW50cyBkdXJpbmcgc2luZ2xlLXN0ZXBwaW5nLgorCQkJICogVHJ5IGFn
YWluIGxhdGVyLgorCQkJICovCisJCQlpbmplY3RfcGVuZGluZ19ldmVudCh2Y3B1LCAmcmVxX2lt
bWVkaWF0ZV9leGl0KTsKKwkJCWlmIChyZXFfaW50X3dpbikKKwkJCQlrdm1feDg2X29wcy5lbmFi
bGVfaXJxX3dpbmRvdyh2Y3B1KTsKKwkJfQogCiAJCWlmIChrdm1fbGFwaWNfZW5hYmxlZCh2Y3B1
KSkgewogCQkJdXBkYXRlX2NyOF9pbnRlcmNlcHQodmNwdSk7CmRpZmYgLS1naXQgYS9pbmNsdWRl
L2xpbnV4L2t2bWlfaG9zdC5oIGIvaW5jbHVkZS9saW51eC9rdm1pX2hvc3QuaAppbmRleCAxMWVi
OWIxYzNjNWUuLmE2NDE3NjgwMjdjYyAxMDA2NDQKLS0tIGEvaW5jbHVkZS9saW51eC9rdm1pX2hv
c3QuaAorKysgYi9pbmNsdWRlL2xpbnV4L2t2bWlfaG9zdC5oCkBAIC00NSw2ICs0NSwxMCBAQCBz
dHJ1Y3Qga3ZtX3ZjcHVfaW50cm9zcGVjdGlvbiB7CiAJCWJvb2wgcGVuZGluZzsKIAkJYm9vbCBz
ZW5kX2V2ZW50OwogCX0gZXhjZXB0aW9uOworCisJc3RydWN0IHsKKwkJYm9vbCBsb29wOworCX0g
c2luZ2xlc3RlcDsKIH07CiAKIHN0cnVjdCBrdm1faW50cm9zcGVjdGlvbiB7CkBAIC04OSw2ICs5
Myw3IEBAIHZvaWQga3ZtaV9oYW5kbGVfcmVxdWVzdHMoc3RydWN0IGt2bV92Y3B1ICp2Y3B1KTsK
IGJvb2wga3ZtaV9oeXBlcmNhbGxfZXZlbnQoc3RydWN0IGt2bV92Y3B1ICp2Y3B1KTsKIGJvb2wg
a3ZtaV9icmVha3BvaW50X2V2ZW50KHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwgdTY0IGd2YSwgdTgg
aW5zbl9sZW4pOwogYm9vbCBrdm1pX2VudGVyX2d1ZXN0KHN0cnVjdCBrdm1fdmNwdSAqdmNwdSk7
Citib29sIGt2bWlfdmNwdV9ydW5uaW5nX3NpbmdsZXN0ZXAoc3RydWN0IGt2bV92Y3B1ICp2Y3B1
KTsKIAogI2Vsc2UKIApAQCAtMTA1LDYgKzExMCw4IEBAIHN0YXRpYyBpbmxpbmUgYm9vbCBrdm1p
X2JyZWFrcG9pbnRfZXZlbnQoc3RydWN0IGt2bV92Y3B1ICp2Y3B1LCB1NjQgZ3ZhLAogCQkJeyBy
ZXR1cm4gdHJ1ZTsgfQogc3RhdGljIGlubGluZSBib29sIGt2bWlfZW50ZXJfZ3Vlc3Qoc3RydWN0
IGt2bV92Y3B1ICp2Y3B1KQogCQkJeyByZXR1cm4gdHJ1ZTsgfQorc3RhdGljIGlubGluZSBib29s
IGt2bWlfdmNwdV9ydW5uaW5nX3NpbmdsZXN0ZXAoc3RydWN0IGt2bV92Y3B1ICp2Y3B1KQorCQkJ
eyByZXR1cm4gZmFsc2U7IH0KIAogI2VuZGlmIC8qIENPTkZJR19LVk1fSU5UUk9TUEVDVElPTiAq
LwogCmRpZmYgLS1naXQgYS9pbmNsdWRlL3VhcGkvbGludXgva3ZtaS5oIGIvaW5jbHVkZS91YXBp
L2xpbnV4L2t2bWkuaAppbmRleCBhODRhZmZiYWZhNjcuLmJjNTE1MjM3NjEyYSAxMDA2NDQKLS0t
IGEvaW5jbHVkZS91YXBpL2xpbnV4L2t2bWkuaAorKysgYi9pbmNsdWRlL3VhcGkvbGludXgva3Zt
aS5oCkBAIC00Nyw2ICs0Nyw4IEBAIGVudW0gewogCiAJS1ZNSV9WTV9TRVRfUEFHRV9BQ0NFU1Mg
PSAyMywKIAorCUtWTUlfVkNQVV9DT05UUk9MX1NJTkdMRVNURVAgPSAyNCwKKwogCUtWTUlfTlVN
X01FU1NBR0VTCiB9OwogCkBAIC0xODksNiArMTkxLDExIEBAIHN0cnVjdCBrdm1pX3ZtX3NldF9w
YWdlX2FjY2VzcyB7CiAJc3RydWN0IGt2bWlfcGFnZV9hY2Nlc3NfZW50cnkgZW50cmllc1swXTsK
IH07CiAKK3N0cnVjdCBrdm1pX3ZjcHVfY29udHJvbF9zaW5nbGVzdGVwIHsKKwlfX3U4IGVuYWJs
ZTsKKwlfX3U4IHBhZGRpbmdbN107Cit9OworCiBzdHJ1Y3Qga3ZtaV9ldmVudCB7CiAJX191MTYg
c2l6ZTsKIAlfX3UxNiB2Y3B1OwpkaWZmIC0tZ2l0IGEvdG9vbHMvdGVzdGluZy9zZWxmdGVzdHMv
a3ZtL3g4Nl82NC9rdm1pX3Rlc3QuYyBiL3Rvb2xzL3Rlc3Rpbmcvc2VsZnRlc3RzL2t2bS94ODZf
NjQva3ZtaV90ZXN0LmMKaW5kZXggZWFiZTdkYWUxNDllLi4wODAzZDdlNWFmMWUgMTAwNjQ0Ci0t
LSBhL3Rvb2xzL3Rlc3Rpbmcvc2VsZnRlc3RzL2t2bS94ODZfNjQva3ZtaV90ZXN0LmMKKysrIGIv
dG9vbHMvdGVzdGluZy9zZWxmdGVzdHMva3ZtL3g4Nl82NC9rdm1pX3Rlc3QuYwpAQCAtMTk0MCw2
ICsxOTQwLDUxIEBAIHN0YXRpYyB2b2lkIHRlc3RfZXZlbnRfcGYoc3RydWN0IGt2bV92bSAqdm0p
CiAJdGVzdF9wZih2bSwgY2JrX3Rlc3RfZXZlbnRfcGYpOwogfQogCitzdGF0aWMgdm9pZCBjbWRf
dmNwdV9zaW5nbGVzdGVwKHN0cnVjdCBrdm1fdm0gKnZtLCBfX3U4IGVuYWJsZSwgX191OCBwYWRk
aW5nLAorCQkJCWludCBleHBlY3RlZF9lcnIpCit7CisJc3RydWN0IHsKKwkJc3RydWN0IGt2bWlf
bXNnX2hkciBoZHI7CisJCXN0cnVjdCBrdm1pX3ZjcHVfaGRyIHZjcHVfaGRyOworCQlzdHJ1Y3Qg
a3ZtaV92Y3B1X2NvbnRyb2xfc2luZ2xlc3RlcCBjbWQ7CisJfSByZXEgPSB7fTsKKwlpbnQgcjsK
KworCXJlcS5jbWQuZW5hYmxlID0gZW5hYmxlOworCXJlcS5jbWQucGFkZGluZ1s2XSA9IHBhZGRp
bmc7CisKKwlyID0gZG9fdmNwdTBfY29tbWFuZCh2bSwgS1ZNSV9WQ1BVX0NPTlRST0xfU0lOR0xF
U1RFUCwKKwkJCSAgICAgJnJlcS5oZHIsIHNpemVvZihyZXEpLCBOVUxMLCAwKTsKKwlURVNUX0FT
U0VSVChyID09IGV4cGVjdGVkX2VyciwKKwkJIktWTUlfVkNQVV9DT05UUk9MX1NJTkdMRVNURVAg
ZmFpbGVkLCBlcnJvciAlZCglcyksIGV4cGVjdGVkIGVycm9yICVkXG4iLAorCQktciwga3ZtX3N0
cmVycm9yKC1yKSwgZXhwZWN0ZWRfZXJyKTsKK30KKworc3RhdGljIHZvaWQgdGVzdF9zdXBwb3J0
ZWRfc2luZ2xlc3RlcChzdHJ1Y3Qga3ZtX3ZtICp2bSkKK3sKKwlfX3U4IGRpc2FibGUgPSAwLCBl
bmFibGUgPSAxLCBlbmFibGVfaW52YWwgPSAyOworCV9fdTggcGFkZGluZyA9IDEsIG5vX3BhZGRp
bmcgPSAwOworCisJY21kX3ZjcHVfc2luZ2xlc3RlcCh2bSwgZW5hYmxlLCBub19wYWRkaW5nLCAw
KTsKKwljbWRfdmNwdV9zaW5nbGVzdGVwKHZtLCBkaXNhYmxlLCBub19wYWRkaW5nLCAwKTsKKwor
CWNtZF92Y3B1X3NpbmdsZXN0ZXAodm0sIGVuYWJsZSwgcGFkZGluZywgLUtWTV9FSU5WQUwpOwor
CWNtZF92Y3B1X3NpbmdsZXN0ZXAodm0sIGVuYWJsZV9pbnZhbCwgbm9fcGFkZGluZywgLUtWTV9F
SU5WQUwpOworfQorCitzdGF0aWMgdm9pZCB0ZXN0X3Vuc3VwcG9ydGVkX3NpbmdsZXN0ZXAoc3Ry
dWN0IGt2bV92bSAqdm0pCit7CisJY21kX3ZjcHVfc2luZ2xlc3RlcCh2bSwgMSwgMCwgLUtWTV9F
T1BOT1RTVVBQKTsKK30KKworc3RhdGljIHZvaWQgdGVzdF9jbWRfdmNwdV9jb250cm9sX3Npbmds
ZXN0ZXAoc3RydWN0IGt2bV92bSAqdm0pCit7CisJaWYgKGZlYXR1cmVzLnNpbmdsZXN0ZXApCisJ
CXRlc3Rfc3VwcG9ydGVkX3NpbmdsZXN0ZXAodm0pOworCWVsc2UKKwkJdGVzdF91bnN1cHBvcnRl
ZF9zaW5nbGVzdGVwKHZtKTsKK30KKwogc3RhdGljIHZvaWQgdGVzdF9pbnRyb3NwZWN0aW9uKHN0
cnVjdCBrdm1fdm0gKnZtKQogewogCXNyYW5kb20odGltZSgwKSk7CkBAIC0xOTc0LDYgKzIwMTks
NyBAQCBzdGF0aWMgdm9pZCB0ZXN0X2ludHJvc3BlY3Rpb24oc3RydWN0IGt2bV92bSAqdm0pCiAJ
dGVzdF9jbWRfdmNwdV9jb250cm9sX21zcih2bSk7CiAJdGVzdF9jbWRfdm1fc2V0X3BhZ2VfYWNj
ZXNzKHZtKTsKIAl0ZXN0X2V2ZW50X3BmKHZtKTsKKwl0ZXN0X2NtZF92Y3B1X2NvbnRyb2xfc2lu
Z2xlc3RlcCh2bSk7CiAKIAl1bmhvb2tfaW50cm9zcGVjdGlvbih2bSk7CiB9CmRpZmYgLS1naXQg
YS92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWkuYyBiL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24v
a3ZtaS5jCmluZGV4IDk5Yzg4ZTE4MjU4Ny4uMmM3NTMzYTk2NmY5IDEwMDY0NAotLS0gYS92aXJ0
L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWkuYworKysgYi92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2
bWkuYwpAQCAtNDI5LDYgKzQyOSwxMSBAQCBzdGF0aWMgdm9pZCBrdm1pX2pvYl9yZWxlYXNlX3Zj
cHUoc3RydWN0IGt2bV92Y3B1ICp2Y3B1LCB2b2lkICpjdHgpCiAKIAlhdG9taWNfc2V0KCZ2Y3B1
aS0+cGF1c2VfcmVxdWVzdHMsIDApOwogCXZjcHVpLT53YWl0aW5nX2Zvcl9yZXBseSA9IGZhbHNl
OworCisJaWYgKHZjcHVpLT5zaW5nbGVzdGVwLmxvb3ApIHsKKwkJa3ZtaV9hcmNoX3N0b3Bfc2lu
Z2xlc3RlcCh2Y3B1KTsKKwkJdmNwdWktPnNpbmdsZXN0ZXAubG9vcCA9IGZhbHNlOworCX0KIH0K
IAogc3RhdGljIHZvaWQga3ZtaV9yZWxlYXNlX3ZjcHVzKHN0cnVjdCBrdm0gKmt2bSkKQEAgLTEw
NDcsNyArMTA1Miw5IEBAIGJvb2wga3ZtaV9lbnRlcl9ndWVzdChzdHJ1Y3Qga3ZtX3ZjcHUgKnZj
cHUpCiAKIAl2Y3B1aSA9IFZDUFVJKHZjcHUpOwogCi0JaWYgKHZjcHVpLT5leGNlcHRpb24ucGVu
ZGluZykgeworCWlmICh2Y3B1aS0+c2luZ2xlc3RlcC5sb29wKSB7CisJCWt2bWlfYXJjaF9zdGFy
dF9zaW5nbGVzdGVwKHZjcHUpOworCX0gZWxzZSBpZiAodmNwdWktPmV4Y2VwdGlvbi5wZW5kaW5n
KSB7CiAJCWt2bWlfaW5qZWN0X3BlbmRpbmdfZXhjZXB0aW9uKHZjcHUpOwogCQlyID0gZmFsc2U7
CiAJfQpAQCAtMTI5NywzICsxMzA0LDIwIEBAIHZvaWQga3ZtaV9yZW1vdmVfbWVtc2xvdChzdHJ1
Y3Qga3ZtICprdm0sIHN0cnVjdCBrdm1fbWVtb3J5X3Nsb3QgKnNsb3QpCiAJc3Bpbl91bmxvY2so
Jmt2bS0+bW11X2xvY2spOwogCXNyY3VfcmVhZF91bmxvY2soJmt2bS0+c3JjdSwgaWR4KTsKIH0K
KworYm9vbCBrdm1pX3ZjcHVfcnVubmluZ19zaW5nbGVzdGVwKHN0cnVjdCBrdm1fdmNwdSAqdmNw
dSkKK3sKKwlzdHJ1Y3Qga3ZtX2ludHJvc3BlY3Rpb24gKmt2bWk7CisJYm9vbCByZXQ7CisKKwlr
dm1pID0ga3ZtaV9nZXQodmNwdS0+a3ZtKTsKKwlpZiAoIWt2bWkpCisJCXJldHVybiBmYWxzZTsK
KworCXJldCA9IFZDUFVJKHZjcHUpLT5zaW5nbGVzdGVwLmxvb3A7CisKKwlrdm1pX3B1dCh2Y3B1
LT5rdm0pOworCisJcmV0dXJuIHJldDsKK30KK0VYUE9SVF9TWU1CT0woa3ZtaV92Y3B1X3J1bm5p
bmdfc2luZ2xlc3RlcCk7CmRpZmYgLS1naXQgYS92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWlf
aW50LmggYi92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWlfaW50LmgKaW5kZXggNjhiOGQ2MGE3
ZmFjLi5lNWZjYTM1MDJiYWIgMTAwNjQ0Ci0tLSBhL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3Zt
aV9pbnQuaAorKysgYi92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWlfaW50LmgKQEAgLTEzOSw1
ICsxMzksNyBAQCB2b2lkIGt2bWlfYXJjaF91cGRhdGVfcGFnZV90cmFja2luZyhzdHJ1Y3Qga3Zt
ICprdm0sCiB2b2lkIGt2bWlfYXJjaF9ob29rKHN0cnVjdCBrdm0gKmt2bSk7CiB2b2lkIGt2bWlf
YXJjaF91bmhvb2soc3RydWN0IGt2bSAqa3ZtKTsKIHZvaWQga3ZtaV9hcmNoX2ZlYXR1cmVzKHN0
cnVjdCBrdm1pX2ZlYXR1cmVzICpmZWF0KTsKK2Jvb2wga3ZtaV9hcmNoX3N0YXJ0X3NpbmdsZXN0
ZXAoc3RydWN0IGt2bV92Y3B1ICp2Y3B1KTsKK2Jvb2wga3ZtaV9hcmNoX3N0b3Bfc2luZ2xlc3Rl
cChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUpOwogCiAjZW5kaWYKZGlmZiAtLWdpdCBhL3ZpcnQva3Zt
L2ludHJvc3BlY3Rpb24va3ZtaV9tc2cuYyBiL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9t
c2cuYwppbmRleCBlNzU0Y2VlNDg5MTIuLjA0ZTc1MTFhOTc3NyAxMDA2NDQKLS0tIGEvdmlydC9r
dm0vaW50cm9zcGVjdGlvbi9rdm1pX21zZy5jCisrKyBiL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24v
a3ZtaV9tc2cuYwpAQCAtNjA5LDYgKzYwOSwzOSBAQCBzdGF0aWMgaW50IGhhbmRsZV92Y3B1X2Nv
bnRyb2xfbXNyKGNvbnN0IHN0cnVjdCBrdm1pX3ZjcHVfbXNnX2pvYiAqam9iLAogCXJldHVybiBr
dm1pX21zZ192Y3B1X3JlcGx5KGpvYiwgbXNnLCBlYywgTlVMTCwgMCk7CiB9CiAKK3N0YXRpYyBp
bnQgaGFuZGxlX3ZjcHVfY29udHJvbF9zaW5nbGVzdGVwKGNvbnN0IHN0cnVjdCBrdm1pX3ZjcHVf
bXNnX2pvYiAqam9iLAorCQkJCQkgIGNvbnN0IHN0cnVjdCBrdm1pX21zZ19oZHIgKm1zZywKKwkJ
CQkJICBjb25zdCB2b2lkICpfcmVxKQoreworCWNvbnN0IHN0cnVjdCBrdm1pX3ZjcHVfY29udHJv
bF9zaW5nbGVzdGVwICpyZXEgPSBfcmVxOworCXN0cnVjdCBrdm1fdmNwdSAqdmNwdSA9IGpvYi0+
dmNwdTsKKwlpbnQgZWMgPSAtS1ZNX0VJTlZBTDsKKwlib29sIGRvbmU7CisJaW50IGk7CisKKwlp
ZiAocmVxLT5lbmFibGUgPiAxKQorCQlnb3RvIHJlcGx5OworCisJZm9yIChpID0gMDsgaSA8IHNp
emVvZihyZXEtPnBhZGRpbmcpOyBpKyspCisJCWlmIChyZXEtPnBhZGRpbmdbaV0pCisJCQlnb3Rv
IHJlcGx5OworCisJaWYgKHJlcS0+ZW5hYmxlKQorCQlkb25lID0ga3ZtaV9hcmNoX3N0YXJ0X3Np
bmdsZXN0ZXAodmNwdSk7CisJZWxzZQorCQlkb25lID0ga3ZtaV9hcmNoX3N0b3Bfc2luZ2xlc3Rl
cCh2Y3B1KTsKKworCWlmIChkb25lKSB7CisJCWVjID0gMDsKKwkJVkNQVUkodmNwdSktPnNpbmds
ZXN0ZXAubG9vcCA9ICEhcmVxLT5lbmFibGU7CisJfSBlbHNlIHsKKwkJZWMgPSAtS1ZNX0VPUE5P
VFNVUFA7CisJfQorCityZXBseToKKwlyZXR1cm4ga3ZtaV9tc2dfdmNwdV9yZXBseShqb2IsIG1z
ZywgZWMsIE5VTEwsIDApOworfQorCiAvKgogICogVGhlc2UgZnVuY3Rpb25zIGFyZSBleGVjdXRl
ZCBmcm9tIHRoZSB2Q1BVIHRocmVhZC4gVGhlIHJlY2VpdmluZyB0aHJlYWQKICAqIHBhc3NlcyB0
aGUgbWVzc2FnZXMgdXNpbmcgYSBuZXdseSBhbGxvY2F0ZWQgJ3N0cnVjdCBrdm1pX3ZjcHVfbXNn
X2pvYicKQEAgLTYxNywxOSArNjUwLDIwIEBAIHN0YXRpYyBpbnQgaGFuZGxlX3ZjcHVfY29udHJv
bF9tc3IoY29uc3Qgc3RydWN0IGt2bWlfdmNwdV9tc2dfam9iICpqb2IsCiAgKi8KIHN0YXRpYyBp
bnQoKmNvbnN0IG1zZ192Y3B1W10pKGNvbnN0IHN0cnVjdCBrdm1pX3ZjcHVfbXNnX2pvYiAqLAog
CQkJICAgICAgY29uc3Qgc3RydWN0IGt2bWlfbXNnX2hkciAqLCBjb25zdCB2b2lkICopID0gewot
CVtLVk1JX0VWRU5UXSAgICAgICAgICAgICAgICAgPSBoYW5kbGVfdmNwdV9ldmVudF9yZXBseSwK
LQlbS1ZNSV9WQ1BVX0NPTlRST0xfQ1JdICAgICAgID0gaGFuZGxlX3ZjcHVfY29udHJvbF9jciwK
LQlbS1ZNSV9WQ1BVX0NPTlRST0xfRVZFTlRTXSAgID0gaGFuZGxlX3ZjcHVfY29udHJvbF9ldmVu
dHMsCi0JW0tWTUlfVkNQVV9DT05UUk9MX01TUl0gICAgICA9IGhhbmRsZV92Y3B1X2NvbnRyb2xf
bXNyLAotCVtLVk1JX1ZDUFVfR0VUX0NQVUlEXSAgICAgICAgPSBoYW5kbGVfdmNwdV9nZXRfY3B1
aWQsCi0JW0tWTUlfVkNQVV9HRVRfSU5GT10gICAgICAgICA9IGhhbmRsZV92Y3B1X2dldF9pbmZv
LAotCVtLVk1JX1ZDUFVfR0VUX01UUlJfVFlQRV0gICAgPSBoYW5kbGVfdmNwdV9nZXRfbXRycl90
eXBlLAotCVtLVk1JX1ZDUFVfR0VUX1JFR0lTVEVSU10gICAgPSBoYW5kbGVfdmNwdV9nZXRfcmVn
aXN0ZXJzLAotCVtLVk1JX1ZDUFVfR0VUX1hDUl0gICAgICAgICAgPSBoYW5kbGVfdmNwdV9nZXRf
eGNyLAotCVtLVk1JX1ZDUFVfR0VUX1hTQVZFXSAgICAgICAgPSBoYW5kbGVfdmNwdV9nZXRfeHNh
dmUsCi0JW0tWTUlfVkNQVV9JTkpFQ1RfRVhDRVBUSU9OXSA9IGhhbmRsZV92Y3B1X2luamVjdF9l
eGNlcHRpb24sCi0JW0tWTUlfVkNQVV9TRVRfUkVHSVNURVJTXSAgICA9IGhhbmRsZV92Y3B1X3Nl
dF9yZWdpc3RlcnMsCi0JW0tWTUlfVkNQVV9TRVRfWFNBVkVdICAgICAgICA9IGhhbmRsZV92Y3B1
X3NldF94c2F2ZSwKKwlbS1ZNSV9FVkVOVF0gICAgICAgICAgICAgICAgICAgPSBoYW5kbGVfdmNw
dV9ldmVudF9yZXBseSwKKwlbS1ZNSV9WQ1BVX0NPTlRST0xfQ1JdICAgICAgICAgPSBoYW5kbGVf
dmNwdV9jb250cm9sX2NyLAorCVtLVk1JX1ZDUFVfQ09OVFJPTF9FVkVOVFNdICAgICA9IGhhbmRs
ZV92Y3B1X2NvbnRyb2xfZXZlbnRzLAorCVtLVk1JX1ZDUFVfQ09OVFJPTF9NU1JdICAgICAgICA9
IGhhbmRsZV92Y3B1X2NvbnRyb2xfbXNyLAorCVtLVk1JX1ZDUFVfQ09OVFJPTF9TSU5HTEVTVEVQ
XSA9IGhhbmRsZV92Y3B1X2NvbnRyb2xfc2luZ2xlc3RlcCwKKwlbS1ZNSV9WQ1BVX0dFVF9DUFVJ
RF0gICAgICAgICAgPSBoYW5kbGVfdmNwdV9nZXRfY3B1aWQsCisJW0tWTUlfVkNQVV9HRVRfSU5G
T10gICAgICAgICAgID0gaGFuZGxlX3ZjcHVfZ2V0X2luZm8sCisJW0tWTUlfVkNQVV9HRVRfTVRS
Ul9UWVBFXSAgICAgID0gaGFuZGxlX3ZjcHVfZ2V0X210cnJfdHlwZSwKKwlbS1ZNSV9WQ1BVX0dF
VF9SRUdJU1RFUlNdICAgICAgPSBoYW5kbGVfdmNwdV9nZXRfcmVnaXN0ZXJzLAorCVtLVk1JX1ZD
UFVfR0VUX1hDUl0gICAgICAgICAgICA9IGhhbmRsZV92Y3B1X2dldF94Y3IsCisJW0tWTUlfVkNQ
VV9HRVRfWFNBVkVdICAgICAgICAgID0gaGFuZGxlX3ZjcHVfZ2V0X3hzYXZlLAorCVtLVk1JX1ZD
UFVfSU5KRUNUX0VYQ0VQVElPTl0gICA9IGhhbmRsZV92Y3B1X2luamVjdF9leGNlcHRpb24sCisJ
W0tWTUlfVkNQVV9TRVRfUkVHSVNURVJTXSAgICAgID0gaGFuZGxlX3ZjcHVfc2V0X3JlZ2lzdGVy
cywKKwlbS1ZNSV9WQ1BVX1NFVF9YU0FWRV0gICAgICAgICAgPSBoYW5kbGVfdmNwdV9zZXRfeHNh
dmUsCiB9OwogCiBzdGF0aWMgYm9vbCBpc192Y3B1X2NvbW1hbmQodTE2IGlkKQpfX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpWaXJ0dWFsaXphdGlvbiBtYWls
aW5nIGxpc3QKVmlydHVhbGl6YXRpb25AbGlzdHMubGludXgtZm91bmRhdGlvbi5vcmcKaHR0cHM6
Ly9saXN0cy5saW51eGZvdW5kYXRpb24ub3JnL21haWxtYW4vbGlzdGluZm8vdmlydHVhbGl6YXRp
b24=
