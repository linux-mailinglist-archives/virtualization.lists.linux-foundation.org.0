Return-Path: <virtualization-bounces@lists.linux-foundation.org>
X-Original-To: lists.virtualization@lfdr.de
Delivered-To: lists.virtualization@lfdr.de
Received: from fraxinus.osuosl.org (smtp4.osuosl.org [140.211.166.137])
	by mail.lfdr.de (Postfix) with ESMTPS id C2AF71978CE
	for <lists.virtualization@lfdr.de>; Mon, 30 Mar 2020 12:20:06 +0200 (CEST)
Received: from localhost (localhost [127.0.0.1])
	by fraxinus.osuosl.org (Postfix) with ESMTP id 77BA986AEC;
	Mon, 30 Mar 2020 10:20:05 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from fraxinus.osuosl.org ([127.0.0.1])
	by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id gmpQMCqwykeK; Mon, 30 Mar 2020 10:20:01 +0000 (UTC)
Received: from lists.linuxfoundation.org (lf-lists.osuosl.org [140.211.9.56])
	by fraxinus.osuosl.org (Postfix) with ESMTP id A186186A99;
	Mon, 30 Mar 2020 10:19:56 +0000 (UTC)
Received: from lf-lists.osuosl.org (localhost [127.0.0.1])
	by lists.linuxfoundation.org (Postfix) with ESMTP id 834B1C1D87;
	Mon, 30 Mar 2020 10:19:56 +0000 (UTC)
X-Original-To: virtualization@lists.linux-foundation.org
Delivered-To: virtualization@lists.linuxfoundation.org
Received: from fraxinus.osuosl.org (smtp4.osuosl.org [140.211.166.137])
 by lists.linuxfoundation.org (Postfix) with ESMTP id 6A40BC1D7E
 for <virtualization@lists.linux-foundation.org>;
 Mon, 30 Mar 2020 10:19:52 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by fraxinus.osuosl.org (Postfix) with ESMTP id 5754886A11
 for <virtualization@lists.linux-foundation.org>;
 Mon, 30 Mar 2020 10:19:52 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from fraxinus.osuosl.org ([127.0.0.1])
 by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id bhzkqh2MLLDg
 for <virtualization@lists.linux-foundation.org>;
 Mon, 30 Mar 2020 10:19:50 +0000 (UTC)
X-Greylist: domain auto-whitelisted by SQLgrey-1.7.6
Received: from mx01.bbu.dsd.mx.bitdefender.com
 (mx01.bbu.dsd.mx.bitdefender.com [91.199.104.161])
 by fraxinus.osuosl.org (Postfix) with ESMTPS id 88D4386A24
 for <virtualization@lists.linux-foundation.org>;
 Mon, 30 Mar 2020 10:19:50 +0000 (UTC)
Received: from smtp.bitdefender.com (smtp02.buh.bitdefender.net [10.17.80.76])
 by mx01.bbu.dsd.mx.bitdefender.com (Postfix) with ESMTPS id
 87A64305D489; Mon, 30 Mar 2020 13:12:58 +0300 (EEST)
Received: from localhost.localdomain (unknown [91.199.104.28])
 by smtp.bitdefender.com (Postfix) with ESMTPSA id 5C176305B7A0;
 Mon, 30 Mar 2020 13:12:58 +0300 (EEST)
From: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>
To: kvm@vger.kernel.org
Subject: [PATCH v8 61/81] KVM: introspection: add KVMI_EVENT_BREAKPOINT
Date: Mon, 30 Mar 2020 13:12:48 +0300
Message-Id: <20200330101308.21702-62-alazar@bitdefender.com>
In-Reply-To: <20200330101308.21702-1-alazar@bitdefender.com>
References: <20200330101308.21702-1-alazar@bitdefender.com>
MIME-Version: 1.0
Cc: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>,
 Paolo Bonzini <pbonzini@redhat.com>,
 =?UTF-8?q?Mihai=20Don=C8=9Bu?= <mdontu@bitdefender.com>,
 =?UTF-8?q?Nicu=C8=99or=20C=C3=AE=C8=9Bu?= <ncitu@bitdefender.com>,
 virtualization@lists.linux-foundation.org
X-BeenThere: virtualization@lists.linux-foundation.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Linux virtualization <virtualization.lists.linux-foundation.org>
List-Unsubscribe: <https://lists.linuxfoundation.org/mailman/options/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=unsubscribe>
List-Archive: <http://lists.linuxfoundation.org/pipermail/virtualization/>
List-Post: <mailto:virtualization@lists.linux-foundation.org>
List-Help: <mailto:virtualization-request@lists.linux-foundation.org?subject=help>
List-Subscribe: <https://lists.linuxfoundation.org/mailman/listinfo/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: virtualization-bounces@lists.linux-foundation.org
Sender: "Virtualization" <virtualization-bounces@lists.linux-foundation.org>

RnJvbTogTWloYWkgRG9uyJt1IDxtZG9udHVAYml0ZGVmZW5kZXIuY29tPgoKVGhpcyBldmVudCBp
cyBzZW50IHdoZW4gYSBicmVha3BvaW50IHdhcyByZWFjaGVkLgoKVGhlIGludHJvc3BlY3Rpb24g
dG9vbCBjYW4gcGxhY2UgYnJlYWtwb2ludHMgYW5kIHVzZSB0aGVtIGFzIG5vdGlmaWNhdGlvbgpm
b3Igd2hlbiB0aGUgT1Mgb3IgYW4gYXBwbGljYXRpb24gaGFzIHJlYWNoZWQgYSBjZXJ0YWluIHN0
YXRlIG9yIGlzCnRyeWluZyB0byBwZXJmb3JtIGEgY2VydGFpbiBvcGVyYXRpb24gKGVnLiBjcmVh
dGUgYSBwcm9jZXNzKS4KClNpZ25lZC1vZmYtYnk6IE1paGFpIERvbsibdSA8bWRvbnR1QGJpdGRl
ZmVuZGVyLmNvbT4KQ28tZGV2ZWxvcGVkLWJ5OiBOaWN1yJlvciBDw67Im3UgPG5jaXR1QGJpdGRl
ZmVuZGVyLmNvbT4KU2lnbmVkLW9mZi1ieTogTmljdciZb3IgQ8OuyJt1IDxuY2l0dUBiaXRkZWZl
bmRlci5jb20+CkNvLWRldmVsb3BlZC1ieTogQWRhbGJlcnQgTGF6xINyIDxhbGF6YXJAYml0ZGVm
ZW5kZXIuY29tPgpTaWduZWQtb2ZmLWJ5OiBBZGFsYmVydCBMYXrEg3IgPGFsYXphckBiaXRkZWZl
bmRlci5jb20+Ci0tLQogRG9jdW1lbnRhdGlvbi92aXJ0L2t2bS9rdm1pLnJzdCAgICAgICAgICAg
ICAgIHwgNDAgKysrKysrKysrKysrKysKIGFyY2gveDg2L2luY2x1ZGUvdWFwaS9hc20va3ZtaS5o
ICAgICAgICAgICAgICB8ICA2ICsrKwogYXJjaC94ODYva3ZtL2t2bWkuYyAgICAgICAgICAgICAg
ICAgICAgICAgICAgIHwgNTIgKysrKysrKysrKysrKysrKysrKwogYXJjaC94ODYva3ZtL3N2bS5j
ICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwgMzIgKysrKysrKysrKysrCiBhcmNoL3g4Ni9r
dm0vdm14L3ZteC5jICAgICAgICAgICAgICAgICAgICAgICAgfCAxNiArKysrLS0KIGluY2x1ZGUv
bGludXgva3ZtaV9ob3N0LmggICAgICAgICAgICAgICAgICAgICB8ICA0ICsrCiBpbmNsdWRlL3Vh
cGkvbGludXgva3ZtaS5oICAgICAgICAgICAgICAgICAgICAgfCAgMSArCiAuLi4vdGVzdGluZy9z
ZWxmdGVzdHMva3ZtL3g4Nl82NC9rdm1pX3Rlc3QuYyAgfCA0NiArKysrKysrKysrKysrKysrCiB2
aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWkuYyAgICAgICAgICAgICAgICAgfCAzMCArKysrKysr
KysrLQogdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pX2ludC5oICAgICAgICAgICAgIHwgIDUg
KysKIHZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9tc2cuYyAgICAgICAgICAgICB8IDE3ICsr
KysrKwogMTEgZmlsZXMgY2hhbmdlZCwgMjQzIGluc2VydGlvbnMoKyksIDYgZGVsZXRpb25zKC0p
CgpkaWZmIC0tZ2l0IGEvRG9jdW1lbnRhdGlvbi92aXJ0L2t2bS9rdm1pLnJzdCBiL0RvY3VtZW50
YXRpb24vdmlydC9rdm0va3ZtaS5yc3QKaW5kZXggNDc1YjA5OTI0ZTA2Li5iNjJjZmRkNjFmODkg
MTAwNjQ0Ci0tLSBhL0RvY3VtZW50YXRpb24vdmlydC9rdm0va3ZtaS5yc3QKKysrIGIvRG9jdW1l
bnRhdGlvbi92aXJ0L2t2bS9rdm1pLnJzdApAQCAtNTQ2LDYgKzU0Niw3IEBAIGNvbW1hbmQpIGJl
Zm9yZSByZXR1cm5pbmcgdG8gZ3Vlc3QuCiBFbmFibGVzL2Rpc2FibGVzIHZDUFUgaW50cm9zcGVj
dGlvbiBldmVudHMuIFRoaXMgY29tbWFuZCBjYW4gYmUgdXNlZCB3aXRoCiB0aGUgZm9sbG93aW5n
IGV2ZW50czo6CiAKKwlLVk1JX0VWRU5UX0JSRUFLUE9JTlQKIAlLVk1JX0VWRU5UX0hZUEVSQ0FM
TAogCiBXaGVuIGFuIGV2ZW50IGlzIGVuYWJsZWQsIHRoZSBpbnRyb3NwZWN0aW9uIHRvb2wgaXMg
bm90aWZpZWQgYW5kCkBAIC01NjgsNiArNTY5LDkgQEAgdGhlICpLVk1JX1ZNX0NPTlRST0xfRVZF
TlRTKiBjb21tYW5kLgogKiAtS1ZNX0VJTlZBTCAtIHRoZSBldmVudCBJRCBpcyB1bmtub3duICh1
c2UgKktWTUlfVk1fQ0hFQ0tfRVZFTlQqIGZpcnN0KQogKiAtS1ZNX0VQRVJNIC0gdGhlIGFjY2Vz
cyBpcyBkaXNhbGxvd2VkICh1c2UgKktWTUlfVk1fQ0hFQ0tfRVZFTlQqIGZpcnN0KQogKiAtS1ZN
X0VBR0FJTiAtIHRoZSBzZWxlY3RlZCB2Q1BVIGNhbid0IGJlIGludHJvc3BlY3RlZCB5ZXQKKyog
LUtWTV9FQlVTWSAtIHRoZSBldmVudCBjYW4ndCBiZSBpbnRlcmNlcHRlZCByaWdodCBub3cKKyAg
ICAgICAgICAgICAgIChlLmcuIEtWTUlfRVZFTlRfQlJFQUtQT0lOVCBpZiB0aGUgI0JQIGV2ZW50
IGlzIGFscmVhZHkgaW50ZXJjZXB0ZWQKKyAgICAgICAgICAgICAgICBieSB1c2Vyc3BhY2UpCiAK
IDExLiBLVk1JX1ZDUFVfR0VUX1JFR0lTVEVSUwogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
CkBAIC04MTUsMyArODE5LDM5IEBAIEl0IGlzIHVzZWQgYnkgdGhlIGNvZGUgcmVzaWRpbmcgaW5z
aWRlIHRoZSBpbnRyb3NwZWN0ZWQgZ3Vlc3QgdG8gY2FsbCB0aGUKIGludHJvc3BlY3Rpb24gdG9v
bCBhbmQgdG8gcmVwb3J0IGNlcnRhaW4gZGV0YWlscyBhYm91dCBpdHMgb3BlcmF0aW9uLiBGb3IK
IGV4YW1wbGUsIGEgY2xhc3NpYyBhbnRpbWFsd2FyZSByZW1lZGlhdGlvbiB0b29sIGNhbiByZXBv
cnQgd2hhdCBpdCBoYXMKIGZvdW5kIGR1cmluZyBhIHNjYW4uCisKKzQuIEtWTUlfRVZFTlRfQlJF
QUtQT0lOVAorLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCisKKzpBcmNoaXRlY3R1cmVzOiB4ODYK
KzpWZXJzaW9uczogPj0gMQorOkFjdGlvbnM6IENPTlRJTlVFLCBDUkFTSCwgUkVUUlkKKzpQYXJh
bWV0ZXJzOgorCis6OgorCisJc3RydWN0IGt2bWlfZXZlbnQ7CisJc3RydWN0IGt2bWlfZXZlbnRf
YnJlYWtwb2ludCB7CisJCV9fdTY0IGdwYTsKKwkJX191OCBpbnNuX2xlbjsKKwkJX191OCBwYWRk
aW5nWzddOworCX07CisKKzpSZXR1cm5zOgorCis6OgorCisJc3RydWN0IGt2bWlfdmNwdV9oZHI7
CisJc3RydWN0IGt2bWlfZXZlbnRfcmVwbHk7CisKK1RoaXMgZXZlbnQgaXMgc2VudCB3aGVuIGEg
YnJlYWtwb2ludCB3YXMgcmVhY2hlZCBhbmQgdGhlIGludHJvc3BlY3Rpb24gaGFzCitiZWVuIGVu
YWJsZWQgZm9yIHRoaXMgZXZlbnQgKHNlZSAqS1ZNSV9WQ1BVX0NPTlRST0xfRVZFTlRTKikuCisK
K1NvbWUgb2YgdGhlc2UgYnJlYWtwb2ludHMgY291bGQgaGF2ZSBiZWVuIGluamVjdGVkIGJ5IHRo
ZSBpbnRyb3NwZWN0aW9uIHRvb2wsCitwbGFjZWQgaW4gdGhlIHNsYWNrIHNwYWNlIG9mIHZhcmlv
dXMgZnVuY3Rpb25zIGFuZCB1c2VkIGFzIG5vdGlmaWNhdGlvbgorZm9yIHdoZW4gdGhlIE9TIG9y
IGFuIGFwcGxpY2F0aW9uIGhhcyByZWFjaGVkIGEgY2VydGFpbiBzdGF0ZSBvciBpcwordHJ5aW5n
IHRvIHBlcmZvcm0gYSBjZXJ0YWluIG9wZXJhdGlvbiAobGlrZSBjcmVhdGluZyBhIHByb2Nlc3Mp
LgorCitgYGt2bWlfZXZlbnRgYCBhbmQgdGhlIGd1ZXN0IHBoeXNpY2FsIGFkZHJlc3MgYXJlIHNl
bnQgdG8gdGhlIGludHJvc3BlY3Rpb24gdG9vbC4KKworVGhlICpSRVRSWSogYWN0aW9uIGlzIHVz
ZWQgYnkgdGhlIGludHJvc3BlY3Rpb24gdG9vbCBmb3IgaXRzIG93biBicmVha3BvaW50cy4KZGlm
ZiAtLWdpdCBhL2FyY2gveDg2L2luY2x1ZGUvdWFwaS9hc20va3ZtaS5oIGIvYXJjaC94ODYvaW5j
bHVkZS91YXBpL2FzbS9rdm1pLmgKaW5kZXggOTg4MmU2OGNhYjc1Li4xNjA1Nzc3MjU2YTMgMTAw
NjQ0Ci0tLSBhL2FyY2gveDg2L2luY2x1ZGUvdWFwaS9hc20va3ZtaS5oCisrKyBiL2FyY2gveDg2
L2luY2x1ZGUvdWFwaS9hc20va3ZtaS5oCkBAIC01OSw0ICs1OSwxMCBAQCBzdHJ1Y3Qga3ZtaV92
Y3B1X2dldF9jcHVpZF9yZXBseSB7CiAJX191MzIgZWR4OwogfTsKIAorc3RydWN0IGt2bWlfZXZl
bnRfYnJlYWtwb2ludCB7CisJX191NjQgZ3BhOworCV9fdTggaW5zbl9sZW47CisJX191OCBwYWRk
aW5nWzddOworfTsKKwogI2VuZGlmIC8qIF9VQVBJX0FTTV9YODZfS1ZNSV9IICovCmRpZmYgLS1n
aXQgYS9hcmNoL3g4Ni9rdm0va3ZtaS5jIGIvYXJjaC94ODYva3ZtL2t2bWkuYwppbmRleCA3OTMw
ZjZkZTFhNDAuLjkyMzE0MzQxYjNhOSAxMDA2NDQKLS0tIGEvYXJjaC94ODYva3ZtL2t2bWkuYwor
KysgYi9hcmNoL3g4Ni9rdm0va3ZtaS5jCkBAIC0yNDEsMyArMjQxLDU1IEBAIHZvaWQga3ZtaV9h
cmNoX2h5cGVyY2FsbF9ldmVudChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUpCiAJCQkJCQkiSFlQRVJD
QUxMIik7CiAJfQogfQorCitzdGF0aWMgaW50IGt2bWlfY29udHJvbF9icF9pbnRlcmNlcHQoc3Ry
dWN0IGt2bV92Y3B1ICp2Y3B1LCBib29sIGVuYWJsZSkKK3sKKwlzdHJ1Y3Qga3ZtX2d1ZXN0X2Rl
YnVnIGRiZyA9IHt9OworCWludCBlcnIgPSAwOworCisJaWYgKGVuYWJsZSkKKwkJZGJnLmNvbnRy
b2wgPSBLVk1fR1VFU1REQkdfRU5BQkxFIHwgS1ZNX0dVRVNUREJHX1VTRV9TV19CUDsKKwllcnIg
PSBrdm1fYXJjaF92Y3B1X3NldF9ndWVzdF9kZWJ1Zyh2Y3B1LCAmZGJnKTsKKworCXJldHVybiBl
cnI7Cit9CisKK2ludCBrdm1pX2FyY2hfY21kX2NvbnRyb2xfaW50ZXJjZXB0KHN0cnVjdCBrdm1f
dmNwdSAqdmNwdSwKKwkJCQkgICAgdW5zaWduZWQgaW50IGV2ZW50X2lkLCBib29sIGVuYWJsZSkK
K3sKKwlpbnQgZXJyID0gMDsKKworCXN3aXRjaCAoZXZlbnRfaWQpIHsKKwljYXNlIEtWTUlfRVZF
TlRfQlJFQUtQT0lOVDoKKwkJZXJyID0ga3ZtaV9jb250cm9sX2JwX2ludGVyY2VwdCh2Y3B1LCBl
bmFibGUpOworCQlicmVhazsKKwlkZWZhdWx0OgorCQlicmVhazsKKwl9CisKKwlyZXR1cm4gZXJy
OworfQorCit2b2lkIGt2bWlfYXJjaF9icmVha3BvaW50X2V2ZW50KHN0cnVjdCBrdm1fdmNwdSAq
dmNwdSwgdTY0IGd2YSwgdTggaW5zbl9sZW4pCit7CisJdTMyIGFjdGlvbjsKKwl1NjQgZ3BhOwor
CisJZ3BhID0ga3ZtX21tdV9ndmFfdG9fZ3BhX3N5c3RlbSh2Y3B1LCBndmEsIDAsIE5VTEwpOwor
CisJYWN0aW9uID0ga3ZtaV9tc2dfc2VuZF9icCh2Y3B1LCBncGEsIGluc25fbGVuKTsKKwlzd2l0
Y2ggKGFjdGlvbikgeworCWNhc2UgS1ZNSV9FVkVOVF9BQ1RJT05fQ09OVElOVUU6CisJCWt2bV9x
dWV1ZV9leGNlcHRpb24odmNwdSwgQlBfVkVDVE9SKTsKKwkJYnJlYWs7CisJY2FzZSBLVk1JX0VW
RU5UX0FDVElPTl9SRVRSWToKKwkJLyogcmlwIHdhcyBtb3N0IGxpa2VseSBhZGp1c3RlZCBwYXN0
IHRoZSBJTlQgMyBpbnN0cnVjdGlvbiAqLworCQlicmVhazsKKwlkZWZhdWx0OgorCQlrdm1pX2hh
bmRsZV9jb21tb25fZXZlbnRfYWN0aW9ucyh2Y3B1LT5rdm0sIGFjdGlvbiwgIkJQIik7CisJfQor
fQorCit2b2lkIGt2bWlfYXJjaF9yZXN0b3JlX2ludGVyY2VwdGlvbihzdHJ1Y3Qga3ZtX3ZjcHUg
KnZjcHUpCit7Cit9CmRpZmYgLS1naXQgYS9hcmNoL3g4Ni9rdm0vc3ZtLmMgYi9hcmNoL3g4Ni9r
dm0vc3ZtLmMKaW5kZXggMmJlOGY5MzEzNjExLi4wNWM2NDMxOGE4ZGYgMTAwNjQ0Ci0tLSBhL2Fy
Y2gveDg2L2t2bS9zdm0uYworKysgYi9hcmNoL3g4Ni9rdm0vc3ZtLmMKQEAgLTI4MjEsMTAgKzI4
MjEsNDIgQEAgc3RhdGljIGludCBkYl9pbnRlcmNlcHRpb24oc3RydWN0IHZjcHVfc3ZtICpzdm0p
CiAJcmV0dXJuIDE7CiB9CiAKK3N0YXRpYyB1bnNpZ25lZCBzdm1fZ2V0X2luc3RydWN0aW9uX2xl
bihzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUpCit7CisJc3RydWN0IHZjcHVfc3ZtICpzdm0gPSB0b19z
dm0odmNwdSk7CisJdW5zaWduZWQgbG9uZyBuZXh0X3JpcCA9IDAsIHJpcCA9IGt2bV9yaXBfcmVh
ZCh2Y3B1KTsKKwl1bnNpZ25lZCBpbnNuX2xlbjsKKworCWlmIChzdGF0aWNfY3B1X2hhcyhYODZf
RkVBVFVSRV9OUklQUykpCisJCW5leHRfcmlwID0gc3ZtLT52bWNiLT5jb250cm9sLm5leHRfcmlw
OworCisJaWYgKCFuZXh0X3JpcCkgeworCQlpZiAoIWt2bV9lbXVsYXRlX2luc3RydWN0aW9uKHZj
cHUsIEVNVUxUWVBFX1NLSVApKQorCQkJcmV0dXJuIDA7CisKKwkJbmV4dF9yaXAgPSBrdm1fcmlw
X3JlYWQodmNwdSk7CisJCWt2bV9yaXBfd3JpdGUodmNwdSwgcmlwKTsKKwl9CisKKwlpbnNuX2xl
biA9IG5leHRfcmlwIC0gcmlwOworCWlmIChpbnNuX2xlbiA+IE1BWF9JTlNUX1NJWkUpIHsKKwkJ
cHJfZXJyKCIlczogaXAgMHglbHggbmV4dCAweCVseFxuIiwKKwkJICAgICAgIF9fZnVuY19fLCBy
aXAsIG5leHRfcmlwKTsKKwkJcmV0dXJuIDA7CisJfQorCisJcmV0dXJuIGluc25fbGVuOworfQor
CiBzdGF0aWMgaW50IGJwX2ludGVyY2VwdGlvbihzdHJ1Y3QgdmNwdV9zdm0gKnN2bSkKIHsKIAlz
dHJ1Y3Qga3ZtX3J1biAqa3ZtX3J1biA9IHN2bS0+dmNwdS5ydW47CiAKKwlpZiAoIWt2bWlfYnJl
YWtwb2ludF9ldmVudCgmc3ZtLT52Y3B1LCBzdm0tPnZtY2ItPnNhdmUuY3MuYmFzZSArCisJCQkJ
CSAgICAgICBzdm0tPnZtY2ItPnNhdmUucmlwLAorCQkJCSAgIHN2bV9nZXRfaW5zdHJ1Y3Rpb25f
bGVuKCZzdm0tPnZjcHUpKSkKKwkJcmV0dXJuIDE7CisKIAlrdm1fcnVuLT5leGl0X3JlYXNvbiA9
IEtWTV9FWElUX0RFQlVHOwogCWt2bV9ydW4tPmRlYnVnLmFyY2gucGMgPSBzdm0tPnZtY2ItPnNh
dmUuY3MuYmFzZSArIHN2bS0+dm1jYi0+c2F2ZS5yaXA7CiAJa3ZtX3J1bi0+ZGVidWcuYXJjaC5l
eGNlcHRpb24gPSBCUF9WRUNUT1I7CmRpZmYgLS1naXQgYS9hcmNoL3g4Ni9rdm0vdm14L3ZteC5j
IGIvYXJjaC94ODYva3ZtL3ZteC92bXguYwppbmRleCAxMzQ2MmVmMmNlOWUuLjRiNzA0NDE5Mzkx
NyAxMDA2NDQKLS0tIGEvYXJjaC94ODYva3ZtL3ZteC92bXguYworKysgYi9hcmNoL3g4Ni9rdm0v
dm14L3ZteC5jCkBAIC00NjU1LDcgKzQ2NTUsNyBAQCBzdGF0aWMgaW50IGhhbmRsZV9leGNlcHRp
b25fbm1pKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSkKIAlzdHJ1Y3QgdmNwdV92bXggKnZteCA9IHRv
X3ZteCh2Y3B1KTsKIAlzdHJ1Y3Qga3ZtX3J1biAqa3ZtX3J1biA9IHZjcHUtPnJ1bjsKIAl1MzIg
aW50cl9pbmZvLCBleF9ubywgZXJyb3JfY29kZTsKLQl1bnNpZ25lZCBsb25nIGNyMiwgcmlwLCBk
cjY7CisJdW5zaWduZWQgbG9uZyBjcjIsIGRyNjsKIAl1MzIgdmVjdF9pbmZvOwogCiAJdmVjdF9p
bmZvID0gdm14LT5pZHRfdmVjdG9yaW5nX2luZm87CkBAIC00NzMzLDcgKzQ3MzMsMTAgQEAgc3Rh
dGljIGludCBoYW5kbGVfZXhjZXB0aW9uX25taShzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUpCiAJCWt2
bV9ydW4tPmRlYnVnLmFyY2guZHI2ID0gZHI2IHwgRFI2X0ZJWEVEXzE7CiAJCWt2bV9ydW4tPmRl
YnVnLmFyY2guZHI3ID0gdm1jc19yZWFkbChHVUVTVF9EUjcpOwogCQkvKiBmYWxsIHRocm91Z2gg
Ki8KLQljYXNlIEJQX1ZFQ1RPUjoKKwljYXNlIEJQX1ZFQ1RPUjogeworCQl1bnNpZ25lZCBsb25n
IGd2YSA9IHZtY3NfcmVhZGwoR1VFU1RfQ1NfQkFTRSkgKworCQkJa3ZtX3JpcF9yZWFkKHZjcHUp
OworCiAJCS8qCiAJCSAqIFVwZGF0ZSBpbnN0cnVjdGlvbiBsZW5ndGggYXMgd2UgbWF5IHJlaW5q
ZWN0ICNCUCBmcm9tCiAJCSAqIHVzZXIgc3BhY2Ugd2hpbGUgaW4gZ3Vlc3QgZGVidWdnaW5nIG1v
ZGUuIFJlYWRpbmcgaXQgZm9yCkBAIC00NzQxLDExICs0NzQ0LDE2IEBAIHN0YXRpYyBpbnQgaGFu
ZGxlX2V4Y2VwdGlvbl9ubWkoc3RydWN0IGt2bV92Y3B1ICp2Y3B1KQogCQkgKi8KIAkJdm14LT52
Y3B1LmFyY2guZXZlbnRfZXhpdF9pbnN0X2xlbiA9CiAJCQl2bWNzX3JlYWQzMihWTV9FWElUX0lO
U1RSVUNUSU9OX0xFTik7CisKKwkJaWYgKCFrdm1pX2JyZWFrcG9pbnRfZXZlbnQodmNwdSwgZ3Zh
LAorCQkJCQkgICB2bXgtPnZjcHUuYXJjaC5ldmVudF9leGl0X2luc3RfbGVuKSkKKwkJCXJldHVy
biAxOworCiAJCWt2bV9ydW4tPmV4aXRfcmVhc29uID0gS1ZNX0VYSVRfREVCVUc7Ci0JCXJpcCA9
IGt2bV9yaXBfcmVhZCh2Y3B1KTsKLQkJa3ZtX3J1bi0+ZGVidWcuYXJjaC5wYyA9IHZtY3NfcmVh
ZGwoR1VFU1RfQ1NfQkFTRSkgKyByaXA7CisJCWt2bV9ydW4tPmRlYnVnLmFyY2gucGMgPSBndmE7
CiAJCWt2bV9ydW4tPmRlYnVnLmFyY2guZXhjZXB0aW9uID0gZXhfbm87CiAJCWJyZWFrOworCX0K
IAlkZWZhdWx0OgogCQlrdm1fcnVuLT5leGl0X3JlYXNvbiA9IEtWTV9FWElUX0VYQ0VQVElPTjsK
IAkJa3ZtX3J1bi0+ZXguZXhjZXB0aW9uID0gZXhfbm87CmRpZmYgLS1naXQgYS9pbmNsdWRlL2xp
bnV4L2t2bWlfaG9zdC5oIGIvaW5jbHVkZS9saW51eC9rdm1pX2hvc3QuaAppbmRleCBhYzc4ZjI4
NDVlNWYuLjhmMjgwNjUzMjBkOCAxMDA2NDQKLS0tIGEvaW5jbHVkZS9saW51eC9rdm1pX2hvc3Qu
aAorKysgYi9pbmNsdWRlL2xpbnV4L2t2bWlfaG9zdC5oCkBAIC03Niw2ICs3Niw3IEBAIGludCBr
dm1pX2lvY3RsX3ByZXVuaG9vayhzdHJ1Y3Qga3ZtICprdm0pOwogCiB2b2lkIGt2bWlfaGFuZGxl
X3JlcXVlc3RzKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSk7CiBib29sIGt2bWlfaHlwZXJjYWxsX2V2
ZW50KHN0cnVjdCBrdm1fdmNwdSAqdmNwdSk7Citib29sIGt2bWlfYnJlYWtwb2ludF9ldmVudChz
dHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsIHU2NCBndmEsIHU4IGluc25fbGVuKTsKIAogI2Vsc2UKIApA
QCAtODcsNiArODgsOSBAQCBzdGF0aWMgaW5saW5lIHZvaWQga3ZtaV92Y3B1X3VuaW5pdChzdHJ1
Y3Qga3ZtX3ZjcHUgKnZjcHUpIHsgfQogCiBzdGF0aWMgaW5saW5lIHZvaWQga3ZtaV9oYW5kbGVf
cmVxdWVzdHMoc3RydWN0IGt2bV92Y3B1ICp2Y3B1KSB7IH0KIHN0YXRpYyBpbmxpbmUgYm9vbCBr
dm1pX2h5cGVyY2FsbF9ldmVudChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUpIHsgcmV0dXJuIGZhbHNl
OyB9CitzdGF0aWMgaW5saW5lIGJvb2wga3ZtaV9icmVha3BvaW50X2V2ZW50KHN0cnVjdCBrdm1f
dmNwdSAqdmNwdSwgdTY0IGd2YSwKKwkJCQkJIHU4IGluc25fbGVuKQorCQkJeyByZXR1cm4gdHJ1
ZTsgfQogCiAjZW5kaWYgLyogQ09ORklHX0tWTV9JTlRST1NQRUNUSU9OICovCiAKZGlmZiAtLWdp
dCBhL2luY2x1ZGUvdWFwaS9saW51eC9rdm1pLmggYi9pbmNsdWRlL3VhcGkvbGludXgva3ZtaS5o
CmluZGV4IDE5MTM3YmQ0Y2FmYy4uZjY3OTJkNDFiMDJmIDEwMDY0NAotLS0gYS9pbmNsdWRlL3Vh
cGkvbGludXgva3ZtaS5oCisrKyBiL2luY2x1ZGUvdWFwaS9saW51eC9rdm1pLmgKQEAgLTM5LDYg
KzM5LDcgQEAgZW51bSB7CiAJS1ZNSV9FVkVOVF9VTkhPT0sgICAgID0gMCwKIAlLVk1JX0VWRU5U
X1BBVVNFX1ZDUFUgPSAxLAogCUtWTUlfRVZFTlRfSFlQRVJDQUxMICA9IDIsCisJS1ZNSV9FVkVO
VF9CUkVBS1BPSU5UID0gMywKIAogCUtWTUlfTlVNX0VWRU5UUwogfTsKZGlmZiAtLWdpdCBhL3Rv
b2xzL3Rlc3Rpbmcvc2VsZnRlc3RzL2t2bS94ODZfNjQva3ZtaV90ZXN0LmMgYi90b29scy90ZXN0
aW5nL3NlbGZ0ZXN0cy9rdm0veDg2XzY0L2t2bWlfdGVzdC5jCmluZGV4IGFlZmM4M2JjNjk1NS4u
ZGFiMDE1NTU1Zjg5IDEwMDY0NAotLS0gYS90b29scy90ZXN0aW5nL3NlbGZ0ZXN0cy9rdm0veDg2
XzY0L2t2bWlfdGVzdC5jCisrKyBiL3Rvb2xzL3Rlc3Rpbmcvc2VsZnRlc3RzL2t2bS94ODZfNjQv
a3ZtaV90ZXN0LmMKQEAgLTQ5LDYgKzQ5LDcgQEAgc3RydWN0IHZjcHVfd29ya2VyX2RhdGEgewog
CiBlbnVtIHsKIAlHVUVTVF9URVNUX05PT1AgPSAwLAorCUdVRVNUX1RFU1RfQlAsCiAJR1VFU1Rf
VEVTVF9IWVBFUkNBTEwsCiB9OwogCkBAIC02Myw2ICs2NCwxMSBAQCBzdGF0aWMgaW50IGd1ZXN0
X3Rlc3RfaWQodm9pZCkKIAlyZXR1cm4gUkVBRF9PTkNFKHRlc3RfaWQpOwogfQogCitzdGF0aWMg
dm9pZCBndWVzdF9icF90ZXN0KHZvaWQpCit7CisJYXNtIHZvbGF0aWxlKCJpbnQzIik7Cit9CisK
IHN0YXRpYyB2b2lkIGd1ZXN0X2h5cGVyY2FsbF90ZXN0KHZvaWQpCiB7CiAJYXNtIHZvbGF0aWxl
KCJtb3YgJDM0LCAlcmF4Iik7CkBAIC03Nyw2ICs4Myw5IEBAIHN0YXRpYyB2b2lkIGd1ZXN0X2Nv
ZGUodm9pZCkKIAkJc3dpdGNoIChndWVzdF90ZXN0X2lkKCkpIHsKIAkJY2FzZSBHVUVTVF9URVNU
X05PT1A6CiAJCQlicmVhazsKKwkJY2FzZSBHVUVTVF9URVNUX0JQOgorCQkJZ3Vlc3RfYnBfdGVz
dCgpOworCQkJYnJlYWs7CiAJCWNhc2UgR1VFU1RfVEVTVF9IWVBFUkNBTEw6CiAJCQlndWVzdF9o
eXBlcmNhbGxfdGVzdCgpOwogCQkJYnJlYWs7CkBAIC05ODQsNiArOTkzLDQyIEBAIHN0YXRpYyB2
b2lkIHRlc3RfZXZlbnRfaHlwZXJjYWxsKHN0cnVjdCBrdm1fdm0gKnZtKQogCWRpc2FibGVfdmNw
dV9ldmVudCh2bSwgZXZlbnRfaWQpOwogfQogCitzdGF0aWMgdm9pZCB0ZXN0X2V2ZW50X2JyZWFr
cG9pbnQoc3RydWN0IGt2bV92bSAqdm0pCit7CisJc3RydWN0IHZjcHVfd29ya2VyX2RhdGEgZGF0
YSA9IHsKKwkJLnZtID0gdm0sCisJCS52Y3B1X2lkID0gVkNQVV9JRCwKKwkJLnRlc3RfaWQgPSBH
VUVTVF9URVNUX0JQLAorCX07CisJc3RydWN0IGt2bWlfbXNnX2hkciBoZHI7CisJc3RydWN0IHsK
KwkJc3RydWN0IGt2bWlfZXZlbnQgY29tbW9uOworCQlzdHJ1Y3Qga3ZtaV9ldmVudF9icmVha3Bv
aW50IGJwOworCX0gZXY7CisJc3RydWN0IHZjcHVfcmVwbHkgcnBsID0ge307CisJX191MTYgZXZl
bnRfaWQgPSBLVk1JX0VWRU5UX0JSRUFLUE9JTlQ7CisJcHRocmVhZF90IHZjcHVfdGhyZWFkOwor
CisJZW5hYmxlX3ZjcHVfZXZlbnQodm0sIGV2ZW50X2lkKTsKKworCXZjcHVfdGhyZWFkID0gc3Rh
cnRfdmNwdV93b3JrZXIoJmRhdGEpOworCisJcmVjZWl2ZV9ldmVudCgmaGRyLCAmZXYuY29tbW9u
LCBzaXplb2YoZXYpLCBldmVudF9pZCk7CisKKwlERUJVRygiQnJlYWtwb2ludCBldmVudCwgcmlw
IDB4JWxseCwgbGVuICV1XG4iLAorCQlldi5jb21tb24uYXJjaC5yZWdzLnJpcCwgZXYuYnAuaW5z
bl9sZW4pOworCisJZXYuY29tbW9uLmFyY2gucmVncy5yaXAgKz0gZXYuYnAuaW5zbl9sZW47CisJ
X19zZXRfcmVnaXN0ZXJzKHZtLCAmZXYuY29tbW9uLmFyY2gucmVncyk7CisKKwlyZXBseV90b19l
dmVudCgmaGRyLCAmZXYuY29tbW9uLCBLVk1JX0VWRU5UX0FDVElPTl9SRVRSWSwKKwkJCSZycGws
IHNpemVvZihycGwpKTsKKworCXN0b3BfdmNwdV93b3JrZXIodmNwdV90aHJlYWQsICZkYXRhKTsK
KworCWRpc2FibGVfdmNwdV9ldmVudCh2bSwgZXZlbnRfaWQpOworfQorCiBzdGF0aWMgdm9pZCB0
ZXN0X2ludHJvc3BlY3Rpb24oc3RydWN0IGt2bV92bSAqdm0pCiB7CiAJc3JhbmRvbSh0aW1lKDAp
KTsKQEAgLTEwMDUsNiArMTA1MCw3IEBAIHN0YXRpYyB2b2lkIHRlc3RfaW50cm9zcGVjdGlvbihz
dHJ1Y3Qga3ZtX3ZtICp2bSkKIAl0ZXN0X2NtZF92Y3B1X3NldF9yZWdpc3RlcnModm0pOwogCXRl
c3RfY21kX3ZjcHVfZ2V0X2NwdWlkKHZtKTsKIAl0ZXN0X2V2ZW50X2h5cGVyY2FsbCh2bSk7CisJ
dGVzdF9ldmVudF9icmVha3BvaW50KHZtKTsKIAogCXVuaG9va19pbnRyb3NwZWN0aW9uKHZtKTsK
IH0KZGlmZiAtLWdpdCBhL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaS5jIGIvdmlydC9rdm0v
aW50cm9zcGVjdGlvbi9rdm1pLmMKaW5kZXggMjg2Y2ZjN2ViZjhhLi4zMjUxNmNjNzA5MjggMTAw
NjQ0Ci0tLSBhL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaS5jCisrKyBiL3ZpcnQva3ZtL2lu
dHJvc3BlY3Rpb24va3ZtaS5jCkBAIC03OCw2ICs3OCw3IEBAIHN0YXRpYyB2b2lkIHNldHVwX2tu
b3duX2V2ZW50cyh2b2lkKQogCXNldF9iaXQoS1ZNSV9FVkVOVF9VTkhPT0ssIEt2bWlfa25vd25f
dm1fZXZlbnRzKTsKIAogCWJpdG1hcF96ZXJvKEt2bWlfa25vd25fdmNwdV9ldmVudHMsIEtWTUlf
TlVNX0VWRU5UUyk7CisJc2V0X2JpdChLVk1JX0VWRU5UX0JSRUFLUE9JTlQsIEt2bWlfa25vd25f
dmNwdV9ldmVudHMpOwogCXNldF9iaXQoS1ZNSV9FVkVOVF9IWVBFUkNBTEwsIEt2bWlfa25vd25f
dmNwdV9ldmVudHMpOwogCXNldF9iaXQoS1ZNSV9FVkVOVF9QQVVTRV9WQ1BVLCBLdm1pX2tub3du
X3ZjcHVfZXZlbnRzKTsKIApAQCAtMTk4LDYgKzE5OSw4IEBAIHN0YXRpYyB2b2lkIGZyZWVfdmNw
dWkoc3RydWN0IGt2bV92Y3B1ICp2Y3B1KQogCiAJa2ZyZWUodmNwdWkpOwogCXZjcHUtPmt2bWkg
PSBOVUxMOworCisJa3ZtaV9tYWtlX3JlcXVlc3QodmNwdSwgZmFsc2UpOwogfQogCiBzdGF0aWMg
dm9pZCBmcmVlX2t2bWkoc3RydWN0IGt2bSAqa3ZtKQpAQCAtNTk0LDcgKzU5Nyw3IEBAIGludCBr
dm1pX2NtZF92Y3B1X2NvbnRyb2xfZXZlbnRzKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwKIAllbHNl
CiAJCWNsZWFyX2JpdChldmVudF9pZCwgdmNwdWktPmV2X2VuYWJsZV9tYXNrKTsKIAotCXJldHVy
biAwOworCXJldHVybiBrdm1pX2FyY2hfY21kX2NvbnRyb2xfaW50ZXJjZXB0KHZjcHUsIGV2ZW50
X2lkLCBlbmFibGUpOwogfQogCiBzdGF0aWMgdW5zaWduZWQgbG9uZyBnZm5fdG9faHZhX3NhZmUo
c3RydWN0IGt2bSAqa3ZtLCBnZm5fdCBnZm4pCkBAIC03ODksNyArNzkyLDcgQEAgdm9pZCBrdm1p
X2hhbmRsZV9yZXF1ZXN0cyhzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUpCiAKIAlrdm1pID0ga3ZtaV9n
ZXQodmNwdS0+a3ZtKTsKIAlpZiAoIWt2bWkpCi0JCXJldHVybjsKKwkJZ290byBvdXQ7CiAKIAlm
b3IgKDs7KSB7CiAJCWt2bWlfcnVuX2pvYnModmNwdSk7CkBAIC04MDEsNiArODA0LDkgQEAgdm9p
ZCBrdm1pX2hhbmRsZV9yZXF1ZXN0cyhzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUpCiAJfQogCiAJa3Zt
aV9wdXQodmNwdS0+a3ZtKTsKKworb3V0OgorCWt2bWlfYXJjaF9yZXN0b3JlX2ludGVyY2VwdGlv
bih2Y3B1KTsKIH0KIAogaW50IGt2bWlfY21kX3ZjcHVfcGF1c2Uoc3RydWN0IGt2bV92Y3B1ICp2
Y3B1LCBib29sIHdhaXQpCkBAIC04NjIsMyArODY4LDIzIEBAIGJvb2wga3ZtaV9oeXBlcmNhbGxf
ZXZlbnQoc3RydWN0IGt2bV92Y3B1ICp2Y3B1KQogCiAJcmV0dXJuIHJldDsKIH0KKworYm9vbCBr
dm1pX2JyZWFrcG9pbnRfZXZlbnQoc3RydWN0IGt2bV92Y3B1ICp2Y3B1LCB1NjQgZ3ZhLCB1OCBp
bnNuX2xlbikKK3sKKwlzdHJ1Y3Qga3ZtX2ludHJvc3BlY3Rpb24gKmt2bWk7CisJYm9vbCByZXQg
PSBmYWxzZTsKKworCWt2bWkgPSBrdm1pX2dldCh2Y3B1LT5rdm0pOworCWlmICgha3ZtaSkKKwkJ
cmV0dXJuIHRydWU7CisKKwlpZiAoaXNfZXZlbnRfZW5hYmxlZCh2Y3B1LCBLVk1JX0VWRU5UX0JS
RUFLUE9JTlQpKQorCQlrdm1pX2FyY2hfYnJlYWtwb2ludF9ldmVudCh2Y3B1LCBndmEsIGluc25f
bGVuKTsKKwllbHNlCisJCXJldCA9IHRydWU7CisKKwlrdm1pX3B1dCh2Y3B1LT5rdm0pOworCisJ
cmV0dXJuIHJldDsKK30KK0VYUE9SVF9TWU1CT0woa3ZtaV9icmVha3BvaW50X2V2ZW50KTsKZGlm
ZiAtLWdpdCBhL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9pbnQuaCBiL3ZpcnQva3ZtL2lu
dHJvc3BlY3Rpb24va3ZtaV9pbnQuaAppbmRleCA0MjZiMWU2MzM1MjguLjBmYzYyMmIyYzk2ZCAx
MDA2NDQKLS0tIGEvdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pX2ludC5oCisrKyBiL3ZpcnQv
a3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9pbnQuaApAQCAtMzYsNiArMzYsNyBAQCBib29sIGt2bWlf
bXNnX3Byb2Nlc3Moc3RydWN0IGt2bV9pbnRyb3NwZWN0aW9uICprdm1pKTsKIGludCBrdm1pX21z
Z19zZW5kX3VuaG9vayhzdHJ1Y3Qga3ZtX2ludHJvc3BlY3Rpb24gKmt2bWkpOwogdTMyIGt2bWlf
bXNnX3NlbmRfdmNwdV9wYXVzZShzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUpOwogdTMyIGt2bWlfbXNn
X3NlbmRfaHlwZXJjYWxsKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSk7Cit1MzIga3ZtaV9tc2dfc2Vu
ZF9icChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsIHU2NCBncGEsIHU4IGluc25fbGVuKTsKIAogLyog
a3ZtaS5jICovCiB2b2lkICprdm1pX21zZ19hbGxvYyh2b2lkKTsKQEAgLTY0LDYgKzY1LDcgQEAg
aW50IGt2bWlfY21kX3ZjcHVfc2V0X3JlZ2lzdGVycyhzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsCiAJ
CQkJY29uc3Qgc3RydWN0IGt2bV9yZWdzICpyZWdzKTsKIAogLyogYXJjaCAqLwordm9pZCBrdm1p
X2FyY2hfcmVzdG9yZV9pbnRlcmNlcHRpb24oc3RydWN0IGt2bV92Y3B1ICp2Y3B1KTsKIGludCBr
dm1pX2FyY2hfY21kX3ZjcHVfZ2V0X2luZm8oc3RydWN0IGt2bV92Y3B1ICp2Y3B1LAogCQkJCXN0
cnVjdCBrdm1pX3ZjcHVfZ2V0X2luZm9fcmVwbHkgKnJwbCk7CiB2b2lkIGt2bWlfYXJjaF9zZXR1
cF9ldmVudChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsIHN0cnVjdCBrdm1pX2V2ZW50ICpldik7CkBA
IC03OSw1ICs4MSw4IEBAIGludCBrdm1pX2FyY2hfY21kX3ZjcHVfZ2V0X2NwdWlkKHN0cnVjdCBr
dm1fdmNwdSAqdmNwdSwKIAkJCQkgc3RydWN0IGt2bWlfdmNwdV9nZXRfY3B1aWRfcmVwbHkgKnJw
bCk7CiBib29sIGt2bWlfYXJjaF9pc19hZ2VudF9oeXBlcmNhbGwoc3RydWN0IGt2bV92Y3B1ICp2
Y3B1KTsKIHZvaWQga3ZtaV9hcmNoX2h5cGVyY2FsbF9ldmVudChzdHJ1Y3Qga3ZtX3ZjcHUgKnZj
cHUpOwordm9pZCBrdm1pX2FyY2hfYnJlYWtwb2ludF9ldmVudChzdHJ1Y3Qga3ZtX3ZjcHUgKnZj
cHUsIHU2NCBndmEsIHU4IGluc25fbGVuKTsKK2ludCBrdm1pX2FyY2hfY21kX2NvbnRyb2xfaW50
ZXJjZXB0KHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwKKwkJCQkgICAgdW5zaWduZWQgaW50IGV2ZW50
X2lkLCBib29sIGVuYWJsZSk7CiAKICNlbmRpZgpkaWZmIC0tZ2l0IGEvdmlydC9rdm0vaW50cm9z
cGVjdGlvbi9rdm1pX21zZy5jIGIvdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pX21zZy5jCmlu
ZGV4IDRiMzYyNWQ4OWQ1Mi4uOGU0NTFhZDUzNGU0IDEwMDY0NAotLS0gYS92aXJ0L2t2bS9pbnRy
b3NwZWN0aW9uL2t2bWlfbXNnLmMKKysrIGIvdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pX21z
Zy5jCkBAIC04NDksMyArODQ5LDIwIEBAIHUzMiBrdm1pX21zZ19zZW5kX2h5cGVyY2FsbChzdHJ1
Y3Qga3ZtX3ZjcHUgKnZjcHUpCiAKIAlyZXR1cm4gYWN0aW9uOwogfQorCit1MzIga3ZtaV9tc2df
c2VuZF9icChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsIHU2NCBncGEsIHU4IGluc25fbGVuKQorewor
CXN0cnVjdCBrdm1pX2V2ZW50X2JyZWFrcG9pbnQgZTsKKwlpbnQgZXJyLCBhY3Rpb247CisKKwlt
ZW1zZXQoJmUsIDAsIHNpemVvZihlKSk7CisJZS5ncGEgPSBncGE7CisJZS5pbnNuX2xlbiA9IGlu
c25fbGVuOworCisJZXJyID0ga3ZtaV9zZW5kX2V2ZW50KHZjcHUsIEtWTUlfRVZFTlRfQlJFQUtQ
T0lOVCwgJmUsIHNpemVvZihlKSwKKwkJCSAgICAgIE5VTEwsIDAsICZhY3Rpb24pOworCWlmIChl
cnIpCisJCXJldHVybiBLVk1JX0VWRU5UX0FDVElPTl9DT05USU5VRTsKKworCXJldHVybiBhY3Rp
b247Cit9Cl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fClZp
cnR1YWxpemF0aW9uIG1haWxpbmcgbGlzdApWaXJ0dWFsaXphdGlvbkBsaXN0cy5saW51eC1mb3Vu
ZGF0aW9uLm9yZwpodHRwczovL2xpc3RzLmxpbnV4Zm91bmRhdGlvbi5vcmcvbWFpbG1hbi9saXN0
aW5mby92aXJ0dWFsaXphdGlvbg==
