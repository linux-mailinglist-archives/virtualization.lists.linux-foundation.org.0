Return-Path: <virtualization-bounces@lists.linux-foundation.org>
X-Original-To: lists.virtualization@lfdr.de
Delivered-To: lists.virtualization@lfdr.de
Received: from hemlock.osuosl.org (smtp2.osuosl.org [140.211.166.133])
	by mail.lfdr.de (Postfix) with ESMTPS id 62296228B33
	for <lists.virtualization@lfdr.de>; Tue, 21 Jul 2020 23:26:21 +0200 (CEST)
Received: from localhost (localhost [127.0.0.1])
	by hemlock.osuosl.org (Postfix) with ESMTP id 115FB8848A;
	Tue, 21 Jul 2020 21:26:20 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from hemlock.osuosl.org ([127.0.0.1])
	by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id Se8hZIkgUKei; Tue, 21 Jul 2020 21:26:15 +0000 (UTC)
Received: from lists.linuxfoundation.org (lf-lists.osuosl.org [140.211.9.56])
	by hemlock.osuosl.org (Postfix) with ESMTP id 06EEF88418;
	Tue, 21 Jul 2020 21:26:14 +0000 (UTC)
Received: from lf-lists.osuosl.org (localhost [127.0.0.1])
	by lists.linuxfoundation.org (Postfix) with ESMTP id F0B37C016F;
	Tue, 21 Jul 2020 21:26:13 +0000 (UTC)
X-Original-To: virtualization@lists.linux-foundation.org
Delivered-To: virtualization@lists.linuxfoundation.org
Received: from silver.osuosl.org (smtp3.osuosl.org [140.211.166.136])
 by lists.linuxfoundation.org (Postfix) with ESMTP id C94F6C016F
 for <virtualization@lists.linux-foundation.org>;
 Tue, 21 Jul 2020 21:26:09 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by silver.osuosl.org (Postfix) with ESMTP id B75A022786
 for <virtualization@lists.linux-foundation.org>;
 Tue, 21 Jul 2020 21:26:09 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from silver.osuosl.org ([127.0.0.1])
 by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id IpNPt5u7w0dZ
 for <virtualization@lists.linux-foundation.org>;
 Tue, 21 Jul 2020 21:25:56 +0000 (UTC)
X-Greylist: from auto-whitelisted by SQLgrey-1.7.6
Received: from mx01.bbu.dsd.mx.bitdefender.com
 (mx01.bbu.dsd.mx.bitdefender.com [91.199.104.161])
 by silver.osuosl.org (Postfix) with ESMTPS id D5CA3226DB
 for <virtualization@lists.linux-foundation.org>;
 Tue, 21 Jul 2020 21:25:54 +0000 (UTC)
Received: from smtp.bitdefender.com (smtp02.buh.bitdefender.net [10.17.80.76])
 by mx01.bbu.dsd.mx.bitdefender.com (Postfix) with ESMTPS id
 25492305D61B; Wed, 22 Jul 2020 00:09:26 +0300 (EEST)
Received: from localhost.localdomain (unknown [91.199.104.27])
 by smtp.bitdefender.com (Postfix) with ESMTPSA id E5C5B304FA13;
 Wed, 22 Jul 2020 00:09:25 +0300 (EEST)
From: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>
To: kvm@vger.kernel.org
Subject: [PATCH v9 46/84] KVM: introspection: add
 KVMI_VM_READ_PHYSICAL/KVMI_VM_WRITE_PHYSICAL
Date: Wed, 22 Jul 2020 00:08:44 +0300
Message-Id: <20200721210922.7646-47-alazar@bitdefender.com>
In-Reply-To: <20200721210922.7646-1-alazar@bitdefender.com>
References: <20200721210922.7646-1-alazar@bitdefender.com>
MIME-Version: 1.0
Cc: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>,
 Paolo Bonzini <pbonzini@redhat.com>,
 =?UTF-8?q?Mihai=20Don=C8=9Bu?= <mdontu@bitdefender.com>,
 virtualization@lists.linux-foundation.org
X-BeenThere: virtualization@lists.linux-foundation.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Linux virtualization <virtualization.lists.linux-foundation.org>
List-Unsubscribe: <https://lists.linuxfoundation.org/mailman/options/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=unsubscribe>
List-Archive: <http://lists.linuxfoundation.org/pipermail/virtualization/>
List-Post: <mailto:virtualization@lists.linux-foundation.org>
List-Help: <mailto:virtualization-request@lists.linux-foundation.org?subject=help>
List-Subscribe: <https://lists.linuxfoundation.org/mailman/listinfo/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: virtualization-bounces@lists.linux-foundation.org
Sender: "Virtualization" <virtualization-bounces@lists.linux-foundation.org>

RnJvbTogTWloYWkgRG9uyJt1IDxtZG9udHVAYml0ZGVmZW5kZXIuY29tPgoKVGhlc2UgY29tbWFu
ZHMgYWxsb3cgdGhlIGludHJvc3BlY3Rpb24gdG9vbCB0byByZWFkL3dyaXRlIGZyb20vdG8KdGhl
IGd1ZXN0IG1lbW9yeS4KClNpZ25lZC1vZmYtYnk6IE1paGFpIERvbsibdSA8bWRvbnR1QGJpdGRl
ZmVuZGVyLmNvbT4KQ28tZGV2ZWxvcGVkLWJ5OiBBZGFsYmVydCBMYXrEg3IgPGFsYXphckBiaXRk
ZWZlbmRlci5jb20+ClNpZ25lZC1vZmYtYnk6IEFkYWxiZXJ0IExhesSDciA8YWxhemFyQGJpdGRl
ZmVuZGVyLmNvbT4KLS0tCiBEb2N1bWVudGF0aW9uL3ZpcnQva3ZtL2t2bWkucnN0ICAgICAgICAg
ICAgICAgfCAgNjggKysrKysrKwogaW5jbHVkZS91YXBpL2xpbnV4L2t2bWkuaCAgICAgICAgICAg
ICAgICAgICAgIHwgIDE3ICsrCiAuLi4vdGVzdGluZy9zZWxmdGVzdHMva3ZtL3g4Nl82NC9rdm1p
X3Rlc3QuYyAgfCAxNzAgKysrKysrKysrKysrKysrKysrCiB2aXJ0L2t2bS9pbnRyb3NwZWN0aW9u
L2t2bWkuYyAgICAgICAgICAgICAgICAgfCAxMDggKysrKysrKysrKysKIHZpcnQva3ZtL2ludHJv
c3BlY3Rpb24va3ZtaV9pbnQuaCAgICAgICAgICAgICB8ICAgNyArCiB2aXJ0L2t2bS9pbnRyb3Nw
ZWN0aW9uL2t2bWlfbXNnLmMgICAgICAgICAgICAgfCAgNDQgKysrKysKIDYgZmlsZXMgY2hhbmdl
ZCwgNDE0IGluc2VydGlvbnMoKykKCmRpZmYgLS1naXQgYS9Eb2N1bWVudGF0aW9uL3ZpcnQva3Zt
L2t2bWkucnN0IGIvRG9jdW1lbnRhdGlvbi92aXJ0L2t2bS9rdm1pLnJzdAppbmRleCA0ZWMwMDQ2
YjQxMzguLmJlNWE5MmUyMDE3MyAxMDA2NDQKLS0tIGEvRG9jdW1lbnRhdGlvbi92aXJ0L2t2bS9r
dm1pLnJzdAorKysgYi9Eb2N1bWVudGF0aW9uL3ZpcnQva3ZtL2t2bWkucnN0CkBAIC0zNzUsNiAr
Mzc1LDc0IEBAIHRoZSBmb2xsb3dpbmcgZXZlbnRzOjoKICogLUtWTV9FSU5WQUwgLSB0aGUgZXZl
bnQgSUQgaXMgdW5rbm93biAodXNlICpLVk1JX1ZNX0NIRUNLX0VWRU5UKiBmaXJzdCkKICogLUtW
TV9FUEVSTSAtIHRoZSBhY2Nlc3MgaXMgZGlzYWxsb3dlZCAodXNlICpLVk1JX1ZNX0NIRUNLX0VW
RU5UKiBmaXJzdCkKIAorNi4gS1ZNSV9WTV9SRUFEX1BIWVNJQ0FMCistLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0KKworOkFyY2hpdGVjdHVyZXM6IGFsbAorOlZlcnNpb25zOiA+PSAxCis6UGFyYW1l
dGVyczoKKworOjoKKworCXN0cnVjdCBrdm1pX3ZtX3JlYWRfcGh5c2ljYWwgeworCQlfX3U2NCBn
cGE7CisJCV9fdTE2IHNpemU7CisJCV9fdTE2IHBhZGRpbmcxOworCQlfX3UzMiBwYWRkaW5nMjsK
Kwl9OworCis6UmV0dXJuczoKKworOjoKKworCXN0cnVjdCBrdm1pX2Vycm9yX2NvZGU7CisJX191
OCBkYXRhWzBdOworCitSZWFkcyBmcm9tIHRoZSBndWVzdCBtZW1vcnkuCisKK0N1cnJlbnRseSwg
dGhlIHNpemUgbXVzdCBiZSBub24temVybyBhbmQgdGhlIHJlYWQgbXVzdCBiZSByZXN0cmljdGVk
IHRvCitvbmUgcGFnZSAob2Zmc2V0ICsgc2l6ZSA8PSBQQUdFX1NJWkUpLgorCis6RXJyb3JzOgor
CisqIC1LVk1fRU5PRU5UIC0gdGhlIGd1ZXN0IHBhZ2UgZG9lc24ndCBleGlzdHMKKyogLUtWTV9F
SU5WQUwgLSB0aGUgc3BlY2lmaWVkIGdwYS9zaXplIHBhaXIgaXMgaW52YWxpZAorKiAtS1ZNX0VJ
TlZBTCAtIHRoZSBwYWRkaW5nIGlzIG5vdCB6ZXJvCisKKzcuIEtWTUlfVk1fV1JJVEVfUEhZU0lD
QUwKKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KKworOkFyY2hpdGVjdHVyZXM6IGFsbAorOlZl
cnNpb25zOiA+PSAxCis6UGFyYW1ldGVyczoKKworOjoKKworCXN0cnVjdCBrdm1pX3ZtX3dyaXRl
X3BoeXNpY2FsIHsKKwkJX191NjQgZ3BhOworCQlfX3UxNiBzaXplOworCQlfX3UxNiBwYWRkaW5n
MTsKKwkJX191MzIgcGFkZGluZzI7CisJCV9fdTggIGRhdGFbMF07CisJfTsKKworOlJldHVybnM6
CisKKzo6CisKKwlzdHJ1Y3Qga3ZtaV9lcnJvcl9jb2RlCisKK1dyaXRlcyBpbnRvIHRoZSBndWVz
dCBtZW1vcnkuCisKK0N1cnJlbnRseSwgdGhlIHNpemUgbXVzdCBiZSBub24temVybyBhbmQgdGhl
IHdyaXRlIG11c3QgYmUgcmVzdHJpY3RlZCB0bworb25lIHBhZ2UgKG9mZnNldCArIHNpemUgPD0g
UEFHRV9TSVpFKS4KKworOkVycm9yczoKKworKiAtS1ZNX0VOT0VOVCAtIHRoZSBndWVzdCBwYWdl
IGRvZXNuJ3QgZXhpc3RzCisqIC1LVk1fRUlOVkFMIC0gdGhlIHNwZWNpZmllZCBncGEvc2l6ZSBw
YWlyIGlzIGludmFsaWQKKyogLUtWTV9FSU5WQUwgLSB0aGUgcGFkZGluZyBpcyBub3QgemVybwor
CiBFdmVudHMKID09PT09PQogCmRpZmYgLS1naXQgYS9pbmNsdWRlL3VhcGkvbGludXgva3ZtaS5o
IGIvaW5jbHVkZS91YXBpL2xpbnV4L2t2bWkuaAppbmRleCBmOWUyY2I4YTJjNWUuLjliMjQyODk2
Mzk5NCAxMDA2NDQKLS0tIGEvaW5jbHVkZS91YXBpL2xpbnV4L2t2bWkuaAorKysgYi9pbmNsdWRl
L3VhcGkvbGludXgva3ZtaS5oCkBAIC0yMiw2ICsyMiw4IEBAIGVudW0gewogCUtWTUlfVk1fQ0hF
Q0tfRVZFTlQgICAgPSAzLAogCUtWTUlfVk1fR0VUX0lORk8gICAgICAgPSA0LAogCUtWTUlfVk1f
Q09OVFJPTF9FVkVOVFMgPSA1LAorCUtWTUlfVk1fUkVBRF9QSFlTSUNBTCAgPSA2LAorCUtWTUlf
Vk1fV1JJVEVfUEhZU0lDQUwgPSA3LAogCiAJS1ZNSV9OVU1fTUVTU0FHRVMKIH07CkBAIC04Miw2
ICs4NCwyMSBAQCBzdHJ1Y3Qga3ZtaV92bV9jb250cm9sX2V2ZW50cyB7CiAJX191MzIgcGFkZGlu
ZzI7CiB9OwogCitzdHJ1Y3Qga3ZtaV92bV9yZWFkX3BoeXNpY2FsIHsKKwlfX3U2NCBncGE7CisJ
X191MTYgc2l6ZTsKKwlfX3UxNiBwYWRkaW5nMTsKKwlfX3UzMiBwYWRkaW5nMjsKK307CisKK3N0
cnVjdCBrdm1pX3ZtX3dyaXRlX3BoeXNpY2FsIHsKKwlfX3U2NCBncGE7CisJX191MTYgc2l6ZTsK
KwlfX3UxNiBwYWRkaW5nMTsKKwlfX3UzMiBwYWRkaW5nMjsKKwlfX3U4ICBkYXRhWzBdOworfTsK
Kwogc3RydWN0IGt2bWlfZXZlbnQgewogCV9fdTE2IHNpemU7CiAJX191MTYgdmNwdTsKZGlmZiAt
LWdpdCBhL3Rvb2xzL3Rlc3Rpbmcvc2VsZnRlc3RzL2t2bS94ODZfNjQva3ZtaV90ZXN0LmMgYi90
b29scy90ZXN0aW5nL3NlbGZ0ZXN0cy9rdm0veDg2XzY0L2t2bWlfdGVzdC5jCmluZGV4IGJiMmRh
YWNhMDI5MS4uOTdkZWM0OWQ1MmI3IDEwMDY0NAotLS0gYS90b29scy90ZXN0aW5nL3NlbGZ0ZXN0
cy9rdm0veDg2XzY0L2t2bWlfdGVzdC5jCisrKyBiL3Rvb2xzL3Rlc3Rpbmcvc2VsZnRlc3RzL2t2
bS94ODZfNjQva3ZtaV90ZXN0LmMKQEAgLTgsNiArOCw3IEBACiAjZGVmaW5lIF9HTlVfU09VUkNF
IC8qIGZvciBwcm9ncmFtX2ludm9jYXRpb25fc2hvcnRfbmFtZSAqLwogI2luY2x1ZGUgPHN5cy90
eXBlcy5oPgogI2luY2x1ZGUgPHN5cy9zb2NrZXQuaD4KKyNpbmNsdWRlIDx0aW1lLmg+CiAKICNp
bmNsdWRlICJ0ZXN0X3V0aWwuaCIKIApAQCAtMjQsNiArMjUsMTMgQEAgc3RhdGljIGludCBzb2Nr
ZXRfcGFpclsyXTsKICNkZWZpbmUgS3ZtX3NvY2tldCAgICAgICBzb2NrZXRfcGFpclswXQogI2Rl
ZmluZSBVc2Vyc3BhY2Vfc29ja2V0IHNvY2tldF9wYWlyWzFdCiAKK3N0YXRpYyB2bV92YWRkcl90
IHRlc3RfZ3ZhOworc3RhdGljIHZvaWQgKnRlc3RfaHZhOworc3RhdGljIHZtX3BhZGRyX3QgdGVz
dF9ncGE7CisKK3N0YXRpYyB1aW50OF90IHRlc3Rfd3JpdGVfcGF0dGVybjsKK3N0YXRpYyBpbnQg
cGFnZV9zaXplOworCiB2b2lkIHNldHVwX3NvY2tldCh2b2lkKQogewogCWludCByOwpAQCAtNDM0
LDggKzQ0MiwxNTQgQEAgc3RhdGljIHZvaWQgdGVzdF9jbWRfdm1fY29udHJvbF9ldmVudHMoc3Ry
dWN0IGt2bV92bSAqdm0pCiAJYWxsb3dfZXZlbnQodm0sIGlkKTsKIH0KIAorc3RhdGljIHZvaWQg
Y21kX3ZtX3dyaXRlX3BhZ2UoX191NjQgZ3BhLCBfX3U2NCBzaXplLCB2b2lkICpwLCBfX3UxNiBw
YWRkaW5nLAorCQkJICAgICAgaW50IGV4cGVjdGVkX2VycikKK3sKKwlzdHJ1Y3Qga3ZtaV92bV93
cml0ZV9waHlzaWNhbCAqY21kOworCXN0cnVjdCBrdm1pX21zZ19oZHIgKnJlcTsKKwlzaXplX3Qg
cmVxX3NpemU7CisJaW50IHI7CisKKwlyZXFfc2l6ZSA9IHNpemVvZigqcmVxKSArIHNpemVvZigq
Y21kKSArIHNpemU7CisKKwlyZXEgPSBjYWxsb2MoMSwgcmVxX3NpemUpOworCVRFU1RfQVNTRVJU
KHJlcSwgIkluc3VmZmljaWVudCBNZW1vcnlcbiIpOworCisJY21kID0gKHN0cnVjdCBrdm1pX3Zt
X3dyaXRlX3BoeXNpY2FsICopKHJlcSArIDEpOworCWNtZC0+Z3BhID0gZ3BhOworCWNtZC0+c2l6
ZSA9IHNpemU7CisJY21kLT5wYWRkaW5nMSA9IHBhZGRpbmc7CisJY21kLT5wYWRkaW5nMiA9IHBh
ZGRpbmc7CisKKwltZW1jcHkoY21kICsgMSwgcCwgc2l6ZSk7CisKKwlyID0gZG9fY29tbWFuZChL
Vk1JX1ZNX1dSSVRFX1BIWVNJQ0FMLCByZXEsIHJlcV9zaXplLCBOVUxMLCAwKTsKKworCWZyZWUo
cmVxKTsKKworCVRFU1RfQVNTRVJUKHIgPT0gZXhwZWN0ZWRfZXJyLAorCQkiS1ZNSV9WTV9XUklU
RV9QSFlTSUNBTCBmYWlsZWQsIGdwYSAweCVsbHgsIGVycm9yICVkICglcyksIGV4cGVjdGVkIGVy
cm9yICVkXG4iLAorCQlncGEsIC1yLCBrdm1fc3RyZXJyb3IoLXIpLCBleHBlY3RlZF9lcnIpOwor
fQorCitzdGF0aWMgdm9pZCB3cml0ZV9ndWVzdF9wYWdlKF9fdTY0IGdwYSwgdm9pZCAqcCkKK3sK
KwljbWRfdm1fd3JpdGVfcGFnZShncGEsIHBhZ2Vfc2l6ZSwgcCwgMCwgMCk7Cit9CisKK3N0YXRp
YyB2b2lkIHdyaXRlX3dpdGhfaW52YWxpZF9hcmd1bWVudHMoX191NjQgZ3BhLCBfX3U2NCBzaXpl
LCB2b2lkICpwKQoreworCWNtZF92bV93cml0ZV9wYWdlKGdwYSwgc2l6ZSwgcCwgMCwgLUtWTV9F
SU5WQUwpOworfQorCitzdGF0aWMgdm9pZCB3cml0ZV93aXRoX2ludmFsaWRfcGFkZGluZyhfX3U2
NCBncGEsIHZvaWQgKnApCit7CisJX191MTYgcGFkZGluZyA9IDE7CisKKwljbWRfdm1fd3JpdGVf
cGFnZShncGEsIHBhZ2Vfc2l6ZSwgcCwgcGFkZGluZywgLUtWTV9FSU5WQUwpOworfQorCitzdGF0
aWMgdm9pZCB3cml0ZV9pbnZhbGlkX2d1ZXN0X3BhZ2Uoc3RydWN0IGt2bV92bSAqdm0sIHZvaWQg
KnApCit7CisJX191NjQgZ3BhID0gdm0tPm1heF9nZm4gPDwgdm0tPnBhZ2Vfc2hpZnQ7CisJX191
NjQgc2l6ZSA9IDE7CisKKwljbWRfdm1fd3JpdGVfcGFnZShncGEsIHNpemUsIHAsIDAsIC1LVk1f
RU5PRU5UKTsKK30KKworc3RhdGljIHZvaWQgY21kX3ZtX3JlYWRfcGFnZShfX3U2NCBncGEsIF9f
dTY0IHNpemUsIHZvaWQgKnAsIF9fdTE2IHBhZGRpbmcsCisJCQkgICAgIGludCBleHBlY3RlZF9l
cnIpCit7CisJc3RydWN0IHsKKwkJc3RydWN0IGt2bWlfbXNnX2hkciBoZHI7CisJCXN0cnVjdCBr
dm1pX3ZtX3JlYWRfcGh5c2ljYWwgY21kOworCX0gcmVxID0geyB9OworCWludCByOworCisJcmVx
LmNtZC5ncGEgPSBncGE7CisJcmVxLmNtZC5zaXplID0gc2l6ZTsKKwlyZXEuY21kLnBhZGRpbmcx
ID0gcGFkZGluZzsKKwlyZXEuY21kLnBhZGRpbmcyID0gcGFkZGluZzsKKworCXIgPSBkb19jb21t
YW5kKEtWTUlfVk1fUkVBRF9QSFlTSUNBTCwgJnJlcS5oZHIsIHNpemVvZihyZXEpLCBwLCBzaXpl
KTsKKwlURVNUX0FTU0VSVChyID09IGV4cGVjdGVkX2VyciwKKwkJIktWTUlfVk1fUkVBRF9QSFlT
SUNBTCBmYWlsZWQsIGdwYSAweCVsbHgsIGVycm9yICVkICglcyksIGV4cGVjdGVkIGVycm9yICVk
XG4iLAorCQlncGEsIC1yLCBrdm1fc3RyZXJyb3IoLXIpLCBleHBlY3RlZF9lcnIpOworfQorCitz
dGF0aWMgdm9pZCByZWFkX2d1ZXN0X3BhZ2UoX191NjQgZ3BhLCB2b2lkICpwKQoreworCWNtZF92
bV9yZWFkX3BhZ2UoZ3BhLCBwYWdlX3NpemUsIHAsIDAsIDApOworfQorCitzdGF0aWMgdm9pZCBy
ZWFkX3dpdGhfaW52YWxpZF9hcmd1bWVudHMoX191NjQgZ3BhLCBfX3U2NCBzaXplLCB2b2lkICpw
KQoreworCWNtZF92bV9yZWFkX3BhZ2UoZ3BhLCBzaXplLCBwLCAwLCAtS1ZNX0VJTlZBTCk7Cit9
CisKK3N0YXRpYyB2b2lkIHJlYWRfd2l0aF9pbnZhbGlkX3BhZGRpbmcoX191NjQgZ3BhLCB2b2lk
ICpwKQoreworCV9fdTE2IHBhZGRpbmcgPSAxOworCisJY21kX3ZtX3JlYWRfcGFnZShncGEsIHBh
Z2Vfc2l6ZSwgcCwgcGFkZGluZywgLUtWTV9FSU5WQUwpOworfQorCitzdGF0aWMgdm9pZCByZWFk
X2ludmFsaWRfZ3Vlc3RfcGFnZShzdHJ1Y3Qga3ZtX3ZtICp2bSkKK3sKKwlfX3U2NCBncGEgPSB2
bS0+bWF4X2dmbiA8PCB2bS0+cGFnZV9zaGlmdDsKKwlfX3U2NCBzaXplID0gMTsKKworCWNtZF92
bV9yZWFkX3BhZ2UoZ3BhLCBzaXplLCBOVUxMLCAwLCAtS1ZNX0VOT0VOVCk7Cit9CisKK3N0YXRp
YyB2b2lkIG5ld190ZXN0X3dyaXRlX3BhdHRlcm4oc3RydWN0IGt2bV92bSAqdm0pCit7CisJdWlu
dDhfdCBuOworCisJZG8geworCQluID0gcmFuZG9tKCk7CisJfSB3aGlsZSAobiA9PSAwIHx8IG4g
PT0gdGVzdF93cml0ZV9wYXR0ZXJuKTsKKworCXRlc3Rfd3JpdGVfcGF0dGVybiA9IG47CisJc3lu
Y19nbG9iYWxfdG9fZ3Vlc3Qodm0sIHRlc3Rfd3JpdGVfcGF0dGVybik7Cit9CisKK3N0YXRpYyB2
b2lkIHRlc3RfbWVtb3J5X2FjY2VzcyhzdHJ1Y3Qga3ZtX3ZtICp2bSkKK3sKKwl2b2lkICpwdywg
KnByOworCisJbmV3X3Rlc3Rfd3JpdGVfcGF0dGVybih2bSk7CisKKwlwdyA9IG1hbGxvYyhwYWdl
X3NpemUpOworCVRFU1RfQVNTRVJUKHB3LCAiSW5zdWZmaWNpZW50IE1lbW9yeVxuIik7CisKKwlt
ZW1zZXQocHcsIHRlc3Rfd3JpdGVfcGF0dGVybiwgcGFnZV9zaXplKTsKKworCXdyaXRlX2d1ZXN0
X3BhZ2UodGVzdF9ncGEsIHB3KTsKKwlURVNUX0FTU0VSVChtZW1jbXAocHcsIHRlc3RfaHZhLCBw
YWdlX3NpemUpID09IDAsCisJCSJXcml0ZSBwYWdlIHRlc3QgZmFpbGVkIik7CisKKwlwciA9IG1h
bGxvYyhwYWdlX3NpemUpOworCVRFU1RfQVNTRVJUKHByLCAiSW5zdWZmaWNpZW50IE1lbW9yeVxu
Iik7CisKKwlyZWFkX2d1ZXN0X3BhZ2UodGVzdF9ncGEsIHByKTsKKwlURVNUX0FTU0VSVChtZW1j
bXAocHcsIHByLCBwYWdlX3NpemUpID09IDAsCisJCSJSZWFkIHBhZ2UgdGVzdCBmYWlsZWQiKTsK
KworCXJlYWRfd2l0aF9pbnZhbGlkX2FyZ3VtZW50cyh0ZXN0X2dwYSwgMCwgcHIpOworCXJlYWRf
d2l0aF9pbnZhbGlkX3BhZGRpbmcodGVzdF9ncGEsIHByKTsKKwl3cml0ZV93aXRoX2ludmFsaWRf
YXJndW1lbnRzKHRlc3RfZ3BhLCAwLCBwdyk7CisJd3JpdGVfd2l0aF9pbnZhbGlkX3BhZGRpbmco
dGVzdF9ncGEsIHB3KTsKKwl3cml0ZV9pbnZhbGlkX2d1ZXN0X3BhZ2Uodm0sIHB3KTsKKworCWZy
ZWUocHcpOworCWZyZWUocHIpOworCisJcmVhZF9pbnZhbGlkX2d1ZXN0X3BhZ2Uodm0pOworfQog
c3RhdGljIHZvaWQgdGVzdF9pbnRyb3NwZWN0aW9uKHN0cnVjdCBrdm1fdm0gKnZtKQogeworCXNy
YW5kb20odGltZSgwKSk7CiAJc2V0dXBfc29ja2V0KCk7CiAJaG9va19pbnRyb3NwZWN0aW9uKHZt
KTsKIApAQCAtNDQ2LDEwICs2MDAsMjMgQEAgc3RhdGljIHZvaWQgdGVzdF9pbnRyb3NwZWN0aW9u
KHN0cnVjdCBrdm1fdm0gKnZtKQogCXRlc3RfY21kX3ZtX2dldF9pbmZvKCk7CiAJdGVzdF9ldmVu
dF91bmhvb2sodm0pOwogCXRlc3RfY21kX3ZtX2NvbnRyb2xfZXZlbnRzKHZtKTsKKwl0ZXN0X21l
bW9yeV9hY2Nlc3Modm0pOwogCiAJdW5ob29rX2ludHJvc3BlY3Rpb24odm0pOwogfQogCitzdGF0
aWMgdm9pZCBzZXR1cF90ZXN0X3BhZ2VzKHN0cnVjdCBrdm1fdm0gKnZtKQoreworCXRlc3RfZ3Zh
ID0gdm1fdmFkZHJfYWxsb2Modm0sIHBhZ2Vfc2l6ZSwgS1ZNX1VUSUxfTUlOX1ZBRERSLCAwLCAw
KTsKKworCXN5bmNfZ2xvYmFsX3RvX2d1ZXN0KHZtLCB0ZXN0X2d2YSk7CisKKwl0ZXN0X2h2YSA9
IGFkZHJfZ3ZhMmh2YSh2bSwgdGVzdF9ndmEpOworCW1lbXNldCh0ZXN0X2h2YSwgMCwgcGFnZV9z
aXplKTsKKworCXRlc3RfZ3BhID0gYWRkcl9ndmEyZ3BhKHZtLCB0ZXN0X2d2YSk7Cit9CisKIGlu
dCBtYWluKGludCBhcmdjLCBjaGFyICphcmd2W10pCiB7CiAJc3RydWN0IGt2bV92bSAqdm07CkBA
IC00NjIsNiArNjI5LDkgQEAgaW50IG1haW4oaW50IGFyZ2MsIGNoYXIgKmFyZ3ZbXSkKIAl2bSA9
IHZtX2NyZWF0ZV9kZWZhdWx0KFZDUFVfSUQsIDAsIE5VTEwpOwogCXZjcHVfc2V0X2NwdWlkKHZt
LCBWQ1BVX0lELCBrdm1fZ2V0X3N1cHBvcnRlZF9jcHVpZCgpKTsKIAorCXBhZ2Vfc2l6ZSA9IGdl
dHBhZ2VzaXplKCk7CisJc2V0dXBfdGVzdF9wYWdlcyh2bSk7CisKIAl0ZXN0X2ludHJvc3BlY3Rp
b24odm0pOwogCiAJa3ZtX3ZtX2ZyZWUodm0pOwpkaWZmIC0tZ2l0IGEvdmlydC9rdm0vaW50cm9z
cGVjdGlvbi9rdm1pLmMgYi92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWkuYwppbmRleCA1YWY2
ZWEwNDEwMzUuLjM1NGRlYTI3NjM0NyAxMDA2NDQKLS0tIGEvdmlydC9rdm0vaW50cm9zcGVjdGlv
bi9rdm1pLmMKKysrIGIvdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pLmMKQEAgLTUsNiArNSw3
IEBACiAgKiBDb3B5cmlnaHQgKEMpIDIwMTctMjAyMCBCaXRkZWZlbmRlciBTLlIuTC4KICAqCiAg
Ki8KKyNpbmNsdWRlIDxsaW51eC9tbXVfY29udGV4dC5oPgogI2luY2x1ZGUgPGxpbnV4L2t0aHJl
YWQuaD4KICNpbmNsdWRlICJrdm1pX2ludC5oIgogCkBAIC00NDUsMyArNDQ2LDExMCBAQCBpbnQg
a3ZtaV9jbWRfdm1fY29udHJvbF9ldmVudHMoc3RydWN0IGt2bV9pbnRyb3NwZWN0aW9uICprdm1p
LAogCiAJcmV0dXJuIDA7CiB9CisKK3N0YXRpYyB1bnNpZ25lZCBsb25nIGdmbl90b19odmFfc2Fm
ZShzdHJ1Y3Qga3ZtICprdm0sIGdmbl90IGdmbikKK3sKKwl1bnNpZ25lZCBsb25nIGh2YTsKKwlp
bnQgc3JjdV9pZHg7CisKKwlzcmN1X2lkeCA9IHNyY3VfcmVhZF9sb2NrKCZrdm0tPnNyY3UpOwor
CWh2YSA9IGdmbl90b19odmEoa3ZtLCBnZm4pOworCXNyY3VfcmVhZF91bmxvY2soJmt2bS0+c3Jj
dSwgc3JjdV9pZHgpOworCisJcmV0dXJuIGh2YTsKK30KKworc3RhdGljIGxvbmcKK2dldF91c2Vy
X3BhZ2VzX3JlbW90ZV91bmxvY2tlZChzdHJ1Y3QgbW1fc3RydWN0ICptbSwgdW5zaWduZWQgbG9u
ZyBzdGFydCwKKwkJCQl1bnNpZ25lZCBsb25nIG5yX3BhZ2VzLCB1bnNpZ25lZCBpbnQgZ3VwX2Zs
YWdzLAorCQkJCXN0cnVjdCBwYWdlICoqcGFnZXMpCit7CisJc3RydWN0IHZtX2FyZWFfc3RydWN0
ICoqdm1hcyA9IE5VTEw7CisJc3RydWN0IHRhc2tfc3RydWN0ICp0c2sgPSBOVUxMOworCWludCBs
b2NrZWQgPSAxOworCWxvbmcgcjsKKworCW1tYXBfcmVhZF9sb2NrKG1tKTsKKwlyID0gZ2V0X3Vz
ZXJfcGFnZXNfcmVtb3RlKHRzaywgbW0sIHN0YXJ0LCBucl9wYWdlcywgZ3VwX2ZsYWdzLAorCQkJ
CSAgcGFnZXMsIHZtYXMsICZsb2NrZWQpOworCWlmIChsb2NrZWQpCisJCW1tYXBfcmVhZF91bmxv
Y2sobW0pOworCisJcmV0dXJuIHI7Cit9CisKK3N0YXRpYyB2b2lkICpnZXRfcGFnZV9wdHIoc3Ry
dWN0IGt2bSAqa3ZtLCBncGFfdCBncGEsIHN0cnVjdCBwYWdlICoqcGFnZSwKKwkJCSAgYm9vbCB3
cml0ZSkKK3sKKwl1bnNpZ25lZCBpbnQgZmxhZ3MgPSB3cml0ZSA/IEZPTExfV1JJVEUgOiAwOwor
CXVuc2lnbmVkIGxvbmcgaHZhOworCisJKnBhZ2UgPSBOVUxMOworCisJaHZhID0gZ2ZuX3RvX2h2
YV9zYWZlKGt2bSwgZ3BhX3RvX2dmbihncGEpKTsKKworCWlmIChrdm1faXNfZXJyb3JfaHZhKGh2
YSkpCisJCXJldHVybiBOVUxMOworCisJaWYgKGdldF91c2VyX3BhZ2VzX3JlbW90ZV91bmxvY2tl
ZChrdm0tPm1tLCBodmEsIDEsIGZsYWdzLCBwYWdlKSAhPSAxKQorCQlyZXR1cm4gTlVMTDsKKwor
CXJldHVybiB3cml0ZSA/IGttYXBfYXRvbWljKCpwYWdlKSA6IGttYXAoKnBhZ2UpOworfQorCitz
dGF0aWMgdm9pZCBwdXRfcGFnZV9wdHIodm9pZCAqcHRyLCBzdHJ1Y3QgcGFnZSAqcGFnZSwgYm9v
bCB3cml0ZSkKK3sKKwlpZiAocHRyKSB7CisJCWlmICh3cml0ZSkKKwkJCWt1bm1hcF9hdG9taWMo
cHRyKTsKKwkJZWxzZQorCQkJa3VubWFwKHB0cik7CisJfQorCWlmIChwYWdlKQorCQlwdXRfcGFn
ZShwYWdlKTsKK30KKworaW50IGt2bWlfY21kX3JlYWRfcGh5c2ljYWwoc3RydWN0IGt2bSAqa3Zt
LCB1NjQgZ3BhLCBzaXplX3Qgc2l6ZSwKKwkJCSAgIGludCAoKnNlbmQpKHN0cnVjdCBrdm1faW50
cm9zcGVjdGlvbiAqLAorCQkJCQljb25zdCBzdHJ1Y3Qga3ZtaV9tc2dfaGRyICosCisJCQkJCWlu
dCBlcnIsIGNvbnN0IHZvaWQgKmJ1Ziwgc2l6ZV90KSwKKwkJCSAgIGNvbnN0IHN0cnVjdCBrdm1p
X21zZ19oZHIgKmN0eCkKK3sKKwl2b2lkICpwdHJfcGFnZSA9IE5VTEwsICpwdHI7CisJc3RydWN0
IHBhZ2UgKnBhZ2UgPSBOVUxMOworCXNpemVfdCBwdHJfc2l6ZTsKKwlpbnQgZXJyLCBlYzsKKwor
CXB0cl9wYWdlID0gZ2V0X3BhZ2VfcHRyKGt2bSwgZ3BhLCAmcGFnZSwgZmFsc2UpOworCWlmIChw
dHJfcGFnZSkgeworCQlwdHIgPSBwdHJfcGFnZSArIChncGEgJiB+UEFHRV9NQVNLKTsKKwkJcHRy
X3NpemUgPSBzaXplOworCQllYyA9IDA7CisJfSBlbHNlIHsKKwkJcHRyID0gTlVMTDsKKwkJcHRy
X3NpemUgPSAwOworCQllYyA9IC1LVk1fRU5PRU5UOworCX0KKworCWVyciA9IHNlbmQoS1ZNSShr
dm0pLCBjdHgsIGVjLCBwdHIsIHB0cl9zaXplKTsKKworCXB1dF9wYWdlX3B0cihwdHJfcGFnZSwg
cGFnZSwgZmFsc2UpOworCXJldHVybiBlcnI7Cit9CisKK2ludCBrdm1pX2NtZF93cml0ZV9waHlz
aWNhbChzdHJ1Y3Qga3ZtICprdm0sIHU2NCBncGEsIHNpemVfdCBzaXplLAorCQkJICAgIGNvbnN0
IHZvaWQgKmJ1ZikKK3sKKwlzdHJ1Y3QgcGFnZSAqcGFnZTsKKwl2b2lkICpwdHI7CisKKwlwdHIg
PSBnZXRfcGFnZV9wdHIoa3ZtLCBncGEsICZwYWdlLCB0cnVlKTsKKwlpZiAoIXB0cikKKwkJcmV0
dXJuIC1LVk1fRU5PRU5UOworCisJbWVtY3B5KHB0ciArIChncGEgJiB+UEFHRV9NQVNLKSwgYnVm
LCBzaXplKTsKKworCXB1dF9wYWdlX3B0cihwdHIsIHBhZ2UsIHRydWUpOworCisJcmV0dXJuIDA7
Cit9CmRpZmYgLS1naXQgYS92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWlfaW50LmggYi92aXJ0
L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWlfaW50LmgKaW5kZXggN2M1MDNiOGNhMDQzLi40MGU4NjQ3
YTZmZDQgMTAwNjQ0Ci0tLSBhL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9pbnQuaAorKysg
Yi92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWlfaW50LmgKQEAgLTM1LDUgKzM1LDEyIEBAIGJv
b2wga3ZtaV9pc19rbm93bl9ldmVudCh1OCBpZCk7CiBib29sIGt2bWlfaXNfa25vd25fdm1fZXZl
bnQodTggaWQpOwogaW50IGt2bWlfY21kX3ZtX2NvbnRyb2xfZXZlbnRzKHN0cnVjdCBrdm1faW50
cm9zcGVjdGlvbiAqa3ZtaSwKIAkJCQl1bnNpZ25lZCBpbnQgZXZlbnRfaWQsIGJvb2wgZW5hYmxl
KTsKK2ludCBrdm1pX2NtZF9yZWFkX3BoeXNpY2FsKHN0cnVjdCBrdm0gKmt2bSwgdTY0IGdwYSwg
c2l6ZV90IHNpemUsCisJCQkgICBpbnQgKCpzZW5kKShzdHJ1Y3Qga3ZtX2ludHJvc3BlY3Rpb24g
KiwKKwkJCQkJY29uc3Qgc3RydWN0IGt2bWlfbXNnX2hkciosCisJCQkJCWludCBlcnIsIGNvbnN0
IHZvaWQgKmJ1Ziwgc2l6ZV90KSwKKwkJCSAgIGNvbnN0IHN0cnVjdCBrdm1pX21zZ19oZHIgKmN0
eCk7CitpbnQga3ZtaV9jbWRfd3JpdGVfcGh5c2ljYWwoc3RydWN0IGt2bSAqa3ZtLCB1NjQgZ3Bh
LCBzaXplX3Qgc2l6ZSwKKwkJCSAgICBjb25zdCB2b2lkICpidWYpOwogCiAjZW5kaWYKZGlmZiAt
LWdpdCBhL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9tc2cuYyBiL3ZpcnQva3ZtL2ludHJv
c3BlY3Rpb24va3ZtaV9tc2cuYwppbmRleCBhMTQ4ZWQxZTc2N2MuLmRlOWUzOGU4ZTI0YiAxMDA2
NDQKLS0tIGEvdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pX21zZy5jCisrKyBiL3ZpcnQva3Zt
L2ludHJvc3BlY3Rpb24va3ZtaV9tc2cuYwpAQCAtMTgyLDYgKzE4Miw0OCBAQCBzdGF0aWMgaW50
IGhhbmRsZV92bV9jb250cm9sX2V2ZW50cyhzdHJ1Y3Qga3ZtX2ludHJvc3BlY3Rpb24gKmt2bWks
CiAJcmV0dXJuIGt2bWlfbXNnX3ZtX3JlcGx5KGt2bWksIG1zZywgZWMsIE5VTEwsIDApOwogfQog
CitzdGF0aWMgYm9vbCBpbnZhbGlkX3BhZ2VfYWNjZXNzKHU2NCBncGEsIHU2NCBzaXplKQorewor
CXU2NCBvZmYgPSBncGEgJiB+UEFHRV9NQVNLOworCisJcmV0dXJuIChzaXplID09IDAgfHwgc2l6
ZSA+IFBBR0VfU0laRSB8fCBvZmYgKyBzaXplID4gUEFHRV9TSVpFKTsKK30KKworc3RhdGljIGlu
dCBoYW5kbGVfdm1fcmVhZF9waHlzaWNhbChzdHJ1Y3Qga3ZtX2ludHJvc3BlY3Rpb24gKmt2bWks
CisJCQkJICAgY29uc3Qgc3RydWN0IGt2bWlfbXNnX2hkciAqbXNnLAorCQkJCSAgIGNvbnN0IHZv
aWQgKl9yZXEpCit7CisJY29uc3Qgc3RydWN0IGt2bWlfdm1fcmVhZF9waHlzaWNhbCAqcmVxID0g
X3JlcTsKKworCWlmIChpbnZhbGlkX3BhZ2VfYWNjZXNzKHJlcS0+Z3BhLCByZXEtPnNpemUpCisJ
CQl8fCByZXEtPnBhZGRpbmcxIHx8IHJlcS0+cGFkZGluZzIpCisJCXJldHVybiBrdm1pX21zZ192
bV9yZXBseShrdm1pLCBtc2csIC1LVk1fRUlOVkFMLCBOVUxMLCAwKTsKKworCXJldHVybiBrdm1p
X2NtZF9yZWFkX3BoeXNpY2FsKGt2bWktPmt2bSwgcmVxLT5ncGEsIHJlcS0+c2l6ZSwKKwkJCQkg
ICAgICBrdm1pX21zZ192bV9yZXBseSwgbXNnKTsKK30KKworc3RhdGljIGludCBoYW5kbGVfdm1f
d3JpdGVfcGh5c2ljYWwoc3RydWN0IGt2bV9pbnRyb3NwZWN0aW9uICprdm1pLAorCQkJCSAgICBj
b25zdCBzdHJ1Y3Qga3ZtaV9tc2dfaGRyICptc2csCisJCQkJICAgIGNvbnN0IHZvaWQgKl9yZXEp
Cit7CisJY29uc3Qgc3RydWN0IGt2bWlfdm1fd3JpdGVfcGh5c2ljYWwgKnJlcSA9IF9yZXE7CisJ
aW50IGVjOworCisJaWYgKG1zZy0+c2l6ZSA8IHN0cnVjdF9zaXplKHJlcSwgZGF0YSwgcmVxLT5z
aXplKSkKKwkJcmV0dXJuIC1FSU5WQUw7CisKKwlpZiAoaW52YWxpZF9wYWdlX2FjY2VzcyhyZXEt
PmdwYSwgcmVxLT5zaXplKSkKKwkJZWMgPSAtS1ZNX0VJTlZBTDsKKwllbHNlIGlmIChyZXEtPnBh
ZGRpbmcxIHx8IHJlcS0+cGFkZGluZzIpCisJCWVjID0gLUtWTV9FSU5WQUw7CisJZWxzZQorCQll
YyA9IGt2bWlfY21kX3dyaXRlX3BoeXNpY2FsKGt2bWktPmt2bSwgcmVxLT5ncGEsCisJCQkJCSAg
ICAgcmVxLT5zaXplLCByZXEtPmRhdGEpOworCisJcmV0dXJuIGt2bWlfbXNnX3ZtX3JlcGx5KGt2
bWksIG1zZywgZWMsIE5VTEwsIDApOworfQorCiAvKgogICogVGhlc2UgY29tbWFuZHMgYXJlIGV4
ZWN1dGVkIGJ5IHRoZSByZWNlaXZpbmcgdGhyZWFkLgogICovCkBAIC0xOTIsNiArMjM0LDggQEAg
c3RhdGljIGludCgqY29uc3QgbXNnX3ZtW10pKHN0cnVjdCBrdm1faW50cm9zcGVjdGlvbiAqLAog
CVtLVk1JX1ZNX0NIRUNLX0VWRU5UXSAgICA9IGhhbmRsZV92bV9jaGVja19ldmVudCwKIAlbS1ZN
SV9WTV9DT05UUk9MX0VWRU5UU10gPSBoYW5kbGVfdm1fY29udHJvbF9ldmVudHMsCiAJW0tWTUlf
Vk1fR0VUX0lORk9dICAgICAgID0gaGFuZGxlX3ZtX2dldF9pbmZvLAorCVtLVk1JX1ZNX1JFQURf
UEhZU0lDQUxdICA9IGhhbmRsZV92bV9yZWFkX3BoeXNpY2FsLAorCVtLVk1JX1ZNX1dSSVRFX1BI
WVNJQ0FMXSA9IGhhbmRsZV92bV93cml0ZV9waHlzaWNhbCwKIH07CiAKIHN0YXRpYyBib29sIGlz
X3ZtX2NvbW1hbmQodTE2IGlkKQpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fXwpWaXJ0dWFsaXphdGlvbiBtYWlsaW5nIGxpc3QKVmlydHVhbGl6YXRpb25AbGlz
dHMubGludXgtZm91bmRhdGlvbi5vcmcKaHR0cHM6Ly9saXN0cy5saW51eGZvdW5kYXRpb24ub3Jn
L21haWxtYW4vbGlzdGluZm8vdmlydHVhbGl6YXRpb24=
