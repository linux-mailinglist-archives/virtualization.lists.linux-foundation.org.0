Return-Path: <virtualization-bounces@lists.linux-foundation.org>
X-Original-To: lists.virtualization@lfdr.de
Delivered-To: lists.virtualization@lfdr.de
Received: from hemlock.osuosl.org (smtp2.osuosl.org [140.211.166.133])
	by mail.lfdr.de (Postfix) with ESMTPS id 3ADCB228B23
	for <lists.virtualization@lfdr.de>; Tue, 21 Jul 2020 23:26:07 +0200 (CEST)
Received: from localhost (localhost [127.0.0.1])
	by hemlock.osuosl.org (Postfix) with ESMTP id 704538624A;
	Tue, 21 Jul 2020 21:26:05 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from hemlock.osuosl.org ([127.0.0.1])
	by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id pfFz0c3Tsjta; Tue, 21 Jul 2020 21:26:02 +0000 (UTC)
Received: from lists.linuxfoundation.org (lf-lists.osuosl.org [140.211.9.56])
	by hemlock.osuosl.org (Postfix) with ESMTP id 18F9D88721;
	Tue, 21 Jul 2020 21:26:02 +0000 (UTC)
Received: from lf-lists.osuosl.org (localhost [127.0.0.1])
	by lists.linuxfoundation.org (Postfix) with ESMTP id 00826C08A2;
	Tue, 21 Jul 2020 21:26:02 +0000 (UTC)
X-Original-To: virtualization@lists.linux-foundation.org
Delivered-To: virtualization@lists.linuxfoundation.org
Received: from hemlock.osuosl.org (smtp2.osuosl.org [140.211.166.133])
 by lists.linuxfoundation.org (Postfix) with ESMTP id 74872C08A8
 for <virtualization@lists.linux-foundation.org>;
 Tue, 21 Jul 2020 21:25:57 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by hemlock.osuosl.org (Postfix) with ESMTP id 5273588418
 for <virtualization@lists.linux-foundation.org>;
 Tue, 21 Jul 2020 21:25:57 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from hemlock.osuosl.org ([127.0.0.1])
 by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id xxtjXY0TfjXZ
 for <virtualization@lists.linux-foundation.org>;
 Tue, 21 Jul 2020 21:25:57 +0000 (UTC)
X-Greylist: from auto-whitelisted by SQLgrey-1.7.6
Received: from mx01.bbu.dsd.mx.bitdefender.com
 (mx01.bbu.dsd.mx.bitdefender.com [91.199.104.161])
 by hemlock.osuosl.org (Postfix) with ESMTPS id C32EC87A56
 for <virtualization@lists.linux-foundation.org>;
 Tue, 21 Jul 2020 21:25:56 +0000 (UTC)
Received: from smtp.bitdefender.com (smtp02.buh.bitdefender.net [10.17.80.76])
 by mx01.bbu.dsd.mx.bitdefender.com (Postfix) with ESMTPS id
 2EE8A305D679; Wed, 22 Jul 2020 00:09:25 +0300 (EEST)
Received: from localhost.localdomain (unknown [91.199.104.27])
 by smtp.bitdefender.com (Postfix) with ESMTPSA id 0908E304FA15;
 Wed, 22 Jul 2020 00:09:25 +0300 (EEST)
From: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>
To: kvm@vger.kernel.org
Subject: [PATCH v9 41/84] KVM: introspection: add KVMI_GET_VERSION
Date: Wed, 22 Jul 2020 00:08:39 +0300
Message-Id: <20200721210922.7646-42-alazar@bitdefender.com>
In-Reply-To: <20200721210922.7646-1-alazar@bitdefender.com>
References: <20200721210922.7646-1-alazar@bitdefender.com>
MIME-Version: 1.0
Cc: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>,
 Paolo Bonzini <pbonzini@redhat.com>, virtualization@lists.linux-foundation.org
X-BeenThere: virtualization@lists.linux-foundation.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Linux virtualization <virtualization.lists.linux-foundation.org>
List-Unsubscribe: <https://lists.linuxfoundation.org/mailman/options/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=unsubscribe>
List-Archive: <http://lists.linuxfoundation.org/pipermail/virtualization/>
List-Post: <mailto:virtualization@lists.linux-foundation.org>
List-Help: <mailto:virtualization-request@lists.linux-foundation.org?subject=help>
List-Subscribe: <https://lists.linuxfoundation.org/mailman/listinfo/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: virtualization-bounces@lists.linux-foundation.org
Sender: "Virtualization" <virtualization-bounces@lists.linux-foundation.org>

VGhlIGtlcm5lbCBzaWRlIHdpbGwgYWNjZXB0IG9sZGVyIGFuZCBuZXdlciB2ZXJzaW9ucyBvZiBh
biBpbnRyb3NwZWN0aW9uCmNvbW1hbmQgKGhhdmluZyBhIHNtYWxsZXIvbGFyZ2VyIG1lc3NhZ2Ug
c2l6ZSksIGJ1dCBpdCB3aWxsIG5vdAphY2NlcHQgbmV3ZXIgdmVyc2lvbnMgZm9yIGV2ZW50IHJl
cGxpZXMgKGxhcmdlciBtZXNzYWdlcykuIEV2ZW4gaWYgdGhlCmludHJvc3BlY3Rpb24gdG9vbCBj
YW4gdXNlIHRoZSBLVk1JX0dFVF9WRVJTSU9OIGNvbW1hbmQgdG8gY2hlY2sgdGhlCnN1cHBvcnRl
ZCBmZWF0dXJlcyBvZiB0aGUgaW50cm9zcGVjdGlvbiBBUEksIHRoZSBtb3N0IGltcG9ydGFudCB1
c2FnZQpvZiB0aGlzIGNvbW1hbmQgaXMgdG8gYXZvaWQgc2VuZGluZyBuZXdlciB2ZXJzaW9ucyBv
ZiBldmVudCByZXBsaWVzIHRoYXQKdGhlIGtlcm5lbCBzaWRlIGRvZXNuJ3Qga25vdy4KCkFueSBh
dHRlbXB0IGZyb20gdGhlIGRldmljZSBtYW5hZ2VyIHRvIGV4cGxpY2l0bHkgZGlzYWxsb3cgdGhp
cyBjb21tYW5kCnRocm91Z2ggdGhlIEtWTV9JTlRST1NQRUNUSU9OX0NPTU1BTkQgaW9jdGwgd2ls
bCBnZXQgLUVQRVJNLCB1bmxlc3MgYWxsCmNvbW1hbmRzIGFyZSBkaXNhbGxvd2VkICh1c2luZyBp
ZD0tMSkgaW4gd2hpY2ggY2FzZSBLVk1JX0dFVF9WRVJTSU9OIGlzCnNpbGVudGx5IGFsbG93ZWQs
IHdpdGhvdXQgZXJyb3IuCgpTaWduZWQtb2ZmLWJ5OiBBZGFsYmVydCBMYXrEg3IgPGFsYXphckBi
aXRkZWZlbmRlci5jb20+Ci0tLQogRG9jdW1lbnRhdGlvbi92aXJ0L2t2bS9rdm1pLnJzdCAgICAg
ICAgICAgICAgIHwgMzcgKysrKysrKysrKysrKysrKysrKwogaW5jbHVkZS91YXBpL2xpbnV4L2t2
bWkuaCAgICAgICAgICAgICAgICAgICAgIHwgMTAgKysrKysKIC4uLi90ZXN0aW5nL3NlbGZ0ZXN0
cy9rdm0veDg2XzY0L2t2bWlfdGVzdC5jICB8IDI2ICsrKysrKysrKysrKysKIHZpcnQva3ZtL2lu
dHJvc3BlY3Rpb24va3ZtaS5jICAgICAgICAgICAgICAgICB8IDI3ICsrKysrKysrKysrKy0tCiB2
aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWlfbXNnLmMgICAgICAgICAgICAgfCAxMiArKysrKysK
IDUgZmlsZXMgY2hhbmdlZCwgMTA4IGluc2VydGlvbnMoKyksIDQgZGVsZXRpb25zKC0pCgpkaWZm
IC0tZ2l0IGEvRG9jdW1lbnRhdGlvbi92aXJ0L2t2bS9rdm1pLnJzdCBiL0RvY3VtZW50YXRpb24v
dmlydC9rdm0va3ZtaS5yc3QKaW5kZXggZjNkMTY5NzFiYTJiLi40MWZkNDgyMjJiY2IgMTAwNjQ0
Ci0tLSBhL0RvY3VtZW50YXRpb24vdmlydC9rdm0va3ZtaS5yc3QKKysrIGIvRG9jdW1lbnRhdGlv
bi92aXJ0L2t2bS9rdm1pLnJzdApAQCAtMjI0LDMgKzIyNCw0MCBAQCBkZXZpY2Utc3BlY2lmaWMg
bWVtb3J5IChETUEsIGVtdWxhdGVkIE1NSU8sIHJlc2VydmVkIGJ5IGEgcGFzc3Rocm91Z2gKIGRl
dmljZSBldGMuKS4gSXQgaXMgdXAgdG8gdGhlIHVzZXIgdG8gZGV0ZXJtaW5lLCB1c2luZyB0aGUg
Z3Vlc3Qgb3BlcmF0aW5nCiBzeXN0ZW0gZGF0YSBzdHJ1Y3R1cmVzLCB0aGUgYXJlYXMgdGhhdCBh
cmUgc2FmZSB0byBhY2Nlc3MgKGNvZGUsIHN0YWNrLCBoZWFwCiBldGMuKS4KKworQ29tbWFuZHMK
Ky0tLS0tLS0tCisKK1RoZSBmb2xsb3dpbmcgQyBzdHJ1Y3R1cmVzIGFyZSBtZWFudCB0byBiZSB1
c2VkIGRpcmVjdGx5IHdoZW4gY29tbXVuaWNhdGluZworb3ZlciB0aGUgd2lyZS4gVGhlIHBlZXIg
dGhhdCBkZXRlY3RzIGFueSBzaXplIG1pc21hdGNoIHNob3VsZCBzaW1wbHkgY2xvc2UKK3RoZSBj
b25uZWN0aW9uIGFuZCByZXBvcnQgdGhlIGVycm9yLgorCisxLiBLVk1JX0dFVF9WRVJTSU9OCist
LS0tLS0tLS0tLS0tLS0tLS0tCisKKzpBcmNoaXRlY3R1cmVzOiBhbGwKKzpWZXJzaW9uczogPj0g
MQorOlBhcmFtZXRlcnM6IG5vbmUKKzpSZXR1cm5zOgorCis6OgorCisJc3RydWN0IGt2bWlfZXJy
b3JfY29kZTsKKwlzdHJ1Y3Qga3ZtaV9nZXRfdmVyc2lvbl9yZXBseSB7CisJCV9fdTMyIHZlcnNp
b247CisJCV9fdTMyIHBhZGRpbmc7CisJfTsKKworUmV0dXJucyB0aGUgaW50cm9zcGVjdGlvbiBB
UEkgdmVyc2lvbi4KKworVGhpcyBjb21tYW5kIGlzIGFsd2F5cyBhbGxvd2VkIGFuZCBzdWNjZXNz
ZnVsLgorCitUaGUgbWVzc2FnZXMgdXNlZCBmb3IgaW50cm9zcGVjdGlvbiBjb21tYW5kcy9ldmVu
dHMgbWlnaHQgYmUgZXh0ZW5kZWQKK2luIGZ1dHVyZSB2ZXJzaW9ucyBhbmQgd2hpbGUgdGhlIGtl
cm5lbCB3aWxsIGFjY2VwdCBjb21tYW5kcyB3aXRoCitzaG9ydGVyIG1lc3NhZ2VzIChvbGRlciB2
ZXJzaW9ucykgb3IgbGFyZ2VyIG1lc3NhZ2VzIChuZXdlciB2ZXJzaW9ucywKK2lnbm9yaW5nIHRo
ZSBleHRyYSBpbmZvcm1hdGlvbiksIGl0IHdpbGwgbm90IGFjY2VwdCBldmVudCByZXBsaWVzIHdp
dGgKK2xhcmdlci9uZXdlciBtZXNzYWdlcy4KKworVGhlIGludHJvc3BlY3Rpb24gdG9vbCBzaG91
bGQgdXNlIHRoaXMgY29tbWFuZCB0byBpZGVudGlmeSB0aGUgZmVhdHVyZXMKK3N1cHBvcnRlZCBi
eSB0aGUga2VybmVsIHNpZGUgYW5kIHdoYXQgbWVzc2FnZXMgbXVzdCBiZSB1c2VkIGZvciBldmVu
dAorcmVwbGllcy4KZGlmZiAtLWdpdCBhL2luY2x1ZGUvdWFwaS9saW51eC9rdm1pLmggYi9pbmNs
dWRlL3VhcGkvbGludXgva3ZtaS5oCmluZGV4IDliZmZmNDg0ZmQ2Zi4uODk2ZmNiNmFiZjJjIDEw
MDY0NAotLS0gYS9pbmNsdWRlL3VhcGkvbGludXgva3ZtaS5oCisrKyBiL2luY2x1ZGUvdWFwaS9s
aW51eC9rdm1pLmgKQEAgLTYsMTEgKzYsMTYgQEAKICAqIEtWTUkgc3RydWN0dXJlcyBhbmQgZGVm
aW5pdGlvbnMKICAqLwogCisjaW5jbHVkZSA8bGludXgva2VybmVsLmg+CisjaW5jbHVkZSA8bGlu
dXgvdHlwZXMuaD4KKwogZW51bSB7CiAJS1ZNSV9WRVJTSU9OID0gMHgwMDAwMDAwMQogfTsKIAog
ZW51bSB7CisJS1ZNSV9HRVRfVkVSU0lPTiA9IDEsCisKIAlLVk1JX05VTV9NRVNTQUdFUwogfTsK
IApAQCAtMzksNCArNDQsOSBAQCBzdHJ1Y3Qga3ZtaV9lcnJvcl9jb2RlIHsKIAlfX3UzMiBwYWRk
aW5nOwogfTsKIAorc3RydWN0IGt2bWlfZ2V0X3ZlcnNpb25fcmVwbHkgeworCV9fdTMyIHZlcnNp
b247CisJX191MzIgcGFkZGluZzsKK307CisKICNlbmRpZiAvKiBfVUFQSV9fTElOVVhfS1ZNSV9I
ICovCmRpZmYgLS1naXQgYS90b29scy90ZXN0aW5nL3NlbGZ0ZXN0cy9rdm0veDg2XzY0L2t2bWlf
dGVzdC5jIGIvdG9vbHMvdGVzdGluZy9zZWxmdGVzdHMva3ZtL3g4Nl82NC9rdm1pX3Rlc3QuYwpp
bmRleCA5YzU5MWUwZDljOGEuLmQxNWVjY2MzMzBlNSAxMDA2NDQKLS0tIGEvdG9vbHMvdGVzdGlu
Zy9zZWxmdGVzdHMva3ZtL3g4Nl82NC9rdm1pX3Rlc3QuYworKysgYi90b29scy90ZXN0aW5nL3Nl
bGZ0ZXN0cy9rdm0veDg2XzY0L2t2bWlfdGVzdC5jCkBAIC05OCw2ICs5OCw3IEBAIHN0YXRpYyB2
b2lkIGhvb2tfaW50cm9zcGVjdGlvbihzdHJ1Y3Qga3ZtX3ZtICp2bSkKIAlkb19ob29rX2lvY3Rs
KHZtLCBLdm1fc29ja2V0LCBub19wYWRkaW5nLCAwKTsKIAlkb19ob29rX2lvY3RsKHZtLCBLdm1f
c29ja2V0LCBub19wYWRkaW5nLCBFRVhJU1QpOwogCisJc2V0X2NvbW1hbmRfcGVybSh2bSwgS1ZN
SV9HRVRfVkVSU0lPTiwgZGlzYWxsb3csIEVQRVJNKTsKIAlzZXRfY29tbWFuZF9wZXJtKHZtLCBh
bGxfSURzLCBhbGxvd19pbnZhbCwgRUlOVkFMKTsKIAlzZXRfY29tbWFuZF9wZXJtKHZtLCBhbGxf
SURzLCBkaXNhbGxvdywgMCk7CiAJc2V0X2NvbW1hbmRfcGVybSh2bSwgYWxsX0lEcywgYWxsb3cs
IDApOwpAQCAtMjEzLDEyICsyMTQsMzcgQEAgc3RhdGljIHZvaWQgdGVzdF9jbWRfaW52YWxpZCh2
b2lkKQogCQktciwga3ZtX3N0cmVycm9yKC1yKSk7CiB9CiAKK3N0YXRpYyB2b2lkIHRlc3Rfdm1f
Y29tbWFuZChpbnQgY21kX2lkLCBzdHJ1Y3Qga3ZtaV9tc2dfaGRyICpyZXEsCisJCQkgICAgc2l6
ZV90IHJlcV9zaXplLCB2b2lkICpycGwsIHNpemVfdCBycGxfc2l6ZSkKK3sKKwlpbnQgcjsKKwor
CXIgPSBkb19jb21tYW5kKGNtZF9pZCwgcmVxLCByZXFfc2l6ZSwgcnBsLCBycGxfc2l6ZSk7CisJ
VEVTVF9BU1NFUlQociA9PSAwLAorCQkgICAgIkNvbW1hbmQgJWQgZmFpbGVkLCBlcnJvciAlZCAo
JXMpXG4iLAorCQkgICAgY21kX2lkLCAtciwga3ZtX3N0cmVycm9yKC1yKSk7Cit9CisKK3N0YXRp
YyB2b2lkIHRlc3RfY21kX2dldF92ZXJzaW9uKHZvaWQpCit7CisJc3RydWN0IGt2bWlfZ2V0X3Zl
cnNpb25fcmVwbHkgcnBsOworCXN0cnVjdCBrdm1pX21zZ19oZHIgcmVxOworCisJdGVzdF92bV9j
b21tYW5kKEtWTUlfR0VUX1ZFUlNJT04sICZyZXEsIHNpemVvZihyZXEpLCAmcnBsLCBzaXplb2Yo
cnBsKSk7CisJVEVTVF9BU1NFUlQocnBsLnZlcnNpb24gPT0gS1ZNSV9WRVJTSU9OLAorCQkgICAg
IlVuZXhwZWN0ZWQgS1ZNSSB2ZXJzaW9uICVkLCBleHBlY3RpbmcgJWRcbiIsCisJCSAgICBycGwu
dmVyc2lvbiwgS1ZNSV9WRVJTSU9OKTsKKworCXByX2luZm8oIktWTUkgdmVyc2lvbjogJXVcbiIs
IHJwbC52ZXJzaW9uKTsKK30KKwogc3RhdGljIHZvaWQgdGVzdF9pbnRyb3NwZWN0aW9uKHN0cnVj
dCBrdm1fdm0gKnZtKQogewogCXNldHVwX3NvY2tldCgpOwogCWhvb2tfaW50cm9zcGVjdGlvbih2
bSk7CiAKIAl0ZXN0X2NtZF9pbnZhbGlkKCk7CisJdGVzdF9jbWRfZ2V0X3ZlcnNpb24oKTsKIAog
CXVuaG9va19pbnRyb3NwZWN0aW9uKHZtKTsKIH0KZGlmZiAtLWdpdCBhL3ZpcnQva3ZtL2ludHJv
c3BlY3Rpb24va3ZtaS5jIGIvdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pLmMKaW5kZXggNTQ3
ZDMzODhmZjhhLi5jNDRhYTQ5ZGM2YjUgMTAwNjQ0Ci0tLSBhL3ZpcnQva3ZtL2ludHJvc3BlY3Rp
b24va3ZtaS5jCisrKyBiL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaS5jCkBAIC0xMSw2ICsx
MSw4IEBACiAjZGVmaW5lIEtWTUlfTlVNX0NPTU1BTkRTIEtWTUlfTlVNX01FU1NBR0VTCiAjZGVm
aW5lIEtWTUlfTVNHX1NJWkVfQUxMT0MgKHNpemVvZihzdHJ1Y3Qga3ZtaV9tc2dfaGRyKSArIEtW
TUlfTVNHX1NJWkUpCiAKK3N0YXRpYyBERUNMQVJFX0JJVE1BUChLdm1pX2Fsd2F5c19hbGxvd2Vk
X2NvbW1hbmRzLCBLVk1JX05VTV9DT01NQU5EUyk7CisKIHN0YXRpYyBzdHJ1Y3Qga21lbV9jYWNo
ZSAqbXNnX2NhY2hlOwogCiB2b2lkICprdm1pX21zZ19hbGxvYyh2b2lkKQpAQCAtNDksOCArNTEs
MTYgQEAgYm9vbCBrdm1pX2lzX2NvbW1hbmRfYWxsb3dlZChzdHJ1Y3Qga3ZtX2ludHJvc3BlY3Rp
b24gKmt2bWksIHUxNiBpZCkKIAlyZXR1cm4gaWQgPCBLVk1JX05VTV9DT01NQU5EUyAmJiB0ZXN0
X2JpdChpZCwga3ZtaS0+Y21kX2FsbG93X21hc2spOwogfQogCitzdGF0aWMgdm9pZCBzZXR1cF9h
bHdheXNfYWxsb3dlZF9jb21tYW5kcyh2b2lkKQoreworCWJpdG1hcF96ZXJvKEt2bWlfYWx3YXlz
X2FsbG93ZWRfY29tbWFuZHMsIEtWTUlfTlVNX0NPTU1BTkRTKTsKKwlzZXRfYml0KEtWTUlfR0VU
X1ZFUlNJT04sIEt2bWlfYWx3YXlzX2FsbG93ZWRfY29tbWFuZHMpOworfQorCiBpbnQga3ZtaV9p
bml0KHZvaWQpCiB7CisJc2V0dXBfYWx3YXlzX2FsbG93ZWRfY29tbWFuZHMoKTsKKwogCXJldHVy
biBrdm1pX2NhY2hlX2NyZWF0ZSgpOwogfQogCkBAIC05NCw2ICsxMDQsOSBAQCBhbGxvY19rdm1p
KHN0cnVjdCBrdm0gKmt2bSwgY29uc3Qgc3RydWN0IGt2bV9pbnRyb3NwZWN0aW9uX2hvb2sgKmhv
b2spCiAJQlVJTERfQlVHX09OKHNpemVvZihob29rLT51dWlkKSAhPSBzaXplb2Yoa3ZtaS0+dXVp
ZCkpOwogCW1lbWNweSgma3ZtaS0+dXVpZCwgJmhvb2stPnV1aWQsIHNpemVvZihrdm1pLT51dWlk
KSk7CiAKKwliaXRtYXBfY29weShrdm1pLT5jbWRfYWxsb3dfbWFzaywgS3ZtaV9hbHdheXNfYWxs
b3dlZF9jb21tYW5kcywKKwkJICAgIEtWTUlfTlVNX0NPTU1BTkRTKTsKKwogCWt2bWktPmt2bSA9
IGt2bTsKIAogCXJldHVybiBrdm1pOwpAQCAtMzAzLDggKzMxNiw4IEBAIGludCBrdm1pX2lvY3Rs
X2V2ZW50KHN0cnVjdCBrdm0gKmt2bSwKIAlyZXR1cm4gZXJyOwogfQogCi1zdGF0aWMgdm9pZCBr
dm1pX2NvbnRyb2xfYWxsb3dlZF9jb21tYW5kcyhzdHJ1Y3Qga3ZtX2ludHJvc3BlY3Rpb24gKmt2
bWksCi0JCQkJCSAgczMyIGlkLCBib29sIGFsbG93KQorc3RhdGljIGludCBrdm1pX2NvbnRyb2xf
YWxsb3dlZF9jb21tYW5kcyhzdHJ1Y3Qga3ZtX2ludHJvc3BlY3Rpb24gKmt2bWksCisJCQkJCSBz
MzIgaWQsIGJvb2wgYWxsb3cpCiB7CiAJczMyIGFsbF9jb21tYW5kcyA9IC0xOwogCkBAIC0zMTUs
MTAgKzMyOCwxNiBAQCBzdGF0aWMgdm9pZCBrdm1pX2NvbnRyb2xfYWxsb3dlZF9jb21tYW5kcyhz
dHJ1Y3Qga3ZtX2ludHJvc3BlY3Rpb24gKmt2bWksCiAJCQlzZXRfYml0KGlkLCBrdm1pLT5jbWRf
YWxsb3dfbWFzayk7CiAJfSBlbHNlIHsKIAkJaWYgKGlkID09IGFsbF9jb21tYW5kcykKLQkJCWJp
dG1hcF96ZXJvKGt2bWktPmNtZF9hbGxvd19tYXNrLCBLVk1JX05VTV9DT01NQU5EUyk7CisJCQli
aXRtYXBfY29weShrdm1pLT5jbWRfYWxsb3dfbWFzaywKKwkJCQkgICAgS3ZtaV9hbHdheXNfYWxs
b3dlZF9jb21tYW5kcywKKwkJCQkgICAgS1ZNSV9OVU1fQ09NTUFORFMpOworCQllbHNlIGlmICh0
ZXN0X2JpdChpZCwgS3ZtaV9hbHdheXNfYWxsb3dlZF9jb21tYW5kcykpCisJCQlyZXR1cm4gLUVQ
RVJNOwogCQllbHNlCiAJCQljbGVhcl9iaXQoaWQsIGt2bWktPmNtZF9hbGxvd19tYXNrKTsKIAl9
CisKKwlyZXR1cm4gMDsKIH0KIAogaW50IGt2bWlfaW9jdGxfY29tbWFuZChzdHJ1Y3Qga3ZtICpr
dm0sCkBAIC0zMzcsNyArMzU2LDcgQEAgaW50IGt2bWlfaW9jdGxfY29tbWFuZChzdHJ1Y3Qga3Zt
ICprdm0sCiAKIAlrdm1pID0gS1ZNSShrdm0pOwogCWlmIChrdm1pKQotCQlrdm1pX2NvbnRyb2xf
YWxsb3dlZF9jb21tYW5kcyhrdm1pLCBpZCwgYWxsb3cpOworCQllcnIgPSBrdm1pX2NvbnRyb2xf
YWxsb3dlZF9jb21tYW5kcyhrdm1pLCBpZCwgYWxsb3cpOwogCWVsc2UKIAkJZXJyID0gLUVGQVVM
VDsKIApkaWZmIC0tZ2l0IGEvdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pX21zZy5jIGIvdmly
dC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pX21zZy5jCmluZGV4IDRlN2I1NWVjNzA3MS4uMzg2NjM2
YWE5ODMyIDEwMDY0NAotLS0gYS92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWlfbXNnLmMKKysr
IGIvdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pX21zZy5jCkBAIC05OCwxMSArOTgsMjMgQEAg
c3RhdGljIGludCBrdm1pX21zZ192bV9yZXBseShzdHJ1Y3Qga3ZtX2ludHJvc3BlY3Rpb24gKmt2
bWksCiAJcmV0dXJuIGt2bWlfbXNnX3JlcGx5KGt2bWksIG1zZywgZXJyLCBycGwsIHJwbF9zaXpl
KTsKIH0KIAorc3RhdGljIGludCBoYW5kbGVfZ2V0X3ZlcnNpb24oc3RydWN0IGt2bV9pbnRyb3Nw
ZWN0aW9uICprdm1pLAorCQkJICAgICAgY29uc3Qgc3RydWN0IGt2bWlfbXNnX2hkciAqbXNnLCBj
b25zdCB2b2lkICpyZXEpCit7CisJc3RydWN0IGt2bWlfZ2V0X3ZlcnNpb25fcmVwbHkgcnBsOwor
CisJbWVtc2V0KCZycGwsIDAsIHNpemVvZihycGwpKTsKKwlycGwudmVyc2lvbiA9IGt2bWlfdmVy
c2lvbigpOworCisJcmV0dXJuIGt2bWlfbXNnX3ZtX3JlcGx5KGt2bWksIG1zZywgMCwgJnJwbCwg
c2l6ZW9mKHJwbCkpOworfQorCiAvKgogICogVGhlc2UgY29tbWFuZHMgYXJlIGV4ZWN1dGVkIGJ5
IHRoZSByZWNlaXZpbmcgdGhyZWFkLgogICovCiBzdGF0aWMgaW50KCpjb25zdCBtc2dfdm1bXSko
c3RydWN0IGt2bV9pbnRyb3NwZWN0aW9uICosCiAJCQkgICAgY29uc3Qgc3RydWN0IGt2bWlfbXNn
X2hkciAqLCBjb25zdCB2b2lkICopID0geworCVtLVk1JX0dFVF9WRVJTSU9OXSA9IGhhbmRsZV9n
ZXRfdmVyc2lvbiwKIH07CiAKIHN0YXRpYyBib29sIGlzX3ZtX2NvbW1hbmQodTE2IGlkKQpfX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpWaXJ0dWFsaXphdGlv
biBtYWlsaW5nIGxpc3QKVmlydHVhbGl6YXRpb25AbGlzdHMubGludXgtZm91bmRhdGlvbi5vcmcK
aHR0cHM6Ly9saXN0cy5saW51eGZvdW5kYXRpb24ub3JnL21haWxtYW4vbGlzdGluZm8vdmlydHVh
bGl6YXRpb24=
