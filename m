Return-Path: <virtualization-bounces@lists.linux-foundation.org>
X-Original-To: lists.virtualization@lfdr.de
Delivered-To: lists.virtualization@lfdr.de
Received: from fraxinus.osuosl.org (smtp4.osuosl.org [140.211.166.137])
	by mail.lfdr.de (Postfix) with ESMTPS id E40C52D1B5F
	for <lists.virtualization@lfdr.de>; Mon,  7 Dec 2020 21:57:05 +0100 (CET)
Received: from localhost (localhost [127.0.0.1])
	by fraxinus.osuosl.org (Postfix) with ESMTP id 99E0C870DE;
	Mon,  7 Dec 2020 20:57:04 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from fraxinus.osuosl.org ([127.0.0.1])
	by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id NxVgCN6LZrdZ; Mon,  7 Dec 2020 20:56:58 +0000 (UTC)
Received: from lists.linuxfoundation.org (lf-lists.osuosl.org [140.211.9.56])
	by fraxinus.osuosl.org (Postfix) with ESMTP id CCAA287115;
	Mon,  7 Dec 2020 20:56:57 +0000 (UTC)
Received: from lf-lists.osuosl.org (localhost [127.0.0.1])
	by lists.linuxfoundation.org (Postfix) with ESMTP id AAC3BC1834;
	Mon,  7 Dec 2020 20:56:57 +0000 (UTC)
X-Original-To: virtualization@lists.linux-foundation.org
Delivered-To: virtualization@lists.linuxfoundation.org
Received: from whitealder.osuosl.org (smtp1.osuosl.org [140.211.166.138])
 by lists.linuxfoundation.org (Postfix) with ESMTP id EFAD8C013B
 for <virtualization@lists.linux-foundation.org>;
 Mon,  7 Dec 2020 20:56:54 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by whitealder.osuosl.org (Postfix) with ESMTP id DECDE87A69
 for <virtualization@lists.linux-foundation.org>;
 Mon,  7 Dec 2020 20:56:54 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from whitealder.osuosl.org ([127.0.0.1])
 by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id YWe3U6PHlMUG
 for <virtualization@lists.linux-foundation.org>;
 Mon,  7 Dec 2020 20:56:54 +0000 (UTC)
X-Greylist: from auto-whitelisted by SQLgrey-1.7.6
Received: from mx01.bbu.dsd.mx.bitdefender.com
 (mx01.bbu.dsd.mx.bitdefender.com [91.199.104.161])
 by whitealder.osuosl.org (Postfix) with ESMTPS id 5779D87A85
 for <virtualization@lists.linux-foundation.org>;
 Mon,  7 Dec 2020 20:56:54 +0000 (UTC)
Received: from smtp.bitdefender.com (smtp01.buh.bitdefender.com [10.17.80.75])
 by mx01.bbu.dsd.mx.bitdefender.com (Postfix) with ESMTPS id
 CFA72305D47C; Mon,  7 Dec 2020 22:46:22 +0200 (EET)
Received: from localhost.localdomain (unknown [91.199.104.27])
 by smtp.bitdefender.com (Postfix) with ESMTPSA id A62263072785;
 Mon,  7 Dec 2020 22:46:22 +0200 (EET)
From: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>
To: kvm@vger.kernel.org
Subject: [PATCH v11 61/81] KVM: introspection: add KVMI_VCPU_CONTROL_CR and
 KVMI_VCPU_EVENT_CR
Date: Mon,  7 Dec 2020 22:46:02 +0200
Message-Id: <20201207204622.15258-62-alazar@bitdefender.com>
In-Reply-To: <20201207204622.15258-1-alazar@bitdefender.com>
References: <20201207204622.15258-1-alazar@bitdefender.com>
MIME-Version: 1.0
Cc: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>,
 Paolo Bonzini <pbonzini@redhat.com>,
 =?UTF-8?q?Mihai=20Don=C8=9Bu?= <mdontu@bitdefender.com>,
 virtualization@lists.linux-foundation.org
X-BeenThere: virtualization@lists.linux-foundation.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Linux virtualization <virtualization.lists.linux-foundation.org>
List-Unsubscribe: <https://lists.linuxfoundation.org/mailman/options/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=unsubscribe>
List-Archive: <http://lists.linuxfoundation.org/pipermail/virtualization/>
List-Post: <mailto:virtualization@lists.linux-foundation.org>
List-Help: <mailto:virtualization-request@lists.linux-foundation.org?subject=help>
List-Subscribe: <https://lists.linuxfoundation.org/mailman/listinfo/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: virtualization-bounces@lists.linux-foundation.org
Sender: "Virtualization" <virtualization-bounces@lists.linux-foundation.org>

RnJvbTogTWloYWkgRG9uyJt1IDxtZG9udHVAYml0ZGVmZW5kZXIuY29tPgoKVXNpbmcgdGhlIEtW
TUlfVkNQVV9DT05UUk9MX0NSIGNvbW1hbmQsIHRoZSBpbnRyb3NwZWN0aW9uIHRvb2wgc3Vic2Ny
aWJlcwp0byBLVk1JX1ZDUFVfRVZFTlRfQ1IgZXZlbnRzIHRoYXQgd2lsbCBiZSBzZW50IHdoZW4g
YSBjb250cm9sIHJlZ2lzdGVyCihDUjAsIENSMyBvciBDUjQpIGlzIGdvaW5nIHRvIGJlIGNoYW5n
ZWQuCgpTaWduZWQtb2ZmLWJ5OiBNaWhhaSBEb27Im3UgPG1kb250dUBiaXRkZWZlbmRlci5jb20+
CkNvLWRldmVsb3BlZC1ieTogQWRhbGJlcnQgTGF6xINyIDxhbGF6YXJAYml0ZGVmZW5kZXIuY29t
PgpTaWduZWQtb2ZmLWJ5OiBBZGFsYmVydCBMYXrEg3IgPGFsYXphckBiaXRkZWZlbmRlci5jb20+
Ci0tLQogRG9jdW1lbnRhdGlvbi92aXJ0L2t2bS9rdm1pLnJzdCAgICAgICAgICAgICAgIHwgIDcz
ICsrKysrKysrKysrKysKIGFyY2gveDg2L2luY2x1ZGUvYXNtL2t2bWlfaG9zdC5oICAgICAgICAg
ICAgICB8ICAxMiArKysKIGFyY2gveDg2L2luY2x1ZGUvdWFwaS9hc20va3ZtaS5oICAgICAgICAg
ICAgICB8ICAxOCArKysrCiBhcmNoL3g4Ni9rdm0va3ZtaS5jICAgICAgICAgICAgICAgICAgICAg
ICAgICAgfCAgNzggKysrKysrKysrKysrKysKIGFyY2gveDg2L2t2bS9rdm1pLmggICAgICAgICAg
ICAgICAgICAgICAgICAgICB8ICAgNCArCiBhcmNoL3g4Ni9rdm0va3ZtaV9tc2cuYyAgICAgICAg
ICAgICAgICAgICAgICAgfCAgNDQgKysrKysrKysKIGFyY2gveDg2L2t2bS92bXgvdm14LmMgICAg
ICAgICAgICAgICAgICAgICAgICB8ICAgNiArLQogYXJjaC94ODYva3ZtL3g4Ni5jICAgICAgICAg
ICAgICAgICAgICAgICAgICAgIHwgIDEyICsrLQogaW5jbHVkZS91YXBpL2xpbnV4L2t2bWkuaCAg
ICAgICAgICAgICAgICAgICAgIHwgICAyICsKIC4uLi90ZXN0aW5nL3NlbGZ0ZXN0cy9rdm0veDg2
XzY0L2t2bWlfdGVzdC5jICB8IDEwMCArKysrKysrKysrKysrKysrKysKIHZpcnQva3ZtL2ludHJv
c3BlY3Rpb24va3ZtaS5jICAgICAgICAgICAgICAgICB8ICAgMiArLQogdmlydC9rdm0vaW50cm9z
cGVjdGlvbi9rdm1pX2ludC5oICAgICAgICAgICAgIHwgICAyICsKIDEyIGZpbGVzIGNoYW5nZWQs
IDM0OSBpbnNlcnRpb25zKCspLCA0IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL0RvY3VtZW50
YXRpb24vdmlydC9rdm0va3ZtaS5yc3QgYi9Eb2N1bWVudGF0aW9uL3ZpcnQva3ZtL2t2bWkucnN0
CmluZGV4IGY5YzEwZDI3Y2UxNC4uODVlMTRiODJhYTJmIDEwMDY0NAotLS0gYS9Eb2N1bWVudGF0
aW9uL3ZpcnQva3ZtL2t2bWkucnN0CisrKyBiL0RvY3VtZW50YXRpb24vdmlydC9rdm0va3ZtaS5y
c3QKQEAgLTUzOSw2ICs1MzksNyBAQCBFbmFibGVzL2Rpc2FibGVzIHZDUFUgaW50cm9zcGVjdGlv
biBldmVudHMuIFRoaXMgY29tbWFuZCBjYW4gYmUgdXNlZCB3aXRoCiB0aGUgZm9sbG93aW5nIGV2
ZW50czo6CiAKIAlLVk1JX1ZDUFVfRVZFTlRfQlJFQUtQT0lOVAorCUtWTUlfVkNQVV9FVkVOVF9D
UgogCUtWTUlfVkNQVV9FVkVOVF9IWVBFUkNBTEwKIAogV2hlbiBhbiBldmVudCBpcyBlbmFibGVk
LCB0aGUgaW50cm9zcGVjdGlvbiB0b29sIGlzIG5vdGlmaWVkIGFuZApAQCAtNzAxLDYgKzcwMiw0
MCBAQCBpbnRlcmNlcHRpb25zKS4gQnkgZGVmYXVsdCBpdCBpcyBlbmFibGVkLgogKiAtS1ZNX0VJ
TlZBTCAtIHRoZSBwYWRkaW5nIGlzIG5vdCB6ZXJvCiAqIC1LVk1fRUlOVkFMIC0gYGBlbmFibGVg
YCBpcyBub3QgMSBvciAwCiAKKzE1LiBLVk1JX1ZDUFVfQ09OVFJPTF9DUgorLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tCisKKzpBcmNoaXRlY3R1cmVzOiB4ODYKKzpWZXJzaW9uczogPj0gMQorOlBh
cmFtZXRlcnM6CisKKzo6CisKKwlzdHJ1Y3Qga3ZtaV92Y3B1X2hkcjsKKwlzdHJ1Y3Qga3ZtaV92
Y3B1X2NvbnRyb2xfY3IgeworCQlfX3U4IGNyOworCQlfX3U4IGVuYWJsZTsKKwkJX191MTYgcGFk
ZGluZzE7CisJCV9fdTMyIHBhZGRpbmcyOworCX07CisKKzpSZXR1cm5zOgorCis6OgorCisJc3Ry
dWN0IGt2bWlfZXJyb3JfY29kZQorCitFbmFibGVzL2Rpc2FibGVzIGludHJvc3BlY3Rpb24gZm9y
IGEgc3BlY2lmaWMgY29udHJvbCByZWdpc3RlciBhbmQgbXVzdAorYmUgdXNlZCBpbiBhZGRpdGlv
biB0byAqS1ZNSV9WQ1BVX0NPTlRST0xfRVZFTlRTKiB3aXRoIHRoZSAqS1ZNSV9WQ1BVX0VWRU5U
X0NSKgorSUQgc2V0LgorCis6RXJyb3JzOgorCisqIC1LVk1fRUlOVkFMIC0gdGhlIHNlbGVjdGVk
IHZDUFUgaXMgaW52YWxpZAorKiAtS1ZNX0VJTlZBTCAtIHRoZSBzcGVjaWZpZWQgY29udHJvbCBy
ZWdpc3RlciBpcyBub3QgQ1IwLCBDUjMgb3IgQ1I0CisqIC1LVk1fRUlOVkFMIC0gdGhlIHBhZGRp
bmcgaXMgbm90IHplcm8KKyogLUtWTV9FQUdBSU4gLSB0aGUgc2VsZWN0ZWQgdkNQVSBjYW4ndCBi
ZSBpbnRyb3NwZWN0ZWQgeWV0CisKIEV2ZW50cwogPT09PT09CiAKQEAgLTg5MywzICs5MjgsNDEg
QEAgYmVmb3JlIHJldHVybmluZyB0aGlzIGFjdGlvbi4KIAogVGhlICpDT05USU5VRSogYWN0aW9u
IHdpbGwgY2F1c2UgdGhlIGJyZWFrcG9pbnQgZXhjZXB0aW9uIHRvIGJlIHJlaW5qZWN0ZWQKICh0
aGUgT1Mgd2lsbCBoYW5kbGUgaXQpLgorCis1LiBLVk1JX1ZDUFVfRVZFTlRfQ1IKKy0tLS0tLS0t
LS0tLS0tLS0tLS0tLQorCis6QXJjaGl0ZWN0dXJlczogeDg2Cis6VmVyc2lvbnM6ID49IDEKKzpB
Y3Rpb25zOiBDT05USU5VRSwgQ1JBU0gKKzpQYXJhbWV0ZXJzOgorCis6OgorCisJc3RydWN0IGt2
bWlfZXZlbnRfaGRyOworCXN0cnVjdCBrdm1pX3ZjcHVfZXZlbnQ7CisJc3RydWN0IGt2bWlfdmNw
dV9ldmVudF9jciB7CisJCV9fdTggY3I7CisJCV9fdTggcGFkZGluZ1s3XTsKKwkJX191NjQgb2xk
X3ZhbHVlOworCQlfX3U2NCBuZXdfdmFsdWU7CisJfTsKKworOlJldHVybnM6CisKKzo6CisKKwlz
dHJ1Y3Qga3ZtaV92Y3B1X2hkcjsKKwlzdHJ1Y3Qga3ZtaV92Y3B1X2V2ZW50X3JlcGx5OworCXN0
cnVjdCBrdm1pX3ZjcHVfZXZlbnRfY3JfcmVwbHkgeworCQlfX3U2NCBuZXdfdmFsOworCX07CisK
K1RoaXMgZXZlbnQgaXMgc2VudCB3aGVuIGEgY29udHJvbCByZWdpc3RlciBpcyBnb2luZyB0byBi
ZSBjaGFuZ2VkIGFuZCB0aGUKK2ludHJvc3BlY3Rpb24gaGFzIGJlZW4gZW5hYmxlZCBmb3IgdGhp
cyBldmVudCBhbmQgZm9yIHRoaXMgc3BlY2lmaWMKK3JlZ2lzdGVyIChzZWUgKipLVk1JX1ZDUFVf
Q09OVFJPTF9FVkVOVFMqKikuCisKK2Bga3ZtaV92Y3B1X2V2ZW50YGAgKHdpdGggdGhlIHZDUFUg
c3RhdGUpLCB0aGUgY29udHJvbCByZWdpc3RlciBudW1iZXIKKyhgYGNyYGApLCB0aGUgb2xkIHZh
bHVlIChgYG9sZF92YWx1ZWBgKSBhbmQgdGhlIG5ldyB2YWx1ZSAoYGBuZXdfdmFsdWVgYCkKK2Fy
ZSBzZW50IHRvIHRoZSBpbnRyb3NwZWN0aW9uIHRvb2wuIFRoZSAqQ09OVElOVUUqIGFjdGlvbiB3
aWxsIHNldCB0aGUKK2BgbmV3X3ZhbGBgLgpkaWZmIC0tZ2l0IGEvYXJjaC94ODYvaW5jbHVkZS9h
c20va3ZtaV9ob3N0LmggYi9hcmNoL3g4Ni9pbmNsdWRlL2FzbS9rdm1pX2hvc3QuaAppbmRleCAx
NjFkMWFlNWE3Y2YuLjc2MTMwODhkMGFlMiAxMDA2NDQKLS0tIGEvYXJjaC94ODYvaW5jbHVkZS9h
c20va3ZtaV9ob3N0LmgKKysrIGIvYXJjaC94ODYvaW5jbHVkZS9hc20va3ZtaV9ob3N0LmgKQEAg
LTQsNiArNCw4IEBACiAKICNpbmNsdWRlIDxhc20va3ZtaS5oPgogCisjZGVmaW5lIEtWTUlfTlVN
X0NSIDUKKwogc3RydWN0IGt2bWlfbW9uaXRvcl9pbnRlcmNlcHRpb24gewogCWJvb2wga3ZtaV9p
bnRlcmNlcHRlZDsKIAlib29sIGt2bV9pbnRlcmNlcHRlZDsKQEAgLTE5LDYgKzIxLDggQEAgc3Ry
dWN0IGt2bWlfaW50ZXJjZXB0aW9uIHsKIHN0cnVjdCBrdm1fdmNwdV9hcmNoX2ludHJvc3BlY3Rp
b24gewogCXN0cnVjdCBrdm1fcmVncyBkZWxheWVkX3JlZ3M7CiAJYm9vbCBoYXZlX2RlbGF5ZWRf
cmVnczsKKworCURFQ0xBUkVfQklUTUFQKGNyX21hc2ssIEtWTUlfTlVNX0NSKTsKIH07CiAKIHN0
cnVjdCBrdm1fYXJjaF9pbnRyb3NwZWN0aW9uIHsKQEAgLTI3LDExICszMSwxOSBAQCBzdHJ1Y3Qg
a3ZtX2FyY2hfaW50cm9zcGVjdGlvbiB7CiAjaWZkZWYgQ09ORklHX0tWTV9JTlRST1NQRUNUSU9O
CiAKIGJvb2wga3ZtaV9tb25pdG9yX2JwX2ludGVyY2VwdChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUs
IHUzMiBkYmcpOworYm9vbCBrdm1pX2NyX2V2ZW50KHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwgdW5z
aWduZWQgaW50IGNyLAorCQkgICB1bnNpZ25lZCBsb25nIG9sZF92YWx1ZSwgdW5zaWduZWQgbG9u
ZyAqbmV3X3ZhbHVlKTsKK2Jvb2wga3ZtaV9jcjNfaW50ZXJjZXB0ZWQoc3RydWN0IGt2bV92Y3B1
ICp2Y3B1KTsKIAogI2Vsc2UgLyogQ09ORklHX0tWTV9JTlRST1NQRUNUSU9OICovCiAKIHN0YXRp
YyBpbmxpbmUgYm9vbCBrdm1pX21vbml0b3JfYnBfaW50ZXJjZXB0KHN0cnVjdCBrdm1fdmNwdSAq
dmNwdSwgdTMyIGRiZykKIAl7IHJldHVybiBmYWxzZTsgfQorc3RhdGljIGlubGluZSBib29sIGt2
bWlfY3JfZXZlbnQoc3RydWN0IGt2bV92Y3B1ICp2Y3B1LCB1bnNpZ25lZCBpbnQgY3IsCisJCQkJ
IHVuc2lnbmVkIGxvbmcgb2xkX3ZhbHVlLAorCQkJCSB1bnNpZ25lZCBsb25nICpuZXdfdmFsdWUp
CisJCQl7IHJldHVybiB0cnVlOyB9CitzdGF0aWMgaW5saW5lIGJvb2wga3ZtaV9jcjNfaW50ZXJj
ZXB0ZWQoc3RydWN0IGt2bV92Y3B1ICp2Y3B1KSB7IHJldHVybiBmYWxzZTsgfQogCiAjZW5kaWYg
LyogQ09ORklHX0tWTV9JTlRST1NQRUNUSU9OICovCiAKZGlmZiAtLWdpdCBhL2FyY2gveDg2L2lu
Y2x1ZGUvdWFwaS9hc20va3ZtaS5oIGIvYXJjaC94ODYvaW5jbHVkZS91YXBpL2FzbS9rdm1pLmgK
aW5kZXggYTQ0MmJhNGQyMTkwLi4zMmNkMTc0ODgwNTggMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L2lu
Y2x1ZGUvdWFwaS9hc20va3ZtaS5oCisrKyBiL2FyY2gveDg2L2luY2x1ZGUvdWFwaS9hc20va3Zt
aS5oCkBAIC02MSw0ICs2MSwyMiBAQCBzdHJ1Y3Qga3ZtaV92Y3B1X2dldF9jcHVpZF9yZXBseSB7
CiAJX191MzIgZWR4OwogfTsKIAorc3RydWN0IGt2bWlfdmNwdV9jb250cm9sX2NyIHsKKwlfX3U4
IGNyOworCV9fdTggZW5hYmxlOworCV9fdTE2IHBhZGRpbmcxOworCV9fdTMyIHBhZGRpbmcyOwor
fTsKKworc3RydWN0IGt2bWlfdmNwdV9ldmVudF9jciB7CisJX191OCBjcjsKKwlfX3U4IHBhZGRp
bmdbN107CisJX191NjQgb2xkX3ZhbHVlOworCV9fdTY0IG5ld192YWx1ZTsKK307CisKK3N0cnVj
dCBrdm1pX3ZjcHVfZXZlbnRfY3JfcmVwbHkgeworCV9fdTY0IG5ld192YWw7Cit9OworCiAjZW5k
aWYgLyogX1VBUElfQVNNX1g4Nl9LVk1JX0ggKi8KZGlmZiAtLWdpdCBhL2FyY2gveDg2L2t2bS9r
dm1pLmMgYi9hcmNoL3g4Ni9rdm0va3ZtaS5jCmluZGV4IGU3YTRlZjQ4ZWQ2MS4uMmJiNmI0YmI5
MzJiIDEwMDY0NAotLS0gYS9hcmNoL3g4Ni9rdm0va3ZtaS5jCisrKyBiL2FyY2gveDg2L2t2bS9r
dm1pLmMKQEAgLTgsMTAgKzgsMTIgQEAKICNpbmNsdWRlICJsaW51eC9rdm1faG9zdC5oIgogI2lu
Y2x1ZGUgIng4Ni5oIgogI2luY2x1ZGUgIi4uLy4uLy4uL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24v
a3ZtaV9pbnQuaCIKKyNpbmNsdWRlICJrdm1pLmgiCiAKIHZvaWQga3ZtaV9hcmNoX2luaXRfdmNw
dV9ldmVudHNfbWFzayh1bnNpZ25lZCBsb25nICpzdXBwb3J0ZWQpCiB7CiAJc2V0X2JpdChLVk1J
X1ZDUFVfRVZFTlRfQlJFQUtQT0lOVCwgc3VwcG9ydGVkKTsKKwlzZXRfYml0KEtWTUlfVkNQVV9F
VkVOVF9DUiwgc3VwcG9ydGVkKTsKIAlzZXRfYml0KEtWTUlfVkNQVV9FVkVOVF9IWVBFUkNBTEws
IHN1cHBvcnRlZCk7CiB9CiAKQEAgLTMyMCwzICszMjIsNzkgQEAgdm9pZCBrdm1pX2FyY2hfcmVx
dWVzdF9pbnRlcmNlcHRpb25fY2xlYW51cChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsCiAJCWFyY2hf
dmNwdWktPmNsZWFudXAgPSB0cnVlOwogCX0KIH0KKworaW50IGt2bWlfYXJjaF9jbWRfdmNwdV9j
b250cm9sX2NyKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwgaW50IGNyLCBib29sIGVuYWJsZSkKK3sK
KwlpZiAoY3IgPT0gMykKKwkJa3ZtX3g4Nl9vcHMuY29udHJvbF9jcjNfaW50ZXJjZXB0KHZjcHUs
IENSX1RZUEVfVywgZW5hYmxlKTsKKworCWlmIChlbmFibGUpCisJCXNldF9iaXQoY3IsIFZDUFVJ
KHZjcHUpLT5hcmNoLmNyX21hc2spOworCWVsc2UKKwkJY2xlYXJfYml0KGNyLCBWQ1BVSSh2Y3B1
KS0+YXJjaC5jcl9tYXNrKTsKKworCXJldHVybiAwOworfQorCitzdGF0aWMgYm9vbCBfX2t2bWlf
Y3JfZXZlbnQoc3RydWN0IGt2bV92Y3B1ICp2Y3B1LCB1bnNpZ25lZCBpbnQgY3IsCisJCQkgICAg
dTY0IG9sZF92YWx1ZSwgdW5zaWduZWQgbG9uZyAqbmV3X3ZhbHVlKQoreworCXU2NCByZXBseV92
YWx1ZTsKKwl1MzIgYWN0aW9uOworCWJvb2wgcmV0OworCisJaWYgKCF0ZXN0X2JpdChjciwgVkNQ
VUkodmNwdSktPmFyY2guY3JfbWFzaykpCisJCXJldHVybiB0cnVlOworCisJYWN0aW9uID0ga3Zt
aV9tc2dfc2VuZF9jcih2Y3B1LCBjciwgb2xkX3ZhbHVlLCAqbmV3X3ZhbHVlLAorCQkJCSAgJnJl
cGx5X3ZhbHVlKTsKKwlzd2l0Y2ggKGFjdGlvbikgeworCWNhc2UgS1ZNSV9FVkVOVF9BQ1RJT05f
Q09OVElOVUU6CisJCSpuZXdfdmFsdWUgPSByZXBseV92YWx1ZTsKKwkJcmV0ID0gdHJ1ZTsKKwkJ
YnJlYWs7CisJZGVmYXVsdDoKKwkJa3ZtaV9oYW5kbGVfY29tbW9uX2V2ZW50X2FjdGlvbnModmNw
dSwgYWN0aW9uKTsKKwkJcmV0ID0gZmFsc2U7CisJfQorCisJcmV0dXJuIHJldDsKK30KKworYm9v
bCBrdm1pX2NyX2V2ZW50KHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwgdW5zaWduZWQgaW50IGNyLAor
CQkgICB1bnNpZ25lZCBsb25nIG9sZF92YWx1ZSwgdW5zaWduZWQgbG9uZyAqbmV3X3ZhbHVlKQor
eworCXN0cnVjdCBrdm1faW50cm9zcGVjdGlvbiAqa3ZtaTsKKwlib29sIHJldCA9IHRydWU7CisK
KwlpZiAob2xkX3ZhbHVlID09ICpuZXdfdmFsdWUpCisJCXJldHVybiB0cnVlOworCisJa3ZtaSA9
IGt2bWlfZ2V0KHZjcHUtPmt2bSk7CisJaWYgKCFrdm1pKQorCQlyZXR1cm4gdHJ1ZTsKKworCWlm
IChpc192Y3B1X2V2ZW50X2VuYWJsZWQodmNwdSwgS1ZNSV9WQ1BVX0VWRU5UX0NSKSkKKwkJcmV0
ID0gX19rdm1pX2NyX2V2ZW50KHZjcHUsIGNyLCBvbGRfdmFsdWUsIG5ld192YWx1ZSk7CisKKwlr
dm1pX3B1dCh2Y3B1LT5rdm0pOworCisJcmV0dXJuIHJldDsKK30KKworYm9vbCBrdm1pX2NyM19p
bnRlcmNlcHRlZChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUpCit7CisJc3RydWN0IGt2bV9pbnRyb3Nw
ZWN0aW9uICprdm1pOworCWJvb2wgcmV0OworCisJa3ZtaSA9IGt2bWlfZ2V0KHZjcHUtPmt2bSk7
CisJaWYgKCFrdm1pKQorCQlyZXR1cm4gZmFsc2U7CisKKwlyZXQgPSB0ZXN0X2JpdCgzLCBWQ1BV
SSh2Y3B1KS0+YXJjaC5jcl9tYXNrKTsKKworCWt2bWlfcHV0KHZjcHUtPmt2bSk7CisKKwlyZXR1
cm4gcmV0OworfQorRVhQT1JUX1NZTUJPTChrdm1pX2NyM19pbnRlcmNlcHRlZCk7CmRpZmYgLS1n
aXQgYS9hcmNoL3g4Ni9rdm0va3ZtaS5oIGIvYXJjaC94ODYva3ZtL2t2bWkuaAppbmRleCA0ZWVi
MGM5MDAwODMuLjZmNGFhZWJiNjdmOSAxMDA2NDQKLS0tIGEvYXJjaC94ODYva3ZtL2t2bWkuaAor
KysgYi9hcmNoL3g4Ni9rdm0va3ZtaS5oCkBAIC03LDUgKzcsOSBAQCBpbnQga3ZtaV9hcmNoX2Nt
ZF92Y3B1X2dldF9yZWdpc3RlcnMoc3RydWN0IGt2bV92Y3B1ICp2Y3B1LAogCQkJCXN0cnVjdCBr
dm1pX3ZjcHVfZ2V0X3JlZ2lzdGVyc19yZXBseSAqcnBsKTsKIHZvaWQga3ZtaV9hcmNoX2NtZF92
Y3B1X3NldF9yZWdpc3RlcnMoc3RydWN0IGt2bV92Y3B1ICp2Y3B1LAogCQkJCSAgICAgIGNvbnN0
IHN0cnVjdCBrdm1fcmVncyAqcmVncyk7CitpbnQga3ZtaV9hcmNoX2NtZF92Y3B1X2NvbnRyb2xf
Y3Ioc3RydWN0IGt2bV92Y3B1ICp2Y3B1LCBpbnQgY3IsIGJvb2wgZW5hYmxlKTsKKwordTMyIGt2
bWlfbXNnX3NlbmRfY3Ioc3RydWN0IGt2bV92Y3B1ICp2Y3B1LCB1MzIgY3IsIHU2NCBvbGRfdmFs
dWUsCisJCSAgICAgdTY0IG5ld192YWx1ZSwgdTY0ICpyZXRfdmFsdWUpOwogCiAjZW5kaWYKZGlm
ZiAtLWdpdCBhL2FyY2gveDg2L2t2bS9rdm1pX21zZy5jIGIvYXJjaC94ODYva3ZtL2t2bWlfbXNn
LmMKaW5kZXggYzJmY2ZiYTlmMzE1Li43YWJiZTYwMGYyZDYgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2
L2t2bS9rdm1pX21zZy5jCisrKyBiL2FyY2gveDg2L2t2bS9rdm1pX21zZy5jCkBAIC0xMzUsNyAr
MTM1LDI2IEBAIHN0YXRpYyBpbnQgaGFuZGxlX3ZjcHVfZ2V0X2NwdWlkKGNvbnN0IHN0cnVjdCBr
dm1pX3ZjcHVfbXNnX2pvYiAqam9iLAogCXJldHVybiBrdm1pX21zZ192Y3B1X3JlcGx5KGpvYiwg
bXNnLCBlYywgJnJwbCwgc2l6ZW9mKHJwbCkpOwogfQogCitzdGF0aWMgaW50IGhhbmRsZV92Y3B1
X2NvbnRyb2xfY3IoY29uc3Qgc3RydWN0IGt2bWlfdmNwdV9tc2dfam9iICpqb2IsCisJCQkJICBj
b25zdCBzdHJ1Y3Qga3ZtaV9tc2dfaGRyICptc2csCisJCQkJICBjb25zdCB2b2lkICpfcmVxKQor
eworCWNvbnN0IHN0cnVjdCBrdm1pX3ZjcHVfY29udHJvbF9jciAqcmVxID0gX3JlcTsKKwlpbnQg
ZWM7CisKKwlpZiAocmVxLT5wYWRkaW5nMSB8fCByZXEtPnBhZGRpbmcyIHx8IHJlcS0+ZW5hYmxl
ID4gMSkKKwkJZWMgPSAtS1ZNX0VJTlZBTDsKKwllbHNlIGlmIChyZXEtPmNyICE9IDAgJiYgcmVx
LT5jciAhPSAzICYmIHJlcS0+Y3IgIT0gNCkKKwkJZWMgPSAtS1ZNX0VJTlZBTDsKKwllbHNlCisJ
CWVjID0ga3ZtaV9hcmNoX2NtZF92Y3B1X2NvbnRyb2xfY3Ioam9iLT52Y3B1LCByZXEtPmNyLAor
CQkJCQkJICAgcmVxLT5lbmFibGUgPT0gMSk7CisKKwlyZXR1cm4ga3ZtaV9tc2dfdmNwdV9yZXBs
eShqb2IsIG1zZywgZWMsIE5VTEwsIDApOworfQorCiBzdGF0aWMga3ZtaV92Y3B1X21zZ19qb2Jf
ZmN0IGNvbnN0IG1zZ192Y3B1W10gPSB7CisJW0tWTUlfVkNQVV9DT05UUk9MX0NSXSAgICA9IGhh
bmRsZV92Y3B1X2NvbnRyb2xfY3IsCiAJW0tWTUlfVkNQVV9HRVRfQ1BVSURdICAgICA9IGhhbmRs
ZV92Y3B1X2dldF9jcHVpZCwKIAlbS1ZNSV9WQ1BVX0dFVF9JTkZPXSAgICAgID0gaGFuZGxlX3Zj
cHVfZ2V0X2luZm8sCiAJW0tWTUlfVkNQVV9HRVRfUkVHSVNURVJTXSA9IGhhbmRsZV92Y3B1X2dl
dF9yZWdpc3RlcnMsCkBAIC0xNDYsMyArMTY1LDI4IEBAIGt2bWlfdmNwdV9tc2dfam9iX2ZjdCBr
dm1pX2FyY2hfdmNwdV9tc2dfaGFuZGxlcih1MTYgaWQpCiB7CiAJcmV0dXJuIGlkIDwgQVJSQVlf
U0laRShtc2dfdmNwdSkgPyBtc2dfdmNwdVtpZF0gOiBOVUxMOwogfQorCit1MzIga3ZtaV9tc2df
c2VuZF9jcihzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsIHUzMiBjciwgdTY0IG9sZF92YWx1ZSwKKwkJ
ICAgICB1NjQgbmV3X3ZhbHVlLCB1NjQgKnJldF92YWx1ZSkKK3sKKwlzdHJ1Y3Qga3ZtaV92Y3B1
X2V2ZW50X2NyIGU7CisJc3RydWN0IGt2bWlfdmNwdV9ldmVudF9jcl9yZXBseSByOworCXUzMiBh
Y3Rpb247CisJaW50IGVycjsKKworCW1lbXNldCgmZSwgMCwgc2l6ZW9mKGUpKTsKKwllLmNyID0g
Y3I7CisJZS5vbGRfdmFsdWUgPSBvbGRfdmFsdWU7CisJZS5uZXdfdmFsdWUgPSBuZXdfdmFsdWU7
CisKKwllcnIgPSBrdm1pX3NlbmRfdmNwdV9ldmVudCh2Y3B1LCBLVk1JX1ZDUFVfRVZFTlRfQ1Is
ICZlLCBzaXplb2YoZSksCisJCQkJICAgJnIsIHNpemVvZihyKSwgJmFjdGlvbik7CisJaWYgKGVy
cikgeworCQlhY3Rpb24gPSBLVk1JX0VWRU5UX0FDVElPTl9DT05USU5VRTsKKwkJKnJldF92YWx1
ZSA9IG5ld192YWx1ZTsKKwl9IGVsc2UgeworCQkqcmV0X3ZhbHVlID0gci5uZXdfdmFsOworCX0K
KworCXJldHVybiBhY3Rpb247Cit9CmRpZmYgLS1naXQgYS9hcmNoL3g4Ni9rdm0vdm14L3ZteC5j
IGIvYXJjaC94ODYva3ZtL3ZteC92bXguYwppbmRleCA5YmZhMmU5ZjgxNjEuLjcyM2U3ODUyOTE0
NiAxMDA2NDQKLS0tIGEvYXJjaC94ODYva3ZtL3ZteC92bXguYworKysgYi9hcmNoL3g4Ni9rdm0v
dm14L3ZteC5jCkBAIC01MDYyLDcgKzUwNjIsOCBAQCBzdGF0aWMgaW50IGhhbmRsZV9jcihzdHJ1
Y3Qga3ZtX3ZjcHUgKnZjcHUpCiAJCQllcnIgPSBoYW5kbGVfc2V0X2NyMCh2Y3B1LCB2YWwpOwog
CQkJcmV0dXJuIGt2bV9jb21wbGV0ZV9pbnNuX2dwKHZjcHUsIGVycik7CiAJCWNhc2UgMzoKLQkJ
CVdBUk5fT05fT05DRShlbmFibGVfdW5yZXN0cmljdGVkX2d1ZXN0KTsKKwkJCVdBUk5fT05fT05D
RShlbmFibGVfdW5yZXN0cmljdGVkX2d1ZXN0ICYmCisJCQkJICAgICAha3ZtaV9jcjNfaW50ZXJj
ZXB0ZWQodmNwdSkpOwogCQkJZXJyID0ga3ZtX3NldF9jcjModmNwdSwgdmFsKTsKIAkJCXJldHVy
biBrdm1fY29tcGxldGVfaW5zbl9ncCh2Y3B1LCBlcnIpOwogCQljYXNlIDQ6CkBAIC01MDk1LDcg
KzUwOTYsOCBAQCBzdGF0aWMgaW50IGhhbmRsZV9jcihzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUpCiAJ
Y2FzZSAxOiAvKm1vdiBmcm9tIGNyKi8KIAkJc3dpdGNoIChjcikgewogCQljYXNlIDM6Ci0JCQlX
QVJOX09OX09OQ0UoZW5hYmxlX3VucmVzdHJpY3RlZF9ndWVzdCk7CisJCQlXQVJOX09OX09OQ0Uo
ZW5hYmxlX3VucmVzdHJpY3RlZF9ndWVzdCAmJgorCQkJCSAgICAgIWt2bWlfY3IzX2ludGVyY2Vw
dGVkKHZjcHUpKTsKIAkJCXZhbCA9IGt2bV9yZWFkX2NyMyh2Y3B1KTsKIAkJCWt2bV9yZWdpc3Rl
cl93cml0ZSh2Y3B1LCByZWcsIHZhbCk7CiAJCQl0cmFjZV9rdm1fY3JfcmVhZChjciwgdmFsKTsK
ZGlmZiAtLWdpdCBhL2FyY2gveDg2L2t2bS94ODYuYyBiL2FyY2gveDg2L2t2bS94ODYuYwppbmRl
eCBhMDEyYjA0MGUzZDEuLjkyMDNkZTcyYjczZSAxMDA2NDQKLS0tIGEvYXJjaC94ODYva3ZtL3g4
Ni5jCisrKyBiL2FyY2gveDg2L2t2bS94ODYuYwpAQCAtODQ2LDYgKzg0Niw5IEBAIGludCBrdm1f
c2V0X2NyMChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsIHVuc2lnbmVkIGxvbmcgY3IwKQogCWlmICgh
KGNyMCAmIFg4Nl9DUjBfUEcpICYmIGt2bV9yZWFkX2NyNF9iaXRzKHZjcHUsIFg4Nl9DUjRfUENJ
REUpKQogCQlyZXR1cm4gMTsKIAorCWlmICgha3ZtaV9jcl9ldmVudCh2Y3B1LCAwLCBvbGRfY3Iw
LCAmY3IwKSkKKwkJcmV0dXJuIDE7CisKIAlrdm1feDg2X29wcy5zZXRfY3IwKHZjcHUsIGNyMCk7
CiAKIAlpZiAoKGNyMCBeIG9sZF9jcjApICYgWDg2X0NSMF9QRykgewpAQCAtMTAwNyw2ICsxMDEw
LDkgQEAgaW50IGt2bV9zZXRfY3I0KHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwgdW5zaWduZWQgbG9u
ZyBjcjQpCiAJCQlyZXR1cm4gMTsKIAl9CiAKKwlpZiAoIWt2bWlfY3JfZXZlbnQodmNwdSwgNCwg
b2xkX2NyNCwgJmNyNCkpCisJCXJldHVybiAxOworCiAJa3ZtX3g4Nl9vcHMuc2V0X2NyNCh2Y3B1
LCBjcjQpOwogCiAJaWYgKCgoY3I0IF4gb2xkX2NyNCkgJiBtbXVfcm9sZV9iaXRzKSB8fApAQCAt
MTAxOSw2ICsxMDI1LDcgQEAgRVhQT1JUX1NZTUJPTF9HUEwoa3ZtX3NldF9jcjQpOwogCiBpbnQg
a3ZtX3NldF9jcjMoc3RydWN0IGt2bV92Y3B1ICp2Y3B1LCB1bnNpZ25lZCBsb25nIGNyMykKIHsK
Kwl1bnNpZ25lZCBsb25nIG9sZF9jcjMgPSBrdm1fcmVhZF9jcjModmNwdSk7CiAJYm9vbCBza2lw
X3RsYl9mbHVzaCA9IGZhbHNlOwogI2lmZGVmIENPTkZJR19YODZfNjQKIAlib29sIHBjaWRfZW5h
YmxlZCA9IGt2bV9yZWFkX2NyNF9iaXRzKHZjcHUsIFg4Nl9DUjRfUENJREUpOwpAQCAtMTAyOSw3
ICsxMDM2LDcgQEAgaW50IGt2bV9zZXRfY3IzKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwgdW5zaWdu
ZWQgbG9uZyBjcjMpCiAJfQogI2VuZGlmCiAKLQlpZiAoY3IzID09IGt2bV9yZWFkX2NyMyh2Y3B1
KSAmJiAhcGRwdHJzX2NoYW5nZWQodmNwdSkpIHsKKwlpZiAoY3IzID09IG9sZF9jcjMgJiYgIXBk
cHRyc19jaGFuZ2VkKHZjcHUpKSB7CiAJCWlmICghc2tpcF90bGJfZmx1c2gpIHsKIAkJCWt2bV9t
bXVfc3luY19yb290cyh2Y3B1KTsKIAkJCWt2bV9tYWtlX3JlcXVlc3QoS1ZNX1JFUV9UTEJfRkxV
U0hfQ1VSUkVOVCwgdmNwdSk7CkBAIC0xMDQ0LDYgKzEwNTEsOSBAQCBpbnQga3ZtX3NldF9jcjMo
c3RydWN0IGt2bV92Y3B1ICp2Y3B1LCB1bnNpZ25lZCBsb25nIGNyMykKIAkJICFsb2FkX3BkcHRy
cyh2Y3B1LCB2Y3B1LT5hcmNoLndhbGtfbW11LCBjcjMpKQogCQlyZXR1cm4gMTsKIAorCWlmICgh
a3ZtaV9jcl9ldmVudCh2Y3B1LCAzLCBvbGRfY3IzLCAmY3IzKSkKKwkJcmV0dXJuIDE7CisKIAlr
dm1fbW11X25ld19wZ2QodmNwdSwgY3IzLCBza2lwX3RsYl9mbHVzaCwgc2tpcF90bGJfZmx1c2gp
OwogCXZjcHUtPmFyY2guY3IzID0gY3IzOwogCWt2bV9yZWdpc3Rlcl9tYXJrX2F2YWlsYWJsZSh2
Y3B1LCBWQ1BVX0VYUkVHX0NSMyk7CmRpZmYgLS1naXQgYS9pbmNsdWRlL3VhcGkvbGludXgva3Zt
aS5oIGIvaW5jbHVkZS91YXBpL2xpbnV4L2t2bWkuaAppbmRleCA5ZTI4OTYxYTgzODcuLmMxZDhj
ZjAyMDE4YiAxMDA2NDQKLS0tIGEvaW5jbHVkZS91YXBpL2xpbnV4L2t2bWkuaAorKysgYi9pbmNs
dWRlL3VhcGkvbGludXgva3ZtaS5oCkBAIC00MSw2ICs0MSw3IEBAIGVudW0gewogCUtWTUlfVkNQ
VV9HRVRfUkVHSVNURVJTICA9IEtWTUlfVkNQVV9NRVNTQUdFX0lEKDMpLAogCUtWTUlfVkNQVV9T
RVRfUkVHSVNURVJTICA9IEtWTUlfVkNQVV9NRVNTQUdFX0lEKDQpLAogCUtWTUlfVkNQVV9HRVRf
Q1BVSUQgICAgICA9IEtWTUlfVkNQVV9NRVNTQUdFX0lEKDUpLAorCUtWTUlfVkNQVV9DT05UUk9M
X0NSICAgICA9IEtWTUlfVkNQVV9NRVNTQUdFX0lEKDYpLAogCiAJS1ZNSV9ORVhUX1ZDUFVfTUVT
U0FHRQogfTsKQEAgLTU4LDYgKzU5LDcgQEAgZW51bSB7CiAJS1ZNSV9WQ1BVX0VWRU5UX1BBVVNF
ICAgICAgPSBLVk1JX1ZDUFVfRVZFTlRfSUQoMCksCiAJS1ZNSV9WQ1BVX0VWRU5UX0hZUEVSQ0FM
TCAgPSBLVk1JX1ZDUFVfRVZFTlRfSUQoMSksCiAJS1ZNSV9WQ1BVX0VWRU5UX0JSRUFLUE9JTlQg
PSBLVk1JX1ZDUFVfRVZFTlRfSUQoMiksCisJS1ZNSV9WQ1BVX0VWRU5UX0NSICAgICAgICAgPSBL
Vk1JX1ZDUFVfRVZFTlRfSUQoMyksCiAKIAlLVk1JX05FWFRfVkNQVV9FVkVOVAogfTsKZGlmZiAt
LWdpdCBhL3Rvb2xzL3Rlc3Rpbmcvc2VsZnRlc3RzL2t2bS94ODZfNjQva3ZtaV90ZXN0LmMgYi90
b29scy90ZXN0aW5nL3NlbGZ0ZXN0cy9rdm0veDg2XzY0L2t2bWlfdGVzdC5jCmluZGV4IGY5NWYy
NzcxYTEyMy4uNmExMTAzZWFiNzdhIDEwMDY0NAotLS0gYS90b29scy90ZXN0aW5nL3NlbGZ0ZXN0
cy9rdm0veDg2XzY0L2t2bWlfdGVzdC5jCisrKyBiL3Rvb2xzL3Rlc3Rpbmcvc2VsZnRlc3RzL2t2
bS94ODZfNjQva3ZtaV90ZXN0LmMKQEAgLTU0LDYgKzU0LDcgQEAgc3RydWN0IHZjcHVfd29ya2Vy
X2RhdGEgewogZW51bSB7CiAJR1VFU1RfVEVTVF9OT09QID0gMCwKIAlHVUVTVF9URVNUX0JQLAor
CUdVRVNUX1RFU1RfQ1IsCiAJR1VFU1RfVEVTVF9IWVBFUkNBTEwsCiB9OwogCkBAIC03Nyw2ICs3
OCwxMSBAQCBzdGF0aWMgdm9pZCBndWVzdF9icF90ZXN0KHZvaWQpCiAJYXNtIHZvbGF0aWxlKCJp
bnQzIik7CiB9CiAKK3N0YXRpYyB2b2lkIGd1ZXN0X2NyX3Rlc3Qodm9pZCkKK3sKKwlzZXRfY3I0
KGdldF9jcjQoKSB8IFg4Nl9DUjRfT1NYU0FWRSk7Cit9CisKIHN0YXRpYyB2b2lkIGd1ZXN0X2h5
cGVyY2FsbF90ZXN0KHZvaWQpCiB7CiAJYXNtIHZvbGF0aWxlKCJtb3YgJDM0LCAlcmF4Iik7CkBA
IC05NCw2ICsxMDAsOSBAQCBzdGF0aWMgdm9pZCBndWVzdF9jb2RlKHZvaWQpCiAJCWNhc2UgR1VF
U1RfVEVTVF9CUDoKIAkJCWd1ZXN0X2JwX3Rlc3QoKTsKIAkJCWJyZWFrOworCQljYXNlIEdVRVNU
X1RFU1RfQ1I6CisJCQlndWVzdF9jcl90ZXN0KCk7CisJCQlicmVhazsKIAkJY2FzZSBHVUVTVF9U
RVNUX0hZUEVSQ0FMTDoKIAkJCWd1ZXN0X2h5cGVyY2FsbF90ZXN0KCk7CiAJCQlicmVhazsKQEAg
LTExMDAsNiArMTEwOSw5NiBAQCBzdGF0aWMgdm9pZCB0ZXN0X2NtZF92bV9jb250cm9sX2NsZWFu
dXAoc3RydWN0IGt2bV92bSAqdm0pCiAJY21kX3ZtX2NvbnRyb2xfY2xlYW51cChkaXNhYmxlLCAw
KTsKIH0KIAorc3RhdGljIHZvaWQgY21kX3ZjcHVfY29udHJvbF9jcihzdHJ1Y3Qga3ZtX3ZtICp2
bSwgX191OCBjciwgX191OCBlbmFibGUsCisJCQkJaW50IGV4cGVjdGVkX2VycikKK3sKKwlzdHJ1
Y3QgeworCQlzdHJ1Y3Qga3ZtaV9tc2dfaGRyIGhkcjsKKwkJc3RydWN0IGt2bWlfdmNwdV9oZHIg
dmNwdV9oZHI7CisJCXN0cnVjdCBrdm1pX3ZjcHVfY29udHJvbF9jciBjbWQ7CisJfSByZXEgPSB7
fTsKKworCXJlcS5jbWQuY3IgPSBjcjsKKwlyZXEuY21kLmVuYWJsZSA9IGVuYWJsZTsKKworCXRl
c3RfdmNwdTBfY29tbWFuZCh2bSwgS1ZNSV9WQ1BVX0NPTlRST0xfQ1IsICZyZXEuaGRyLCBzaXpl
b2YocmVxKSwKKwkJCSAgIE5VTEwsIDAsIGV4cGVjdGVkX2Vycik7Cit9CisKK3N0YXRpYyB2b2lk
IGVuYWJsZV9jcl9ldmVudHMoc3RydWN0IGt2bV92bSAqdm0sIF9fdTggY3IpCit7CisJZW5hYmxl
X3ZjcHVfZXZlbnQodm0sIEtWTUlfVkNQVV9FVkVOVF9DUik7CisKKwljbWRfdmNwdV9jb250cm9s
X2NyKHZtLCBjciwgMSwgMCk7Cit9CisKK3N0YXRpYyB2b2lkIGRpc2FibGVfY3JfZXZlbnRzKHN0
cnVjdCBrdm1fdm0gKnZtLCBfX3U4IGNyKQoreworCWNtZF92Y3B1X2NvbnRyb2xfY3Iodm0sIGNy
LCAwLCAwKTsKKworCWRpc2FibGVfdmNwdV9ldmVudCh2bSwgS1ZNSV9WQ1BVX0VWRU5UX0NSKTsK
K30KKworc3RhdGljIHZvaWQgdGVzdF9pbnZhbGlkX3ZjcHVfY29udHJvbF9jcihzdHJ1Y3Qga3Zt
X3ZtICp2bSkKK3sKKwlfX3U4IGVuYWJsZSA9IDEsIGVuYWJsZV9pbnZhbCA9IDI7CisJX191OCBj
cl9pbnZhbCA9IDk5LCBjciA9IDA7CisKKwljbWRfdmNwdV9jb250cm9sX2NyKHZtLCBjciwgICAg
ICAgZW5hYmxlX2ludmFsLCAtS1ZNX0VJTlZBTCk7CisJY21kX3ZjcHVfY29udHJvbF9jcih2bSwg
Y3JfaW52YWwsIGVuYWJsZSwgICAgICAgLUtWTV9FSU5WQUwpOworfQorCitzdGF0aWMgdm9pZCB0
ZXN0X2NtZF92Y3B1X2NvbnRyb2xfY3Ioc3RydWN0IGt2bV92bSAqdm0pCit7CisJc3RydWN0IHZj
cHVfd29ya2VyX2RhdGEgZGF0YSA9IHsKKwkJLnZtID0gdm0sCisJCS52Y3B1X2lkID0gVkNQVV9J
RCwKKwkJLnRlc3RfaWQgPSBHVUVTVF9URVNUX0NSLAorCX07CisJc3RydWN0IGt2bWlfbXNnX2hk
ciBoZHI7CisJc3RydWN0IHsKKwkJc3RydWN0IHZjcHVfZXZlbnQgdmNwdV9ldjsKKwkJc3RydWN0
IGt2bWlfdmNwdV9ldmVudF9jciBjcjsKKwl9IGV2OworCXN0cnVjdCB7CisJCXN0cnVjdCB2Y3B1
X3JlcGx5IGNvbW1vbjsKKwkJc3RydWN0IGt2bWlfdmNwdV9ldmVudF9jcl9yZXBseSBjcjsKKwl9
IHJwbCA9IHt9OworCV9fdTE2IGV2ZW50X2lkID0gS1ZNSV9WQ1BVX0VWRU5UX0NSOworCV9fdTgg
Y3Jfbm8gPSA0OworCXN0cnVjdCBrdm1fc3JlZ3Mgc3JlZ3M7CisJcHRocmVhZF90IHZjcHVfdGhy
ZWFkOworCisJZW5hYmxlX2NyX2V2ZW50cyh2bSwgY3Jfbm8pOworCisJdmNwdV90aHJlYWQgPSBz
dGFydF92Y3B1X3dvcmtlcigmZGF0YSk7CisKKwlyZWNlaXZlX3ZjcHVfZXZlbnQoJmhkciwgJmV2
LnZjcHVfZXYsIHNpemVvZihldiksIGV2ZW50X2lkKTsKKworCXByX2RlYnVnKCJDUiV1LCBvbGQg
MHglbGx4LCBuZXcgMHglbGx4XG4iLAorCQkgZXYuY3IuY3IsIGV2LmNyLm9sZF92YWx1ZSwgZXYu
Y3IubmV3X3ZhbHVlKTsKKworCVRFU1RfQVNTRVJUKGV2LmNyLmNyID09IGNyX25vLAorCQkiVW5l
eHBlY3RlZCBDUiBldmVudCwgcmVjZWl2ZWQgQ1IldSwgZXhwZWN0ZWQgQ1IldSIsCisJCWV2LmNy
LmNyLCBjcl9ubyk7CisKKwlycGwuY3IubmV3X3ZhbCA9IGV2LmNyLm9sZF92YWx1ZTsKKworCXJl
cGx5X3RvX2V2ZW50KCZoZHIsICZldi52Y3B1X2V2LCBLVk1JX0VWRU5UX0FDVElPTl9DT05USU5V
RSwKKwkJICAgICAgICZycGwuY29tbW9uLCBzaXplb2YocnBsKSk7CisKKwl3YWl0X3ZjcHVfd29y
a2VyKHZjcHVfdGhyZWFkKTsKKworCWRpc2FibGVfY3JfZXZlbnRzKHZtLCBjcl9ubyk7CisKKwl2
Y3B1X3NyZWdzX2dldCh2bSwgVkNQVV9JRCwgJnNyZWdzKTsKKwlURVNUX0FTU0VSVChzcmVncy5j
cjQgPT0gZXYuY3Iub2xkX3ZhbHVlLAorCQkiRmFpbGVkIHRvIGJsb2NrIENSNCB1cGRhdGUsIENS
NCAweCVsbHgsIGV4cGVjdGVkIDB4JWxseCIsCisJCXNyZWdzLmNyNCwgZXYuY3Iub2xkX3ZhbHVl
KTsKKworCXRlc3RfaW52YWxpZF92Y3B1X2NvbnRyb2xfY3Iodm0pOworfQorCiBzdGF0aWMgdm9p
ZCB0ZXN0X2ludHJvc3BlY3Rpb24oc3RydWN0IGt2bV92bSAqdm0pCiB7CiAJc3JhbmRvbSh0aW1l
KDApKTsKQEAgLTExMjMsNiArMTIyMiw3IEBAIHN0YXRpYyB2b2lkIHRlc3RfaW50cm9zcGVjdGlv
bihzdHJ1Y3Qga3ZtX3ZtICp2bSkKIAl0ZXN0X2V2ZW50X2h5cGVyY2FsbCh2bSk7CiAJdGVzdF9l
dmVudF9icmVha3BvaW50KHZtKTsKIAl0ZXN0X2NtZF92bV9jb250cm9sX2NsZWFudXAodm0pOwor
CXRlc3RfY21kX3ZjcHVfY29udHJvbF9jcih2bSk7CiAKIAl1bmhvb2tfaW50cm9zcGVjdGlvbih2
bSk7CiB9CmRpZmYgLS1naXQgYS92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWkuYyBiL3ZpcnQv
a3ZtL2ludHJvc3BlY3Rpb24va3ZtaS5jCmluZGV4IDZkNDg2YmE5ZWZmNy4uMjc5OTBmZjhkMTUz
IDEwMDY0NAotLS0gYS92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWkuYworKysgYi92aXJ0L2t2
bS9pbnRyb3NwZWN0aW9uL2t2bWkuYwpAQCAtMzY5LDcgKzM2OSw3IEBAIHN0cnVjdCBrdm1faW50
cm9zcGVjdGlvbiAqIF9fbXVzdF9jaGVjayBrdm1pX2dldChzdHJ1Y3Qga3ZtICprdm0pCiAJcmV0
dXJuIE5VTEw7CiB9CiAKLXN0YXRpYyB2b2lkIGt2bWlfcHV0KHN0cnVjdCBrdm0gKmt2bSkKK3Zv
aWQga3ZtaV9wdXQoc3RydWN0IGt2bSAqa3ZtKQogewogCWlmIChyZWZjb3VudF9kZWNfYW5kX3Rl
c3QoJmt2bS0+a3ZtaV9yZWYpKQogCQljb21wbGV0ZSgma3ZtLT5rdm1pX2NvbXBsZXRlKTsKZGlm
ZiAtLWdpdCBhL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9pbnQuaCBiL3ZpcnQva3ZtL2lu
dHJvc3BlY3Rpb24va3ZtaV9pbnQuaAppbmRleCA4YTI2NmIwNTgxNTUuLmIxODc3YTc3MGZjYiAx
MDA2NDQKLS0tIGEvdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pX2ludC5oCisrKyBiL3ZpcnQv
a3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9pbnQuaApAQCAtNjksNiArNjksOCBAQCBpbnQga3ZtaV9h
ZGRfam9iKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwKIHZvaWQga3ZtaV9ydW5fam9icyhzdHJ1Y3Qg
a3ZtX3ZjcHUgKnZjcHUpOwogdm9pZCBrdm1pX2hhbmRsZV9jb21tb25fZXZlbnRfYWN0aW9ucyhz
dHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsIHUzMiBhY3Rpb24pOwogdm9pZCBrdm1pX2NtZF92bV9jb250
cm9sX2NsZWFudXAoc3RydWN0IGt2bV9pbnRyb3NwZWN0aW9uICprdm1pLCBib29sIGVuYWJsZSk7
CitzdHJ1Y3Qga3ZtX2ludHJvc3BlY3Rpb24gKiBfX211c3RfY2hlY2sga3ZtaV9nZXQoc3RydWN0
IGt2bSAqa3ZtKTsKK3ZvaWQga3ZtaV9wdXQoc3RydWN0IGt2bSAqa3ZtKTsKIGludCBrdm1pX2Nt
ZF92bV9jb250cm9sX2V2ZW50cyhzdHJ1Y3Qga3ZtX2ludHJvc3BlY3Rpb24gKmt2bWksCiAJCQkg
ICAgICAgdTE2IGV2ZW50X2lkLCBib29sIGVuYWJsZSk7CiBpbnQga3ZtaV9jbWRfdmNwdV9jb250
cm9sX2V2ZW50cyhzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsCl9fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fClZpcnR1YWxpemF0aW9uIG1haWxpbmcgbGlzdApWaXJ0
dWFsaXphdGlvbkBsaXN0cy5saW51eC1mb3VuZGF0aW9uLm9yZwpodHRwczovL2xpc3RzLmxpbnV4
Zm91bmRhdGlvbi5vcmcvbWFpbG1hbi9saXN0aW5mby92aXJ0dWFsaXphdGlvbg==
