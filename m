Return-Path: <virtualization-bounces@lists.linux-foundation.org>
X-Original-To: lists.virtualization@lfdr.de
Delivered-To: lists.virtualization@lfdr.de
Received: from whitealder.osuosl.org (smtp1.osuosl.org [140.211.166.138])
	by mail.lfdr.de (Postfix) with ESMTPS id 964E52D1B6B
	for <lists.virtualization@lfdr.de>; Mon,  7 Dec 2020 21:57:21 +0100 (CET)
Received: from localhost (localhost [127.0.0.1])
	by whitealder.osuosl.org (Postfix) with ESMTP id 4D9CE87AF9;
	Mon,  7 Dec 2020 20:57:20 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from whitealder.osuosl.org ([127.0.0.1])
	by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id Fl5Hdqe++sX5; Mon,  7 Dec 2020 20:57:12 +0000 (UTC)
Received: from lists.linuxfoundation.org (lf-lists.osuosl.org [140.211.9.56])
	by whitealder.osuosl.org (Postfix) with ESMTP id C9A0787B62;
	Mon,  7 Dec 2020 20:57:08 +0000 (UTC)
Received: from lf-lists.osuosl.org (localhost [127.0.0.1])
	by lists.linuxfoundation.org (Postfix) with ESMTP id AFAECC163C;
	Mon,  7 Dec 2020 20:57:08 +0000 (UTC)
X-Original-To: virtualization@lists.linux-foundation.org
Delivered-To: virtualization@lists.linuxfoundation.org
Received: from hemlock.osuosl.org (smtp2.osuosl.org [140.211.166.133])
 by lists.linuxfoundation.org (Postfix) with ESMTP id 19BE2C013B
 for <virtualization@lists.linux-foundation.org>;
 Mon,  7 Dec 2020 20:57:02 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by hemlock.osuosl.org (Postfix) with ESMTP id B68E88725D
 for <virtualization@lists.linux-foundation.org>;
 Mon,  7 Dec 2020 20:57:01 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from hemlock.osuosl.org ([127.0.0.1])
 by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id Re3N6mMTdnSq
 for <virtualization@lists.linux-foundation.org>;
 Mon,  7 Dec 2020 20:56:57 +0000 (UTC)
X-Greylist: from auto-whitelisted by SQLgrey-1.7.6
Received: from mx01.bbu.dsd.mx.bitdefender.com
 (mx01.bbu.dsd.mx.bitdefender.com [91.199.104.161])
 by hemlock.osuosl.org (Postfix) with ESMTPS id 82C51872A3
 for <virtualization@lists.linux-foundation.org>;
 Mon,  7 Dec 2020 20:56:56 +0000 (UTC)
Received: from smtp.bitdefender.com (smtp01.buh.bitdefender.com [10.17.80.75])
 by mx01.bbu.dsd.mx.bitdefender.com (Postfix) with ESMTPS id
 A1842305D47B; Mon,  7 Dec 2020 22:46:22 +0200 (EET)
Received: from localhost.localdomain (unknown [91.199.104.27])
 by smtp.bitdefender.com (Postfix) with ESMTPSA id 7D0EB3072784;
 Mon,  7 Dec 2020 22:46:22 +0200 (EET)
From: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>
To: kvm@vger.kernel.org
Subject: [PATCH v11 60/81] KVM: introspection: add KVMI_VM_CONTROL_CLEANUP
Date: Mon,  7 Dec 2020 22:46:01 +0200
Message-Id: <20201207204622.15258-61-alazar@bitdefender.com>
In-Reply-To: <20201207204622.15258-1-alazar@bitdefender.com>
References: <20201207204622.15258-1-alazar@bitdefender.com>
MIME-Version: 1.0
Cc: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>,
 Paolo Bonzini <pbonzini@redhat.com>, virtualization@lists.linux-foundation.org
X-BeenThere: virtualization@lists.linux-foundation.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Linux virtualization <virtualization.lists.linux-foundation.org>
List-Unsubscribe: <https://lists.linuxfoundation.org/mailman/options/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=unsubscribe>
List-Archive: <http://lists.linuxfoundation.org/pipermail/virtualization/>
List-Post: <mailto:virtualization@lists.linux-foundation.org>
List-Help: <mailto:virtualization-request@lists.linux-foundation.org?subject=help>
List-Subscribe: <https://lists.linuxfoundation.org/mailman/listinfo/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: virtualization-bounces@lists.linux-foundation.org
Sender: "Virtualization" <virtualization-bounces@lists.linux-foundation.org>

VGhpcyBjb21tYW5kIHdpbGwgYWxsb3cgbW9yZSBjb250cm9sIG92ZXIgdGhlIGd1ZXN0IHN0YXRl
IG9uCnVuaG9vay4gIEhvd2V2ZXIsIHRoZSBtZW1vcnkgcmVzdHJpY3Rpb25zIChlLmcuIHRob3Nl
IHNldCB3aXRoCktWTUlfVk1fU0VUX1BBR0VfQUNDRVNTKSB3aWxsIGJlIHJlbW92ZWQgb24gdW5o
b29rLgoKU2lnbmVkLW9mZi1ieTogQWRhbGJlcnQgTGF6xINyIDxhbGF6YXJAYml0ZGVmZW5kZXIu
Y29tPgotLS0KIERvY3VtZW50YXRpb24vdmlydC9rdm0va3ZtaS5yc3QgICAgICAgICAgICAgICB8
IDI4ICsrKysrKysrKysrKysrKwogYXJjaC94ODYvaW5jbHVkZS9hc20va3ZtaV9ob3N0LmggICAg
ICAgICAgICAgIHwgIDEgKwogYXJjaC94ODYva3ZtL2t2bWkuYyAgICAgICAgICAgICAgICAgICAg
ICAgICAgIHwgMTcgKysrKystLS0tLQogaW5jbHVkZS9saW51eC9rdm1pX2hvc3QuaCAgICAgICAg
ICAgICAgICAgICAgIHwgIDIgKysKIGluY2x1ZGUvdWFwaS9saW51eC9rdm1pLmggICAgICAgICAg
ICAgICAgICAgICB8IDIyICsrKysrKystLS0tLQogLi4uL3Rlc3Rpbmcvc2VsZnRlc3RzL2t2bS94
ODZfNjQva3ZtaV90ZXN0LmMgIHwgMjQgKysrKysrKysrKysrKwogdmlydC9rdm0vaW50cm9zcGVj
dGlvbi9rdm1pLmMgICAgICAgICAgICAgICAgIHwgMTggKysrKysrKy0tLQogdmlydC9rdm0vaW50
cm9zcGVjdGlvbi9rdm1pX2ludC5oICAgICAgICAgICAgIHwgMTIgKysrKysrLQogdmlydC9rdm0v
aW50cm9zcGVjdGlvbi9rdm1pX21zZy5jICAgICAgICAgICAgIHwgMzQgKysrKysrKysrKysrKyst
LS0tLQogOSBmaWxlcyBjaGFuZ2VkLCAxMjkgaW5zZXJ0aW9ucygrKSwgMjkgZGVsZXRpb25zKC0p
CgpkaWZmIC0tZ2l0IGEvRG9jdW1lbnRhdGlvbi92aXJ0L2t2bS9rdm1pLnJzdCBiL0RvY3VtZW50
YXRpb24vdmlydC9rdm0va3ZtaS5yc3QKaW5kZXggYzg5ZjM4M2U0OGY5Li5mOWMxMGQyN2NlMTQg
MTAwNjQ0Ci0tLSBhL0RvY3VtZW50YXRpb24vdmlydC9rdm0va3ZtaS5yc3QKKysrIGIvRG9jdW1l
bnRhdGlvbi92aXJ0L2t2bS9rdm1pLnJzdApAQCAtNjczLDYgKzY3MywzNCBAQCBSZXR1cm5zIGEg
Q1BVSUQgbGVhZiAoYXMgc2VlbiBieSB0aGUgZ3Vlc3QgT1MpLgogKiAtS1ZNX0VBR0FJTiAtIHRo
ZSBzZWxlY3RlZCB2Q1BVIGNhbid0IGJlIGludHJvc3BlY3RlZCB5ZXQKICogLUtWTV9FTk9FTlQg
LSB0aGUgc2VsZWN0ZWQgbGVhZiBpcyBub3QgcHJlc2VudCBvciBpcyBpbnZhbGlkCiAKKzE0LiBL
Vk1JX1ZNX0NPTlRST0xfQ0xFQU5VUAorLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCis6QXJj
aGl0ZWN0dXJlczogYWxsCis6VmVyc2lvbnM6ID49IDEKKzpQYXJhbWV0ZXJzOgorCis6OgorCisJ
c3RydWN0IGt2bWlfdm1fY29udHJvbF9jbGVhbnVwIHsKKwkJX191OCBlbmFibGU7CisJCV9fdTgg
cGFkZGluZ1s3XTsKKwl9OworCis6UmV0dXJuczoKKworOjoKKworCXN0cnVjdCBrdm1pX2Vycm9y
X2NvZGUKKworRW5hYmxlcy9kaXNhYmxlcyB0aGUgYXV0b21hdGljIGNsZWFudXAgb2YgdGhlIGNo
YW5nZXMgbWFkZSBieQordGhlIGludHJvc3BlY3Rpb24gdG9vbCBhdCB0aGUgaHlwZXJ2aXNvciBs
ZXZlbCAoZS5nLiBDUi9NU1IvQlAKK2ludGVyY2VwdGlvbnMpLiBCeSBkZWZhdWx0IGl0IGlzIGVu
YWJsZWQuCisKKzpFcnJvcnM6CisKKyogLUtWTV9FSU5WQUwgLSB0aGUgcGFkZGluZyBpcyBub3Qg
emVybworKiAtS1ZNX0VJTlZBTCAtIGBgZW5hYmxlYGAgaXMgbm90IDEgb3IgMAorCiBFdmVudHMK
ID09PT09PQogCmRpZmYgLS1naXQgYS9hcmNoL3g4Ni9pbmNsdWRlL2FzbS9rdm1pX2hvc3QuaCBi
L2FyY2gveDg2L2luY2x1ZGUvYXNtL2t2bWlfaG9zdC5oCmluZGV4IGUwMDg2NjJmOTFhNS4uMTYx
ZDFhZTVhN2NmIDEwMDY0NAotLS0gYS9hcmNoL3g4Ni9pbmNsdWRlL2FzbS9rdm1pX2hvc3QuaAor
KysgYi9hcmNoL3g4Ni9pbmNsdWRlL2FzbS9rdm1pX2hvc3QuaApAQCAtMTEsNiArMTEsNyBAQCBz
dHJ1Y3Qga3ZtaV9tb25pdG9yX2ludGVyY2VwdGlvbiB7CiB9OwogCiBzdHJ1Y3Qga3ZtaV9pbnRl
cmNlcHRpb24geworCWJvb2wgY2xlYW51cDsKIAlib29sIHJlc3RvcmVfaW50ZXJjZXB0aW9uOwog
CXN0cnVjdCBrdm1pX21vbml0b3JfaW50ZXJjZXB0aW9uIGJyZWFrcG9pbnQ7CiB9OwpkaWZmIC0t
Z2l0IGEvYXJjaC94ODYva3ZtL2t2bWkuYyBiL2FyY2gveDg2L2t2bS9rdm1pLmMKaW5kZXggM2Zk
NzMwODcyNzZlLi5lN2E0ZWY0OGVkNjEgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L2t2bS9rdm1pLmMK
KysrIGIvYXJjaC94ODYva3ZtL2t2bWkuYwpAQCAtMjczLDEzICsyNzMsMTEgQEAgYm9vbCBrdm1p
X2FyY2hfY2xlYW5fdXBfaW50ZXJjZXB0aW9uKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSkKIHsKIAlz
dHJ1Y3Qga3ZtaV9pbnRlcmNlcHRpb24gKmFyY2hfdmNwdWkgPSB2Y3B1LT5hcmNoLmt2bWk7CiAK
LQlpZiAoIWFyY2hfdmNwdWkpCisJaWYgKCFhcmNoX3ZjcHVpIHx8ICFhcmNoX3ZjcHVpLT5jbGVh
bnVwKQogCQlyZXR1cm4gZmFsc2U7CiAKLQlpZiAoIWFyY2hfdmNwdWktPnJlc3RvcmVfaW50ZXJj
ZXB0aW9uKQotCQlyZXR1cm4gZmFsc2U7Ci0KLQlrdm1pX2FyY2hfcmVzdG9yZV9pbnRlcmNlcHRp
b24odmNwdSk7CisJaWYgKGFyY2hfdmNwdWktPnJlc3RvcmVfaW50ZXJjZXB0aW9uKQorCQlrdm1p
X2FyY2hfcmVzdG9yZV9pbnRlcmNlcHRpb24odmNwdSk7CiAKIAlyZXR1cm4gdHJ1ZTsKIH0KQEAg
LTMxMiwxMCArMzEwLDEzIEBAIGJvb2wga3ZtaV9hcmNoX3ZjcHVfaW50cm9zcGVjdGVkKHN0cnVj
dCBrdm1fdmNwdSAqdmNwdSkKIAlyZXR1cm4gISFSRUFEX09OQ0UodmNwdS0+YXJjaC5rdm1pKTsK
IH0KIAotdm9pZCBrdm1pX2FyY2hfcmVxdWVzdF9pbnRlcmNlcHRpb25fY2xlYW51cChzdHJ1Y3Qg
a3ZtX3ZjcHUgKnZjcHUpCit2b2lkIGt2bWlfYXJjaF9yZXF1ZXN0X2ludGVyY2VwdGlvbl9jbGVh
bnVwKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwKKwkJCQkJICAgIGJvb2wgcmVzdG9yZV9pbnRlcmNl
cHRpb24pCiB7CiAJc3RydWN0IGt2bWlfaW50ZXJjZXB0aW9uICphcmNoX3ZjcHVpID0gUkVBRF9P
TkNFKHZjcHUtPmFyY2gua3ZtaSk7CiAKLQlpZiAoYXJjaF92Y3B1aSkKLQkJYXJjaF92Y3B1aS0+
cmVzdG9yZV9pbnRlcmNlcHRpb24gPSB0cnVlOworCWlmIChhcmNoX3ZjcHVpKSB7CisJCWFyY2hf
dmNwdWktPnJlc3RvcmVfaW50ZXJjZXB0aW9uID0gcmVzdG9yZV9pbnRlcmNlcHRpb247CisJCWFy
Y2hfdmNwdWktPmNsZWFudXAgPSB0cnVlOworCX0KIH0KZGlmZiAtLWdpdCBhL2luY2x1ZGUvbGlu
dXgva3ZtaV9ob3N0LmggYi9pbmNsdWRlL2xpbnV4L2t2bWlfaG9zdC5oCmluZGV4IDMwYjcyNjk0
NjhkZC4uN2E3MzYwMzA2ODEyIDEwMDY0NAotLS0gYS9pbmNsdWRlL2xpbnV4L2t2bWlfaG9zdC5o
CisrKyBiL2luY2x1ZGUvbGludXgva3ZtaV9ob3N0LmgKQEAgLTUwLDYgKzUwLDggQEAgc3RydWN0
IGt2bV9pbnRyb3NwZWN0aW9uIHsKIAl1bnNpZ25lZCBsb25nICp2bV9ldmVudF9lbmFibGVfbWFz
azsKIAogCWF0b21pY190IGV2X3NlcTsKKworCWJvb2wgcmVzdG9yZV9vbl91bmhvb2s7CiB9Owog
CiBpbnQga3ZtaV92ZXJzaW9uKHZvaWQpOwpkaWZmIC0tZ2l0IGEvaW5jbHVkZS91YXBpL2xpbnV4
L2t2bWkuaCBiL2luY2x1ZGUvdWFwaS9saW51eC9rdm1pLmgKaW5kZXggZWE2NmYzZjgwM2U3Li45
ZTI4OTYxYTgzODcgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvdWFwaS9saW51eC9rdm1pLmgKKysrIGIv
aW5jbHVkZS91YXBpL2xpbnV4L2t2bWkuaApAQCAtMjAsMTQgKzIwLDE1IEBAIGVudW0gewogZW51
bSB7CiAJS1ZNSV9WTV9FVkVOVCA9IEtWTUlfVk1fTUVTU0FHRV9JRCgwKSwKIAotCUtWTUlfR0VU
X1ZFUlNJT04gICAgICAgPSBLVk1JX1ZNX01FU1NBR0VfSUQoMSksCi0JS1ZNSV9WTV9DSEVDS19D
T01NQU5EICA9IEtWTUlfVk1fTUVTU0FHRV9JRCgyKSwKLQlLVk1JX1ZNX0NIRUNLX0VWRU5UICAg
ID0gS1ZNSV9WTV9NRVNTQUdFX0lEKDMpLAotCUtWTUlfVk1fR0VUX0lORk8gICAgICAgPSBLVk1J
X1ZNX01FU1NBR0VfSUQoNCksCi0JS1ZNSV9WTV9DT05UUk9MX0VWRU5UUyA9IEtWTUlfVk1fTUVT
U0FHRV9JRCg1KSwKLQlLVk1JX1ZNX1JFQURfUEhZU0lDQUwgID0gS1ZNSV9WTV9NRVNTQUdFX0lE
KDYpLAotCUtWTUlfVk1fV1JJVEVfUEhZU0lDQUwgPSBLVk1JX1ZNX01FU1NBR0VfSUQoNyksCi0J
S1ZNSV9WTV9QQVVTRV9WQ1BVICAgICA9IEtWTUlfVk1fTUVTU0FHRV9JRCg4KSwKKwlLVk1JX0dF
VF9WRVJTSU9OICAgICAgICA9IEtWTUlfVk1fTUVTU0FHRV9JRCgxKSwKKwlLVk1JX1ZNX0NIRUNL
X0NPTU1BTkQgICA9IEtWTUlfVk1fTUVTU0FHRV9JRCgyKSwKKwlLVk1JX1ZNX0NIRUNLX0VWRU5U
ICAgICA9IEtWTUlfVk1fTUVTU0FHRV9JRCgzKSwKKwlLVk1JX1ZNX0dFVF9JTkZPICAgICAgICA9
IEtWTUlfVk1fTUVTU0FHRV9JRCg0KSwKKwlLVk1JX1ZNX0NPTlRST0xfRVZFTlRTICA9IEtWTUlf
Vk1fTUVTU0FHRV9JRCg1KSwKKwlLVk1JX1ZNX1JFQURfUEhZU0lDQUwgICA9IEtWTUlfVk1fTUVT
U0FHRV9JRCg2KSwKKwlLVk1JX1ZNX1dSSVRFX1BIWVNJQ0FMICA9IEtWTUlfVk1fTUVTU0FHRV9J
RCg3KSwKKwlLVk1JX1ZNX1BBVVNFX1ZDUFUgICAgICA9IEtWTUlfVk1fTUVTU0FHRV9JRCg4KSwK
KwlLVk1JX1ZNX0NPTlRST0xfQ0xFQU5VUCA9IEtWTUlfVk1fTUVTU0FHRV9JRCg5KSwKIAogCUtW
TUlfTkVYVF9WTV9NRVNTQUdFCiB9OwpAQCAtMTY3LDQgKzE2OCw5IEBAIHN0cnVjdCBrdm1pX3Zj
cHVfZXZlbnRfYnJlYWtwb2ludCB7CiAJX191OCBwYWRkaW5nWzddOwogfTsKIAorc3RydWN0IGt2
bWlfdm1fY29udHJvbF9jbGVhbnVwIHsKKwlfX3U4IGVuYWJsZTsKKwlfX3U4IHBhZGRpbmdbN107
Cit9OworCiAjZW5kaWYgLyogX1VBUElfX0xJTlVYX0tWTUlfSCAqLwpkaWZmIC0tZ2l0IGEvdG9v
bHMvdGVzdGluZy9zZWxmdGVzdHMva3ZtL3g4Nl82NC9rdm1pX3Rlc3QuYyBiL3Rvb2xzL3Rlc3Rp
bmcvc2VsZnRlc3RzL2t2bS94ODZfNjQva3ZtaV90ZXN0LmMKaW5kZXggMTQzZWUxYThmNjE4Li5m
OTVmMjc3MWExMjMgMTAwNjQ0Ci0tLSBhL3Rvb2xzL3Rlc3Rpbmcvc2VsZnRlc3RzL2t2bS94ODZf
NjQva3ZtaV90ZXN0LmMKKysrIGIvdG9vbHMvdGVzdGluZy9zZWxmdGVzdHMva3ZtL3g4Nl82NC9r
dm1pX3Rlc3QuYwpAQCAtMTA3Nyw2ICsxMDc3LDI5IEBAIHN0YXRpYyB2b2lkIHRlc3RfZXZlbnRf
YnJlYWtwb2ludChzdHJ1Y3Qga3ZtX3ZtICp2bSkKIAlkaXNhYmxlX3ZjcHVfZXZlbnQodm0sIGV2
ZW50X2lkKTsKIH0KIAorc3RhdGljIHZvaWQgY21kX3ZtX2NvbnRyb2xfY2xlYW51cChfX3U4IGVu
YWJsZSwgaW50IGV4cGVjdGVkX2VycikKK3sKKwlzdHJ1Y3QgeworCQlzdHJ1Y3Qga3ZtaV9tc2df
aGRyIGhkcjsKKwkJc3RydWN0IGt2bWlfdm1fY29udHJvbF9jbGVhbnVwIGNtZDsKKwl9IHJlcSA9
IHt9OworCisJcmVxLmNtZC5lbmFibGUgPSBlbmFibGU7CisKKwl0ZXN0X3ZtX2NvbW1hbmQoS1ZN
SV9WTV9DT05UUk9MX0NMRUFOVVAsICZyZXEuaGRyLCBzaXplb2YocmVxKSwKKwkJCU5VTEwsIDAs
IGV4cGVjdGVkX2Vycik7Cit9CisKK3N0YXRpYyB2b2lkIHRlc3RfY21kX3ZtX2NvbnRyb2xfY2xl
YW51cChzdHJ1Y3Qga3ZtX3ZtICp2bSkKK3sKKwlfX3U4IGRpc2FibGUgPSAwLCBlbmFibGUgPSAx
LCBlbmFibGVfaW52YWwgPSAyOworCisJY21kX3ZtX2NvbnRyb2xfY2xlYW51cChlbmFibGVfaW52
YWwsIC1LVk1fRUlOVkFMKTsKKworCWNtZF92bV9jb250cm9sX2NsZWFudXAoZW5hYmxlLCAwKTsK
KwljbWRfdm1fY29udHJvbF9jbGVhbnVwKGRpc2FibGUsIDApOworfQorCiBzdGF0aWMgdm9pZCB0
ZXN0X2ludHJvc3BlY3Rpb24oc3RydWN0IGt2bV92bSAqdm0pCiB7CiAJc3JhbmRvbSh0aW1lKDAp
KTsKQEAgLTEwOTksNiArMTEyMiw3IEBAIHN0YXRpYyB2b2lkIHRlc3RfaW50cm9zcGVjdGlvbihz
dHJ1Y3Qga3ZtX3ZtICp2bSkKIAl0ZXN0X2NtZF92Y3B1X2dldF9jcHVpZCh2bSk7CiAJdGVzdF9l
dmVudF9oeXBlcmNhbGwodm0pOwogCXRlc3RfZXZlbnRfYnJlYWtwb2ludCh2bSk7CisJdGVzdF9j
bWRfdm1fY29udHJvbF9jbGVhbnVwKHZtKTsKIAogCXVuaG9va19pbnRyb3NwZWN0aW9uKHZtKTsK
IH0KZGlmZiAtLWdpdCBhL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaS5jIGIvdmlydC9rdm0v
aW50cm9zcGVjdGlvbi9rdm1pLmMKaW5kZXggMjVhZjI3YWFmOWVjLi42ZDQ4NmJhOWVmZjcgMTAw
NjQ0Ci0tLSBhL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaS5jCisrKyBiL3ZpcnQva3ZtL2lu
dHJvc3BlY3Rpb24va3ZtaS5jCkBAIC0yMjcsNyArMjI3LDcgQEAgc3RhdGljIHZvaWQga3ZtaV9m
cmVlX3ZjcHVfam9icyhzdHJ1Y3Qga3ZtX3ZjcHVfaW50cm9zcGVjdGlvbiAqdmNwdWkpCiAJfQog
fQogCi1zdGF0aWMgdm9pZCBrdm1pX2ZyZWVfdmNwdWkoc3RydWN0IGt2bV92Y3B1ICp2Y3B1KQor
c3RhdGljIHZvaWQga3ZtaV9mcmVlX3ZjcHVpKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwgYm9vbCBy
ZXN0b3JlX2ludGVyY2VwdGlvbikKIHsKIAlzdHJ1Y3Qga3ZtX3ZjcHVfaW50cm9zcGVjdGlvbiAq
dmNwdWkgPSBWQ1BVSSh2Y3B1KTsKIApAQCAtMjQxLDE3ICsyNDEsMTggQEAgc3RhdGljIHZvaWQg
a3ZtaV9mcmVlX3ZjcHVpKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSkKIAlrZnJlZSh2Y3B1aSk7CiAJ
dmNwdS0+a3ZtaSA9IE5VTEw7CiAKLQlrdm1pX2FyY2hfcmVxdWVzdF9pbnRlcmNlcHRpb25fY2xl
YW51cCh2Y3B1KTsKKwlrdm1pX2FyY2hfcmVxdWVzdF9pbnRlcmNlcHRpb25fY2xlYW51cCh2Y3B1
LCByZXN0b3JlX2ludGVyY2VwdGlvbik7CiAJa3ZtaV9tYWtlX3JlcXVlc3QodmNwdSwgZmFsc2Up
OwogfQogCiBzdGF0aWMgdm9pZCBrdm1pX2ZyZWUoc3RydWN0IGt2bSAqa3ZtKQogeworCWJvb2wg
cmVzdG9yZV9pbnRlcmNlcHRpb24gPSBLVk1JKGt2bSktPnJlc3RvcmVfb25fdW5ob29rOwogCXN0
cnVjdCBrdm1fdmNwdSAqdmNwdTsKIAlpbnQgaTsKIAogCWt2bV9mb3JfZWFjaF92Y3B1KGksIHZj
cHUsIGt2bSkKLQkJa3ZtaV9mcmVlX3ZjcHVpKHZjcHUpOworCQlrdm1pX2ZyZWVfdmNwdWkodmNw
dSwgcmVzdG9yZV9pbnRlcmNlcHRpb24pOwogCiAJYml0bWFwX2ZyZWUoa3ZtLT5rdm1pLT5jbWRf
YWxsb3dfbWFzayk7CiAJYml0bWFwX2ZyZWUoa3ZtLT5rdm1pLT5ldmVudF9hbGxvd19tYXNrKTsK
QEAgLTI2Myw4ICsyNjQsMTAgQEAgc3RhdGljIHZvaWQga3ZtaV9mcmVlKHN0cnVjdCBrdm0gKmt2
bSkKIAogdm9pZCBrdm1pX3ZjcHVfdW5pbml0KHN0cnVjdCBrdm1fdmNwdSAqdmNwdSkKIHsKKwli
b29sIHJlc3RvcmVfaW50ZXJjZXB0aW9uID0gZmFsc2U7CisKIAltdXRleF9sb2NrKCZ2Y3B1LT5r
dm0tPmt2bWlfbG9jayk7Ci0Ja3ZtaV9mcmVlX3ZjcHVpKHZjcHUpOworCWt2bWlfZnJlZV92Y3B1
aSh2Y3B1LCByZXN0b3JlX2ludGVyY2VwdGlvbik7CiAJa3ZtaV9hcmNoX3ZjcHVfZnJlZV9pbnRl
cmNlcHRpb24odmNwdSk7CiAJbXV0ZXhfdW5sb2NrKCZ2Y3B1LT5rdm0tPmt2bWlfbG9jayk7CiB9
CkBAIC0yOTUsNiArMjk4LDggQEAga3ZtaV9hbGxvYyhzdHJ1Y3Qga3ZtICprdm0sIGNvbnN0IHN0
cnVjdCBrdm1faW50cm9zcGVjdGlvbl9ob29rICpob29rKQogCUJVSUxEX0JVR19PTihzaXplb2Yo
aG9vay0+dXVpZCkgIT0gc2l6ZW9mKGt2bWktPnV1aWQpKTsKIAltZW1jcHkoJmt2bWktPnV1aWQs
ICZob29rLT51dWlkLCBzaXplb2Yoa3ZtaS0+dXVpZCkpOwogCisJa3ZtaS0+cmVzdG9yZV9vbl91
bmhvb2sgPSB0cnVlOworCiAJYml0bWFwX2NvcHkoa3ZtaS0+Y21kX2FsbG93X21hc2ssIEt2bWlf
YWx3YXlzX2FsbG93ZWRfY29tbWFuZHMsCiAJCSAgICBLVk1JX05VTV9DT01NQU5EUyk7CiAKQEAg
LTY3Miw2ICs2NzcsMTEgQEAgaW50IGt2bWlfY21kX3ZjcHVfY29udHJvbF9ldmVudHMoc3RydWN0
IGt2bV92Y3B1ICp2Y3B1LAogCXJldHVybiAwOwogfQogCit2b2lkIGt2bWlfY21kX3ZtX2NvbnRy
b2xfY2xlYW51cChzdHJ1Y3Qga3ZtX2ludHJvc3BlY3Rpb24gKmt2bWksIGJvb2wgZW5hYmxlKQor
eworCWt2bWktPnJlc3RvcmVfb25fdW5ob29rID0gZW5hYmxlOworfQorCiBzdGF0aWMgbG9uZwog
Z2V0X3VzZXJfcGFnZXNfcmVtb3RlX3VubG9ja2VkKHN0cnVjdCBtbV9zdHJ1Y3QgKm1tLCB1bnNp
Z25lZCBsb25nIHN0YXJ0LAogCQkJCXVuc2lnbmVkIGxvbmcgbnJfcGFnZXMsIHVuc2lnbmVkIGlu
dCBndXBfZmxhZ3MsCmRpZmYgLS1naXQgYS92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWlfaW50
LmggYi92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWlfaW50LmgKaW5kZXggOTRkZTU0ZDdlYmI5
Li44YTI2NmIwNTgxNTUgMTAwNjQ0Ci0tLSBhL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9p
bnQuaAorKysgYi92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWlfaW50LmgKQEAgLTMxLDYgKzMx
LDE0IEBAIHN0YXRpYyBpbmxpbmUgYm9vbCBpc192Y3B1X2V2ZW50X2VuYWJsZWQoc3RydWN0IGt2
bV92Y3B1ICp2Y3B1LCB1MTYgZXZlbnRfaWQpCiAJcmV0dXJuIHRlc3RfYml0KGV2ZW50X2lkLCBW
Q1BVSSh2Y3B1KS0+ZXZfZW5hYmxlX21hc2spOwogfQogCitzdGF0aWMgaW5saW5lIGJvb2wgbm9u
X3plcm9fcGFkZGluZyhjb25zdCB1OCAqYWRkciwgc2l6ZV90IGxlbikKK3sKKwl3aGlsZSAobGVu
LS0pCisJCWlmICgqYWRkcisrKQorCQkJcmV0dXJuIHRydWU7CisJcmV0dXJuIGZhbHNlOworfQor
CiAvKiBrdm1pX21zZy5jICovCiBib29sIGt2bWlfc29ja19nZXQoc3RydWN0IGt2bV9pbnRyb3Nw
ZWN0aW9uICprdm1pLCBpbnQgZmQpOwogdm9pZCBrdm1pX3NvY2tfc2h1dGRvd24oc3RydWN0IGt2
bV9pbnRyb3NwZWN0aW9uICprdm1pKTsKQEAgLTYwLDYgKzY4LDcgQEAgaW50IGt2bWlfYWRkX2pv
YihzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsCiAJCSB2b2lkICpjdHgsIHZvaWQgKCpmcmVlX2ZjdCko
dm9pZCAqY3R4KSk7CiB2b2lkIGt2bWlfcnVuX2pvYnMoc3RydWN0IGt2bV92Y3B1ICp2Y3B1KTsK
IHZvaWQga3ZtaV9oYW5kbGVfY29tbW9uX2V2ZW50X2FjdGlvbnMoc3RydWN0IGt2bV92Y3B1ICp2
Y3B1LCB1MzIgYWN0aW9uKTsKK3ZvaWQga3ZtaV9jbWRfdm1fY29udHJvbF9jbGVhbnVwKHN0cnVj
dCBrdm1faW50cm9zcGVjdGlvbiAqa3ZtaSwgYm9vbCBlbmFibGUpOwogaW50IGt2bWlfY21kX3Zt
X2NvbnRyb2xfZXZlbnRzKHN0cnVjdCBrdm1faW50cm9zcGVjdGlvbiAqa3ZtaSwKIAkJCSAgICAg
ICB1MTYgZXZlbnRfaWQsIGJvb2wgZW5hYmxlKTsKIGludCBrdm1pX2NtZF92Y3B1X2NvbnRyb2xf
ZXZlbnRzKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwKQEAgLTgxLDcgKzkwLDggQEAgdm9pZCBrdm1p
X2FyY2hfc2V0dXBfdmNwdV9ldmVudChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsCiBib29sIGt2bWlf
YXJjaF92Y3B1X2FsbG9jX2ludGVyY2VwdGlvbihzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUpOwogdm9p
ZCBrdm1pX2FyY2hfdmNwdV9mcmVlX2ludGVyY2VwdGlvbihzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUp
OwogYm9vbCBrdm1pX2FyY2hfdmNwdV9pbnRyb3NwZWN0ZWQoc3RydWN0IGt2bV92Y3B1ICp2Y3B1
KTsKLXZvaWQga3ZtaV9hcmNoX3JlcXVlc3RfaW50ZXJjZXB0aW9uX2NsZWFudXAoc3RydWN0IGt2
bV92Y3B1ICp2Y3B1KTsKK3ZvaWQga3ZtaV9hcmNoX3JlcXVlc3RfaW50ZXJjZXB0aW9uX2NsZWFu
dXAoc3RydWN0IGt2bV92Y3B1ICp2Y3B1LAorCQkJCWJvb2wgcmVzdG9yZV9pbnRlcmNlcHRpb24p
OwogYm9vbCBrdm1pX2FyY2hfY2xlYW5fdXBfaW50ZXJjZXB0aW9uKHN0cnVjdCBrdm1fdmNwdSAq
dmNwdSk7CiB2b2lkIGt2bWlfYXJjaF9wb3N0X3JlcGx5KHN0cnVjdCBrdm1fdmNwdSAqdmNwdSk7
CiBib29sIGt2bWlfYXJjaF9pc19hZ2VudF9oeXBlcmNhbGwoc3RydWN0IGt2bV92Y3B1ICp2Y3B1
KTsKZGlmZiAtLWdpdCBhL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9tc2cuYyBiL3ZpcnQv
a3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9tc2cuYwppbmRleCBlZTQxZjIzOTc4MjIuLjIyNDA0OWI5
MjEzOCAxMDA2NDQKLS0tIGEvdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pX21zZy5jCisrKyBi
L3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9tc2cuYwpAQCAtMjczLDE4ICsyNzMsMzYgQEAg
c3RhdGljIGludCBoYW5kbGVfdm1fcGF1c2VfdmNwdShzdHJ1Y3Qga3ZtX2ludHJvc3BlY3Rpb24g
Kmt2bWksCiAJcmV0dXJuIGt2bWlfbXNnX3ZtX3JlcGx5KGt2bWksIG1zZywgZWMsIE5VTEwsIDAp
OwogfQogCitzdGF0aWMgaW50IGhhbmRsZV92bV9jb250cm9sX2NsZWFudXAoc3RydWN0IGt2bV9p
bnRyb3NwZWN0aW9uICprdm1pLAorCQkJCSAgICAgY29uc3Qgc3RydWN0IGt2bWlfbXNnX2hkciAq
bXNnLAorCQkJCSAgICAgY29uc3Qgdm9pZCAqX3JlcSkKK3sKKwljb25zdCBzdHJ1Y3Qga3ZtaV92
bV9jb250cm9sX2NsZWFudXAgKnJlcSA9IF9yZXE7CisJaW50IGVjID0gMDsKKworCWlmIChub25f
emVyb19wYWRkaW5nKHJlcS0+cGFkZGluZywgQVJSQVlfU0laRShyZXEtPnBhZGRpbmcpKSkKKwkJ
ZWMgPSAtS1ZNX0VJTlZBTDsKKwllbHNlIGlmIChyZXEtPmVuYWJsZSA+IDEpCisJCWVjID0gLUtW
TV9FSU5WQUw7CisJZWxzZQorCQlrdm1pX2NtZF92bV9jb250cm9sX2NsZWFudXAoa3ZtaSwgcmVx
LT5lbmFibGUgPT0gMSk7CisKKwlyZXR1cm4ga3ZtaV9tc2dfdm1fcmVwbHkoa3ZtaSwgbXNnLCBl
YywgTlVMTCwgMCk7Cit9CisKIC8qCiAgKiBUaGVzZSBjb21tYW5kcyBhcmUgZXhlY3V0ZWQgYnkg
dGhlIHJlY2VpdmluZyB0aHJlYWQuCiAgKi8KIHN0YXRpYyBrdm1pX3ZtX21zZ19mY3QgY29uc3Qg
bXNnX3ZtW10gPSB7Ci0JW0tWTUlfR0VUX1ZFUlNJT05dICAgICAgID0gaGFuZGxlX2dldF92ZXJz
aW9uLAotCVtLVk1JX1ZNX0NIRUNLX0NPTU1BTkRdICA9IGhhbmRsZV92bV9jaGVja19jb21tYW5k
LAotCVtLVk1JX1ZNX0NIRUNLX0VWRU5UXSAgICA9IGhhbmRsZV92bV9jaGVja19ldmVudCwKLQlb
S1ZNSV9WTV9DT05UUk9MX0VWRU5UU10gPSBoYW5kbGVfdm1fY29udHJvbF9ldmVudHMsCi0JW0tW
TUlfVk1fR0VUX0lORk9dICAgICAgID0gaGFuZGxlX3ZtX2dldF9pbmZvLAotCVtLVk1JX1ZNX1BB
VVNFX1ZDUFVdICAgICA9IGhhbmRsZV92bV9wYXVzZV92Y3B1LAotCVtLVk1JX1ZNX1JFQURfUEhZ
U0lDQUxdICA9IGhhbmRsZV92bV9yZWFkX3BoeXNpY2FsLAotCVtLVk1JX1ZNX1dSSVRFX1BIWVNJ
Q0FMXSA9IGhhbmRsZV92bV93cml0ZV9waHlzaWNhbCwKKwlbS1ZNSV9HRVRfVkVSU0lPTl0gICAg
ICAgID0gaGFuZGxlX2dldF92ZXJzaW9uLAorCVtLVk1JX1ZNX0NIRUNLX0NPTU1BTkRdICAgPSBo
YW5kbGVfdm1fY2hlY2tfY29tbWFuZCwKKwlbS1ZNSV9WTV9DSEVDS19FVkVOVF0gICAgID0gaGFu
ZGxlX3ZtX2NoZWNrX2V2ZW50LAorCVtLVk1JX1ZNX0NPTlRST0xfQ0xFQU5VUF0gPSBoYW5kbGVf
dm1fY29udHJvbF9jbGVhbnVwLAorCVtLVk1JX1ZNX0NPTlRST0xfRVZFTlRTXSAgPSBoYW5kbGVf
dm1fY29udHJvbF9ldmVudHMsCisJW0tWTUlfVk1fR0VUX0lORk9dICAgICAgICA9IGhhbmRsZV92
bV9nZXRfaW5mbywKKwlbS1ZNSV9WTV9QQVVTRV9WQ1BVXSAgICAgID0gaGFuZGxlX3ZtX3BhdXNl
X3ZjcHUsCisJW0tWTUlfVk1fUkVBRF9QSFlTSUNBTF0gICA9IGhhbmRsZV92bV9yZWFkX3BoeXNp
Y2FsLAorCVtLVk1JX1ZNX1dSSVRFX1BIWVNJQ0FMXSAgPSBoYW5kbGVfdm1fd3JpdGVfcGh5c2lj
YWwsCiB9OwogCiBzdGF0aWMga3ZtaV92bV9tc2dfZmN0IGdldF92bV9tc2dfaGFuZGxlcih1MTYg
aWQpCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fClZpcnR1
YWxpemF0aW9uIG1haWxpbmcgbGlzdApWaXJ0dWFsaXphdGlvbkBsaXN0cy5saW51eC1mb3VuZGF0
aW9uLm9yZwpodHRwczovL2xpc3RzLmxpbnV4Zm91bmRhdGlvbi5vcmcvbWFpbG1hbi9saXN0aW5m
by92aXJ0dWFsaXphdGlvbg==
