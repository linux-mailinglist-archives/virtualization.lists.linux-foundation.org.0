Return-Path: <virtualization-bounces@lists.linux-foundation.org>
X-Original-To: lists.virtualization@lfdr.de
Delivered-To: lists.virtualization@lfdr.de
Received: from smtp2.osuosl.org (smtp2.osuosl.org [IPv6:2605:bc80:3010::133])
	by mail.lfdr.de (Postfix) with ESMTPS id 6AB6A4244A2
	for <lists.virtualization@lfdr.de>; Wed,  6 Oct 2021 19:40:55 +0200 (CEST)
Received: from localhost (localhost [127.0.0.1])
	by smtp2.osuosl.org (Postfix) with ESMTP id 6408440898;
	Wed,  6 Oct 2021 17:40:51 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from smtp2.osuosl.org ([127.0.0.1])
	by localhost (smtp2.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id I-5w74P1ion5; Wed,  6 Oct 2021 17:40:49 +0000 (UTC)
Received: from lists.linuxfoundation.org (lf-lists.osuosl.org [IPv6:2605:bc80:3010:104::8cd3:938])
	by smtp2.osuosl.org (Postfix) with ESMTPS id DA37240A32;
	Wed,  6 Oct 2021 17:40:48 +0000 (UTC)
Received: from lf-lists.osuosl.org (localhost [127.0.0.1])
	by lists.linuxfoundation.org (Postfix) with ESMTP id B971CC0011;
	Wed,  6 Oct 2021 17:40:47 +0000 (UTC)
X-Original-To: virtualization@lists.linux-foundation.org
Delivered-To: virtualization@lists.linuxfoundation.org
Received: from smtp1.osuosl.org (smtp1.osuosl.org [140.211.166.138])
 by lists.linuxfoundation.org (Postfix) with ESMTP id 58699C0011
 for <virtualization@lists.linux-foundation.org>;
 Wed,  6 Oct 2021 17:40:44 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by smtp1.osuosl.org (Postfix) with ESMTP id 377B083F30
 for <virtualization@lists.linux-foundation.org>;
 Wed,  6 Oct 2021 17:40:44 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from smtp1.osuosl.org ([127.0.0.1])
 by localhost (smtp1.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id Q_RTJb58r06s
 for <virtualization@lists.linux-foundation.org>;
 Wed,  6 Oct 2021 17:40:43 +0000 (UTC)
X-Greylist: from auto-whitelisted by SQLgrey-1.8.0
Received: from mx01.bbu.dsd.mx.bitdefender.com
 (mx01.bbu.dsd.mx.bitdefender.com [91.199.104.161])
 by smtp1.osuosl.org (Postfix) with ESMTPS id A44D483D41
 for <virtualization@lists.linux-foundation.org>;
 Wed,  6 Oct 2021 17:40:42 +0000 (UTC)
Received: from smtp.bitdefender.com (smtp01.buh.bitdefender.com [10.17.80.75])
 by mx01.bbu.dsd.mx.bitdefender.com (Postfix) with ESMTPS id
 50FC2307F899; Wed,  6 Oct 2021 20:31:18 +0300 (EEST)
Received: from localhost (unknown [91.199.104.28])
 by smtp.bitdefender.com (Postfix) with ESMTPSA id 2FC353064495;
 Wed,  6 Oct 2021 20:31:18 +0300 (EEST)
X-Is-Junk-Enabled: fGZTSsP0qEJE2AIKtlSuFiRRwg9xyHmJ
From: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>
To: kvm@vger.kernel.org
Subject: [PATCH v12 58/77] KVM: introspection: add KVMI_VCPU_CONTROL_CR and
 KVMI_VCPU_EVENT_CR
Date: Wed,  6 Oct 2021 20:30:54 +0300
Message-Id: <20211006173113.26445-59-alazar@bitdefender.com>
In-Reply-To: <20211006173113.26445-1-alazar@bitdefender.com>
References: <20211006173113.26445-1-alazar@bitdefender.com>
MIME-Version: 1.0
Cc: Tamas K Lengyel <tamas@tklengyel.com>, Wanpeng Li <wanpengli@tencent.com>,
 Sean Christopherson <seanjc@google.com>, Joerg Roedel <joro@8bytes.org>,
 virtualization@lists.linux-foundation.org,
 =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>,
 Mathieu Tarral <mathieu.tarral@protonmail.com>,
 Paolo Bonzini <pbonzini@redhat.com>,
 =?UTF-8?q?Mihai=20Don=C8=9Bu?= <mdontu@bitdefender.com>,
 Jim Mattson <jmattson@google.com>
X-BeenThere: virtualization@lists.linux-foundation.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Linux virtualization <virtualization.lists.linux-foundation.org>
List-Unsubscribe: <https://lists.linuxfoundation.org/mailman/options/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=unsubscribe>
List-Archive: <http://lists.linuxfoundation.org/pipermail/virtualization/>
List-Post: <mailto:virtualization@lists.linux-foundation.org>
List-Help: <mailto:virtualization-request@lists.linux-foundation.org?subject=help>
List-Subscribe: <https://lists.linuxfoundation.org/mailman/listinfo/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: virtualization-bounces@lists.linux-foundation.org
Sender: "Virtualization" <virtualization-bounces@lists.linux-foundation.org>

RnJvbTogTWloYWkgRG9uyJt1IDxtZG9udHVAYml0ZGVmZW5kZXIuY29tPgoKVXNpbmcgdGhlIEtW
TUlfVkNQVV9DT05UUk9MX0NSIGNvbW1hbmQsIHRoZSBpbnRyb3NwZWN0aW9uIHRvb2wgc3Vic2Ny
aWJlcwp0byBLVk1JX1ZDUFVfRVZFTlRfQ1IgZXZlbnRzIHRoYXQgd2lsbCBiZSBzZW50IHdoZW4g
YSBjb250cm9sIHJlZ2lzdGVyCihDUjAsIENSMyBvciBDUjQpIGlzIGdvaW5nIHRvIGJlIGNoYW5n
ZWQuCgpTaWduZWQtb2ZmLWJ5OiBNaWhhaSBEb27Im3UgPG1kb250dUBiaXRkZWZlbmRlci5jb20+
CkNvLWRldmVsb3BlZC1ieTogQWRhbGJlcnQgTGF6xINyIDxhbGF6YXJAYml0ZGVmZW5kZXIuY29t
PgpTaWduZWQtb2ZmLWJ5OiBBZGFsYmVydCBMYXrEg3IgPGFsYXphckBiaXRkZWZlbmRlci5jb20+
Ci0tLQogRG9jdW1lbnRhdGlvbi92aXJ0L2t2bS9rdm1pLnJzdCAgICAgICAgICAgICAgIHwgIDcz
ICsrKysrKysrKysrKysKIGFyY2gveDg2L2luY2x1ZGUvYXNtL2t2bWlfaG9zdC5oICAgICAgICAg
ICAgICB8ICAxMiArKysKIGFyY2gveDg2L2luY2x1ZGUvdWFwaS9hc20va3ZtaS5oICAgICAgICAg
ICAgICB8ICAxOCArKysrCiBhcmNoL3g4Ni9rdm0va3ZtaS5jICAgICAgICAgICAgICAgICAgICAg
ICAgICAgfCAgNzkgKysrKysrKysrKysrKysKIGFyY2gveDg2L2t2bS9rdm1pLmggICAgICAgICAg
ICAgICAgICAgICAgICAgICB8ICAgNCArCiBhcmNoL3g4Ni9rdm0va3ZtaV9tc2cuYyAgICAgICAg
ICAgICAgICAgICAgICAgfCAgNDQgKysrKysrKysKIGFyY2gveDg2L2t2bS92bXgvdm14LmMgICAg
ICAgICAgICAgICAgICAgICAgICB8ICAgNiArLQogYXJjaC94ODYva3ZtL3g4Ni5jICAgICAgICAg
ICAgICAgICAgICAgICAgICAgIHwgIDE0ICsrLQogaW5jbHVkZS91YXBpL2xpbnV4L2t2bWkuaCAg
ICAgICAgICAgICAgICAgICAgIHwgICAyICsKIC4uLi90ZXN0aW5nL3NlbGZ0ZXN0cy9rdm0veDg2
XzY0L2t2bWlfdGVzdC5jICB8IDEwMCArKysrKysrKysrKysrKysrKysKIHZpcnQva3ZtL2ludHJv
c3BlY3Rpb24va3ZtaS5jICAgICAgICAgICAgICAgICB8ICAgMiArLQogdmlydC9rdm0vaW50cm9z
cGVjdGlvbi9rdm1pX2ludC5oICAgICAgICAgICAgIHwgICAyICsKIDEyIGZpbGVzIGNoYW5nZWQs
IDM1MSBpbnNlcnRpb25zKCspLCA1IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL0RvY3VtZW50
YXRpb24vdmlydC9rdm0va3ZtaS5yc3QgYi9Eb2N1bWVudGF0aW9uL3ZpcnQva3ZtL2t2bWkucnN0
CmluZGV4IDg5YzMzMjBmNGJkNS4uYTQ3MDVhY2RkZWIyIDEwMDY0NAotLS0gYS9Eb2N1bWVudGF0
aW9uL3ZpcnQva3ZtL2t2bWkucnN0CisrKyBiL0RvY3VtZW50YXRpb24vdmlydC9rdm0va3ZtaS5y
c3QKQEAgLTUzOSw2ICs1MzksNyBAQCBFbmFibGVzL2Rpc2FibGVzIHZDUFUgaW50cm9zcGVjdGlv
biBldmVudHMuIFRoaXMgY29tbWFuZCBjYW4gYmUgdXNlZCB3aXRoCiB0aGUgZm9sbG93aW5nIGV2
ZW50czo6CiAKIAlLVk1JX1ZDUFVfRVZFTlRfQlJFQUtQT0lOVAorCUtWTUlfVkNQVV9FVkVOVF9D
UgogCUtWTUlfVkNQVV9FVkVOVF9IWVBFUkNBTEwKIAogV2hlbiBhbiBldmVudCBpcyBlbmFibGVk
LCB0aGUgaW50cm9zcGVjdGlvbiB0b29sIGlzIG5vdGlmaWVkIGFuZApAQCAtNzAxLDYgKzcwMiw0
MCBAQCBpbnRlcmNlcHRpb25zKS4gQnkgZGVmYXVsdCBpdCBpcyBlbmFibGVkLgogKiAtS1ZNX0VJ
TlZBTCAtIHRoZSBwYWRkaW5nIGlzIG5vdCB6ZXJvCiAqIC1LVk1fRUlOVkFMIC0gYGBlbmFibGVg
YCBpcyBub3QgMSBvciAwCiAKKzE1LiBLVk1JX1ZDUFVfQ09OVFJPTF9DUgorLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tCisKKzpBcmNoaXRlY3R1cmVzOiB4ODYKKzpWZXJzaW9uczogPj0gMQorOlBh
cmFtZXRlcnM6CisKKzo6CisKKwlzdHJ1Y3Qga3ZtaV92Y3B1X2hkcjsKKwlzdHJ1Y3Qga3ZtaV92
Y3B1X2NvbnRyb2xfY3IgeworCQlfX3U4IGNyOworCQlfX3U4IGVuYWJsZTsKKwkJX191MTYgcGFk
ZGluZzE7CisJCV9fdTMyIHBhZGRpbmcyOworCX07CisKKzpSZXR1cm5zOgorCis6OgorCisJc3Ry
dWN0IGt2bWlfZXJyb3JfY29kZQorCitFbmFibGVzL2Rpc2FibGVzIGludHJvc3BlY3Rpb24gZm9y
IGEgc3BlY2lmaWMgY29udHJvbCByZWdpc3RlciBhbmQgbXVzdAorYmUgdXNlZCBpbiBhZGRpdGlv
biB0byAqS1ZNSV9WQ1BVX0NPTlRST0xfRVZFTlRTKiB3aXRoIHRoZSAqS1ZNSV9WQ1BVX0VWRU5U
X0NSKgorSUQgc2V0LgorCis6RXJyb3JzOgorCisqIC1LVk1fRUlOVkFMIC0gdGhlIHNlbGVjdGVk
IHZDUFUgaXMgaW52YWxpZAorKiAtS1ZNX0VJTlZBTCAtIHRoZSBzcGVjaWZpZWQgY29udHJvbCBy
ZWdpc3RlciBpcyBub3QgQ1IwLCBDUjMgb3IgQ1I0CisqIC1LVk1fRUlOVkFMIC0gdGhlIHBhZGRp
bmcgaXMgbm90IHplcm8KKyogLUtWTV9FQUdBSU4gLSB0aGUgc2VsZWN0ZWQgdkNQVSBjYW4ndCBi
ZSBpbnRyb3NwZWN0ZWQgeWV0CisKIEV2ZW50cwogPT09PT09CiAKQEAgLTg5MywzICs5MjgsNDEg
QEAgYmVmb3JlIHJldHVybmluZyB0aGlzIGFjdGlvbi4KIAogVGhlICpDT05USU5VRSogYWN0aW9u
IHdpbGwgY2F1c2UgdGhlIGJyZWFrcG9pbnQgZXhjZXB0aW9uIHRvIGJlIHJlaW5qZWN0ZWQKICh0
aGUgT1Mgd2lsbCBoYW5kbGUgaXQpLgorCis1LiBLVk1JX1ZDUFVfRVZFTlRfQ1IKKy0tLS0tLS0t
LS0tLS0tLS0tLS0tLQorCis6QXJjaGl0ZWN0dXJlczogeDg2Cis6VmVyc2lvbnM6ID49IDEKKzpB
Y3Rpb25zOiBDT05USU5VRSwgQ1JBU0gKKzpQYXJhbWV0ZXJzOgorCis6OgorCisJc3RydWN0IGt2
bWlfZXZlbnRfaGRyOworCXN0cnVjdCBrdm1pX3ZjcHVfZXZlbnQ7CisJc3RydWN0IGt2bWlfdmNw
dV9ldmVudF9jciB7CisJCV9fdTggY3I7CisJCV9fdTggcGFkZGluZ1s3XTsKKwkJX191NjQgb2xk
X3ZhbHVlOworCQlfX3U2NCBuZXdfdmFsdWU7CisJfTsKKworOlJldHVybnM6CisKKzo6CisKKwlz
dHJ1Y3Qga3ZtaV92Y3B1X2hkcjsKKwlzdHJ1Y3Qga3ZtaV92Y3B1X2V2ZW50X3JlcGx5OworCXN0
cnVjdCBrdm1pX3ZjcHVfZXZlbnRfY3JfcmVwbHkgeworCQlfX3U2NCBuZXdfdmFsOworCX07CisK
K1RoaXMgZXZlbnQgaXMgc2VudCB3aGVuIGEgY29udHJvbCByZWdpc3RlciBpcyBnb2luZyB0byBi
ZSBjaGFuZ2VkIGFuZCB0aGUKK2ludHJvc3BlY3Rpb24gaGFzIGJlZW4gZW5hYmxlZCBmb3IgdGhp
cyBldmVudCBhbmQgZm9yIHRoaXMgc3BlY2lmaWMKK3JlZ2lzdGVyIChzZWUgKipLVk1JX1ZDUFVf
Q09OVFJPTF9FVkVOVFMqKikuCisKK2Bga3ZtaV92Y3B1X2V2ZW50YGAgKHdpdGggdGhlIHZDUFUg
c3RhdGUpLCB0aGUgY29udHJvbCByZWdpc3RlciBudW1iZXIKKyhgYGNyYGApLCB0aGUgb2xkIHZh
bHVlIChgYG9sZF92YWx1ZWBgKSBhbmQgdGhlIG5ldyB2YWx1ZSAoYGBuZXdfdmFsdWVgYCkKK2Fy
ZSBzZW50IHRvIHRoZSBpbnRyb3NwZWN0aW9uIHRvb2wuIFRoZSAqQ09OVElOVUUqIGFjdGlvbiB3
aWxsIHNldCB0aGUKK2BgbmV3X3ZhbGBgLgpkaWZmIC0tZ2l0IGEvYXJjaC94ODYvaW5jbHVkZS9h
c20va3ZtaV9ob3N0LmggYi9hcmNoL3g4Ni9pbmNsdWRlL2FzbS9rdm1pX2hvc3QuaAppbmRleCAx
NjFkMWFlNWE3Y2YuLjc2MTMwODhkMGFlMiAxMDA2NDQKLS0tIGEvYXJjaC94ODYvaW5jbHVkZS9h
c20va3ZtaV9ob3N0LmgKKysrIGIvYXJjaC94ODYvaW5jbHVkZS9hc20va3ZtaV9ob3N0LmgKQEAg
LTQsNiArNCw4IEBACiAKICNpbmNsdWRlIDxhc20va3ZtaS5oPgogCisjZGVmaW5lIEtWTUlfTlVN
X0NSIDUKKwogc3RydWN0IGt2bWlfbW9uaXRvcl9pbnRlcmNlcHRpb24gewogCWJvb2wga3ZtaV9p
bnRlcmNlcHRlZDsKIAlib29sIGt2bV9pbnRlcmNlcHRlZDsKQEAgLTE5LDYgKzIxLDggQEAgc3Ry
dWN0IGt2bWlfaW50ZXJjZXB0aW9uIHsKIHN0cnVjdCBrdm1fdmNwdV9hcmNoX2ludHJvc3BlY3Rp
b24gewogCXN0cnVjdCBrdm1fcmVncyBkZWxheWVkX3JlZ3M7CiAJYm9vbCBoYXZlX2RlbGF5ZWRf
cmVnczsKKworCURFQ0xBUkVfQklUTUFQKGNyX21hc2ssIEtWTUlfTlVNX0NSKTsKIH07CiAKIHN0
cnVjdCBrdm1fYXJjaF9pbnRyb3NwZWN0aW9uIHsKQEAgLTI3LDExICszMSwxOSBAQCBzdHJ1Y3Qg
a3ZtX2FyY2hfaW50cm9zcGVjdGlvbiB7CiAjaWZkZWYgQ09ORklHX0tWTV9JTlRST1NQRUNUSU9O
CiAKIGJvb2wga3ZtaV9tb25pdG9yX2JwX2ludGVyY2VwdChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUs
IHUzMiBkYmcpOworYm9vbCBrdm1pX2NyX2V2ZW50KHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwgdW5z
aWduZWQgaW50IGNyLAorCQkgICB1bnNpZ25lZCBsb25nIG9sZF92YWx1ZSwgdW5zaWduZWQgbG9u
ZyAqbmV3X3ZhbHVlKTsKK2Jvb2wga3ZtaV9jcjNfaW50ZXJjZXB0ZWQoc3RydWN0IGt2bV92Y3B1
ICp2Y3B1KTsKIAogI2Vsc2UgLyogQ09ORklHX0tWTV9JTlRST1NQRUNUSU9OICovCiAKIHN0YXRp
YyBpbmxpbmUgYm9vbCBrdm1pX21vbml0b3JfYnBfaW50ZXJjZXB0KHN0cnVjdCBrdm1fdmNwdSAq
dmNwdSwgdTMyIGRiZykKIAl7IHJldHVybiBmYWxzZTsgfQorc3RhdGljIGlubGluZSBib29sIGt2
bWlfY3JfZXZlbnQoc3RydWN0IGt2bV92Y3B1ICp2Y3B1LCB1bnNpZ25lZCBpbnQgY3IsCisJCQkJ
IHVuc2lnbmVkIGxvbmcgb2xkX3ZhbHVlLAorCQkJCSB1bnNpZ25lZCBsb25nICpuZXdfdmFsdWUp
CisJCQl7IHJldHVybiB0cnVlOyB9CitzdGF0aWMgaW5saW5lIGJvb2wga3ZtaV9jcjNfaW50ZXJj
ZXB0ZWQoc3RydWN0IGt2bV92Y3B1ICp2Y3B1KSB7IHJldHVybiBmYWxzZTsgfQogCiAjZW5kaWYg
LyogQ09ORklHX0tWTV9JTlRST1NQRUNUSU9OICovCiAKZGlmZiAtLWdpdCBhL2FyY2gveDg2L2lu
Y2x1ZGUvdWFwaS9hc20va3ZtaS5oIGIvYXJjaC94ODYvaW5jbHVkZS91YXBpL2FzbS9rdm1pLmgK
aW5kZXggYTQ0MmJhNGQyMTkwLi4zMmNkMTc0ODgwNTggMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L2lu
Y2x1ZGUvdWFwaS9hc20va3ZtaS5oCisrKyBiL2FyY2gveDg2L2luY2x1ZGUvdWFwaS9hc20va3Zt
aS5oCkBAIC02MSw0ICs2MSwyMiBAQCBzdHJ1Y3Qga3ZtaV92Y3B1X2dldF9jcHVpZF9yZXBseSB7
CiAJX191MzIgZWR4OwogfTsKIAorc3RydWN0IGt2bWlfdmNwdV9jb250cm9sX2NyIHsKKwlfX3U4
IGNyOworCV9fdTggZW5hYmxlOworCV9fdTE2IHBhZGRpbmcxOworCV9fdTMyIHBhZGRpbmcyOwor
fTsKKworc3RydWN0IGt2bWlfdmNwdV9ldmVudF9jciB7CisJX191OCBjcjsKKwlfX3U4IHBhZGRp
bmdbN107CisJX191NjQgb2xkX3ZhbHVlOworCV9fdTY0IG5ld192YWx1ZTsKK307CisKK3N0cnVj
dCBrdm1pX3ZjcHVfZXZlbnRfY3JfcmVwbHkgeworCV9fdTY0IG5ld192YWw7Cit9OworCiAjZW5k
aWYgLyogX1VBUElfQVNNX1g4Nl9LVk1JX0ggKi8KZGlmZiAtLWdpdCBhL2FyY2gveDg2L2t2bS9r
dm1pLmMgYi9hcmNoL3g4Ni9rdm0va3ZtaS5jCmluZGV4IDNmZDdkNjkxZWVkYS4uMzFhMTFjNzEy
MGM1IDEwMDY0NAotLS0gYS9hcmNoL3g4Ni9rdm0va3ZtaS5jCisrKyBiL2FyY2gveDg2L2t2bS9r
dm1pLmMKQEAgLTgsMTAgKzgsMTIgQEAKICNpbmNsdWRlICJsaW51eC9rdm1faG9zdC5oIgogI2lu
Y2x1ZGUgIng4Ni5oIgogI2luY2x1ZGUgIi4uLy4uLy4uL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24v
a3ZtaV9pbnQuaCIKKyNpbmNsdWRlICJrdm1pLmgiCiAKIHZvaWQga3ZtaV9hcmNoX2luaXRfdmNw
dV9ldmVudHNfbWFzayh1bnNpZ25lZCBsb25nICpzdXBwb3J0ZWQpCiB7CiAJc2V0X2JpdChLVk1J
X1ZDUFVfRVZFTlRfQlJFQUtQT0lOVCwgc3VwcG9ydGVkKTsKKwlzZXRfYml0KEtWTUlfVkNQVV9F
VkVOVF9DUiwgc3VwcG9ydGVkKTsKIAlzZXRfYml0KEtWTUlfVkNQVV9FVkVOVF9IWVBFUkNBTEws
IHN1cHBvcnRlZCk7CiB9CiAKQEAgLTMyMCwzICszMjIsODAgQEAgdm9pZCBrdm1pX2FyY2hfcmVx
dWVzdF9pbnRlcmNlcHRpb25fY2xlYW51cChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsCiAJCWFyY2hf
dmNwdWktPmNsZWFudXAgPSB0cnVlOwogCX0KIH0KKworaW50IGt2bWlfYXJjaF9jbWRfdmNwdV9j
b250cm9sX2NyKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwgaW50IGNyLCBib29sIGVuYWJsZSkKK3sK
KwlpZiAoY3IgPT0gMykKKwkJc3RhdGljX2NhbGwoa3ZtX3g4Nl9jb250cm9sX2NyM19pbnRlcmNl
cHQpKHZjcHUsIENSX1RZUEVfVywKKwkJCQkJCQkgICBlbmFibGUpOworCisJaWYgKGVuYWJsZSkK
KwkJc2V0X2JpdChjciwgVkNQVUkodmNwdSktPmFyY2guY3JfbWFzayk7CisJZWxzZQorCQljbGVh
cl9iaXQoY3IsIFZDUFVJKHZjcHUpLT5hcmNoLmNyX21hc2spOworCisJcmV0dXJuIDA7Cit9CisK
K3N0YXRpYyBib29sIF9fa3ZtaV9jcl9ldmVudChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsIHVuc2ln
bmVkIGludCBjciwKKwkJCSAgICB1NjQgb2xkX3ZhbHVlLCB1bnNpZ25lZCBsb25nICpuZXdfdmFs
dWUpCit7CisJdTY0IHJlcGx5X3ZhbHVlOworCXUzMiBhY3Rpb247CisJYm9vbCByZXQ7CisKKwlp
ZiAoIXRlc3RfYml0KGNyLCBWQ1BVSSh2Y3B1KS0+YXJjaC5jcl9tYXNrKSkKKwkJcmV0dXJuIHRy
dWU7CisKKwlhY3Rpb24gPSBrdm1pX21zZ19zZW5kX2NyKHZjcHUsIGNyLCBvbGRfdmFsdWUsICpu
ZXdfdmFsdWUsCisJCQkJICAmcmVwbHlfdmFsdWUpOworCXN3aXRjaCAoYWN0aW9uKSB7CisJY2Fz
ZSBLVk1JX0VWRU5UX0FDVElPTl9DT05USU5VRToKKwkJKm5ld192YWx1ZSA9IHJlcGx5X3ZhbHVl
OworCQlyZXQgPSB0cnVlOworCQlicmVhazsKKwlkZWZhdWx0OgorCQlrdm1pX2hhbmRsZV9jb21t
b25fZXZlbnRfYWN0aW9ucyh2Y3B1LCBhY3Rpb24pOworCQlyZXQgPSBmYWxzZTsKKwl9CisKKwly
ZXR1cm4gcmV0OworfQorCitib29sIGt2bWlfY3JfZXZlbnQoc3RydWN0IGt2bV92Y3B1ICp2Y3B1
LCB1bnNpZ25lZCBpbnQgY3IsCisJCSAgIHVuc2lnbmVkIGxvbmcgb2xkX3ZhbHVlLCB1bnNpZ25l
ZCBsb25nICpuZXdfdmFsdWUpCit7CisJc3RydWN0IGt2bV9pbnRyb3NwZWN0aW9uICprdm1pOwor
CWJvb2wgcmV0ID0gdHJ1ZTsKKworCWlmIChvbGRfdmFsdWUgPT0gKm5ld192YWx1ZSkKKwkJcmV0
dXJuIHRydWU7CisKKwlrdm1pID0ga3ZtaV9nZXQodmNwdS0+a3ZtKTsKKwlpZiAoIWt2bWkpCisJ
CXJldHVybiB0cnVlOworCisJaWYgKGlzX3ZjcHVfZXZlbnRfZW5hYmxlZCh2Y3B1LCBLVk1JX1ZD
UFVfRVZFTlRfQ1IpKQorCQlyZXQgPSBfX2t2bWlfY3JfZXZlbnQodmNwdSwgY3IsIG9sZF92YWx1
ZSwgbmV3X3ZhbHVlKTsKKworCWt2bWlfcHV0KHZjcHUtPmt2bSk7CisKKwlyZXR1cm4gcmV0Owor
fQorCitib29sIGt2bWlfY3IzX2ludGVyY2VwdGVkKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSkKK3sK
KwlzdHJ1Y3Qga3ZtX2ludHJvc3BlY3Rpb24gKmt2bWk7CisJYm9vbCByZXQ7CisKKwlrdm1pID0g
a3ZtaV9nZXQodmNwdS0+a3ZtKTsKKwlpZiAoIWt2bWkpCisJCXJldHVybiBmYWxzZTsKKworCXJl
dCA9IHRlc3RfYml0KDMsIFZDUFVJKHZjcHUpLT5hcmNoLmNyX21hc2spOworCisJa3ZtaV9wdXQo
dmNwdS0+a3ZtKTsKKworCXJldHVybiByZXQ7Cit9CitFWFBPUlRfU1lNQk9MKGt2bWlfY3IzX2lu
dGVyY2VwdGVkKTsKZGlmZiAtLWdpdCBhL2FyY2gveDg2L2t2bS9rdm1pLmggYi9hcmNoL3g4Ni9r
dm0va3ZtaS5oCmluZGV4IDRlZWIwYzkwMDA4My4uNmY0YWFlYmI2N2Y5IDEwMDY0NAotLS0gYS9h
cmNoL3g4Ni9rdm0va3ZtaS5oCisrKyBiL2FyY2gveDg2L2t2bS9rdm1pLmgKQEAgLTcsNSArNyw5
IEBAIGludCBrdm1pX2FyY2hfY21kX3ZjcHVfZ2V0X3JlZ2lzdGVycyhzdHJ1Y3Qga3ZtX3ZjcHUg
KnZjcHUsCiAJCQkJc3RydWN0IGt2bWlfdmNwdV9nZXRfcmVnaXN0ZXJzX3JlcGx5ICpycGwpOwog
dm9pZCBrdm1pX2FyY2hfY21kX3ZjcHVfc2V0X3JlZ2lzdGVycyhzdHJ1Y3Qga3ZtX3ZjcHUgKnZj
cHUsCiAJCQkJICAgICAgY29uc3Qgc3RydWN0IGt2bV9yZWdzICpyZWdzKTsKK2ludCBrdm1pX2Fy
Y2hfY21kX3ZjcHVfY29udHJvbF9jcihzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsIGludCBjciwgYm9v
bCBlbmFibGUpOworCit1MzIga3ZtaV9tc2dfc2VuZF9jcihzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUs
IHUzMiBjciwgdTY0IG9sZF92YWx1ZSwKKwkJICAgICB1NjQgbmV3X3ZhbHVlLCB1NjQgKnJldF92
YWx1ZSk7CiAKICNlbmRpZgpkaWZmIC0tZ2l0IGEvYXJjaC94ODYva3ZtL2t2bWlfbXNnLmMgYi9h
cmNoL3g4Ni9rdm0va3ZtaV9tc2cuYwppbmRleCBkNDhhYmZlNTEzM2IuLjIwMGQ2OGZlYmM4NCAx
MDA2NDQKLS0tIGEvYXJjaC94ODYva3ZtL2t2bWlfbXNnLmMKKysrIGIvYXJjaC94ODYva3ZtL2t2
bWlfbXNnLmMKQEAgLTEzNSw3ICsxMzUsMjYgQEAgc3RhdGljIGludCBoYW5kbGVfdmNwdV9nZXRf
Y3B1aWQoY29uc3Qgc3RydWN0IGt2bWlfdmNwdV9tc2dfam9iICpqb2IsCiAJcmV0dXJuIGt2bWlf
bXNnX3ZjcHVfcmVwbHkoam9iLCBtc2csIGVjLCAmcnBsLCBzaXplb2YocnBsKSk7CiB9CiAKK3N0
YXRpYyBpbnQgaGFuZGxlX3ZjcHVfY29udHJvbF9jcihjb25zdCBzdHJ1Y3Qga3ZtaV92Y3B1X21z
Z19qb2IgKmpvYiwKKwkJCQkgIGNvbnN0IHN0cnVjdCBrdm1pX21zZ19oZHIgKm1zZywKKwkJCQkg
IGNvbnN0IHZvaWQgKl9yZXEpCit7CisJY29uc3Qgc3RydWN0IGt2bWlfdmNwdV9jb250cm9sX2Ny
ICpyZXEgPSBfcmVxOworCWludCBlYzsKKworCWlmIChyZXEtPnBhZGRpbmcxIHx8IHJlcS0+cGFk
ZGluZzIgfHwgcmVxLT5lbmFibGUgPiAxKQorCQllYyA9IC1LVk1fRUlOVkFMOworCWVsc2UgaWYg
KHJlcS0+Y3IgIT0gMCAmJiByZXEtPmNyICE9IDMgJiYgcmVxLT5jciAhPSA0KQorCQllYyA9IC1L
Vk1fRUlOVkFMOworCWVsc2UKKwkJZWMgPSBrdm1pX2FyY2hfY21kX3ZjcHVfY29udHJvbF9jcihq
b2ItPnZjcHUsIHJlcS0+Y3IsCisJCQkJCQkgICByZXEtPmVuYWJsZSA9PSAxKTsKKworCXJldHVy
biBrdm1pX21zZ192Y3B1X3JlcGx5KGpvYiwgbXNnLCBlYywgTlVMTCwgMCk7Cit9CisKIHN0YXRp
YyBjb25zdCBrdm1pX3ZjcHVfbXNnX2pvYl9mY3QgbXNnX3ZjcHVbXSA9IHsKKwlbS1ZNSV9WQ1BV
X0NPTlRST0xfQ1JdICAgID0gaGFuZGxlX3ZjcHVfY29udHJvbF9jciwKIAlbS1ZNSV9WQ1BVX0dF
VF9DUFVJRF0gICAgID0gaGFuZGxlX3ZjcHVfZ2V0X2NwdWlkLAogCVtLVk1JX1ZDUFVfR0VUX0lO
Rk9dICAgICAgPSBoYW5kbGVfdmNwdV9nZXRfaW5mbywKIAlbS1ZNSV9WQ1BVX0dFVF9SRUdJU1RF
UlNdID0gaGFuZGxlX3ZjcHVfZ2V0X3JlZ2lzdGVycywKQEAgLTE0NiwzICsxNjUsMjggQEAga3Zt
aV92Y3B1X21zZ19qb2JfZmN0IGt2bWlfYXJjaF92Y3B1X21zZ19oYW5kbGVyKHUxNiBpZCkKIHsK
IAlyZXR1cm4gaWQgPCBBUlJBWV9TSVpFKG1zZ192Y3B1KSA/IG1zZ192Y3B1W2lkXSA6IE5VTEw7
CiB9CisKK3UzMiBrdm1pX21zZ19zZW5kX2NyKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwgdTMyIGNy
LCB1NjQgb2xkX3ZhbHVlLAorCQkgICAgIHU2NCBuZXdfdmFsdWUsIHU2NCAqcmV0X3ZhbHVlKQor
eworCXN0cnVjdCBrdm1pX3ZjcHVfZXZlbnRfY3IgZTsKKwlzdHJ1Y3Qga3ZtaV92Y3B1X2V2ZW50
X2NyX3JlcGx5IHI7CisJdTMyIGFjdGlvbjsKKwlpbnQgZXJyOworCisJbWVtc2V0KCZlLCAwLCBz
aXplb2YoZSkpOworCWUuY3IgPSBjcjsKKwllLm9sZF92YWx1ZSA9IG9sZF92YWx1ZTsKKwllLm5l
d192YWx1ZSA9IG5ld192YWx1ZTsKKworCWVyciA9IGt2bWlfc2VuZF92Y3B1X2V2ZW50KHZjcHUs
IEtWTUlfVkNQVV9FVkVOVF9DUiwgJmUsIHNpemVvZihlKSwKKwkJCQkgICAmciwgc2l6ZW9mKHIp
LCAmYWN0aW9uKTsKKwlpZiAoZXJyKSB7CisJCWFjdGlvbiA9IEtWTUlfRVZFTlRfQUNUSU9OX0NP
TlRJTlVFOworCQkqcmV0X3ZhbHVlID0gbmV3X3ZhbHVlOworCX0gZWxzZSB7CisJCSpyZXRfdmFs
dWUgPSByLm5ld192YWw7CisJfQorCisJcmV0dXJuIGFjdGlvbjsKK30KZGlmZiAtLWdpdCBhL2Fy
Y2gveDg2L2t2bS92bXgvdm14LmMgYi9hcmNoL3g4Ni9rdm0vdm14L3ZteC5jCmluZGV4IGFjMWQ3
NTA0MjQ3Zi4uMmE4Mzg1OTViYTBiIDEwMDY0NAotLS0gYS9hcmNoL3g4Ni9rdm0vdm14L3ZteC5j
CisrKyBiL2FyY2gveDg2L2t2bS92bXgvdm14LmMKQEAgLTUwODcsNyArNTA4Nyw4IEBAIHN0YXRp
YyBpbnQgaGFuZGxlX2NyKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSkKIAkJCWVyciA9IGhhbmRsZV9z
ZXRfY3IwKHZjcHUsIHZhbCk7CiAJCQlyZXR1cm4ga3ZtX2NvbXBsZXRlX2luc25fZ3AodmNwdSwg
ZXJyKTsKIAkJY2FzZSAzOgotCQkJV0FSTl9PTl9PTkNFKGVuYWJsZV91bnJlc3RyaWN0ZWRfZ3Vl
c3QpOworCQkJV0FSTl9PTl9PTkNFKGVuYWJsZV91bnJlc3RyaWN0ZWRfZ3Vlc3QgJiYKKwkJCQkg
ICAgICFrdm1pX2NyM19pbnRlcmNlcHRlZCh2Y3B1KSk7CiAKIAkJCWVyciA9IGt2bV9zZXRfY3Iz
KHZjcHUsIHZhbCk7CiAJCQlyZXR1cm4ga3ZtX2NvbXBsZXRlX2luc25fZ3AodmNwdSwgZXJyKTsK
QEAgLTUxMTksNyArNTEyMCw4IEBAIHN0YXRpYyBpbnQgaGFuZGxlX2NyKHN0cnVjdCBrdm1fdmNw
dSAqdmNwdSkKIAljYXNlIDE6IC8qbW92IGZyb20gY3IqLwogCQlzd2l0Y2ggKGNyKSB7CiAJCWNh
c2UgMzoKLQkJCVdBUk5fT05fT05DRShlbmFibGVfdW5yZXN0cmljdGVkX2d1ZXN0KTsKKwkJCVdB
Uk5fT05fT05DRShlbmFibGVfdW5yZXN0cmljdGVkX2d1ZXN0ICYmCisJCQkJICAgICAha3ZtaV9j
cjNfaW50ZXJjZXB0ZWQodmNwdSkpOwogCiAJCQl2YWwgPSBrdm1fcmVhZF9jcjModmNwdSk7CiAJ
CQlrdm1fcmVnaXN0ZXJfd3JpdGUodmNwdSwgcmVnLCB2YWwpOwpkaWZmIC0tZ2l0IGEvYXJjaC94
ODYva3ZtL3g4Ni5jIGIvYXJjaC94ODYva3ZtL3g4Ni5jCmluZGV4IGYxOTJjNzEzYjc0MC4uMmNh
YTY5MjlhNzhmIDEwMDY0NAotLS0gYS9hcmNoL3g4Ni9rdm0veDg2LmMKKysrIGIvYXJjaC94ODYv
a3ZtL3g4Ni5jCkBAIC04OTQsNiArODk0LDkgQEAgaW50IGt2bV9zZXRfY3IwKHN0cnVjdCBrdm1f
dmNwdSAqdmNwdSwgdW5zaWduZWQgbG9uZyBjcjApCiAJaWYgKCEoY3IwICYgWDg2X0NSMF9QRykg
JiYga3ZtX3JlYWRfY3I0X2JpdHModmNwdSwgWDg2X0NSNF9QQ0lERSkpCiAJCXJldHVybiAxOwog
CisJaWYgKCFrdm1pX2NyX2V2ZW50KHZjcHUsIDAsIG9sZF9jcjAsICZjcjApKQorCQlyZXR1cm4g
MTsKKwogCXN0YXRpY19jYWxsKGt2bV94ODZfc2V0X2NyMCkodmNwdSwgY3IwKTsKIAogCWt2bV9w
b3N0X3NldF9jcjAodmNwdSwgb2xkX2NyMCwgY3IwKTsKQEAgLTEwNTgsNiArMTA2MSw5IEBAIGlu
dCBrdm1fc2V0X2NyNChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsIHVuc2lnbmVkIGxvbmcgY3I0KQog
CQkJcmV0dXJuIDE7CiAJfQogCisJaWYgKCFrdm1pX2NyX2V2ZW50KHZjcHUsIDQsIG9sZF9jcjQs
ICZjcjQpKQorCQlyZXR1cm4gMTsKKwogCXN0YXRpY19jYWxsKGt2bV94ODZfc2V0X2NyNCkodmNw
dSwgY3I0KTsKIAogCWt2bV9wb3N0X3NldF9jcjQodmNwdSwgb2xkX2NyNCwgY3I0KTsKQEAgLTEw
OTEsNiArMTA5Nyw3IEBAIHN0YXRpYyB2b2lkIGt2bV9pbnZhbGlkYXRlX3BjaWQoc3RydWN0IGt2
bV92Y3B1ICp2Y3B1LCB1bnNpZ25lZCBsb25nIHBjaWQpCiAKIGludCBrdm1fc2V0X2NyMyhzdHJ1
Y3Qga3ZtX3ZjcHUgKnZjcHUsIHVuc2lnbmVkIGxvbmcgY3IzKQogeworCXVuc2lnbmVkIGxvbmcg
b2xkX2NyMyA9IGt2bV9yZWFkX2NyMyh2Y3B1KTsKIAlib29sIHNraXBfdGxiX2ZsdXNoID0gZmFs
c2U7CiAJdW5zaWduZWQgbG9uZyBwY2lkID0gMDsKICNpZmRlZiBDT05GSUdfWDg2XzY0CkBAIC0x
MTA0LDcgKzExMTEsNyBAQCBpbnQga3ZtX3NldF9jcjMoc3RydWN0IGt2bV92Y3B1ICp2Y3B1LCB1
bnNpZ25lZCBsb25nIGNyMykKICNlbmRpZgogCiAJLyogUERQVFJzIGFyZSBhbHdheXMgcmVsb2Fk
ZWQgZm9yIFBBRSBwYWdpbmcuICovCi0JaWYgKGNyMyA9PSBrdm1fcmVhZF9jcjModmNwdSkgJiYg
IWlzX3BhZV9wYWdpbmcodmNwdSkpCisJaWYgKGNyMyA9PSBvbGRfY3IzICYmICFpc19wYWVfcGFn
aW5nKHZjcHUpKQogCQlnb3RvIGhhbmRsZV90bGJfZmx1c2g7CiAKIAkvKgpAQCAtMTExOCw3ICsx
MTI1LDEwIEBAIGludCBrdm1fc2V0X2NyMyhzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsIHVuc2lnbmVk
IGxvbmcgY3IzKQogCWlmIChpc19wYWVfcGFnaW5nKHZjcHUpICYmICFsb2FkX3BkcHRycyh2Y3B1
LCB2Y3B1LT5hcmNoLndhbGtfbW11LCBjcjMpKQogCQlyZXR1cm4gMTsKIAotCWlmIChjcjMgIT0g
a3ZtX3JlYWRfY3IzKHZjcHUpKQorCWlmICgha3ZtaV9jcl9ldmVudCh2Y3B1LCAzLCBvbGRfY3Iz
LCAmY3IzKSkKKwkJcmV0dXJuIDE7CisKKwlpZiAoY3IzICE9IG9sZF9jcjMpCiAJCWt2bV9tbXVf
bmV3X3BnZCh2Y3B1LCBjcjMpOwogCiAJdmNwdS0+YXJjaC5jcjMgPSBjcjM7CmRpZmYgLS1naXQg
YS9pbmNsdWRlL3VhcGkvbGludXgva3ZtaS5oIGIvaW5jbHVkZS91YXBpL2xpbnV4L2t2bWkuaApp
bmRleCA5ZTI4OTYxYTgzODcuLmMxZDhjZjAyMDE4YiAxMDA2NDQKLS0tIGEvaW5jbHVkZS91YXBp
L2xpbnV4L2t2bWkuaAorKysgYi9pbmNsdWRlL3VhcGkvbGludXgva3ZtaS5oCkBAIC00MSw2ICs0
MSw3IEBAIGVudW0gewogCUtWTUlfVkNQVV9HRVRfUkVHSVNURVJTICA9IEtWTUlfVkNQVV9NRVNT
QUdFX0lEKDMpLAogCUtWTUlfVkNQVV9TRVRfUkVHSVNURVJTICA9IEtWTUlfVkNQVV9NRVNTQUdF
X0lEKDQpLAogCUtWTUlfVkNQVV9HRVRfQ1BVSUQgICAgICA9IEtWTUlfVkNQVV9NRVNTQUdFX0lE
KDUpLAorCUtWTUlfVkNQVV9DT05UUk9MX0NSICAgICA9IEtWTUlfVkNQVV9NRVNTQUdFX0lEKDYp
LAogCiAJS1ZNSV9ORVhUX1ZDUFVfTUVTU0FHRQogfTsKQEAgLTU4LDYgKzU5LDcgQEAgZW51bSB7
CiAJS1ZNSV9WQ1BVX0VWRU5UX1BBVVNFICAgICAgPSBLVk1JX1ZDUFVfRVZFTlRfSUQoMCksCiAJ
S1ZNSV9WQ1BVX0VWRU5UX0hZUEVSQ0FMTCAgPSBLVk1JX1ZDUFVfRVZFTlRfSUQoMSksCiAJS1ZN
SV9WQ1BVX0VWRU5UX0JSRUFLUE9JTlQgPSBLVk1JX1ZDUFVfRVZFTlRfSUQoMiksCisJS1ZNSV9W
Q1BVX0VWRU5UX0NSICAgICAgICAgPSBLVk1JX1ZDUFVfRVZFTlRfSUQoMyksCiAKIAlLVk1JX05F
WFRfVkNQVV9FVkVOVAogfTsKZGlmZiAtLWdpdCBhL3Rvb2xzL3Rlc3Rpbmcvc2VsZnRlc3RzL2t2
bS94ODZfNjQva3ZtaV90ZXN0LmMgYi90b29scy90ZXN0aW5nL3NlbGZ0ZXN0cy9rdm0veDg2XzY0
L2t2bWlfdGVzdC5jCmluZGV4IDk5ZjczNzc5YmJiYy4uODY5NzhiMmFiNmM5IDEwMDY0NAotLS0g
YS90b29scy90ZXN0aW5nL3NlbGZ0ZXN0cy9rdm0veDg2XzY0L2t2bWlfdGVzdC5jCisrKyBiL3Rv
b2xzL3Rlc3Rpbmcvc2VsZnRlc3RzL2t2bS94ODZfNjQva3ZtaV90ZXN0LmMKQEAgLTU0LDYgKzU0
LDcgQEAgc3RydWN0IHZjcHVfd29ya2VyX2RhdGEgewogZW51bSB7CiAJR1VFU1RfVEVTVF9OT09Q
ID0gMCwKIAlHVUVTVF9URVNUX0JQLAorCUdVRVNUX1RFU1RfQ1IsCiAJR1VFU1RfVEVTVF9IWVBF
UkNBTEwsCiB9OwogCkBAIC03Nyw2ICs3OCwxMSBAQCBzdGF0aWMgdm9pZCBndWVzdF9icF90ZXN0
KHZvaWQpCiAJYXNtIHZvbGF0aWxlKCJpbnQzIik7CiB9CiAKK3N0YXRpYyB2b2lkIGd1ZXN0X2Ny
X3Rlc3Qodm9pZCkKK3sKKwlzZXRfY3I0KGdldF9jcjQoKSB8IFg4Nl9DUjRfT1NYU0FWRSk7Cit9
CisKIHN0YXRpYyB2b2lkIGd1ZXN0X2h5cGVyY2FsbF90ZXN0KHZvaWQpCiB7CiAJYXNtIHZvbGF0
aWxlKCJtb3YgJDM0LCAlcmF4Iik7CkBAIC05NCw2ICsxMDAsOSBAQCBzdGF0aWMgdm9pZCBndWVz
dF9jb2RlKHZvaWQpCiAJCWNhc2UgR1VFU1RfVEVTVF9CUDoKIAkJCWd1ZXN0X2JwX3Rlc3QoKTsK
IAkJCWJyZWFrOworCQljYXNlIEdVRVNUX1RFU1RfQ1I6CisJCQlndWVzdF9jcl90ZXN0KCk7CisJ
CQlicmVhazsKIAkJY2FzZSBHVUVTVF9URVNUX0hZUEVSQ0FMTDoKIAkJCWd1ZXN0X2h5cGVyY2Fs
bF90ZXN0KCk7CiAJCQlicmVhazsKQEAgLTExMDAsNiArMTEwOSw5NiBAQCBzdGF0aWMgdm9pZCB0
ZXN0X2NtZF92bV9jb250cm9sX2NsZWFudXAoc3RydWN0IGt2bV92bSAqdm0pCiAJY21kX3ZtX2Nv
bnRyb2xfY2xlYW51cChkaXNhYmxlLCAwKTsKIH0KIAorc3RhdGljIHZvaWQgY21kX3ZjcHVfY29u
dHJvbF9jcihzdHJ1Y3Qga3ZtX3ZtICp2bSwgX191OCBjciwgX191OCBlbmFibGUsCisJCQkJaW50
IGV4cGVjdGVkX2VycikKK3sKKwlzdHJ1Y3QgeworCQlzdHJ1Y3Qga3ZtaV9tc2dfaGRyIGhkcjsK
KwkJc3RydWN0IGt2bWlfdmNwdV9oZHIgdmNwdV9oZHI7CisJCXN0cnVjdCBrdm1pX3ZjcHVfY29u
dHJvbF9jciBjbWQ7CisJfSByZXEgPSB7fTsKKworCXJlcS5jbWQuY3IgPSBjcjsKKwlyZXEuY21k
LmVuYWJsZSA9IGVuYWJsZTsKKworCXRlc3RfdmNwdTBfY29tbWFuZCh2bSwgS1ZNSV9WQ1BVX0NP
TlRST0xfQ1IsICZyZXEuaGRyLCBzaXplb2YocmVxKSwKKwkJCSAgIE5VTEwsIDAsIGV4cGVjdGVk
X2Vycik7Cit9CisKK3N0YXRpYyB2b2lkIGVuYWJsZV9jcl9ldmVudHMoc3RydWN0IGt2bV92bSAq
dm0sIF9fdTggY3IpCit7CisJZW5hYmxlX3ZjcHVfZXZlbnQodm0sIEtWTUlfVkNQVV9FVkVOVF9D
Uik7CisKKwljbWRfdmNwdV9jb250cm9sX2NyKHZtLCBjciwgMSwgMCk7Cit9CisKK3N0YXRpYyB2
b2lkIGRpc2FibGVfY3JfZXZlbnRzKHN0cnVjdCBrdm1fdm0gKnZtLCBfX3U4IGNyKQoreworCWNt
ZF92Y3B1X2NvbnRyb2xfY3Iodm0sIGNyLCAwLCAwKTsKKworCWRpc2FibGVfdmNwdV9ldmVudCh2
bSwgS1ZNSV9WQ1BVX0VWRU5UX0NSKTsKK30KKworc3RhdGljIHZvaWQgdGVzdF9pbnZhbGlkX3Zj
cHVfY29udHJvbF9jcihzdHJ1Y3Qga3ZtX3ZtICp2bSkKK3sKKwlfX3U4IGVuYWJsZSA9IDEsIGVu
YWJsZV9pbnZhbCA9IDI7CisJX191OCBjcl9pbnZhbCA9IDk5LCBjciA9IDA7CisKKwljbWRfdmNw
dV9jb250cm9sX2NyKHZtLCBjciwgICAgICAgZW5hYmxlX2ludmFsLCAtS1ZNX0VJTlZBTCk7CisJ
Y21kX3ZjcHVfY29udHJvbF9jcih2bSwgY3JfaW52YWwsIGVuYWJsZSwgICAgICAgLUtWTV9FSU5W
QUwpOworfQorCitzdGF0aWMgdm9pZCB0ZXN0X2NtZF92Y3B1X2NvbnRyb2xfY3Ioc3RydWN0IGt2
bV92bSAqdm0pCit7CisJc3RydWN0IHZjcHVfd29ya2VyX2RhdGEgZGF0YSA9IHsKKwkJLnZtID0g
dm0sCisJCS52Y3B1X2lkID0gVkNQVV9JRCwKKwkJLnRlc3RfaWQgPSBHVUVTVF9URVNUX0NSLAor
CX07CisJc3RydWN0IGt2bWlfbXNnX2hkciBoZHI7CisJc3RydWN0IHsKKwkJc3RydWN0IHZjcHVf
ZXZlbnQgdmNwdV9ldjsKKwkJc3RydWN0IGt2bWlfdmNwdV9ldmVudF9jciBjcjsKKwl9IGV2Owor
CXN0cnVjdCB7CisJCXN0cnVjdCB2Y3B1X3JlcGx5IGNvbW1vbjsKKwkJc3RydWN0IGt2bWlfdmNw
dV9ldmVudF9jcl9yZXBseSBjcjsKKwl9IHJwbCA9IHt9OworCV9fdTE2IGV2ZW50X2lkID0gS1ZN
SV9WQ1BVX0VWRU5UX0NSOworCV9fdTggY3Jfbm8gPSA0OworCXN0cnVjdCBrdm1fc3JlZ3Mgc3Jl
Z3M7CisJcHRocmVhZF90IHZjcHVfdGhyZWFkOworCisJZW5hYmxlX2NyX2V2ZW50cyh2bSwgY3Jf
bm8pOworCisJdmNwdV90aHJlYWQgPSBzdGFydF92Y3B1X3dvcmtlcigmZGF0YSk7CisKKwlyZWNl
aXZlX3ZjcHVfZXZlbnQoJmhkciwgJmV2LnZjcHVfZXYsIHNpemVvZihldiksIGV2ZW50X2lkKTsK
KworCXByX2RlYnVnKCJDUiV1LCBvbGQgMHglbGx4LCBuZXcgMHglbGx4XG4iLAorCQkgZXYuY3Iu
Y3IsIGV2LmNyLm9sZF92YWx1ZSwgZXYuY3IubmV3X3ZhbHVlKTsKKworCVRFU1RfQVNTRVJUKGV2
LmNyLmNyID09IGNyX25vLAorCQkiVW5leHBlY3RlZCBDUiBldmVudCwgcmVjZWl2ZWQgQ1IldSwg
ZXhwZWN0ZWQgQ1IldSIsCisJCWV2LmNyLmNyLCBjcl9ubyk7CisKKwlycGwuY3IubmV3X3ZhbCA9
IGV2LmNyLm9sZF92YWx1ZTsKKworCXJlcGx5X3RvX2V2ZW50KCZoZHIsICZldi52Y3B1X2V2LCBL
Vk1JX0VWRU5UX0FDVElPTl9DT05USU5VRSwKKwkJICAgICAgICZycGwuY29tbW9uLCBzaXplb2Yo
cnBsKSk7CisKKwl3YWl0X3ZjcHVfd29ya2VyKHZjcHVfdGhyZWFkKTsKKworCWRpc2FibGVfY3Jf
ZXZlbnRzKHZtLCBjcl9ubyk7CisKKwl2Y3B1X3NyZWdzX2dldCh2bSwgVkNQVV9JRCwgJnNyZWdz
KTsKKwlURVNUX0FTU0VSVChzcmVncy5jcjQgPT0gZXYuY3Iub2xkX3ZhbHVlLAorCQkiRmFpbGVk
IHRvIGJsb2NrIENSNCB1cGRhdGUsIENSNCAweCVsbHgsIGV4cGVjdGVkIDB4JWxseCIsCisJCXNy
ZWdzLmNyNCwgZXYuY3Iub2xkX3ZhbHVlKTsKKworCXRlc3RfaW52YWxpZF92Y3B1X2NvbnRyb2xf
Y3Iodm0pOworfQorCiBzdGF0aWMgdm9pZCB0ZXN0X2ludHJvc3BlY3Rpb24oc3RydWN0IGt2bV92
bSAqdm0pCiB7CiAJc3JhbmRvbSh0aW1lKDApKTsKQEAgLTExMjMsNiArMTIyMiw3IEBAIHN0YXRp
YyB2b2lkIHRlc3RfaW50cm9zcGVjdGlvbihzdHJ1Y3Qga3ZtX3ZtICp2bSkKIAl0ZXN0X2V2ZW50
X2h5cGVyY2FsbCh2bSk7CiAJdGVzdF9ldmVudF9icmVha3BvaW50KHZtKTsKIAl0ZXN0X2NtZF92
bV9jb250cm9sX2NsZWFudXAodm0pOworCXRlc3RfY21kX3ZjcHVfY29udHJvbF9jcih2bSk7CiAK
IAl1bmhvb2tfaW50cm9zcGVjdGlvbih2bSk7CiB9CmRpZmYgLS1naXQgYS92aXJ0L2t2bS9pbnRy
b3NwZWN0aW9uL2t2bWkuYyBiL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaS5jCmluZGV4IGY0
ZGU4MjA4NDhhMy4uYjVmY2Q4YTNkOGFlIDEwMDY0NAotLS0gYS92aXJ0L2t2bS9pbnRyb3NwZWN0
aW9uL2t2bWkuYworKysgYi92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWkuYwpAQCAtMzY5LDcg
KzM2OSw3IEBAIHN0cnVjdCBrdm1faW50cm9zcGVjdGlvbiAqIF9fbXVzdF9jaGVjayBrdm1pX2dl
dChzdHJ1Y3Qga3ZtICprdm0pCiAJcmV0dXJuIE5VTEw7CiB9CiAKLXN0YXRpYyB2b2lkIGt2bWlf
cHV0KHN0cnVjdCBrdm0gKmt2bSkKK3ZvaWQga3ZtaV9wdXQoc3RydWN0IGt2bSAqa3ZtKQogewog
CWlmIChyZWZjb3VudF9kZWNfYW5kX3Rlc3QoJmt2bS0+a3ZtaV9yZWYpKQogCQljb21wbGV0ZSgm
a3ZtLT5rdm1pX2NvbXBsZXRlKTsKZGlmZiAtLWdpdCBhL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24v
a3ZtaV9pbnQuaCBiL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9pbnQuaAppbmRleCA4YTI2
NmIwNTgxNTUuLmIxODc3YTc3MGZjYiAxMDA2NDQKLS0tIGEvdmlydC9rdm0vaW50cm9zcGVjdGlv
bi9rdm1pX2ludC5oCisrKyBiL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9pbnQuaApAQCAt
NjksNiArNjksOCBAQCBpbnQga3ZtaV9hZGRfam9iKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwKIHZv
aWQga3ZtaV9ydW5fam9icyhzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUpOwogdm9pZCBrdm1pX2hhbmRs
ZV9jb21tb25fZXZlbnRfYWN0aW9ucyhzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsIHUzMiBhY3Rpb24p
Owogdm9pZCBrdm1pX2NtZF92bV9jb250cm9sX2NsZWFudXAoc3RydWN0IGt2bV9pbnRyb3NwZWN0
aW9uICprdm1pLCBib29sIGVuYWJsZSk7CitzdHJ1Y3Qga3ZtX2ludHJvc3BlY3Rpb24gKiBfX211
c3RfY2hlY2sga3ZtaV9nZXQoc3RydWN0IGt2bSAqa3ZtKTsKK3ZvaWQga3ZtaV9wdXQoc3RydWN0
IGt2bSAqa3ZtKTsKIGludCBrdm1pX2NtZF92bV9jb250cm9sX2V2ZW50cyhzdHJ1Y3Qga3ZtX2lu
dHJvc3BlY3Rpb24gKmt2bWksCiAJCQkgICAgICAgdTE2IGV2ZW50X2lkLCBib29sIGVuYWJsZSk7
CiBpbnQga3ZtaV9jbWRfdmNwdV9jb250cm9sX2V2ZW50cyhzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUs
Cl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fClZpcnR1YWxp
emF0aW9uIG1haWxpbmcgbGlzdApWaXJ0dWFsaXphdGlvbkBsaXN0cy5saW51eC1mb3VuZGF0aW9u
Lm9yZwpodHRwczovL2xpc3RzLmxpbnV4Zm91bmRhdGlvbi5vcmcvbWFpbG1hbi9saXN0aW5mby92
aXJ0dWFsaXphdGlvbg==
