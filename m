Return-Path: <virtualization-bounces@lists.linux-foundation.org>
X-Original-To: lists.virtualization@lfdr.de
Delivered-To: lists.virtualization@lfdr.de
Received: from silver.osuosl.org (smtp3.osuosl.org [140.211.166.136])
	by mail.lfdr.de (Postfix) with ESMTPS id 9C7341978EB
	for <lists.virtualization@lfdr.de>; Mon, 30 Mar 2020 12:20:27 +0200 (CEST)
Received: from localhost (localhost [127.0.0.1])
	by silver.osuosl.org (Postfix) with ESMTP id 297DF231A1;
	Mon, 30 Mar 2020 10:20:26 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from silver.osuosl.org ([127.0.0.1])
	by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id G5InEaDEW5wt; Mon, 30 Mar 2020 10:20:19 +0000 (UTC)
Received: from lists.linuxfoundation.org (lf-lists.osuosl.org [140.211.9.56])
	by silver.osuosl.org (Postfix) with ESMTP id 086A623307;
	Mon, 30 Mar 2020 10:20:02 +0000 (UTC)
Received: from lf-lists.osuosl.org (localhost [127.0.0.1])
	by lists.linuxfoundation.org (Postfix) with ESMTP id C2AFDC07FF;
	Mon, 30 Mar 2020 10:20:01 +0000 (UTC)
X-Original-To: virtualization@lists.linux-foundation.org
Delivered-To: virtualization@lists.linuxfoundation.org
Received: from hemlock.osuosl.org (smtp2.osuosl.org [140.211.166.133])
 by lists.linuxfoundation.org (Postfix) with ESMTP id A76CEC1D8E
 for <virtualization@lists.linux-foundation.org>;
 Mon, 30 Mar 2020 10:19:53 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by hemlock.osuosl.org (Postfix) with ESMTP id 97B8088461
 for <virtualization@lists.linux-foundation.org>;
 Mon, 30 Mar 2020 10:19:53 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from hemlock.osuosl.org ([127.0.0.1])
 by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id 4b8pY5RUYN-v
 for <virtualization@lists.linux-foundation.org>;
 Mon, 30 Mar 2020 10:19:52 +0000 (UTC)
X-Greylist: domain auto-whitelisted by SQLgrey-1.7.6
Received: from mx01.bbu.dsd.mx.bitdefender.com
 (mx01.bbu.dsd.mx.bitdefender.com [91.199.104.161])
 by hemlock.osuosl.org (Postfix) with ESMTPS id 5D73588448
 for <virtualization@lists.linux-foundation.org>;
 Mon, 30 Mar 2020 10:19:52 +0000 (UTC)
Received: from smtp.bitdefender.com (smtp02.buh.bitdefender.net [10.17.80.76])
 by mx01.bbu.dsd.mx.bitdefender.com (Postfix) with ESMTPS id
 32551305D490; Mon, 30 Mar 2020 13:13:00 +0300 (EEST)
Received: from localhost.localdomain (unknown [91.199.104.28])
 by smtp.bitdefender.com (Postfix) with ESMTPSA id 11084305B7A2;
 Mon, 30 Mar 2020 13:13:00 +0300 (EEST)
From: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>
To: kvm@vger.kernel.org
Subject: [PATCH v8 68/81] KVM: introspection: add KVMI_VCPU_GET_XSAVE
Date: Mon, 30 Mar 2020 13:12:55 +0300
Message-Id: <20200330101308.21702-69-alazar@bitdefender.com>
In-Reply-To: <20200330101308.21702-1-alazar@bitdefender.com>
References: <20200330101308.21702-1-alazar@bitdefender.com>
MIME-Version: 1.0
Cc: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>,
 Paolo Bonzini <pbonzini@redhat.com>,
 =?UTF-8?q?Mihai=20Don=C8=9Bu?= <mdontu@bitdefender.com>,
 virtualization@lists.linux-foundation.org
X-BeenThere: virtualization@lists.linux-foundation.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Linux virtualization <virtualization.lists.linux-foundation.org>
List-Unsubscribe: <https://lists.linuxfoundation.org/mailman/options/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=unsubscribe>
List-Archive: <http://lists.linuxfoundation.org/pipermail/virtualization/>
List-Post: <mailto:virtualization@lists.linux-foundation.org>
List-Help: <mailto:virtualization-request@lists.linux-foundation.org?subject=help>
List-Subscribe: <https://lists.linuxfoundation.org/mailman/listinfo/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: virtualization-bounces@lists.linux-foundation.org
Sender: "Virtualization" <virtualization-bounces@lists.linux-foundation.org>

RnJvbTogTWloYWkgRG9uyJt1IDxtZG9udHVAYml0ZGVmZW5kZXIuY29tPgoKVGhpcyB2Q1BVIGNv
bW1hbmQgaXMgdXNlZCB0byBnZXQgdGhlIFhTQVZFIGFyZWEuCgpTaWduZWQtb2ZmLWJ5OiBNaWhh
aSBEb27Im3UgPG1kb250dUBiaXRkZWZlbmRlci5jb20+CkNvLWRldmVsb3BlZC1ieTogQWRhbGJl
cnQgTGF6xINyIDxhbGF6YXJAYml0ZGVmZW5kZXIuY29tPgpTaWduZWQtb2ZmLWJ5OiBBZGFsYmVy
dCBMYXrEg3IgPGFsYXphckBiaXRkZWZlbmRlci5jb20+Ci0tLQogRG9jdW1lbnRhdGlvbi92aXJ0
L2t2bS9rdm1pLnJzdCAgICAgICAgICAgICAgIHwgMzEgKysrKysrKysrKysrKysrKysrKwogYXJj
aC94ODYvaW5jbHVkZS91YXBpL2FzbS9rdm1pLmggICAgICAgICAgICAgIHwgIDQgKysrCiBhcmNo
L3g4Ni9rdm0va3ZtaS5jICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAyMSArKysrKysrKysr
KysrCiBpbmNsdWRlL3VhcGkvbGludXgva3ZtaS5oICAgICAgICAgICAgICAgICAgICAgfCAgMiAr
KwogLi4uL3Rlc3Rpbmcvc2VsZnRlc3RzL2t2bS94ODZfNjQva3ZtaV90ZXN0LmMgIHwgMjEgKysr
KysrKysrKysrKwogdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pX2ludC5oICAgICAgICAgICAg
IHwgIDMgKysKIHZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9tc2cuYyAgICAgICAgICAgICB8
IDE3ICsrKysrKysrKysKIDcgZmlsZXMgY2hhbmdlZCwgOTkgaW5zZXJ0aW9ucygrKQoKZGlmZiAt
LWdpdCBhL0RvY3VtZW50YXRpb24vdmlydC9rdm0va3ZtaS5yc3QgYi9Eb2N1bWVudGF0aW9uL3Zp
cnQva3ZtL2t2bWkucnN0CmluZGV4IDA2ZWQwNWY0NzkxYi4uZTFiZThkNjNiZmNkIDEwMDY0NAot
LS0gYS9Eb2N1bWVudGF0aW9uL3ZpcnQva3ZtL2t2bWkucnN0CisrKyBiL0RvY3VtZW50YXRpb24v
dmlydC9rdm0va3ZtaS5yc3QKQEAgLTc3Nyw2ICs3NzcsMzcgQEAgbWVtb3J5IHNsb3RzIGFsbG9j
YXRlZCBieSBLVk0sIGNvbnNpZGVyaW5nIGFsbCBhZGRyZXNzIHNwYWNlcyBpbmRpY2F0ZWQKIGJ5
IEtWTV9BRERSRVNTX1NQQUNFX05VTS4gU3RyaWNseSBzcGVha2luZywgdGhlIHJldHVybmVkIHZh
bHVlIHJlZmVycwogdG8gdGhlIGZpcnN0IGluYWNjZXNzaWJsZSBHRk4sIG5leHQgdG8gdGhlIG1h
eGltdW0gYWNjZXNzaWJsZSBHRk4uCiAKKzE3LiBLVk1JX1ZDUFVfR0VUX1hTQVZFCistLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLQorCis6QXJjaGl0ZWN0dXJlOiB4ODYKKzpWZXJzaW9uczogPj0gMQor
OlBhcmFtZXRlcnM6CisKKzo6CisKKwlzdHJ1Y3Qga3ZtaV92Y3B1X2hkcjsKKworOlJldHVybnM6
CisKKzo6CisKKwlzdHJ1Y3Qga3ZtaV9lcnJvcl9jb2RlOworCXN0cnVjdCBrdm1pX3ZjcHVfZ2V0
X3hzYXZlX3JlcGx5IHsKKwkJX191MzIgcmVnaW9uWzBdOworCX07CisKK1JldHVybnMgYSBidWZm
ZXIgY29udGFpbmluZyB0aGUgWFNBVkUgYXJlYS4gQ3VycmVudGx5LCB0aGUgc2l6ZSBvZgorYGBr
dm1feHNhdmVgYCBpcyB1c2VkLCBidXQgaXQgY291bGQgY2hhbmdlLiBUaGUgdXNlcnNwYWNlIHNo
b3VsZCBnZXQKK3RoZSBidWZmZXIgc2l6ZSBmcm9tIHRoZSBtZXNzYWdlIHNpemUgKGt2bWlfbXNn
X2hkci5zaXplKS4KKworOkVycm9yczoKKworKiAtS1ZNX0VJTlZBTCAtIHRoZSBzZWxlY3RlZCB2
Q1BVIGlzIGludmFsaWQKKyogLUtWTV9FSU5WQUwgLSB0aGUgcGFkZGluZyBpcyBub3QgemVybwor
KiAtS1ZNX0VBR0FJTiAtIHRoZSBzZWxlY3RlZCB2Q1BVIGNhbid0IGJlIGludHJvc3BlY3RlZCB5
ZXQKKyogLUtWTV9FTk9NRU0gLSB0aGVyZSBpcyBub3QgZW5vdWdoIG1lbW9yeSB0byBhbGxvY2F0
ZSB0aGUgcmVwbHkKKwogRXZlbnRzCiA9PT09PT0KIApkaWZmIC0tZ2l0IGEvYXJjaC94ODYvaW5j
bHVkZS91YXBpL2FzbS9rdm1pLmggYi9hcmNoL3g4Ni9pbmNsdWRlL3VhcGkvYXNtL2t2bWkuaApp
bmRleCAwNzNkYmFhYzA2YjEuLjM5ODEyZTkzYzljMSAxMDA2NDQKLS0tIGEvYXJjaC94ODYvaW5j
bHVkZS91YXBpL2FzbS9rdm1pLmgKKysrIGIvYXJjaC94ODYvaW5jbHVkZS91YXBpL2FzbS9rdm1p
LmgKQEAgLTk3LDQgKzk3LDggQEAgc3RydWN0IGt2bWlfdmNwdV9pbmplY3RfZXhjZXB0aW9uIHsK
IAlfX3U2NCBhZGRyZXNzOwogfTsKIAorc3RydWN0IGt2bWlfdmNwdV9nZXRfeHNhdmVfcmVwbHkg
eworCV9fdTMyIHJlZ2lvblswXTsKK307CisKICNlbmRpZiAvKiBfVUFQSV9BU01fWDg2X0tWTUlf
SCAqLwpkaWZmIC0tZ2l0IGEvYXJjaC94ODYva3ZtL2t2bWkuYyBiL2FyY2gveDg2L2t2bS9rdm1p
LmMKaW5kZXggZjk0N2YxOGU5ZDcyLi4zNDg1ODNkODIzN2YgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2
L2t2bS9rdm1pLmMKKysrIGIvYXJjaC94ODYva3ZtL2t2bWkuYwpAQCAtNzAxLDMgKzcwMSwyNCBA
QCB2b2lkIGt2bWlfeHNldGJ2X2V2ZW50KHN0cnVjdCBrdm1fdmNwdSAqdmNwdSkKIAogCWt2bWlf
cHV0KHZjcHUtPmt2bSk7CiB9CisKK2ludCBrdm1pX2FyY2hfY21kX3ZjcHVfZ2V0X3hzYXZlKHN0
cnVjdCBrdm1fdmNwdSAqdmNwdSwKKwkJCQkgc3RydWN0IGt2bWlfdmNwdV9nZXRfeHNhdmVfcmVw
bHkgKipkZXN0LAorCQkJCSBzaXplX3QgKmRlc3Rfc2l6ZSkKK3sKKwlzdHJ1Y3Qga3ZtaV92Y3B1
X2dldF94c2F2ZV9yZXBseSAqcnBsID0gTlVMTDsKKwlzaXplX3QgcnBsX3NpemUgPSBzaXplb2Yo
KnJwbCkgKyBzaXplb2Yoc3RydWN0IGt2bV94c2F2ZSk7CisJc3RydWN0IGt2bV94c2F2ZSAqYXJl
YTsKKworCXJwbCA9IGt2bWlfbXNnX2FsbG9jX2NoZWNrKHJwbF9zaXplKTsKKwlpZiAoIXJwbCkK
KwkJcmV0dXJuIC1LVk1fRU5PTUVNOworCisJYXJlYSA9IChzdHJ1Y3Qga3ZtX3hzYXZlICopIHJw
bC0+cmVnaW9uOworCWt2bV92Y3B1X2lvY3RsX3g4Nl9nZXRfeHNhdmUodmNwdSwgYXJlYSk7CisK
KwkqZGVzdCA9IHJwbDsKKwkqZGVzdF9zaXplID0gcnBsX3NpemU7CisKKwlyZXR1cm4gMDsKK30K
ZGlmZiAtLWdpdCBhL2luY2x1ZGUvdWFwaS9saW51eC9rdm1pLmggYi9pbmNsdWRlL3VhcGkvbGlu
dXgva3ZtaS5oCmluZGV4IGVjZjE0MGJhM2NhYi4uYjMwMDhmOTZkZDA2IDEwMDY0NAotLS0gYS9p
bmNsdWRlL3VhcGkvbGludXgva3ZtaS5oCisrKyBiL2luY2x1ZGUvdWFwaS9saW51eC9rdm1pLmgK
QEAgLTM2LDYgKzM2LDggQEAgZW51bSB7CiAKIAlLVk1JX1ZNX0dFVF9NQVhfR0ZOID0gMTcsCiAK
KwlLVk1JX1ZDUFVfR0VUX1hTQVZFID0gMTgsCisKIAlLVk1JX05VTV9NRVNTQUdFUwogfTsKIApk
aWZmIC0tZ2l0IGEvdG9vbHMvdGVzdGluZy9zZWxmdGVzdHMva3ZtL3g4Nl82NC9rdm1pX3Rlc3Qu
YyBiL3Rvb2xzL3Rlc3Rpbmcvc2VsZnRlc3RzL2t2bS94ODZfNjQva3ZtaV90ZXN0LmMKaW5kZXgg
M2E0NTgzNGU5MjM1Li40YWEwMzNhMmIxOGIgMTAwNjQ0Ci0tLSBhL3Rvb2xzL3Rlc3Rpbmcvc2Vs
ZnRlc3RzL2t2bS94ODZfNjQva3ZtaV90ZXN0LmMKKysrIGIvdG9vbHMvdGVzdGluZy9zZWxmdGVz
dHMva3ZtL3g4Nl82NC9rdm1pX3Rlc3QuYwpAQCAtMTMyNSw2ICsxMzI1LDI2IEBAIHN0YXRpYyB2
b2lkIHRlc3RfZXZlbnRfeHNldGJ2KHN0cnVjdCBrdm1fdm0gKnZtKQogCWRpc2FibGVfdmNwdV9l
dmVudCh2bSwgZXZlbnRfaWQpOwogfQogCitzdGF0aWMgdm9pZCB0ZXN0X2NtZF92Y3B1X2dldF94
c2F2ZShzdHJ1Y3Qga3ZtX3ZtICp2bSkKK3sKKwlzdHJ1Y3Qga3ZtX2NwdWlkX2VudHJ5MiAqZW50
cnk7CisJc3RydWN0IHsKKwkJc3RydWN0IGt2bWlfbXNnX2hkciBoZHI7CisJCXN0cnVjdCBrdm1p
X3ZjcHVfaGRyIHZjcHVfaGRyOworCX0gcmVxID0ge307CisJc3RydWN0IGt2bV94c2F2ZSBycGw7
CisKKwllbnRyeSA9IGt2bV9nZXRfc3VwcG9ydGVkX2NwdWlkX2VudHJ5KDEpOworCWlmICghKGVu
dHJ5LT5lY3ggJiBYODZfRkVBVFVSRV9YU0FWRSkpIHsKKwkJREVCVUcoIlhTQVZFIGlzIG5vdCBz
dXBwb3J0ZWQsIGVjeCAweCV4LCBza2lwcGluZyB4c2F2ZSB0ZXN0XG4iLAorCQkJZW50cnktPmVj
eCk7CisJCXJldHVybjsKKwl9CisKKwl0ZXN0X3ZjcHUwX2NvbW1hbmQodm0sIEtWTUlfVkNQVV9H
RVRfWFNBVkUsICZyZXEuaGRyLCBzaXplb2YocmVxKSwKKwkJCSAgICZycGwsIHNpemVvZihycGwp
KTsKK30KKwogc3RhdGljIHZvaWQgdGVzdF9pbnRyb3NwZWN0aW9uKHN0cnVjdCBrdm1fdm0gKnZt
KQogewogCXNyYW5kb20odGltZSgwKSk7CkBAIC0xMzUxLDYgKzEzNzEsNyBAQCBzdGF0aWMgdm9p
ZCB0ZXN0X2ludHJvc3BlY3Rpb24oc3RydWN0IGt2bV92bSAqdm0pCiAJdGVzdF9jbWRfdmNwdV9p
bmplY3RfZXhjZXB0aW9uKHZtKTsKIAl0ZXN0X2NtZF92bV9nZXRfbWF4X2dmbigpOwogCXRlc3Rf
ZXZlbnRfeHNldGJ2KHZtKTsKKwl0ZXN0X2NtZF92Y3B1X2dldF94c2F2ZSh2bSk7CiAKIAl1bmhv
b2tfaW50cm9zcGVjdGlvbih2bSk7CiB9CmRpZmYgLS1naXQgYS92aXJ0L2t2bS9pbnRyb3NwZWN0
aW9uL2t2bWlfaW50LmggYi92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWlfaW50LmgKaW5kZXgg
NTlhOGIyMGFmMGZkLi45MDc3NTFiYmY1OTYgMTAwNjQ0Ci0tLSBhL3ZpcnQva3ZtL2ludHJvc3Bl
Y3Rpb24va3ZtaV9pbnQuaAorKysgYi92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWlfaW50LmgK
QEAgLTEwMyw1ICsxMDMsOCBAQCBpbnQga3ZtaV9hcmNoX2NtZF92Y3B1X2luamVjdF9leGNlcHRp
b24oc3RydWN0IGt2bV92Y3B1ICp2Y3B1LCB1OCB2ZWN0b3IsCiAJCQkJCXUzMiBlcnJvcl9jb2Rl
LCB1NjQgYWRkcmVzcyk7CiB2b2lkIGt2bWlfYXJjaF90cmFwX2V2ZW50KHN0cnVjdCBrdm1fdmNw
dSAqdmNwdSk7CiB2b2lkIGt2bWlfYXJjaF9pbmplY3RfZXhjZXB0aW9uKHN0cnVjdCBrdm1fdmNw
dSAqdmNwdSk7CitpbnQga3ZtaV9hcmNoX2NtZF92Y3B1X2dldF94c2F2ZShzdHJ1Y3Qga3ZtX3Zj
cHUgKnZjcHUsCisJCQkJIHN0cnVjdCBrdm1pX3ZjcHVfZ2V0X3hzYXZlX3JlcGx5ICoqZGVzdCwK
KwkJCQkgc2l6ZV90ICpkZXN0X3NpemUpOwogCiAjZW5kaWYKZGlmZiAtLWdpdCBhL3ZpcnQva3Zt
L2ludHJvc3BlY3Rpb24va3ZtaV9tc2cuYyBiL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9t
c2cuYwppbmRleCA4YWU1N2M4NzI1NmYuLjliYzY0OGIyZWIwOCAxMDA2NDQKLS0tIGEvdmlydC9r
dm0vaW50cm9zcGVjdGlvbi9rdm1pX21zZy5jCisrKyBiL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24v
a3ZtaV9tc2cuYwpAQCAtMzQsNiArMzQsNyBAQCBzdGF0aWMgY29uc3QgY2hhciAqY29uc3QgbXNn
X0lEc1tdID0gewogCVtLVk1JX1ZDUFVfR0VUX0NQVUlEXSAgICAgICAgPSAiS1ZNSV9WQ1BVX0dF
VF9DUFVJRCIsCiAJW0tWTUlfVkNQVV9HRVRfSU5GT10gICAgICAgICA9ICJLVk1JX1ZDUFVfR0VU
X0lORk8iLAogCVtLVk1JX1ZDUFVfR0VUX1JFR0lTVEVSU10gICAgPSAiS1ZNSV9WQ1BVX0dFVF9S
RUdJU1RFUlMiLAorCVtLVk1JX1ZDUFVfR0VUX1hTQVZFXSAgICAgICAgPSAiS1ZNSV9WQ1BVX0dF
VF9YU0FWRSIsCiAJW0tWTUlfVkNQVV9JTkpFQ1RfRVhDRVBUSU9OXSA9ICJLVk1JX1ZDUFVfSU5K
RUNUX0VYQ0VQVElPTiIsCiAJW0tWTUlfVkNQVV9QQVVTRV0gICAgICAgICAgICA9ICJLVk1JX1ZD
UFVfUEFVU0UiLAogCVtLVk1JX1ZDUFVfU0VUX1JFR0lTVEVSU10gICAgPSAiS1ZNSV9WQ1BVX1NF
VF9SRUdJU1RFUlMiLApAQCAtNTYwLDYgKzU2MSwyMSBAQCBzdGF0aWMgaW50IGhhbmRsZV92Y3B1
X2luamVjdF9leGNlcHRpb24oY29uc3Qgc3RydWN0IGt2bWlfdmNwdV9jbWRfam9iICpqb2IsCiAJ
cmV0dXJuIGt2bWlfbXNnX3ZjcHVfcmVwbHkoam9iLCBtc2csIGVjLCBOVUxMLCAwKTsKIH0KIAor
c3RhdGljIGludCBoYW5kbGVfdmNwdV9nZXRfeHNhdmUoY29uc3Qgc3RydWN0IGt2bWlfdmNwdV9j
bWRfam9iICpqb2IsCisJCQkJIGNvbnN0IHN0cnVjdCBrdm1pX21zZ19oZHIgKm1zZywKKwkJCQkg
Y29uc3Qgdm9pZCAqcmVxKQoreworCXN0cnVjdCBrdm1pX3ZjcHVfZ2V0X3hzYXZlX3JlcGx5ICpy
cGwgPSBOVUxMOworCXNpemVfdCBycGxfc2l6ZSA9IDA7CisJaW50IGVyciwgZWM7CisKKwllYyA9
IGt2bWlfYXJjaF9jbWRfdmNwdV9nZXRfeHNhdmUoam9iLT52Y3B1LCAmcnBsLCAmcnBsX3NpemUp
OworCisJZXJyID0ga3ZtaV9tc2dfdmNwdV9yZXBseShqb2IsIG1zZywgZWMsIHJwbCwgcnBsX3Np
emUpOworCWt2bWlfbXNnX2ZyZWUocnBsKTsKKwlyZXR1cm4gZXJyOworfQorCiAvKgogICogVGhl
c2UgY29tbWFuZHMgYXJlIGV4ZWN1dGVkIGZyb20gdGhlIHZDUFUgdGhyZWFkLiBUaGUgcmVjZWl2
aW5nIHRocmVhZAogICogcGFzc2VzIHRoZSBtZXNzYWdlcyB1c2luZyBhIG5ld2x5IGFsbG9jYXRl
ZCAnc3RydWN0IGt2bWlfdmNwdV9jbWRfam9iJwpAQCAtNTc0LDYgKzU5MCw3IEBAIHN0YXRpYyBp
bnQoKmNvbnN0IG1zZ192Y3B1W10pKGNvbnN0IHN0cnVjdCBrdm1pX3ZjcHVfY21kX2pvYiAqLAog
CVtLVk1JX1ZDUFVfR0VUX0NQVUlEXSAgICAgICAgPSBoYW5kbGVfZ2V0X2NwdWlkLAogCVtLVk1J
X1ZDUFVfR0VUX0lORk9dICAgICAgICAgPSBoYW5kbGVfZ2V0X3ZjcHVfaW5mbywKIAlbS1ZNSV9W
Q1BVX0dFVF9SRUdJU1RFUlNdICAgID0gaGFuZGxlX2dldF9yZWdpc3RlcnMsCisJW0tWTUlfVkNQ
VV9HRVRfWFNBVkVdICAgICAgICA9IGhhbmRsZV92Y3B1X2dldF94c2F2ZSwKIAlbS1ZNSV9WQ1BV
X0lOSkVDVF9FWENFUFRJT05dID0gaGFuZGxlX3ZjcHVfaW5qZWN0X2V4Y2VwdGlvbiwKIAlbS1ZN
SV9WQ1BVX1NFVF9SRUdJU1RFUlNdICAgID0gaGFuZGxlX3NldF9yZWdpc3RlcnMsCiB9OwpfX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpWaXJ0dWFsaXphdGlv
biBtYWlsaW5nIGxpc3QKVmlydHVhbGl6YXRpb25AbGlzdHMubGludXgtZm91bmRhdGlvbi5vcmcK
aHR0cHM6Ly9saXN0cy5saW51eGZvdW5kYXRpb24ub3JnL21haWxtYW4vbGlzdGluZm8vdmlydHVh
bGl6YXRpb24=
