Return-Path: <virtualization-bounces@lists.linux-foundation.org>
X-Original-To: lists.virtualization@lfdr.de
Delivered-To: lists.virtualization@lfdr.de
Received: from silver.osuosl.org (smtp3.osuosl.org [140.211.166.136])
	by mail.lfdr.de (Postfix) with ESMTPS id 43DA12D1B79
	for <lists.virtualization@lfdr.de>; Mon,  7 Dec 2020 21:57:39 +0100 (CET)
Received: from localhost (localhost [127.0.0.1])
	by silver.osuosl.org (Postfix) with ESMTP id CBE322E2B5;
	Mon,  7 Dec 2020 20:57:37 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from silver.osuosl.org ([127.0.0.1])
	by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id JMKbNeqaXf-w; Mon,  7 Dec 2020 20:57:19 +0000 (UTC)
Received: from lists.linuxfoundation.org (lf-lists.osuosl.org [140.211.9.56])
	by silver.osuosl.org (Postfix) with ESMTP id 0CF1F2E2AB;
	Mon,  7 Dec 2020 20:56:58 +0000 (UTC)
Received: from lf-lists.osuosl.org (localhost [127.0.0.1])
	by lists.linuxfoundation.org (Postfix) with ESMTP id 01E50C0FA7;
	Mon,  7 Dec 2020 20:56:58 +0000 (UTC)
X-Original-To: virtualization@lists.linux-foundation.org
Delivered-To: virtualization@lists.linuxfoundation.org
Received: from whitealder.osuosl.org (smtp1.osuosl.org [140.211.166.138])
 by lists.linuxfoundation.org (Postfix) with ESMTP id 0E5CDC0FA7
 for <virtualization@lists.linux-foundation.org>;
 Mon,  7 Dec 2020 20:56:55 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by whitealder.osuosl.org (Postfix) with ESMTP id E4B9987A8A
 for <virtualization@lists.linux-foundation.org>;
 Mon,  7 Dec 2020 20:56:54 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from whitealder.osuosl.org ([127.0.0.1])
 by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id c+GKnQLMip-9
 for <virtualization@lists.linux-foundation.org>;
 Mon,  7 Dec 2020 20:56:54 +0000 (UTC)
X-Greylist: from auto-whitelisted by SQLgrey-1.7.6
Received: from mx01.bbu.dsd.mx.bitdefender.com
 (mx01.bbu.dsd.mx.bitdefender.com [91.199.104.161])
 by whitealder.osuosl.org (Postfix) with ESMTPS id 575B387A67
 for <virtualization@lists.linux-foundation.org>;
 Mon,  7 Dec 2020 20:56:54 +0000 (UTC)
Received: from smtp.bitdefender.com (smtp01.buh.bitdefender.com [10.17.80.75])
 by mx01.bbu.dsd.mx.bitdefender.com (Postfix) with ESMTPS id
 C61D130462E2; Mon,  7 Dec 2020 22:46:23 +0200 (EET)
Received: from localhost.localdomain (unknown [91.199.104.27])
 by smtp.bitdefender.com (Postfix) with ESMTPSA id A5D763072784;
 Mon,  7 Dec 2020 22:46:23 +0200 (EET)
From: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>
To: kvm@vger.kernel.org
Subject: [PATCH v11 66/81] KVM: introspection: add KVMI_VCPU_GET_XCR
Date: Mon,  7 Dec 2020 22:46:07 +0200
Message-Id: <20201207204622.15258-67-alazar@bitdefender.com>
In-Reply-To: <20201207204622.15258-1-alazar@bitdefender.com>
References: <20201207204622.15258-1-alazar@bitdefender.com>
MIME-Version: 1.0
Cc: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>,
 Paolo Bonzini <pbonzini@redhat.com>, virtualization@lists.linux-foundation.org
X-BeenThere: virtualization@lists.linux-foundation.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Linux virtualization <virtualization.lists.linux-foundation.org>
List-Unsubscribe: <https://lists.linuxfoundation.org/mailman/options/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=unsubscribe>
List-Archive: <http://lists.linuxfoundation.org/pipermail/virtualization/>
List-Post: <mailto:virtualization@lists.linux-foundation.org>
List-Help: <mailto:virtualization-request@lists.linux-foundation.org?subject=help>
List-Subscribe: <https://lists.linuxfoundation.org/mailman/listinfo/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: virtualization-bounces@lists.linux-foundation.org
Sender: "Virtualization" <virtualization-bounces@lists.linux-foundation.org>

VGhpcyBjYW4gYmUgdXNlZCBieSB0aGUgaW50cm9zcGVjdGlvbiB0b29sIHRvIGVtdWxhdGUgU1NF
IGluc3RydWN0aW9ucy4KClNpZ25lZC1vZmYtYnk6IEFkYWxiZXJ0IExhesSDciA8YWxhemFyQGJp
dGRlZmVuZGVyLmNvbT4KLS0tCiBEb2N1bWVudGF0aW9uL3ZpcnQva3ZtL2t2bWkucnN0ICAgICAg
ICAgICAgICAgfCAzMyArKysrKysrKysrKysrKysrKysrCiBhcmNoL3g4Ni9pbmNsdWRlL3VhcGkv
YXNtL2t2bWkuaCAgICAgICAgICAgICAgfCAgOSArKysrKwogYXJjaC94ODYva3ZtL2t2bWlfbXNn
LmMgICAgICAgICAgICAgICAgICAgICAgIHwgMjEgKysrKysrKysrKysrCiBpbmNsdWRlL3VhcGkv
bGludXgva3ZtaS5oICAgICAgICAgICAgICAgICAgICAgfCAgMSArCiAuLi4vdGVzdGluZy9zZWxm
dGVzdHMva3ZtL3g4Nl82NC9rdm1pX3Rlc3QuYyAgfCAzMyArKysrKysrKysrKysrKysrKysrCiA1
IGZpbGVzIGNoYW5nZWQsIDk3IGluc2VydGlvbnMoKykKCmRpZmYgLS1naXQgYS9Eb2N1bWVudGF0
aW9uL3ZpcnQva3ZtL2t2bWkucnN0IGIvRG9jdW1lbnRhdGlvbi92aXJ0L2t2bS9rdm1pLnJzdApp
bmRleCAyNGRjMTg2N2MxZjEuLjM4NDZmZWM3MmYxNCAxMDA2NDQKLS0tIGEvRG9jdW1lbnRhdGlv
bi92aXJ0L2t2bS9rdm1pLnJzdAorKysgYi9Eb2N1bWVudGF0aW9uL3ZpcnQva3ZtL2t2bWkucnN0
CkBAIC03OTcsNiArNzk3LDM5IEBAIFByb3ZpZGVzIHRoZSBtYXhpbXVtIEdGTiBhbGxvY2F0ZWQg
dG8gdGhlIFZNIGJ5IHdhbGtpbmcgdGhyb3VnaCBhbGwKIG1lbW9yeSBzbG90cy4gU3RyaWNseSBz
cGVha2luZywgdGhlIHJldHVybmVkIHZhbHVlIHJlZmVycyB0byB0aGUgZmlyc3QKIGluYWNjZXNz
aWJsZSBHRk4sIG5leHQgdG8gdGhlIG1heGltdW0gYWNjZXNzaWJsZSBHRk4uCiAKKzE4LiBLVk1J
X1ZDUFVfR0VUX1hDUgorLS0tLS0tLS0tLS0tLS0tLS0tLS0tCisKKzpBcmNoaXRlY3R1cmVzOiB4
ODYKKzpWZXJzaW9uczogPj0gMQorOlBhcmFtZXRlcnM6CisKKzo6CisKKwlzdHJ1Y3Qga3ZtaV92
Y3B1X2hkcjsKKwlzdHJ1Y3Qga3ZtaV92Y3B1X2dldF94Y3IgeworCQlfX3U4IHhjcjsKKwkJX191
OCBwYWRkaW5nWzddOworCX07CisKKzpSZXR1cm5zOgorCis6OgorCisJc3RydWN0IGt2bWlfZXJy
b3JfY29kZTsKKwlzdHJ1Y3Qga3ZtaV92Y3B1X2dldF94Y3JfcmVwbHkgeworCQlfX3U2NCB2YWx1
ZTsKKwl9OworCitSZXR1cm5zIHRoZSB2YWx1ZSBvZiBhbiBleHRlbmRlZCBjb250cm9sIHJlZ2lz
dGVyIFhDUi4KKworOkVycm9yczoKKworKiAtS1ZNX0VJTlZBTCAtIHRoZSBzZWxlY3RlZCB2Q1BV
IGlzIGludmFsaWQKKyogLUtWTV9FSU5WQUwgLSB0aGUgc3BlY2lmaWVkIGNvbnRyb2wgcmVnaXN0
ZXIgaXMgbm90IFhDUjAKKyogLUtWTV9FSU5WQUwgLSB0aGUgcGFkZGluZyBpcyBub3QgemVybwor
KiAtS1ZNX0VBR0FJTiAtIHRoZSBzZWxlY3RlZCB2Q1BVIGNhbid0IGJlIGludHJvc3BlY3RlZCB5
ZXQKKwogRXZlbnRzCiA9PT09PT0KIApkaWZmIC0tZ2l0IGEvYXJjaC94ODYvaW5jbHVkZS91YXBp
L2FzbS9rdm1pLmggYi9hcmNoL3g4Ni9pbmNsdWRlL3VhcGkvYXNtL2t2bWkuaAppbmRleCA2MDRh
OGIzZDRhYzIuLmMwYTczMDUxZDY2NyAxMDA2NDQKLS0tIGEvYXJjaC94ODYvaW5jbHVkZS91YXBp
L2FzbS9rdm1pLmgKKysrIGIvYXJjaC94ODYvaW5jbHVkZS91YXBpL2FzbS9rdm1pLmgKQEAgLTEw
Miw0ICsxMDIsMTMgQEAgc3RydWN0IGt2bWlfdmNwdV9ldmVudF94c2V0YnYgewogCV9fdTY0IG5l
d192YWx1ZTsKIH07CiAKK3N0cnVjdCBrdm1pX3ZjcHVfZ2V0X3hjciB7CisJX191OCB4Y3I7CisJ
X191OCBwYWRkaW5nWzddOworfTsKKworc3RydWN0IGt2bWlfdmNwdV9nZXRfeGNyX3JlcGx5IHsK
KwlfX3U2NCB2YWx1ZTsKK307CisKICNlbmRpZiAvKiBfVUFQSV9BU01fWDg2X0tWTUlfSCAqLwpk
aWZmIC0tZ2l0IGEvYXJjaC94ODYva3ZtL2t2bWlfbXNnLmMgYi9hcmNoL3g4Ni9rdm0va3ZtaV9t
c2cuYwppbmRleCA0MmM0ZGFjMTU5NWEuLjhiYWRlZjcwMDNmZCAxMDA2NDQKLS0tIGEvYXJjaC94
ODYva3ZtL2t2bWlfbXNnLmMKKysrIGIvYXJjaC94ODYva3ZtL2t2bWlfbXNnLmMKQEAgLTE3NCwx
MSArMTc0LDMyIEBAIHN0YXRpYyBpbnQgaGFuZGxlX3ZjcHVfaW5qZWN0X2V4Y2VwdGlvbihjb25z
dCBzdHJ1Y3Qga3ZtaV92Y3B1X21zZ19qb2IgKmpvYiwKIAlyZXR1cm4ga3ZtaV9tc2dfdmNwdV9y
ZXBseShqb2IsIG1zZywgZWMsIE5VTEwsIDApOwogfQogCitzdGF0aWMgaW50IGhhbmRsZV92Y3B1
X2dldF94Y3IoY29uc3Qgc3RydWN0IGt2bWlfdmNwdV9tc2dfam9iICpqb2IsCisJCQkgICAgICAg
Y29uc3Qgc3RydWN0IGt2bWlfbXNnX2hkciAqbXNnLAorCQkJICAgICAgIGNvbnN0IHZvaWQgKl9y
ZXEpCit7CisJY29uc3Qgc3RydWN0IGt2bWlfdmNwdV9nZXRfeGNyICpyZXEgPSBfcmVxOworCXN0
cnVjdCBrdm1pX3ZjcHVfZ2V0X3hjcl9yZXBseSBycGw7CisJaW50IGVjID0gMDsKKworCW1lbXNl
dCgmcnBsLCAwLCBzaXplb2YocnBsKSk7CisKKwlpZiAobm9uX3plcm9fcGFkZGluZyhyZXEtPnBh
ZGRpbmcsIEFSUkFZX1NJWkUocmVxLT5wYWRkaW5nKSkpCisJCWVjID0gLUtWTV9FSU5WQUw7CisJ
ZWxzZSBpZiAocmVxLT54Y3IgIT0gMCkKKwkJZWMgPSAtS1ZNX0VJTlZBTDsKKwllbHNlCisJCXJw
bC52YWx1ZSA9IGpvYi0+dmNwdS0+YXJjaC54Y3IwOworCisJcmV0dXJuIGt2bWlfbXNnX3ZjcHVf
cmVwbHkoam9iLCBtc2csIGVjLCAmcnBsLCBzaXplb2YocnBsKSk7Cit9CisKIHN0YXRpYyBrdm1p
X3ZjcHVfbXNnX2pvYl9mY3QgY29uc3QgbXNnX3ZjcHVbXSA9IHsKIAlbS1ZNSV9WQ1BVX0NPTlRS
T0xfQ1JdICAgICAgID0gaGFuZGxlX3ZjcHVfY29udHJvbF9jciwKIAlbS1ZNSV9WQ1BVX0dFVF9D
UFVJRF0gICAgICAgID0gaGFuZGxlX3ZjcHVfZ2V0X2NwdWlkLAogCVtLVk1JX1ZDUFVfR0VUX0lO
Rk9dICAgICAgICAgPSBoYW5kbGVfdmNwdV9nZXRfaW5mbywKIAlbS1ZNSV9WQ1BVX0dFVF9SRUdJ
U1RFUlNdICAgID0gaGFuZGxlX3ZjcHVfZ2V0X3JlZ2lzdGVycywKKwlbS1ZNSV9WQ1BVX0dFVF9Y
Q1JdICAgICAgICAgID0gaGFuZGxlX3ZjcHVfZ2V0X3hjciwKIAlbS1ZNSV9WQ1BVX0lOSkVDVF9F
WENFUFRJT05dID0gaGFuZGxlX3ZjcHVfaW5qZWN0X2V4Y2VwdGlvbiwKIAlbS1ZNSV9WQ1BVX1NF
VF9SRUdJU1RFUlNdICAgID0gaGFuZGxlX3ZjcHVfc2V0X3JlZ2lzdGVycywKIH07CmRpZmYgLS1n
aXQgYS9pbmNsdWRlL3VhcGkvbGludXgva3ZtaS5oIGIvaW5jbHVkZS91YXBpL2xpbnV4L2t2bWku
aAppbmRleCBkNTAzZTE1YmFmNjAuLjA3YjZkMzgzNjQxYSAxMDA2NDQKLS0tIGEvaW5jbHVkZS91
YXBpL2xpbnV4L2t2bWkuaAorKysgYi9pbmNsdWRlL3VhcGkvbGludXgva3ZtaS5oCkBAIC00NCw2
ICs0NCw3IEBAIGVudW0gewogCUtWTUlfVkNQVV9HRVRfQ1BVSUQgICAgICAgID0gS1ZNSV9WQ1BV
X01FU1NBR0VfSUQoNSksCiAJS1ZNSV9WQ1BVX0NPTlRST0xfQ1IgICAgICAgPSBLVk1JX1ZDUFVf
TUVTU0FHRV9JRCg2KSwKIAlLVk1JX1ZDUFVfSU5KRUNUX0VYQ0VQVElPTiA9IEtWTUlfVkNQVV9N
RVNTQUdFX0lEKDcpLAorCUtWTUlfVkNQVV9HRVRfWENSICAgICAgICAgID0gS1ZNSV9WQ1BVX01F
U1NBR0VfSUQoOCksCiAKIAlLVk1JX05FWFRfVkNQVV9NRVNTQUdFCiB9OwpkaWZmIC0tZ2l0IGEv
dG9vbHMvdGVzdGluZy9zZWxmdGVzdHMva3ZtL3g4Nl82NC9rdm1pX3Rlc3QuYyBiL3Rvb2xzL3Rl
c3Rpbmcvc2VsZnRlc3RzL2t2bS94ODZfNjQva3ZtaV90ZXN0LmMKaW5kZXggZjczZGJmZTE0MDdk
Li5kYTkwYzZhOGQ1MzUgMTAwNjQ0Ci0tLSBhL3Rvb2xzL3Rlc3Rpbmcvc2VsZnRlc3RzL2t2bS94
ODZfNjQva3ZtaV90ZXN0LmMKKysrIGIvdG9vbHMvdGVzdGluZy9zZWxmdGVzdHMva3ZtL3g4Nl82
NC9rdm1pX3Rlc3QuYwpAQCAtMTQxNiw2ICsxNDE2LDM4IEBAIHN0YXRpYyB2b2lkIHRlc3RfZXZl
bnRfeHNldGJ2KHN0cnVjdCBrdm1fdm0gKnZtKQogCWRpc2FibGVfdmNwdV9ldmVudCh2bSwgZXZl
bnRfaWQpOwogfQogCitzdGF0aWMgdm9pZCBjbWRfdmNwdV9nZXRfeGNyKHN0cnVjdCBrdm1fdm0g
KnZtLCB1OCB4Y3IsIHU2NCAqdmFsdWUsCisJCQkgICAgIGludCBleHBlY3RlZF9lcnIpCit7CisJ
c3RydWN0IHsKKwkJc3RydWN0IGt2bWlfbXNnX2hkciBoZHI7CisJCXN0cnVjdCBrdm1pX3ZjcHVf
aGRyIHZjcHVfaGRyOworCQlzdHJ1Y3Qga3ZtaV92Y3B1X2dldF94Y3IgY21kOworCX0gcmVxID0g
eyAwIH07CisJc3RydWN0IGt2bWlfdmNwdV9nZXRfeGNyX3JlcGx5IHJwbCA9IHsgMCB9OworCWlu
dCByOworCisJcmVxLmNtZC54Y3IgPSB4Y3I7CisKKwlyID0gZG9fdmNwdTBfY29tbWFuZCh2bSwg
S1ZNSV9WQ1BVX0dFVF9YQ1IsICZyZXEuaGRyLCBzaXplb2YocmVxKSwKKwkJCSAgICAgJnJwbCwg
c2l6ZW9mKHJwbCkpOworCVRFU1RfQVNTRVJUKHIgPT0gZXhwZWN0ZWRfZXJyLAorCQkiS1ZNSV9W
Q1BVX0dFVF9YQ1IgZmFpbGVkLCBlcnJvciAlZCAoJXMpLCBleHBlY3RlZCAlZFxuIiwKKwkJLXIs
IGt2bV9zdHJlcnJvcigtciksIGV4cGVjdGVkX2Vycik7CisKKwkqdmFsdWUgPSByID09IDAgPyBy
cGwudmFsdWUgOiAwOworfQorCitzdGF0aWMgdm9pZCB0ZXN0X2NtZF92Y3B1X2dldF94Y3Ioc3Ry
dWN0IGt2bV92bSAqdm0pCit7CisJdTggeGNyMCA9IDAsIHhjcjEgPSAxOworCXU2NCB2YWx1ZTsK
KworCWNtZF92Y3B1X2dldF94Y3Iodm0sIHhjcjAsICZ2YWx1ZSwgMCk7CisJcHJfZGVidWcoIlhD
UjAgMHglbHhcbiIsIHZhbHVlKTsKKwljbWRfdmNwdV9nZXRfeGNyKHZtLCB4Y3IxLCAmdmFsdWUs
IC1LVk1fRUlOVkFMKTsKK30KKwogc3RhdGljIHZvaWQgdGVzdF9pbnRyb3NwZWN0aW9uKHN0cnVj
dCBrdm1fdm0gKnZtKQogewogCXNyYW5kb20odGltZSgwKSk7CkBAIC0xNDQzLDYgKzE0NzUsNyBA
QCBzdGF0aWMgdm9pZCB0ZXN0X2ludHJvc3BlY3Rpb24oc3RydWN0IGt2bV92bSAqdm0pCiAJdGVz
dF9jbWRfdmNwdV9pbmplY3RfZXhjZXB0aW9uKHZtKTsKIAl0ZXN0X2NtZF92bV9nZXRfbWF4X2dm
bigpOwogCXRlc3RfZXZlbnRfeHNldGJ2KHZtKTsKKwl0ZXN0X2NtZF92Y3B1X2dldF94Y3Iodm0p
OwogCiAJdW5ob29rX2ludHJvc3BlY3Rpb24odm0pOwogfQpfX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fXwpWaXJ0dWFsaXphdGlvbiBtYWlsaW5nIGxpc3QKVmly
dHVhbGl6YXRpb25AbGlzdHMubGludXgtZm91bmRhdGlvbi5vcmcKaHR0cHM6Ly9saXN0cy5saW51
eGZvdW5kYXRpb24ub3JnL21haWxtYW4vbGlzdGluZm8vdmlydHVhbGl6YXRpb24=
