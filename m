Return-Path: <virtualization-bounces@lists.linux-foundation.org>
X-Original-To: lists.virtualization@lfdr.de
Delivered-To: lists.virtualization@lfdr.de
Received: from fraxinus.osuosl.org (smtp4.osuosl.org [140.211.166.137])
	by mail.lfdr.de (Postfix) with ESMTPS id 5A77B155E31
	for <lists.virtualization@lfdr.de>; Fri,  7 Feb 2020 19:36:08 +0100 (CET)
Received: from localhost (localhost [127.0.0.1])
	by fraxinus.osuosl.org (Postfix) with ESMTP id 09A478697D;
	Fri,  7 Feb 2020 18:36:07 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from fraxinus.osuosl.org ([127.0.0.1])
	by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id Es0EPf9s6EqV; Fri,  7 Feb 2020 18:36:06 +0000 (UTC)
Received: from lists.linuxfoundation.org (lf-lists.osuosl.org [140.211.9.56])
	by fraxinus.osuosl.org (Postfix) with ESMTP id 35C508698F;
	Fri,  7 Feb 2020 18:36:05 +0000 (UTC)
Received: from lf-lists.osuosl.org (localhost [127.0.0.1])
	by lists.linuxfoundation.org (Postfix) with ESMTP id 1A261C1D81;
	Fri,  7 Feb 2020 18:36:05 +0000 (UTC)
X-Original-To: virtualization@lists.linux-foundation.org
Delivered-To: virtualization@lists.linuxfoundation.org
Received: from fraxinus.osuosl.org (smtp4.osuosl.org [140.211.166.137])
 by lists.linuxfoundation.org (Postfix) with ESMTP id D58F3C1D81
 for <virtualization@lists.linux-foundation.org>;
 Fri,  7 Feb 2020 18:35:57 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by fraxinus.osuosl.org (Postfix) with ESMTP id C365484483
 for <virtualization@lists.linux-foundation.org>;
 Fri,  7 Feb 2020 18:35:57 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from fraxinus.osuosl.org ([127.0.0.1])
 by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id rhm6x6loTkP7
 for <virtualization@lists.linux-foundation.org>;
 Fri,  7 Feb 2020 18:35:56 +0000 (UTC)
X-Greylist: domain auto-whitelisted by SQLgrey-1.7.6
Received: from mx01.bbu.dsd.mx.bitdefender.com
 (mx01.bbu.dsd.mx.bitdefender.com [91.199.104.161])
 by fraxinus.osuosl.org (Postfix) with ESMTPS id 297CA86982
 for <virtualization@lists.linux-foundation.org>;
 Fri,  7 Feb 2020 18:35:56 +0000 (UTC)
Received: from smtp.bitdefender.com (smtp01.buh.bitdefender.com [10.17.80.75])
 by mx01.bbu.dsd.mx.bitdefender.com (Postfix) with ESMTPS id
 D51F7305D350; Fri,  7 Feb 2020 20:16:40 +0200 (EET)
Received: from host.bbu.bitdefender.biz (unknown [195.210.4.22])
 by smtp.bitdefender.com (Postfix) with ESMTPSA id C9A443032046;
 Fri,  7 Feb 2020 20:16:40 +0200 (EET)
From: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>
To: kvm@vger.kernel.org
Subject: [RFC PATCH v7 50/78] KVM: introspection: add KVMI_VCPU_GET_INFO
Date: Fri,  7 Feb 2020 20:16:08 +0200
Message-Id: <20200207181636.1065-51-alazar@bitdefender.com>
In-Reply-To: <20200207181636.1065-1-alazar@bitdefender.com>
References: <20200207181636.1065-1-alazar@bitdefender.com>
MIME-Version: 1.0
Cc: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>,
 Paolo Bonzini <pbonzini@redhat.com>,
 =?UTF-8?q?Mihai=20Don=C8=9Bu?= <mdontu@bitdefender.com>,
 Sean Christopherson <sean.j.christopherson@intel.com>,
 virtualization@lists.linux-foundation.org
X-BeenThere: virtualization@lists.linux-foundation.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Linux virtualization <virtualization.lists.linux-foundation.org>
List-Unsubscribe: <https://lists.linuxfoundation.org/mailman/options/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=unsubscribe>
List-Archive: <http://lists.linuxfoundation.org/pipermail/virtualization/>
List-Post: <mailto:virtualization@lists.linux-foundation.org>
List-Help: <mailto:virtualization-request@lists.linux-foundation.org?subject=help>
List-Subscribe: <https://lists.linuxfoundation.org/mailman/listinfo/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: virtualization-bounces@lists.linux-foundation.org
Sender: "Virtualization" <virtualization-bounces@lists.linux-foundation.org>

RnJvbTogTWloYWkgRG9uyJt1IDxtZG9udHVAYml0ZGVmZW5kZXIuY29tPgoKRm9yIG5vdywgdGhp
cyBjb21tYW5kIHJldHVybnMgdGhlIFRTQyBmcmVxdWVuY3kgKGluIEhaKSBmb3IgdGhlIHNwZWNp
ZmllZAp2Q1BVIGlmIGF2YWlsYWJsZSAob3RoZXJ3aXNlIGl0IHJldHVybnMgemVybykuCgpTaWdu
ZWQtb2ZmLWJ5OiBNaWhhaSBEb27Im3UgPG1kb250dUBiaXRkZWZlbmRlci5jb20+CkNvLWRldmVs
b3BlZC1ieTogQWRhbGJlcnQgTGF6xINyIDxhbGF6YXJAYml0ZGVmZW5kZXIuY29tPgpTaWduZWQt
b2ZmLWJ5OiBBZGFsYmVydCBMYXrEg3IgPGFsYXphckBiaXRkZWZlbmRlci5jb20+Ci0tLQogRG9j
dW1lbnRhdGlvbi92aXJ0L2t2bS9rdm1pLnJzdCAgICAgICAgICAgICAgIHwgIDI5ICsrKysKIGFy
Y2gveDg2L2luY2x1ZGUvdWFwaS9hc20va3ZtaS5oICAgICAgICAgICAgICB8ICAgNCArCiBhcmNo
L3g4Ni9rdm0vTWFrZWZpbGUgICAgICAgICAgICAgICAgICAgICAgICAgfCAgIDIgKy0KIGFyY2gv
eDg2L2t2bS9rdm1pLmMgICAgICAgICAgICAgICAgICAgICAgICAgICB8ICAxOSArKysKIGluY2x1
ZGUvdWFwaS9saW51eC9rdm1pLmggICAgICAgICAgICAgICAgICAgICB8ICAgMiArCiAuLi4vdGVz
dGluZy9zZWxmdGVzdHMva3ZtL3g4Nl82NC9rdm1pX3Rlc3QuYyAgfCAxNDQgKysrKysrKysrKysr
KysrKystCiB2aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWlfaW50LmggICAgICAgICAgICAgfCAg
IDUgKwogdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pX21zZy5jICAgICAgICAgICAgIHwgIDIz
ICsrKwogOCBmaWxlcyBjaGFuZ2VkLCAyMjYgaW5zZXJ0aW9ucygrKSwgMiBkZWxldGlvbnMoLSkK
IGNyZWF0ZSBtb2RlIDEwMDY0NCBhcmNoL3g4Ni9rdm0va3ZtaS5jCgpkaWZmIC0tZ2l0IGEvRG9j
dW1lbnRhdGlvbi92aXJ0L2t2bS9rdm1pLnJzdCBiL0RvY3VtZW50YXRpb24vdmlydC9rdm0va3Zt
aS5yc3QKaW5kZXggMzhmNTY2YjA3YmI1Li44ZWIwMDA2MzQ5ZDYgMTAwNjQ0Ci0tLSBhL0RvY3Vt
ZW50YXRpb24vdmlydC9rdm0va3ZtaS5yc3QKKysrIGIvRG9jdW1lbnRhdGlvbi92aXJ0L2t2bS9r
dm1pLnJzdApAQCAtNDM2LDYgKzQzNiwzNSBAQCBvbmUgcGFnZSAob2Zmc2V0ICsgc2l6ZSA8PSBQ
QUdFX1NJWkUpLgogKiAtS1ZNX0VJTlZBTCAtIHRoZSBzcGVjaWZpZWQgZ3BhL3NpemUgcGFpciBp
cyBpbnZhbGlkCiAqIC1LVk1fRU5PRU5UIC0gdGhlIGd1ZXN0IHBhZ2UgZG9lc24ndCBleGlzdHMK
IAorOC4gS1ZNSV9WQ1BVX0dFVF9JTkZPCistLS0tLS0tLS0tLS0tLS0tLS0tLS0KKworOkFyY2hp
dGVjdHVyZXM6IGFsbAorOlZlcnNpb25zOiA+PSAxCis6UGFyYW1ldGVyczoKKworOjoKKworCXN0
cnVjdCBrdm1pX3ZjcHVfaGRyOworCis6UmV0dXJuczoKKworOjoKKworCXN0cnVjdCBrdm1pX2Vy
cm9yX2NvZGU7CisJc3RydWN0IGt2bWlfdmNwdV9nZXRfaW5mb19yZXBseSB7CisJCV9fdTY0IHRz
Y19zcGVlZDsKKwl9OworCitSZXR1cm5zIHRoZSBUU0MgZnJlcXVlbmN5IChpbiBIWikgZm9yIHRo
ZSBzcGVjaWZpZWQgdkNQVSBpZiBhdmFpbGFibGUKKyhvdGhlcndpc2UgaXQgcmV0dXJucyB6ZXJv
KS4KKworOkVycm9yczoKKworKiAtS1ZNX0VJTlZBTCAtIHRoZSBzZWxlY3RlZCB2Q1BVIGlzIGlu
dmFsaWQKKyogLUtWTV9FSU5WQUwgLSBwYWRkaW5nIGlzIG5vdCB6ZXJvCisqIC1LVk1fRUFHQUlO
IC0gdGhlIHNlbGVjdGVkIHZDUFUgY2FuJ3QgYmUgaW50cm9zcGVjdGVkIHlldAorCiBFdmVudHMK
ID09PT09PQogCmRpZmYgLS1naXQgYS9hcmNoL3g4Ni9pbmNsdWRlL3VhcGkvYXNtL2t2bWkuaCBi
L2FyY2gveDg2L2luY2x1ZGUvdWFwaS9hc20va3ZtaS5oCmluZGV4IDU1MWY5ZWQxZWQ5Yy4uODlh
ZGY4NGNlZmU0IDEwMDY0NAotLS0gYS9hcmNoL3g4Ni9pbmNsdWRlL3VhcGkvYXNtL2t2bWkuaAor
KysgYi9hcmNoL3g4Ni9pbmNsdWRlL3VhcGkvYXNtL2t2bWkuaApAQCAtMjYsNCArMjYsOCBAQCBz
dHJ1Y3Qga3ZtaV9ldmVudF9hcmNoIHsKIAl9IG1zcnM7CiB9OwogCitzdHJ1Y3Qga3ZtaV92Y3B1
X2dldF9pbmZvX3JlcGx5IHsKKwlfX3U2NCB0c2Nfc3BlZWQ7Cit9OworCiAjZW5kaWYgLyogX1VB
UElfQVNNX1g4Nl9LVk1JX0ggKi8KZGlmZiAtLWdpdCBhL2FyY2gveDg2L2t2bS9NYWtlZmlsZSBi
L2FyY2gveDg2L2t2bS9NYWtlZmlsZQppbmRleCBjNDZlYzQ5ZGZlYjkuLmZjMjhmNmM3NTY0OCAx
MDA2NDQKLS0tIGEvYXJjaC94ODYva3ZtL01ha2VmaWxlCisrKyBiL2FyY2gveDg2L2t2bS9NYWtl
ZmlsZQpAQCAtOCw3ICs4LDcgQEAgS1ZNSSA6PSAkKEtWTSkvaW50cm9zcGVjdGlvbgoga3ZtLXkJ
CQkrPSAkKEtWTSkva3ZtX21haW4ubyAkKEtWTSkvY29hbGVzY2VkX21taW8ubyBcCiAJCQkJJChL
Vk0pL2V2ZW50ZmQubyAkKEtWTSkvaXJxY2hpcC5vICQoS1ZNKS92ZmlvLm8KIGt2bS0kKENPTkZJ
R19LVk1fQVNZTkNfUEYpCSs9ICQoS1ZNKS9hc3luY19wZi5vCi1rdm0tJChDT05GSUdfS1ZNX0lO
VFJPU1BFQ1RJT04pICs9ICQoS1ZNSSkva3ZtaS5vICQoS1ZNSSkva3ZtaV9tc2cubwora3ZtLSQo
Q09ORklHX0tWTV9JTlRST1NQRUNUSU9OKSArPSAkKEtWTUkpL2t2bWkubyAkKEtWTUkpL2t2bWlf
bXNnLm8ga3ZtaS5vCiAKIGt2bS15CQkJKz0geDg2Lm8gZW11bGF0ZS5vIGk4MjU5Lm8gaXJxLm8g
bGFwaWMubyBcCiAJCQkgICBpODI1NC5vIGlvYXBpYy5vIGlycV9jb21tLm8gY3B1aWQubyBwbXUu
byBtdHJyLm8gXApkaWZmIC0tZ2l0IGEvYXJjaC94ODYva3ZtL2t2bWkuYyBiL2FyY2gveDg2L2t2
bS9rdm1pLmMKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwLi4yYWZiM2Fi
Yzk3ZmEKLS0tIC9kZXYvbnVsbAorKysgYi9hcmNoL3g4Ni9rdm0va3ZtaS5jCkBAIC0wLDAgKzEs
MTkgQEAKKy8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBHUEwtMi4wCisvKgorICogS1ZNIGlu
dHJvc3BlY3Rpb24gLSB4ODYKKyAqCisgKiBDb3B5cmlnaHQgKEMpIDIwMTktMjAyMCBCaXRkZWZl
bmRlciBTLlIuTC4KKyAqLworCisjaW5jbHVkZSAiLi4vLi4vLi4vdmlydC9rdm0vaW50cm9zcGVj
dGlvbi9rdm1pX2ludC5oIgorCitpbnQga3ZtaV9hcmNoX2NtZF92Y3B1X2dldF9pbmZvKHN0cnVj
dCBrdm1fdmNwdSAqdmNwdSwKKwkJCQlzdHJ1Y3Qga3ZtaV92Y3B1X2dldF9pbmZvX3JlcGx5ICpy
cGwpCit7CisJaWYgKGt2bV9oYXNfdHNjX2NvbnRyb2wpCisJCXJwbC0+dHNjX3NwZWVkID0gMTAw
MHVsICogdmNwdS0+YXJjaC52aXJ0dWFsX3RzY19raHo7CisJZWxzZQorCQlycGwtPnRzY19zcGVl
ZCA9IDA7CisKKwlyZXR1cm4gMDsKK30KZGlmZiAtLWdpdCBhL2luY2x1ZGUvdWFwaS9saW51eC9r
dm1pLmggYi9pbmNsdWRlL3VhcGkvbGludXgva3ZtaS5oCmluZGV4IGIyY2JlZmRiOGIyOS4uYjM2
ZWNjMGQ2NTEzIDEwMDY0NAotLS0gYS9pbmNsdWRlL3VhcGkvbGludXgva3ZtaS5oCisrKyBiL2lu
Y2x1ZGUvdWFwaS9saW51eC9rdm1pLmgKQEAgLTI1LDYgKzI1LDggQEAgZW51bSB7CiAJS1ZNSV9W
TV9SRUFEX1BIWVNJQ0FMICA9IDcsCiAJS1ZNSV9WTV9XUklURV9QSFlTSUNBTCA9IDgsCiAKKwlL
Vk1JX1ZDUFVfR0VUX0lORk8gICAgID0gOSwKKwogCUtWTUlfTlVNX01FU1NBR0VTCiB9OwogCmRp
ZmYgLS1naXQgYS90b29scy90ZXN0aW5nL3NlbGZ0ZXN0cy9rdm0veDg2XzY0L2t2bWlfdGVzdC5j
IGIvdG9vbHMvdGVzdGluZy9zZWxmdGVzdHMva3ZtL3g4Nl82NC9rdm1pX3Rlc3QuYwppbmRleCBi
MDU3M2Q3ZTJlNWIuLjVjNTVmNGNlNTg3NSAxMDA2NDQKLS0tIGEvdG9vbHMvdGVzdGluZy9zZWxm
dGVzdHMva3ZtL3g4Nl82NC9rdm1pX3Rlc3QuYworKysgYi90b29scy90ZXN0aW5nL3NlbGZ0ZXN0
cy9rdm0veDg2XzY0L2t2bWlfdGVzdC5jCkBAIC04LDYgKzgsNyBAQAogI2RlZmluZSBfR05VX1NP
VVJDRSAvKiBmb3IgcHJvZ3JhbV9pbnZvY2F0aW9uX3Nob3J0X25hbWUgKi8KICNpbmNsdWRlIDxz
eXMvdHlwZXMuaD4KICNpbmNsdWRlIDxzeXMvc29ja2V0Lmg+CisjaW5jbHVkZSA8cHRocmVhZC5o
PgogCiAjaW5jbHVkZSAidGVzdF91dGlsLmgiCiAKQEAgLTI0LDYgKzI1LDcgQEAgc3RhdGljIGlu
dCBzb2NrZXRfcGFpclsyXTsKICNkZWZpbmUgS3ZtX3NvY2tldCAgICAgICBzb2NrZXRfcGFpclsw
XQogI2RlZmluZSBVc2Vyc3BhY2Vfc29ja2V0IHNvY2tldF9wYWlyWzFdCiAKK3N0YXRpYyBpbnQg
dGVzdF9pZDsKIHN0YXRpYyB2bV92YWRkcl90IHRlc3RfZ3ZhOwogc3RhdGljIHZvaWQgKnRlc3Rf
aHZhOwogc3RhdGljIHZtX3BhZGRyX3QgdGVzdF9ncGE7CkBAIC0zMSw2ICszMywzOSBAQCBzdGF0
aWMgdm1fcGFkZHJfdCB0ZXN0X2dwYTsKIHN0YXRpYyB1aW50OF90IHRlc3Rfd3JpdGVfcGF0dGVy
bjsKIHN0YXRpYyBpbnQgcGFnZV9zaXplOwogCitzdHJ1Y3QgdmNwdV93b3JrZXJfZGF0YSB7CisJ
c3RydWN0IGt2bV92bSAqdm07CisJaW50IHZjcHVfaWQ7CisJaW50IHRlc3RfaWQ7CisJYm9vbCBz
dG9wOworfTsKKworZW51bSB7CisJR1VFU1RfVEVTVF9OT09QID0gMCwKK307CisKKyNkZWZpbmUg
R1VFU1RfUkVRVUVTVF9URVNUKCkgICAgIEdVRVNUX1NZTkMoMCkKKyNkZWZpbmUgR1VFU1RfU0lH
TkFMX1RFU1RfRE9ORSgpIEdVRVNUX1NZTkMoMSkKKworI2RlZmluZSBIT1NUX1NFTkRfVEVTVCh1
YykgICAgICAgKHVjLmNtZCA9PSBVQ0FMTF9TWU5DICYmIHVjLmFyZ3NbMV0gPT0gMCkKKworc3Rh
dGljIGludCBndWVzdF90ZXN0X2lkKHZvaWQpCit7CisJR1VFU1RfUkVRVUVTVF9URVNUKCk7CisJ
cmV0dXJuIFJFQURfT05DRSh0ZXN0X2lkKTsKK30KKworc3RhdGljIHZvaWQgZ3Vlc3RfY29kZSh2
b2lkKQoreworCXdoaWxlICh0cnVlKSB7CisJCXN3aXRjaCAoZ3Vlc3RfdGVzdF9pZCgpKSB7CisJ
CWNhc2UgR1VFU1RfVEVTVF9OT09QOgorCQkJYnJlYWs7CisJCX0KKwkJR1VFU1RfU0lHTkFMX1RF
U1RfRE9ORSgpOworCX0KK30KKwogdm9pZCBzZXR1cF9zb2NrZXQodm9pZCkKIHsKIAlpbnQgcjsK
QEAgLTUwNyw2ICs1NDIsMTEyIEBAIHN0YXRpYyB2b2lkIHRlc3RfbWVtb3J5X2FjY2VzcyhzdHJ1
Y3Qga3ZtX3ZtICp2bSkKIAogCXJlYWRfaW52YWxpZF9ndWVzdF9wYWdlKHZtKTsKIH0KKworc3Rh
dGljIHZvaWQgKnZjcHVfd29ya2VyKHZvaWQgKmRhdGEpCit7CisJc3RydWN0IHZjcHVfd29ya2Vy
X2RhdGEgKmN0eCA9IGRhdGE7CisJc3RydWN0IGt2bV9ydW4gKnJ1bjsKKworCXJ1biA9IHZjcHVf
c3RhdGUoY3R4LT52bSwgY3R4LT52Y3B1X2lkKTsKKworCXdoaWxlICghY3R4LT5zdG9wKSB7CisJ
CXN0cnVjdCB1Y2FsbCB1YzsKKworCQl2Y3B1X3J1bihjdHgtPnZtLCBjdHgtPnZjcHVfaWQpOwor
CisJCVRFU1RfQVNTRVJUKHJ1bi0+ZXhpdF9yZWFzb24gPT0gS1ZNX0VYSVRfSU8sCisJCQkidmNw
dV9ydW4oKSBmYWlsZWQsIHRlc3RfaWQgJWQsIGV4aXQgcmVhc29uICV1ICglcylcbiIsCisJCQlj
dHgtPnRlc3RfaWQsIHJ1bi0+ZXhpdF9yZWFzb24sCisJCQlleGl0X3JlYXNvbl9zdHIocnVuLT5l
eGl0X3JlYXNvbikpOworCisJCVRFU1RfQVNTRVJUKGdldF91Y2FsbChjdHgtPnZtLCBjdHgtPnZj
cHVfaWQsICZ1YyksCisJCQkiTm8gZ3Vlc3QgcmVxdWVzdFxuIik7CisKKwkJaWYgKEhPU1RfU0VO
RF9URVNUKHVjKSkgeworCQkJdGVzdF9pZCA9IFJFQURfT05DRShjdHgtPnRlc3RfaWQpOworCQkJ
c3luY19nbG9iYWxfdG9fZ3Vlc3QoY3R4LT52bSwgdGVzdF9pZCk7CisJCX0KKwl9CisKKwlyZXR1
cm4gTlVMTDsKK30KKworc3RhdGljIHB0aHJlYWRfdCBzdGFydF92Y3B1X3dvcmtlcihzdHJ1Y3Qg
dmNwdV93b3JrZXJfZGF0YSAqZGF0YSkKK3sKKwlwdGhyZWFkX3QgdGhyZWFkX2lkOworCisJcHRo
cmVhZF9jcmVhdGUoJnRocmVhZF9pZCwgTlVMTCwgdmNwdV93b3JrZXIsIGRhdGEpOworCisJcmV0
dXJuIHRocmVhZF9pZDsKK30KKworc3RhdGljIHZvaWQgd2FpdF92Y3B1X3dvcmtlcihwdGhyZWFk
X3QgdmNwdV90aHJlYWQpCit7CisJcHRocmVhZF9qb2luKHZjcHVfdGhyZWFkLCBOVUxMKTsKK30K
Kworc3RhdGljIHZvaWQgc3RvcF92Y3B1X3dvcmtlcihwdGhyZWFkX3QgdmNwdV90aHJlYWQsCisJ
CQkgICAgIHN0cnVjdCB2Y3B1X3dvcmtlcl9kYXRhICpkYXRhKQoreworCWRhdGEtPnN0b3AgPSB0
cnVlOworCisJd2FpdF92Y3B1X3dvcmtlcih2Y3B1X3RocmVhZCk7Cit9CisKK3N0YXRpYyBpbnQg
ZG9fdmNwdV9jb21tYW5kKHN0cnVjdCBrdm1fdm0gKnZtLCBpbnQgY21kX2lkLAorCQkJICAgc3Ry
dWN0IGt2bWlfbXNnX2hkciAqcmVxLCBzaXplX3QgcmVxX3NpemUsCisJCQkgICB2b2lkICpycGws
IHNpemVfdCBycGxfc2l6ZSkKK3sKKwlzdHJ1Y3QgdmNwdV93b3JrZXJfZGF0YSBkYXRhID0gey52
bSA9IHZtLCAudmNwdV9pZCA9IFZDUFVfSUQgfTsKKwlwdGhyZWFkX3QgdmNwdV90aHJlYWQ7CisJ
aW50IHI7CisKKwl2Y3B1X3RocmVhZCA9IHN0YXJ0X3ZjcHVfd29ya2VyKCZkYXRhKTsKKworCXNl
bmRfbWVzc2FnZShjbWRfaWQsIHJlcSwgcmVxX3NpemUpOworCXIgPSByZWNlaXZlX2NtZF9yZXBs
eShyZXEsIHJwbCwgcnBsX3NpemUpOworCisJc3RvcF92Y3B1X3dvcmtlcih2Y3B1X3RocmVhZCwg
JmRhdGEpOworCXJldHVybiByOworfQorCitzdGF0aWMgaW50IGRvX3ZjcHUwX2NvbW1hbmQoc3Ry
dWN0IGt2bV92bSAqdm0sIGludCBjbWRfaWQsCisJCQkgICAgc3RydWN0IGt2bWlfbXNnX2hkciAq
cmVxLCBzaXplX3QgcmVxX3NpemUsCisJCQkgICAgdm9pZCAqcnBsLCBzaXplX3QgcnBsX3NpemUp
Cit7CisJc3RydWN0IGt2bWlfdmNwdV9oZHIgKnZjcHVfaGRyID0gKHN0cnVjdCBrdm1pX3ZjcHVf
aGRyICopcmVxOworCisJdmNwdV9oZHItPnZjcHUgPSAwOworCisJcmV0dXJuIGRvX3ZjcHVfY29t
bWFuZCh2bSwgY21kX2lkLCByZXEsIHJlcV9zaXplLCBycGwsIHJwbF9zaXplKTsKK30KKworc3Rh
dGljIHZvaWQgdGVzdF92Y3B1MF9jb21tYW5kKHN0cnVjdCBrdm1fdm0gKnZtLCBpbnQgY21kX2lk
LAorCQkJICAgICAgIHN0cnVjdCBrdm1pX21zZ19oZHIgKnJlcSwgc2l6ZV90IHJlcV9zaXplLAor
CQkJICAgICAgIHZvaWQgKnJwbCwgc2l6ZV90IHJwbF9zaXplKQoreworCWludCByOworCisJciA9
IGRvX3ZjcHUwX2NvbW1hbmQodm0sIGNtZF9pZCwgcmVxLCByZXFfc2l6ZSwgcnBsLCBycGxfc2l6
ZSk7CisJVEVTVF9BU1NFUlQociA9PSAwLAorCQkgICAgIkNvbW1hbmQgJWQgZmFpbGVkLCBlcnJv
ciAlZCAoJXMpXG4iLAorCQkgICAgY21kX2lkLCAtciwga3ZtX3N0cmVycm9yKC1yKSk7Cit9CisK
K3N0YXRpYyB2b2lkIHRlc3RfY21kX2dldF92Y3B1X2luZm8oc3RydWN0IGt2bV92bSAqdm0pCit7
CisJc3RydWN0IHsKKwkJc3RydWN0IGt2bWlfbXNnX2hkciBoZHI7CisJCXN0cnVjdCBrdm1pX3Zj
cHVfaGRyIHZjcHVfaGRyOworCX0gcmVxID0ge307CisJc3RydWN0IGt2bWlfdmNwdV9nZXRfaW5m
b19yZXBseSBycGw7CisKKwl0ZXN0X3ZjcHUwX2NvbW1hbmQodm0sIEtWTUlfVkNQVV9HRVRfSU5G
TywgJnJlcS5oZHIsIHNpemVvZihyZXEpLAorCQkJICAgJnJwbCwgc2l6ZW9mKHJwbCkpOworCisJ
REVCVUcoInRzY19zcGVlZDogJWxsdSBIWlxuIiwgcnBsLnRzY19zcGVlZCk7Cit9CisKIHN0YXRp
YyB2b2lkIHRlc3RfaW50cm9zcGVjdGlvbihzdHJ1Y3Qga3ZtX3ZtICp2bSkKIHsKIAlzZXR1cF9z
b2NrZXQoKTsKQEAgLTUyMCw2ICs2NjEsNyBAQCBzdGF0aWMgdm9pZCB0ZXN0X2ludHJvc3BlY3Rp
b24oc3RydWN0IGt2bV92bSAqdm0pCiAJdGVzdF9ldmVudF91bmhvb2sodm0pOwogCXRlc3RfY21k
X3ZtX2NvbnRyb2xfZXZlbnRzKCk7CiAJdGVzdF9tZW1vcnlfYWNjZXNzKHZtKTsKKwl0ZXN0X2Nt
ZF9nZXRfdmNwdV9pbmZvKHZtKTsKIAogCXVuaG9va19pbnRyb3NwZWN0aW9uKHZtKTsKIH0KQEAg
LTU0Niw3ICs2ODgsNyBAQCBpbnQgbWFpbihpbnQgYXJnYywgY2hhciAqYXJndltdKQogCQlleGl0
KEtTRlRfU0tJUCk7CiAJfQogCi0Jdm0gPSB2bV9jcmVhdGVfZGVmYXVsdChWQ1BVX0lELCAwLCBO
VUxMKTsKKwl2bSA9IHZtX2NyZWF0ZV9kZWZhdWx0KFZDUFVfSUQsIDAsIGd1ZXN0X2NvZGUpOwog
CXZjcHVfc2V0X2NwdWlkKHZtLCBWQ1BVX0lELCBrdm1fZ2V0X3N1cHBvcnRlZF9jcHVpZCgpKTsK
IAogCXBhZ2Vfc2l6ZSA9IGdldHBhZ2VzaXplKCk7CmRpZmYgLS1naXQgYS92aXJ0L2t2bS9pbnRy
b3NwZWN0aW9uL2t2bWlfaW50LmggYi92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWlfaW50LmgK
aW5kZXggZTdlYmI0ZDY3ZGQ2Li5iYWI3M2ZjMjMyZWMgMTAwNjQ0Ci0tLSBhL3ZpcnQva3ZtL2lu
dHJvc3BlY3Rpb24va3ZtaV9pbnQuaAorKysgYi92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWlf
aW50LmgKQEAgLTMzLDYgKzMzLDcgQEAKIAkJCXwgQklUKEtWTUlfVk1fR0VUX0lORk8pIFwKIAkJ
CXwgQklUKEtWTUlfVk1fUkVBRF9QSFlTSUNBTCkgXAogCQkJfCBCSVQoS1ZNSV9WTV9XUklURV9Q
SFlTSUNBTCkgXAorCQkJfCBCSVQoS1ZNSV9WQ1BVX0dFVF9JTkZPKSBcCiAJCSkKIAogI2RlZmlu
ZSBLVk1JKGt2bSkgKChzdHJ1Y3Qga3ZtX2ludHJvc3BlY3Rpb24gKikoKGt2bSktPmt2bWkpKQpA
QCAtNjgsNCArNjksOCBAQCBpbnQga3ZtaV9jbWRfcmVhZF9waHlzaWNhbChzdHJ1Y3Qga3ZtICpr
dm0sIHU2NCBncGEsIHU2NCBzaXplLAogaW50IGt2bWlfY21kX3dyaXRlX3BoeXNpY2FsKHN0cnVj
dCBrdm0gKmt2bSwgdTY0IGdwYSwgdTY0IHNpemUsCiAJCQkgICAgY29uc3Qgdm9pZCAqYnVmKTsK
IAorLyogYXJjaCAqLworaW50IGt2bWlfYXJjaF9jbWRfdmNwdV9nZXRfaW5mbyhzdHJ1Y3Qga3Zt
X3ZjcHUgKnZjcHUsCisJCQkJc3RydWN0IGt2bWlfdmNwdV9nZXRfaW5mb19yZXBseSAqcnBsKTsK
KwogI2VuZGlmCmRpZmYgLS1naXQgYS92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWlfbXNnLmMg
Yi92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWlfbXNnLmMKaW5kZXggOTQyMjUxNTNmN2NjLi40
ZTdhMmNlYjc4ZGEgMTAwNjQ0Ci0tLSBhL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9tc2cu
YworKysgYi92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWlfbXNnLmMKQEAgLTI0LDYgKzI0LDcg
QEAgc3RhdGljIGNvbnN0IGNoYXIgKmNvbnN0IG1zZ19JRHNbXSA9IHsKIAlbS1ZNSV9WTV9HRVRf
SU5GT10gICAgICAgPSAiS1ZNSV9WTV9HRVRfSU5GTyIsCiAJW0tWTUlfVk1fUkVBRF9QSFlTSUNB
TF0gID0gIktWTUlfVk1fUkVBRF9QSFlTSUNBTCIsCiAJW0tWTUlfVk1fV1JJVEVfUEhZU0lDQUxd
ID0gIktWTUlfVk1fV1JJVEVfUEhZU0lDQUwiLAorCVtLVk1JX1ZDUFVfR0VUX0lORk9dICAgICA9
ICJLVk1JX1ZDUFVfR0VUX0lORk8iLAogfTsKIAogc3RhdGljIGJvb2wgaXNfa25vd25fbWVzc2Fn
ZSh1MTYgaWQpCkBAIC0xMjYsNiArMTI3LDE1IEBAIHN0YXRpYyBpbnQga3ZtaV9tc2dfdm1fcmVw
bHkoc3RydWN0IGt2bV9pbnRyb3NwZWN0aW9uICprdm1pLAogCXJldHVybiBrdm1pX21zZ19yZXBs
eShrdm1pLCBtc2csIGVyciwgcnBsLCBycGxfc2l6ZSk7CiB9CiAKK3N0YXRpYyBpbnQga3ZtaV9t
c2dfdmNwdV9yZXBseShjb25zdCBzdHJ1Y3Qga3ZtaV92Y3B1X2NtZF9qb2IgKmpvYiwKKwkJCQlj
b25zdCBzdHJ1Y3Qga3ZtaV9tc2dfaGRyICptc2csIGludCBlcnIsCisJCQkJY29uc3Qgdm9pZCAq
cnBsLCBzaXplX3QgcnBsX3NpemUpCit7CisJc3RydWN0IGt2bV9pbnRyb3NwZWN0aW9uICprdm1p
ID0gS1ZNSShqb2ItPnZjcHUtPmt2bSk7CisKKwlyZXR1cm4ga3ZtaV9tc2dfcmVwbHkoa3ZtaSwg
bXNnLCBlcnIsIHJwbCwgcnBsX3NpemUpOworfQorCiBzdGF0aWMgYm9vbCBpc19jb21tYW5kX2Fs
bG93ZWQoc3RydWN0IGt2bV9pbnRyb3NwZWN0aW9uICprdm1pLCBpbnQgaWQpCiB7CiAJcmV0dXJu
IHRlc3RfYml0KGlkLCBrdm1pLT5jbWRfYWxsb3dfbWFzayk7CkBAIC0yOTUsNiArMzA1LDE4IEBA
IHN0YXRpYyBpbnQoKmNvbnN0IG1zZ192bVtdKShzdHJ1Y3Qga3ZtX2ludHJvc3BlY3Rpb24gKiwK
IAlbS1ZNSV9WTV9XUklURV9QSFlTSUNBTF0gPSBoYW5kbGVfd3JpdGVfcGh5c2ljYWwsCiB9Owog
CitzdGF0aWMgaW50IGhhbmRsZV9nZXRfdmNwdV9pbmZvKGNvbnN0IHN0cnVjdCBrdm1pX3ZjcHVf
Y21kX2pvYiAqam9iLAorCQkJCWNvbnN0IHN0cnVjdCBrdm1pX21zZ19oZHIgKm1zZywKKwkJCQlj
b25zdCB2b2lkICpyZXEpCit7CisJc3RydWN0IGt2bWlfdmNwdV9nZXRfaW5mb19yZXBseSBycGw7
CisKKwltZW1zZXQoJnJwbCwgMCwgc2l6ZW9mKHJwbCkpOworCWt2bWlfYXJjaF9jbWRfdmNwdV9n
ZXRfaW5mbyhqb2ItPnZjcHUsICZycGwpOworCisJcmV0dXJuIGt2bWlfbXNnX3ZjcHVfcmVwbHko
am9iLCBtc2csIDAsICZycGwsIHNpemVvZihycGwpKTsKK30KKwogLyoKICAqIFRoZXNlIGNvbW1h
bmRzIGFyZSBleGVjdXRlZCBvbiB0aGUgdkNQVSB0aHJlYWQuIFRoZSByZWNlaXZpbmcgdGhyZWFk
CiAgKiBwYXNzZXMgdGhlIG1lc3NhZ2VzIHVzaW5nIGEgbmV3bHkgYWxsb2NhdGVkICdzdHJ1Y3Qg
a3ZtaV92Y3B1X2NtZF9qb2InCkBAIC0zMDMsNiArMzI1LDcgQEAgc3RhdGljIGludCgqY29uc3Qg
bXNnX3ZtW10pKHN0cnVjdCBrdm1faW50cm9zcGVjdGlvbiAqLAogICovCiBzdGF0aWMgaW50KCpj
b25zdCBtc2dfdmNwdVtdKShjb25zdCBzdHJ1Y3Qga3ZtaV92Y3B1X2NtZF9qb2IgKiwKIAkJCSAg
ICAgIGNvbnN0IHN0cnVjdCBrdm1pX21zZ19oZHIgKiwgY29uc3Qgdm9pZCAqKSA9IHsKKwlbS1ZN
SV9WQ1BVX0dFVF9JTkZPXSA9IGhhbmRsZV9nZXRfdmNwdV9pbmZvLAogfTsKIAogc3RhdGljIHZv
aWQga3ZtaV9qb2JfdmNwdV9jbWQoc3RydWN0IGt2bV92Y3B1ICp2Y3B1LCB2b2lkICpjdHgpCl9f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fClZpcnR1YWxpemF0
aW9uIG1haWxpbmcgbGlzdApWaXJ0dWFsaXphdGlvbkBsaXN0cy5saW51eC1mb3VuZGF0aW9uLm9y
ZwpodHRwczovL2xpc3RzLmxpbnV4Zm91bmRhdGlvbi5vcmcvbWFpbG1hbi9saXN0aW5mby92aXJ0
dWFsaXphdGlvbg==
