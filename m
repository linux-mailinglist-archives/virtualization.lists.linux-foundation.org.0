Return-Path: <virtualization-bounces@lists.linux-foundation.org>
X-Original-To: lists.virtualization@lfdr.de
Delivered-To: lists.virtualization@lfdr.de
Received: from fraxinus.osuosl.org (smtp4.osuosl.org [140.211.166.137])
	by mail.lfdr.de (Postfix) with ESMTPS id 552EB1978D0
	for <lists.virtualization@lfdr.de>; Mon, 30 Mar 2020 12:20:09 +0200 (CEST)
Received: from localhost (localhost [127.0.0.1])
	by fraxinus.osuosl.org (Postfix) with ESMTP id 010C986A7F;
	Mon, 30 Mar 2020 10:20:08 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from fraxinus.osuosl.org ([127.0.0.1])
	by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id 82Oetp11xMxF; Mon, 30 Mar 2020 10:20:04 +0000 (UTC)
Received: from lists.linuxfoundation.org (lf-lists.osuosl.org [140.211.9.56])
	by fraxinus.osuosl.org (Postfix) with ESMTP id 750D986ABB;
	Mon, 30 Mar 2020 10:20:01 +0000 (UTC)
Received: from lf-lists.osuosl.org (localhost [127.0.0.1])
	by lists.linuxfoundation.org (Postfix) with ESMTP id 4DC71C07FF;
	Mon, 30 Mar 2020 10:20:01 +0000 (UTC)
X-Original-To: virtualization@lists.linux-foundation.org
Delivered-To: virtualization@lists.linuxfoundation.org
Received: from hemlock.osuosl.org (smtp2.osuosl.org [140.211.166.133])
 by lists.linuxfoundation.org (Postfix) with ESMTP id E3311C07FF
 for <virtualization@lists.linux-foundation.org>;
 Mon, 30 Mar 2020 10:19:52 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by hemlock.osuosl.org (Postfix) with ESMTP id E02AE8845D
 for <virtualization@lists.linux-foundation.org>;
 Mon, 30 Mar 2020 10:19:52 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from hemlock.osuosl.org ([127.0.0.1])
 by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id vpV+F2NCRekJ
 for <virtualization@lists.linux-foundation.org>;
 Mon, 30 Mar 2020 10:19:50 +0000 (UTC)
X-Greylist: domain auto-whitelisted by SQLgrey-1.7.6
Received: from mx01.bbu.dsd.mx.bitdefender.com
 (mx01.bbu.dsd.mx.bitdefender.com [91.199.104.161])
 by hemlock.osuosl.org (Postfix) with ESMTPS id 47233883DC
 for <virtualization@lists.linux-foundation.org>;
 Mon, 30 Mar 2020 10:19:50 +0000 (UTC)
Received: from smtp.bitdefender.com (smtp02.buh.bitdefender.net [10.17.80.76])
 by mx01.bbu.dsd.mx.bitdefender.com (Postfix) with ESMTPS id
 093E2305D3D3; Mon, 30 Mar 2020 13:13:02 +0300 (EEST)
Received: from localhost.localdomain (unknown [91.199.104.28])
 by smtp.bitdefender.com (Postfix) with ESMTPSA id 98B2D305B7A2;
 Mon, 30 Mar 2020 13:13:01 +0300 (EEST)
From: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>
To: kvm@vger.kernel.org
Subject: [PATCH v8 77/81] KVM: introspection: add KVMI_VCPU_CONTROL_SINGLESTEP
Date: Mon, 30 Mar 2020 13:13:04 +0300
Message-Id: <20200330101308.21702-78-alazar@bitdefender.com>
In-Reply-To: <20200330101308.21702-1-alazar@bitdefender.com>
References: <20200330101308.21702-1-alazar@bitdefender.com>
MIME-Version: 1.0
Cc: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>,
 Paolo Bonzini <pbonzini@redhat.com>,
 =?UTF-8?q?Nicu=C8=99or=20C=C3=AE=C8=9Bu?= <ncitu@bitdefender.com>,
 virtualization@lists.linux-foundation.org
X-BeenThere: virtualization@lists.linux-foundation.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Linux virtualization <virtualization.lists.linux-foundation.org>
List-Unsubscribe: <https://lists.linuxfoundation.org/mailman/options/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=unsubscribe>
List-Archive: <http://lists.linuxfoundation.org/pipermail/virtualization/>
List-Post: <mailto:virtualization@lists.linux-foundation.org>
List-Help: <mailto:virtualization-request@lists.linux-foundation.org?subject=help>
List-Subscribe: <https://lists.linuxfoundation.org/mailman/listinfo/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: virtualization-bounces@lists.linux-foundation.org
Sender: "Virtualization" <virtualization-bounces@lists.linux-foundation.org>

RnJvbTogTmljdciZb3IgQ8OuyJt1IDxuY2l0dUBiaXRkZWZlbmRlci5jb20+CgpUaGlzIGNvbW1h
bmQgaXMgdXNlZnVsIGZvciBkZWJ1Z2dlcnMuCgpTaWduZWQtb2ZmLWJ5OiBOaWN1yJlvciBDw67I
m3UgPG5jaXR1QGJpdGRlZmVuZGVyLmNvbT4KQ28tZGV2ZWxvcGVkLWJ5OiBBZGFsYmVydCBMYXrE
g3IgPGFsYXphckBiaXRkZWZlbmRlci5jb20+ClNpZ25lZC1vZmYtYnk6IEFkYWxiZXJ0IExhesSD
ciA8YWxhemFyQGJpdGRlZmVuZGVyLmNvbT4KLS0tCiBEb2N1bWVudGF0aW9uL3ZpcnQva3ZtL2t2
bWkucnN0ICAgICAgICAgICAgICAgfCAzMiArKysrKysrCiBhcmNoL3g4Ni9rdm0va3ZtaS5jICAg
ICAgICAgICAgICAgICAgICAgICAgICAgfCAxOCArKysrCiBhcmNoL3g4Ni9rdm0veDg2LmMgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgfCAgNyArKwogaW5jbHVkZS9saW51eC9rdm1pX2hvc3Qu
aCAgICAgICAgICAgICAgICAgICAgIHwgIDcgKysKIGluY2x1ZGUvdWFwaS9saW51eC9rdm1pLmgg
ICAgICAgICAgICAgICAgICAgICB8ICA3ICsrCiAuLi4vdGVzdGluZy9zZWxmdGVzdHMva3ZtL3g4
Nl82NC9rdm1pX3Rlc3QuYyAgfCAyMyArKysrKwogdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1p
LmMgICAgICAgICAgICAgICAgIHwgMjMgKysrKysKIHZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3Zt
aV9pbnQuaCAgICAgICAgICAgICB8ICAyICsKIHZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9t
c2cuYyAgICAgICAgICAgICB8IDk0ICsrKysrKysrKysrKy0tLS0tLS0KIDkgZmlsZXMgY2hhbmdl
ZCwgMTgxIGluc2VydGlvbnMoKyksIDMyIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL0RvY3Vt
ZW50YXRpb24vdmlydC9rdm0va3ZtaS5yc3QgYi9Eb2N1bWVudGF0aW9uL3ZpcnQva3ZtL2t2bWku
cnN0CmluZGV4IGIyMTFhZTBlZDg2YS4uNWUwMTNlZTRhNzliIDEwMDY0NAotLS0gYS9Eb2N1bWVu
dGF0aW9uL3ZpcnQva3ZtL2t2bWkucnN0CisrKyBiL0RvY3VtZW50YXRpb24vdmlydC9rdm0va3Zt
aS5yc3QKQEAgLTk1NCw2ICs5NTQsMzggQEAgSW4gb3JkZXIgdG8gJ2ZvcmdldCcgYW4gYWRkcmVz
cywgYWxsIHRocmVlIGJpdHMgKCdyd3gnKSBtdXN0IGJlIHNldC4KICogLUtWTV9FQUdBSU4gLSB0
aGUgc2VsZWN0ZWQgdkNQVSBjYW4ndCBiZSBpbnRyb3NwZWN0ZWQgeWV0CiAqIC1LVk1fRU5PTUVN
IC0gdGhlcmUgaXMgbm90IGVub3VnaCBtZW1vcnkgdG8gYWRkIHRoZSBwYWdlIHRyYWNraW5nIHN0
cnVjdHVyZXMKIAorMjAuIEtWTUlfVkNQVV9DT05UUk9MX1NJTkdMRVNURVAKKy0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tCisKKzpBcmNoaXRlY3R1cmVzOiB4ODYgKHZteCkKKzpWZXJz
aW9uczogPj0gMQorOlBhcmFtZXRlcnM6CisKKzo6CisKKwlzdHJ1Y3Qga3ZtaV92Y3B1X2hkcjsK
KwlzdHJ1Y3Qga3ZtaV92Y3B1X2NvbnRyb2xfc2luZ2xlc3RlcCB7CisJCV9fdTggZW5hYmxlOwor
CQlfX3U4IHBhZGRpbmdbN107CisJfTsKKworOlJldHVybnM6CisKKzo6CisKKwlzdHJ1Y3Qga3Zt
aV9lcnJvcl9jb2RlOworCitFbmFibGVzL2Rpc2FibGVzIHNpbmdsZXN0ZXAgZm9yIHRoZSBzZWxl
Y3RlZCB2Q1BVLgorCitUaGUgaW50cm9zcGVjdGlvbiB0b29sIHNob3VsZCB1c2UgKktWTUlfR0VU
X1ZFUlNJT04qLCB0byBjaGVjaworaWYgdGhlIGhhcmR3YXJlIHN1cHBvcnRzIHNpbmdsZXN0ZXAg
KHNlZSAqKktWTUlfR0VUX1ZFUlNJT04qKikuCisKKzpFcnJvcnM6CisKKyogLUtWTV9FT1BOT1RT
VVBQIC0gdGhlIGhhcmR3YXJlIGRvZXNuJ3Qgc3VwcG9ydCBzaW5nbGVzdGVwCisqIC1LVk1fRUlO
VkFMIC0gdGhlIHBhZGRpbmcgaXMgbm90IHplcm8KKyogLUtWTV9FQUdBSU4gLSB0aGUgc2VsZWN0
ZWQgdkNQVSBjYW4ndCBiZSBpbnRyb3NwZWN0ZWQgeWV0CisKIEV2ZW50cwogPT09PT09CiAKZGlm
ZiAtLWdpdCBhL2FyY2gveDg2L2t2bS9rdm1pLmMgYi9hcmNoL3g4Ni9rdm0va3ZtaS5jCmluZGV4
IGQ3ZTFjMDY5MGM0My4uNzI5ZjkxYTY2NDA1IDEwMDY0NAotLS0gYS9hcmNoL3g4Ni9rdm0va3Zt
aS5jCisrKyBiL2FyY2gveDg2L2t2bS9rdm1pLmMKQEAgLTEyMTAsMyArMTIxMCwyMSBAQCBib29s
IGt2bWlfYXJjaF9wZl9vZl9pbnRlcmVzdChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUpCiAJICAgICAg
IWt2bV94ODZfb3BzLT5ncHRfdHJhbnNsYXRpb25fZmF1bHQodmNwdSk7CiB9CiAKK2Jvb2wga3Zt
aV9hcmNoX3N0YXJ0X3NpbmdsZXN0ZXAoc3RydWN0IGt2bV92Y3B1ICp2Y3B1KQoreworCWlmICgh
a3ZtX3g4Nl9vcHMtPmNvbnRyb2xfc2luZ2xlc3RlcCkKKwkJcmV0dXJuIGZhbHNlOworCisJa3Zt
X3g4Nl9vcHMtPmNvbnRyb2xfc2luZ2xlc3RlcCh2Y3B1LCB0cnVlKTsKKwlyZXR1cm4gdHJ1ZTsK
K30KKworYm9vbCBrdm1pX2FyY2hfc3RvcF9zaW5nbGVzdGVwKHN0cnVjdCBrdm1fdmNwdSAqdmNw
dSkKK3sKKwlpZiAoIWt2bV94ODZfb3BzLT5jb250cm9sX3NpbmdsZXN0ZXApCisJCXJldHVybiBm
YWxzZTsKKworCWt2bV94ODZfb3BzLT5jb250cm9sX3NpbmdsZXN0ZXAodmNwdSwgZmFsc2UpOwor
CXJldHVybiB0cnVlOworfQorCmRpZmYgLS1naXQgYS9hcmNoL3g4Ni9rdm0veDg2LmMgYi9hcmNo
L3g4Ni9rdm0veDg2LmMKaW5kZXggY2UyZjlkNDdkNmY2Li4xMmU5YjQ2ODkwMjUgMTAwNjQ0Ci0t
LSBhL2FyY2gveDg2L2t2bS94ODYuYworKysgYi9hcmNoL3g4Ni9rdm0veDg2LmMKQEAgLTc3Mzgs
NiArNzczOCwxMyBAQCBzdGF0aWMgaW50IGluamVjdF9wZW5kaW5nX2V2ZW50KHN0cnVjdCBrdm1f
dmNwdSAqdmNwdSwgYm9vbCByZXFfaW50X3dpbikKIHsKIAlpbnQgcjsKIAorCWlmIChrdm1pX3Zj
cHVfcnVubmluZ19zaW5nbGVzdGVwKHZjcHUpKQorCQkvKgorCQkgKiBXZSBjYW5ub3QgaW5qZWN0
IGV2ZW50cyBkdXJpbmcgc2luZ2xlLXN0ZXBwaW5nLgorCQkgKiBUcnkgYWdhaW4gbGF0ZXIuCisJ
CSAqLworCQlyZXR1cm4gLTE7CisKIAkvKiB0cnkgdG8gcmVpbmplY3QgcHJldmlvdXMgZXZlbnRz
IGlmIGFueSAqLwogCiAJaWYgKHZjcHUtPmFyY2guZXhjZXB0aW9uLmluamVjdGVkKQpkaWZmIC0t
Z2l0IGEvaW5jbHVkZS9saW51eC9rdm1pX2hvc3QuaCBiL2luY2x1ZGUvbGludXgva3ZtaV9ob3N0
LmgKaW5kZXggYzlkZDJkNTcwMzNiLi4yMzc4NDYxMTk5NmUgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUv
bGludXgva3ZtaV9ob3N0LmgKKysrIGIvaW5jbHVkZS9saW51eC9rdm1pX2hvc3QuaApAQCAtNTAs
NiArNTAsMTAgQEAgc3RydWN0IGt2bV92Y3B1X2ludHJvc3BlY3Rpb24gewogCQlib29sIHBlbmRp
bmc7CiAJCWJvb2wgc2VuZF9ldmVudDsKIAl9IGV4Y2VwdGlvbjsKKworCXN0cnVjdCB7CisJCWJv
b2wgbG9vcDsKKwl9IHNpbmdsZXN0ZXA7CiB9OwogCiBzdHJ1Y3Qga3ZtX2ludHJvc3BlY3Rpb24g
ewpAQCAtOTAsNiArOTQsNyBAQCB2b2lkIGt2bWlfaGFuZGxlX3JlcXVlc3RzKHN0cnVjdCBrdm1f
dmNwdSAqdmNwdSk7CiBib29sIGt2bWlfaHlwZXJjYWxsX2V2ZW50KHN0cnVjdCBrdm1fdmNwdSAq
dmNwdSk7CiBib29sIGt2bWlfYnJlYWtwb2ludF9ldmVudChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUs
IHU2NCBndmEsIHU4IGluc25fbGVuKTsKIGJvb2wga3ZtaV9lbnRlcl9ndWVzdChzdHJ1Y3Qga3Zt
X3ZjcHUgKnZjcHUpOworYm9vbCBrdm1pX3ZjcHVfcnVubmluZ19zaW5nbGVzdGVwKHN0cnVjdCBr
dm1fdmNwdSAqdmNwdSk7CiAKICNlbHNlCiAKQEAgLTEwNiw2ICsxMTEsOCBAQCBzdGF0aWMgaW5s
aW5lIGJvb2wga3ZtaV9icmVha3BvaW50X2V2ZW50KHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwgdTY0
IGd2YSwKIAkJCXsgcmV0dXJuIHRydWU7IH0KIHN0YXRpYyBpbmxpbmUgYm9vbCBrdm1pX2VudGVy
X2d1ZXN0KHN0cnVjdCBrdm1fdmNwdSAqdmNwdSkKIAkJCXsgcmV0dXJuIHRydWU7IH0KK3N0YXRp
YyBpbmxpbmUgYm9vbCBrdm1pX3ZjcHVfcnVubmluZ19zaW5nbGVzdGVwKHN0cnVjdCBrdm1fdmNw
dSAqdmNwdSkKKwkJCXsgcmV0dXJuIGZhbHNlOyB9CiAKICNlbmRpZiAvKiBDT05GSUdfS1ZNX0lO
VFJPU1BFQ1RJT04gKi8KIApkaWZmIC0tZ2l0IGEvaW5jbHVkZS91YXBpL2xpbnV4L2t2bWkuaCBi
L2luY2x1ZGUvdWFwaS9saW51eC9rdm1pLmgKaW5kZXggY2FmMTY2ZTdkZGZmLi45N2M0ZWY2N2Jm
ZTQgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvdWFwaS9saW51eC9rdm1pLmgKKysrIGIvaW5jbHVkZS91
YXBpL2xpbnV4L2t2bWkuaApAQCAtNDIsNiArNDIsOCBAQCBlbnVtIHsKIAogCUtWTUlfVk1fU0VU
X1BBR0VfQUNDRVNTID0gMjEsCiAKKwlLVk1JX1ZDUFVfQ09OVFJPTF9TSU5HTEVTVEVQID0gMjIs
CisKIAlLVk1JX05VTV9NRVNTQUdFUwogfTsKIApAQCAtMTc4LDYgKzE4MCwxMSBAQCBzdHJ1Y3Qg
a3ZtaV92bV9zZXRfcGFnZV9hY2Nlc3MgewogCXN0cnVjdCBrdm1pX3BhZ2VfYWNjZXNzX2VudHJ5
IGVudHJpZXNbMF07CiB9OwogCitzdHJ1Y3Qga3ZtaV92Y3B1X2NvbnRyb2xfc2luZ2xlc3RlcCB7
CisJX191OCBlbmFibGU7CisJX191OCBwYWRkaW5nWzddOworfTsKKwogc3RydWN0IGt2bWlfZXZl
bnQgewogCV9fdTE2IHNpemU7CiAJX191MTYgdmNwdTsKZGlmZiAtLWdpdCBhL3Rvb2xzL3Rlc3Rp
bmcvc2VsZnRlc3RzL2t2bS94ODZfNjQva3ZtaV90ZXN0LmMgYi90b29scy90ZXN0aW5nL3NlbGZ0
ZXN0cy9rdm0veDg2XzY0L2t2bWlfdGVzdC5jCmluZGV4IGQ0Y2ZlNTk1ODIxZC4uMjc2NDIwMDBj
NGU0IDEwMDY0NAotLS0gYS90b29scy90ZXN0aW5nL3NlbGZ0ZXN0cy9rdm0veDg2XzY0L2t2bWlf
dGVzdC5jCisrKyBiL3Rvb2xzL3Rlc3Rpbmcvc2VsZnRlc3RzL2t2bS94ODZfNjQva3ZtaV90ZXN0
LmMKQEAgLTE2NjgsNiArMTY2OCwyOCBAQCBzdGF0aWMgdm9pZCB0ZXN0X2V2ZW50X3BmKHN0cnVj
dCBrdm1fdm0gKnZtKQogCXRlc3RfcGYodm0sIGNia190ZXN0X2V2ZW50X3BmKTsKIH0KIAorc3Rh
dGljIHZvaWQgdGVzdF9jbWRfdmNwdV9jb250cm9sX3NpbmdsZXN0ZXAoc3RydWN0IGt2bV92bSAq
dm0pCit7CisJc3RydWN0IHsKKwkJc3RydWN0IGt2bWlfbXNnX2hkciBoZHI7CisJCXN0cnVjdCBr
dm1pX3ZjcHVfaGRyIHZjcHVfaGRyOworCQlzdHJ1Y3Qga3ZtaV92Y3B1X2NvbnRyb2xfc2luZ2xl
c3RlcCBjbWQ7CisJfSByZXEgPSB7fTsKKworCWlmICghZmVhdHVyZXMuc2luZ2xlc3RlcCkgewor
CQlERUJVRygiU2tpcCAlcygpXG4iLCBfX2Z1bmNfXyk7CisJCXJldHVybjsKKwl9CisKKwlyZXEu
Y21kLmVuYWJsZSA9IHRydWU7CisJdGVzdF92Y3B1MF9jb21tYW5kKHZtLCBLVk1JX1ZDUFVfQ09O
VFJPTF9TSU5HTEVTVEVQLAorCQkJICAgJnJlcS5oZHIsIHNpemVvZihyZXEpLCBOVUxMLCAwKTsK
KworCXJlcS5jbWQuZW5hYmxlID0gZmFsc2U7CisJdGVzdF92Y3B1MF9jb21tYW5kKHZtLCBLVk1J
X1ZDUFVfQ09OVFJPTF9TSU5HTEVTVEVQLAorCQkJICAgJnJlcS5oZHIsIHNpemVvZihyZXEpLCBO
VUxMLCAwKTsKK30KKwogc3RhdGljIHZvaWQgdGVzdF9pbnRyb3NwZWN0aW9uKHN0cnVjdCBrdm1f
dm0gKnZtKQogewogCXNyYW5kb20odGltZSgwKSk7CkBAIC0xNzAwLDYgKzE3MjIsNyBAQCBzdGF0
aWMgdm9pZCB0ZXN0X2ludHJvc3BlY3Rpb24oc3RydWN0IGt2bV92bSAqdm0pCiAJdGVzdF9jbWRf
dmNwdV9jb250cm9sX21zcih2bSk7CiAJdGVzdF9jbWRfdm1fc2V0X3BhZ2VfYWNjZXNzKHZtKTsK
IAl0ZXN0X2V2ZW50X3BmKHZtKTsKKwl0ZXN0X2NtZF92Y3B1X2NvbnRyb2xfc2luZ2xlc3RlcCh2
bSk7CiAKIAl1bmhvb2tfaW50cm9zcGVjdGlvbih2bSk7CiB9CmRpZmYgLS1naXQgYS92aXJ0L2t2
bS9pbnRyb3NwZWN0aW9uL2t2bWkuYyBiL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaS5jCmlu
ZGV4IGUxM2I1NTg1NmU5Yy4uOTBlNmMyZDNkZDRmIDEwMDY0NAotLS0gYS92aXJ0L2t2bS9pbnRy
b3NwZWN0aW9uL2t2bWkuYworKysgYi92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWkuYwpAQCAt
NDAxLDYgKzQwMSw5IEBAIHN0YXRpYyB2b2lkIGt2bWlfam9iX3JlbGVhc2VfdmNwdShzdHJ1Y3Qg
a3ZtX3ZjcHUgKnZjcHUsIHZvaWQgKmN0eCkKIAogCWF0b21pY19zZXQoJnZjcHVpLT5wYXVzZV9y
ZXF1ZXN0cywgMCk7CiAJdmNwdWktPndhaXRpbmdfZm9yX3JlcGx5ID0gZmFsc2U7CisKKwlpZiAo
dmNwdWktPnNpbmdsZXN0ZXAubG9vcCkKKwkJa3ZtaV9hcmNoX3N0b3Bfc2luZ2xlc3RlcCh2Y3B1
KTsKIH0KIAogc3RhdGljIHZvaWQga3ZtaV9yZWxlYXNlX3ZjcHVzKHN0cnVjdCBrdm0gKmt2bSkK
QEAgLTEwMTksNiArMTAyMiw5IEBAIGJvb2wga3ZtaV9lbnRlcl9ndWVzdChzdHJ1Y3Qga3ZtX3Zj
cHUgKnZjcHUpCiAJaWYgKCFrdm1pKQogCQlyZXR1cm4gdHJ1ZTsKIAorCWlmIChWQ1BVSSh2Y3B1
KS0+c2luZ2xlc3RlcC5sb29wKQorCQlrdm1pX2FyY2hfc3RhcnRfc2luZ2xlc3RlcCh2Y3B1KTsK
KwogCWlmIChrdm1pX2luamVjdF9wZW5kaW5nX2V4Y2VwdGlvbih2Y3B1KSkKIAkJciA9IGZhbHNl
OwogCkBAIC0xMjk3LDMgKzEzMDMsMjAgQEAgc3RhdGljIHZvaWQga3ZtaV90cmFja19mbHVzaF9z
bG90KHN0cnVjdCBrdm0gKmt2bSwgc3RydWN0IGt2bV9tZW1vcnlfc2xvdCAqc2xvdCwKIAogCWt2
bWlfcHV0KGt2bSk7CiB9CisKK2Jvb2wga3ZtaV92Y3B1X3J1bm5pbmdfc2luZ2xlc3RlcChzdHJ1
Y3Qga3ZtX3ZjcHUgKnZjcHUpCit7CisJc3RydWN0IGt2bV9pbnRyb3NwZWN0aW9uICprdm1pOwor
CWJvb2wgcmV0OworCisJa3ZtaSA9IGt2bWlfZ2V0KHZjcHUtPmt2bSk7CisJaWYgKCFrdm1pKQor
CQlyZXR1cm4gZmFsc2U7CisKKwlyZXQgPSBWQ1BVSSh2Y3B1KS0+c2luZ2xlc3RlcC5sb29wOwor
CisJa3ZtaV9wdXQodmNwdS0+a3ZtKTsKKworCXJldHVybiByZXQ7Cit9CitFWFBPUlRfU1lNQk9M
KGt2bWlfdmNwdV9ydW5uaW5nX3NpbmdsZXN0ZXApOwpkaWZmIC0tZ2l0IGEvdmlydC9rdm0vaW50
cm9zcGVjdGlvbi9rdm1pX2ludC5oIGIvdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pX2ludC5o
CmluZGV4IGUwY2I1OGM2MDY5Ny4uODIwMDgxZjhlM2YxIDEwMDY0NAotLS0gYS92aXJ0L2t2bS9p
bnRyb3NwZWN0aW9uL2t2bWlfaW50LmgKKysrIGIvdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1p
X2ludC5oCkBAIC0xMjgsNSArMTI4LDcgQEAgYm9vbCBrdm1pX2FyY2hfcGZfZXZlbnQoc3RydWN0
IGt2bV92Y3B1ICp2Y3B1LCBncGFfdCBncGEsIGd2YV90IGd2YSwKIAkJCXU4IGFjY2Vzcyk7CiBi
b29sIGt2bWlfYXJjaF9wZl9vZl9pbnRlcmVzdChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUpOwogdm9p
ZCBrdm1pX2FyY2hfZmVhdHVyZXMoc3RydWN0IGt2bWlfZmVhdHVyZXMgKmZlYXQpOworYm9vbCBr
dm1pX2FyY2hfc3RhcnRfc2luZ2xlc3RlcChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUpOworYm9vbCBr
dm1pX2FyY2hfc3RvcF9zaW5nbGVzdGVwKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSk7CiAKICNlbmRp
ZgpkaWZmIC0tZ2l0IGEvdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pX21zZy5jIGIvdmlydC9r
dm0vaW50cm9zcGVjdGlvbi9rdm1pX21zZy5jCmluZGV4IDcxYTY3MTU0NTQyZi4uMTRjMDYzODY5
YzI5IDEwMDY0NAotLS0gYS92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWlfbXNnLmMKKysrIGIv
dmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pX21zZy5jCkBAIC0yMCwyNyArMjAsMjggQEAgc3Ry
dWN0IGt2bWlfdmNwdV9jbWRfam9iIHsKIH07CiAKIHN0YXRpYyBjb25zdCBjaGFyICpjb25zdCBt
c2dfSURzW10gPSB7Ci0JW0tWTUlfRVZFTlRdICAgICAgICAgICAgICAgICA9ICJLVk1JX0VWRU5U
IiwKLQlbS1ZNSV9HRVRfVkVSU0lPTl0gICAgICAgICAgID0gIktWTUlfR0VUX1ZFUlNJT04iLAot
CVtLVk1JX1ZNX0NIRUNLX0NPTU1BTkRdICAgICAgPSAiS1ZNSV9WTV9DSEVDS19DT01NQU5EIiwK
LQlbS1ZNSV9WTV9DSEVDS19FVkVOVF0gICAgICAgID0gIktWTUlfVk1fQ0hFQ0tfRVZFTlQiLAot
CVtLVk1JX1ZNX0NPTlRST0xfRVZFTlRTXSAgICAgPSAiS1ZNSV9WTV9DT05UUk9MX0VWRU5UUyIs
Ci0JW0tWTUlfVk1fR0VUX0lORk9dICAgICAgICAgICA9ICJLVk1JX1ZNX0dFVF9JTkZPIiwKLQlb
S1ZNSV9WTV9HRVRfTUFYX0dGTl0gICAgICAgID0gIktWTUlfVk1fR0VUX01BWF9HRk4iLAotCVtL
Vk1JX1ZNX1JFQURfUEhZU0lDQUxdICAgICAgPSAiS1ZNSV9WTV9SRUFEX1BIWVNJQ0FMIiwKLQlb
S1ZNSV9WTV9TRVRfUEFHRV9BQ0NFU1NdICAgID0gIktWTUlfVk1fU0VUX1BBR0VfQUNDRVNTIiwK
LQlbS1ZNSV9WTV9XUklURV9QSFlTSUNBTF0gICAgID0gIktWTUlfVk1fV1JJVEVfUEhZU0lDQUwi
LAotCVtLVk1JX1ZDUFVfQ09OVFJPTF9DUl0gICAgICAgPSAiS1ZNSV9WQ1BVX0NPTlRST0xfQ1Ii
LAotCVtLVk1JX1ZDUFVfQ09OVFJPTF9FVkVOVFNdICAgPSAiS1ZNSV9WQ1BVX0NPTlRST0xfRVZF
TlRTIiwKLQlbS1ZNSV9WQ1BVX0NPTlRST0xfTVNSXSAgICAgID0gIktWTUlfVkNQVV9DT05UUk9M
X01TUiIsCi0JW0tWTUlfVkNQVV9HRVRfQ1BVSURdICAgICAgICA9ICJLVk1JX1ZDUFVfR0VUX0NQ
VUlEIiwKLQlbS1ZNSV9WQ1BVX0dFVF9JTkZPXSAgICAgICAgID0gIktWTUlfVkNQVV9HRVRfSU5G
TyIsCi0JW0tWTUlfVkNQVV9HRVRfTVRSUl9UWVBFXSAgICA9ICJLVk1JX1ZDUFVfR0VUX01UUlJf
VFlQRSIsCi0JW0tWTUlfVkNQVV9HRVRfUkVHSVNURVJTXSAgICA9ICJLVk1JX1ZDUFVfR0VUX1JF
R0lTVEVSUyIsCi0JW0tWTUlfVkNQVV9HRVRfWFNBVkVdICAgICAgICA9ICJLVk1JX1ZDUFVfR0VU
X1hTQVZFIiwKLQlbS1ZNSV9WQ1BVX0lOSkVDVF9FWENFUFRJT05dID0gIktWTUlfVkNQVV9JTkpF
Q1RfRVhDRVBUSU9OIiwKLQlbS1ZNSV9WQ1BVX1BBVVNFXSAgICAgICAgICAgID0gIktWTUlfVkNQ
VV9QQVVTRSIsCi0JW0tWTUlfVkNQVV9TRVRfUkVHSVNURVJTXSAgICA9ICJLVk1JX1ZDUFVfU0VU
X1JFR0lTVEVSUyIsCisJW0tWTUlfRVZFTlRdICAgICAgICAgICAgICAgICAgID0gIktWTUlfRVZF
TlQiLAorCVtLVk1JX0dFVF9WRVJTSU9OXSAgICAgICAgICAgICA9ICJLVk1JX0dFVF9WRVJTSU9O
IiwKKwlbS1ZNSV9WTV9DSEVDS19DT01NQU5EXSAgICAgICAgPSAiS1ZNSV9WTV9DSEVDS19DT01N
QU5EIiwKKwlbS1ZNSV9WTV9DSEVDS19FVkVOVF0gICAgICAgICAgPSAiS1ZNSV9WTV9DSEVDS19F
VkVOVCIsCisJW0tWTUlfVk1fQ09OVFJPTF9FVkVOVFNdICAgICAgID0gIktWTUlfVk1fQ09OVFJP
TF9FVkVOVFMiLAorCVtLVk1JX1ZNX0dFVF9JTkZPXSAgICAgICAgICAgICA9ICJLVk1JX1ZNX0dF
VF9JTkZPIiwKKwlbS1ZNSV9WTV9HRVRfTUFYX0dGTl0gICAgICAgICAgPSAiS1ZNSV9WTV9HRVRf
TUFYX0dGTiIsCisJW0tWTUlfVk1fUkVBRF9QSFlTSUNBTF0gICAgICAgID0gIktWTUlfVk1fUkVB
RF9QSFlTSUNBTCIsCisJW0tWTUlfVk1fU0VUX1BBR0VfQUNDRVNTXSAgICAgID0gIktWTUlfVk1f
U0VUX1BBR0VfQUNDRVNTIiwKKwlbS1ZNSV9WTV9XUklURV9QSFlTSUNBTF0gICAgICAgPSAiS1ZN
SV9WTV9XUklURV9QSFlTSUNBTCIsCisJW0tWTUlfVkNQVV9DT05UUk9MX0NSXSAgICAgICAgID0g
IktWTUlfVkNQVV9DT05UUk9MX0NSIiwKKwlbS1ZNSV9WQ1BVX0NPTlRST0xfRVZFTlRTXSAgICAg
PSAiS1ZNSV9WQ1BVX0NPTlRST0xfRVZFTlRTIiwKKwlbS1ZNSV9WQ1BVX0NPTlRST0xfTVNSXSAg
ICAgICAgPSAiS1ZNSV9WQ1BVX0NPTlRST0xfTVNSIiwKKwlbS1ZNSV9WQ1BVX0NPTlRST0xfU0lO
R0xFU1RFUF0gPSAiS1ZNSV9WQ1BVX0NPTlRST0xfU0lOR0xFU1RFUCIsCisJW0tWTUlfVkNQVV9H
RVRfQ1BVSURdICAgICAgICAgID0gIktWTUlfVkNQVV9HRVRfQ1BVSUQiLAorCVtLVk1JX1ZDUFVf
R0VUX0lORk9dICAgICAgICAgICA9ICJLVk1JX1ZDUFVfR0VUX0lORk8iLAorCVtLVk1JX1ZDUFVf
R0VUX01UUlJfVFlQRV0gICAgICA9ICJLVk1JX1ZDUFVfR0VUX01UUlJfVFlQRSIsCisJW0tWTUlf
VkNQVV9HRVRfUkVHSVNURVJTXSAgICAgID0gIktWTUlfVkNQVV9HRVRfUkVHSVNURVJTIiwKKwlb
S1ZNSV9WQ1BVX0dFVF9YU0FWRV0gICAgICAgICAgPSAiS1ZNSV9WQ1BVX0dFVF9YU0FWRSIsCisJ
W0tWTUlfVkNQVV9JTkpFQ1RfRVhDRVBUSU9OXSAgID0gIktWTUlfVkNQVV9JTkpFQ1RfRVhDRVBU
SU9OIiwKKwlbS1ZNSV9WQ1BVX1BBVVNFXSAgICAgICAgICAgICAgPSAiS1ZNSV9WQ1BVX1BBVVNF
IiwKKwlbS1ZNSV9WQ1BVX1NFVF9SRUdJU1RFUlNdICAgICAgPSAiS1ZNSV9WQ1BVX1NFVF9SRUdJ
U1RFUlMiLAogfTsKIAogc3RhdGljIGNvbnN0IGNoYXIgKmlkMnN0cih1MTYgaWQpCkBAIC02MTks
NiArNjIwLDM0IEBAIHN0YXRpYyBpbnQgaGFuZGxlX3ZjcHVfY29udHJvbF9tc3IoY29uc3Qgc3Ry
dWN0IGt2bWlfdmNwdV9jbWRfam9iICpqb2IsCiAJcmV0dXJuIGt2bWlfbXNnX3ZjcHVfcmVwbHko
am9iLCBtc2csIGVjLCBOVUxMLCAwKTsKIH0KIAorc3RhdGljIGludCBoYW5kbGVfdmNwdV9jb250
cm9sX3NpbmdsZXN0ZXAoY29uc3Qgc3RydWN0IGt2bWlfdmNwdV9jbWRfam9iICpqb2IsCisJCQkJ
CSAgY29uc3Qgc3RydWN0IGt2bWlfbXNnX2hkciAqbXNnLAorCQkJCQkgIGNvbnN0IHZvaWQgKl9y
ZXEpCit7CisJY29uc3Qgc3RydWN0IGt2bWlfdmNwdV9jb250cm9sX3NpbmdsZXN0ZXAgKnJlcSA9
IF9yZXE7CisJc3RydWN0IGt2bV92Y3B1ICp2Y3B1ID0gam9iLT52Y3B1OworCWludCBlYyA9IC1L
Vk1fRUlOVkFMOworCWJvb2wgZG9uZTsKKwlpbnQgaTsKKworCWZvciAoaSA9IDA7IGkgPCBzaXpl
b2YocmVxLT5wYWRkaW5nKTsgaSsrKQorCQlpZiAocmVxLT5wYWRkaW5nW2ldKQorCQkJZ290byBy
ZXBseTsKKworCWlmIChyZXEtPmVuYWJsZSkKKwkJZG9uZSA9IGt2bWlfYXJjaF9zdGFydF9zaW5n
bGVzdGVwKHZjcHUpOworCWVsc2UKKwkJZG9uZSA9IGt2bWlfYXJjaF9zdG9wX3NpbmdsZXN0ZXAo
dmNwdSk7CisKKwlpZiAoZG9uZSkgeworCQllYyA9IDA7CisJCVZDUFVJKHZjcHUpLT5zaW5nbGVz
dGVwLmxvb3AgPSAhIXJlcS0+ZW5hYmxlOworCX0KKworcmVwbHk6CisJcmV0dXJuIGt2bWlfbXNn
X3ZjcHVfcmVwbHkoam9iLCBtc2csIGVjLCBOVUxMLCAwKTsKK30KKwogLyoKICAqIFRoZXNlIGNv
bW1hbmRzIGFyZSBleGVjdXRlZCBmcm9tIHRoZSB2Q1BVIHRocmVhZC4gVGhlIHJlY2VpdmluZyB0
aHJlYWQKICAqIHBhc3NlcyB0aGUgbWVzc2FnZXMgdXNpbmcgYSBuZXdseSBhbGxvY2F0ZWQgJ3N0
cnVjdCBrdm1pX3ZjcHVfY21kX2pvYicKQEAgLTYyNywxNyArNjU2LDE4IEBAIHN0YXRpYyBpbnQg
aGFuZGxlX3ZjcHVfY29udHJvbF9tc3IoY29uc3Qgc3RydWN0IGt2bWlfdmNwdV9jbWRfam9iICpq
b2IsCiAgKi8KIHN0YXRpYyBpbnQoKmNvbnN0IG1zZ192Y3B1W10pKGNvbnN0IHN0cnVjdCBrdm1p
X3ZjcHVfY21kX2pvYiAqLAogCQkJICAgICAgY29uc3Qgc3RydWN0IGt2bWlfbXNnX2hkciAqLCBj
b25zdCB2b2lkICopID0gewotCVtLVk1JX0VWRU5UXSAgICAgICAgICAgICAgICAgPSBoYW5kbGVf
ZXZlbnRfcmVwbHksCi0JW0tWTUlfVkNQVV9DT05UUk9MX0NSXSAgICAgICA9IGhhbmRsZV92Y3B1
X2NvbnRyb2xfY3IsCi0JW0tWTUlfVkNQVV9DT05UUk9MX0VWRU5UU10gICA9IGhhbmRsZV92Y3B1
X2NvbnRyb2xfZXZlbnRzLAotCVtLVk1JX1ZDUFVfQ09OVFJPTF9NU1JdICAgICAgPSBoYW5kbGVf
dmNwdV9jb250cm9sX21zciwKLQlbS1ZNSV9WQ1BVX0dFVF9DUFVJRF0gICAgICAgID0gaGFuZGxl
X2dldF9jcHVpZCwKLQlbS1ZNSV9WQ1BVX0dFVF9JTkZPXSAgICAgICAgID0gaGFuZGxlX2dldF92
Y3B1X2luZm8sCi0JW0tWTUlfVkNQVV9HRVRfTVRSUl9UWVBFXSAgICA9IGhhbmRsZV92Y3B1X2dl
dF9tdHJyX3R5cGUsCi0JW0tWTUlfVkNQVV9HRVRfUkVHSVNURVJTXSAgICA9IGhhbmRsZV9nZXRf
cmVnaXN0ZXJzLAotCVtLVk1JX1ZDUFVfR0VUX1hTQVZFXSAgICAgICAgPSBoYW5kbGVfdmNwdV9n
ZXRfeHNhdmUsCi0JW0tWTUlfVkNQVV9JTkpFQ1RfRVhDRVBUSU9OXSA9IGhhbmRsZV92Y3B1X2lu
amVjdF9leGNlcHRpb24sCi0JW0tWTUlfVkNQVV9TRVRfUkVHSVNURVJTXSAgICA9IGhhbmRsZV9z
ZXRfcmVnaXN0ZXJzLAorCVtLVk1JX0VWRU5UXSAgICAgICAgICAgICAgICAgICA9IGhhbmRsZV9l
dmVudF9yZXBseSwKKwlbS1ZNSV9WQ1BVX0NPTlRST0xfQ1JdICAgICAgICAgPSBoYW5kbGVfdmNw
dV9jb250cm9sX2NyLAorCVtLVk1JX1ZDUFVfQ09OVFJPTF9FVkVOVFNdICAgICA9IGhhbmRsZV92
Y3B1X2NvbnRyb2xfZXZlbnRzLAorCVtLVk1JX1ZDUFVfQ09OVFJPTF9NU1JdICAgICAgICA9IGhh
bmRsZV92Y3B1X2NvbnRyb2xfbXNyLAorCVtLVk1JX1ZDUFVfQ09OVFJPTF9TSU5HTEVTVEVQXSA9
IGhhbmRsZV92Y3B1X2NvbnRyb2xfc2luZ2xlc3RlcCwKKwlbS1ZNSV9WQ1BVX0dFVF9DUFVJRF0g
ICAgICAgICAgPSBoYW5kbGVfZ2V0X2NwdWlkLAorCVtLVk1JX1ZDUFVfR0VUX0lORk9dICAgICAg
ICAgICA9IGhhbmRsZV9nZXRfdmNwdV9pbmZvLAorCVtLVk1JX1ZDUFVfR0VUX01UUlJfVFlQRV0g
ICAgICA9IGhhbmRsZV92Y3B1X2dldF9tdHJyX3R5cGUsCisJW0tWTUlfVkNQVV9HRVRfUkVHSVNU
RVJTXSAgICAgID0gaGFuZGxlX2dldF9yZWdpc3RlcnMsCisJW0tWTUlfVkNQVV9HRVRfWFNBVkVd
ICAgICAgICAgID0gaGFuZGxlX3ZjcHVfZ2V0X3hzYXZlLAorCVtLVk1JX1ZDUFVfSU5KRUNUX0VY
Q0VQVElPTl0gICA9IGhhbmRsZV92Y3B1X2luamVjdF9leGNlcHRpb24sCisJW0tWTUlfVkNQVV9T
RVRfUkVHSVNURVJTXSAgICAgID0gaGFuZGxlX3NldF9yZWdpc3RlcnMsCiB9OwogCiBzdGF0aWMg
Ym9vbCBpc192Y3B1X2NvbW1hbmQodTE2IGlkKQpfX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fXwpWaXJ0dWFsaXphdGlvbiBtYWlsaW5nIGxpc3QKVmlydHVhbGl6
YXRpb25AbGlzdHMubGludXgtZm91bmRhdGlvbi5vcmcKaHR0cHM6Ly9saXN0cy5saW51eGZvdW5k
YXRpb24ub3JnL21haWxtYW4vbGlzdGluZm8vdmlydHVhbGl6YXRpb24=
