Return-Path: <virtualization-bounces@lists.linux-foundation.org>
X-Original-To: lists.virtualization@lfdr.de
Delivered-To: lists.virtualization@lfdr.de
Received: from whitealder.osuosl.org (smtp1.osuosl.org [140.211.166.138])
	by mail.lfdr.de (Postfix) with ESMTPS id 92C492C3CDC
	for <lists.virtualization@lfdr.de>; Wed, 25 Nov 2020 10:51:59 +0100 (CET)
Received: from localhost (localhost [127.0.0.1])
	by whitealder.osuosl.org (Postfix) with ESMTP id F0D8286DB1;
	Wed, 25 Nov 2020 09:51:57 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from whitealder.osuosl.org ([127.0.0.1])
	by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id 6QwFIBifESjd; Wed, 25 Nov 2020 09:51:54 +0000 (UTC)
Received: from lists.linuxfoundation.org (lf-lists.osuosl.org [140.211.9.56])
	by whitealder.osuosl.org (Postfix) with ESMTP id C44B186DA0;
	Wed, 25 Nov 2020 09:51:54 +0000 (UTC)
Received: from lf-lists.osuosl.org (localhost [127.0.0.1])
	by lists.linuxfoundation.org (Postfix) with ESMTP id 8869EC0052;
	Wed, 25 Nov 2020 09:51:54 +0000 (UTC)
X-Original-To: virtualization@lists.linux-foundation.org
Delivered-To: virtualization@lists.linuxfoundation.org
Received: from silver.osuosl.org (smtp3.osuosl.org [140.211.166.136])
 by lists.linuxfoundation.org (Postfix) with ESMTP id 1DC91C0052
 for <virtualization@lists.linux-foundation.org>;
 Wed, 25 Nov 2020 09:51:53 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by silver.osuosl.org (Postfix) with ESMTP id 0CD2D274B0
 for <virtualization@lists.linux-foundation.org>;
 Wed, 25 Nov 2020 09:51:53 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from silver.osuosl.org ([127.0.0.1])
 by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id WXIvaww8O+7w
 for <virtualization@lists.linux-foundation.org>;
 Wed, 25 Nov 2020 09:51:52 +0000 (UTC)
X-Greylist: from auto-whitelisted by SQLgrey-1.7.6
Received: from mx01.bbu.dsd.mx.bitdefender.com
 (mx01.bbu.dsd.mx.bitdefender.com [91.199.104.161])
 by silver.osuosl.org (Postfix) with ESMTPS id 7213B274AA
 for <virtualization@lists.linux-foundation.org>;
 Wed, 25 Nov 2020 09:51:52 +0000 (UTC)
Received: from smtp.bitdefender.com (smtp01.buh.bitdefender.com [10.17.80.75])
 by mx01.bbu.dsd.mx.bitdefender.com (Postfix) with ESMTPS id
 9A899305D497; Wed, 25 Nov 2020 11:35:50 +0200 (EET)
Received: from localhost.localdomain (unknown [91.199.104.27])
 by smtp.bitdefender.com (Postfix) with ESMTPSA id 7A4203072784;
 Wed, 25 Nov 2020 11:35:50 +0200 (EET)
From: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>
To: kvm@vger.kernel.org
Subject: [PATCH v10 48/81] KVM: introspection: add KVMI_VM_PAUSE_VCPU
Date: Wed, 25 Nov 2020 11:35:27 +0200
Message-Id: <20201125093600.2766-49-alazar@bitdefender.com>
In-Reply-To: <20201125093600.2766-1-alazar@bitdefender.com>
References: <20201125093600.2766-1-alazar@bitdefender.com>
MIME-Version: 1.0
Cc: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>,
 Paolo Bonzini <pbonzini@redhat.com>, virtualization@lists.linux-foundation.org
X-BeenThere: virtualization@lists.linux-foundation.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Linux virtualization <virtualization.lists.linux-foundation.org>
List-Unsubscribe: <https://lists.linuxfoundation.org/mailman/options/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=unsubscribe>
List-Archive: <http://lists.linuxfoundation.org/pipermail/virtualization/>
List-Post: <mailto:virtualization@lists.linux-foundation.org>
List-Help: <mailto:virtualization-request@lists.linux-foundation.org?subject=help>
List-Subscribe: <https://lists.linuxfoundation.org/mailman/listinfo/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: virtualization-bounces@lists.linux-foundation.org
Sender: "Virtualization" <virtualization-bounces@lists.linux-foundation.org>

VGhpcyBjb21tYW5kIGluY3JlbWVudHMgYSBwYXVzZSByZXF1ZXN0cyBjb3VudGVyIGZvciBhIHZD
UFUgYW5kIGtpY2tzCml0IG91dCBvZiBndWVzdC4KClRoZSBpbnRyb3NwZWN0aW9uIHRvb2wgY2Fu
IHBhdXNlIGEgVk0gYnkgc2VuZGluZyB0aGlzIGNvbW1hbmQgZm9yIGFsbAp2Q1BVcy4gSWYgaXQg
c2V0cyAnd2FpdD0xJywgaXQgY2FuIGNvbnNpZGVyIHRoYXQgdGhlIFZNIGlzIHBhdXNlZCB3aGVu
Cml0IHJlY2VpdmVzIHRoZSByZXBseSBmb3IgdGhlIGxhc3QgS1ZNSV9WTV9QQVVTRV9WQ1BVIGNv
bW1hbmQuCgpTaWduZWQtb2ZmLWJ5OiBBZGFsYmVydCBMYXrEg3IgPGFsYXphckBiaXRkZWZlbmRl
ci5jb20+Ci0tLQogRG9jdW1lbnRhdGlvbi92aXJ0L2t2bS9rdm1pLnJzdCAgICAgICAgICAgICAg
IHwgMzkgKysrKysrKysrKysrKysrCiBpbmNsdWRlL2xpbnV4L2t2bWlfaG9zdC5oICAgICAgICAg
ICAgICAgICAgICAgfCAgMiArCiBpbmNsdWRlL3VhcGkvbGludXgva3ZtaS5oICAgICAgICAgICAg
ICAgICAgICAgfCAgOCArKysrCiAuLi4vdGVzdGluZy9zZWxmdGVzdHMva3ZtL3g4Nl82NC9rdm1p
X3Rlc3QuYyAgfCAzMCArKysrKysrKysrKysKIHZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaS5j
ICAgICAgICAgICAgICAgICB8IDQ3ICsrKysrKysrKysrKysrKysrLS0KIHZpcnQva3ZtL2ludHJv
c3BlY3Rpb24va3ZtaV9pbnQuaCAgICAgICAgICAgICB8ICAxICsKIHZpcnQva3ZtL2ludHJvc3Bl
Y3Rpb24va3ZtaV9tc2cuYyAgICAgICAgICAgICB8IDI0ICsrKysrKysrKysKIDcgZmlsZXMgY2hh
bmdlZCwgMTQ3IGluc2VydGlvbnMoKyksIDQgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvRG9j
dW1lbnRhdGlvbi92aXJ0L2t2bS9rdm1pLnJzdCBiL0RvY3VtZW50YXRpb24vdmlydC9rdm0va3Zt
aS5yc3QKaW5kZXggOTAyY2VkNGRkMGM0Li5hNzFmYjc4ZDU0NmUgMTAwNjQ0Ci0tLSBhL0RvY3Vt
ZW50YXRpb24vdmlydC9rdm0va3ZtaS5yc3QKKysrIGIvRG9jdW1lbnRhdGlvbi92aXJ0L2t2bS9r
dm1pLnJzdApAQCAtNDcwLDYgKzQ3MCw0NSBAQCBSZXR1cm5zIHRoZSBUU0MgZnJlcXVlbmN5IChp
biBIWikgZm9yIHRoZSBzcGVjaWZpZWQgdkNQVSBpZiBhdmFpbGFibGUKICogLUtWTV9FSU5WQUwg
LSB0aGUgc2VsZWN0ZWQgdkNQVSBpcyBpbnZhbGlkCiAqIC1LVk1fRUFHQUlOIC0gdGhlIHNlbGVj
dGVkIHZDUFUgY2FuJ3QgYmUgaW50cm9zcGVjdGVkIHlldAogCis5LiBLVk1JX1ZNX1BBVVNFX1ZD
UFUKKy0tLS0tLS0tLS0tLS0tLS0tLS0tLQorCis6QXJjaGl0ZWN0dXJlczogYWxsCis6VmVyc2lv
bnM6ID49IDEKKzpQYXJhbWV0ZXJzOgorCis6OgorCisJc3RydWN0IGt2bWlfdm1fcGF1c2VfdmNw
dSB7CisJCV9fdTE2IHZjcHU7CisJCV9fdTggd2FpdDsKKwkJX191OCBwYWRkaW5nMTsKKwkJX191
MzIgcGFkZGluZzI7CisJfTsKKworOlJldHVybnM6CisKKzo6CisKKwlzdHJ1Y3Qga3ZtaV9lcnJv
cl9jb2RlOworCitLaWNrcyB0aGUgdkNQVSBvdXQgb2YgZ3Vlc3QuCisKK0lmIGB3YWl0YCBpcyAx
LCB0aGUgY29tbWFuZCB3aWxsIHdhaXQgZm9yIHZDUFUgdG8gYWNrbm93bGVkZ2UgdGhlIElQSS4K
KworVGhlIHZDUFUgd2lsbCBoYW5kbGUgdGhlIHBlbmRpbmcgY29tbWFuZHMvZXZlbnRzIGFuZCBz
ZW5kIHRoZQorKktWTUlfVkNQVV9FVkVOVF9QQVVTRSogZXZlbnQgKG9uZSBmb3IgZXZlcnkgc3Vj
Y2Vzc2Z1bCAqS1ZNSV9WTV9QQVVTRV9WQ1BVKgorY29tbWFuZCkgYmVmb3JlIHJldHVybmluZyB0
byBndWVzdC4KKworOkVycm9yczoKKworKiAtS1ZNX0VJTlZBTCAtIHRoZSBwYWRkaW5nIGlzIG5v
dCB6ZXJvCisqIC1LVk1fRUlOVkFMIC0gdGhlIHNlbGVjdGVkIHZDUFUgaXMgaW52YWxpZAorKiAt
S1ZNX0VBR0FJTiAtIHRoZSBzZWxlY3RlZCB2Q1BVIGNhbid0IGJlIGludHJvc3BlY3RlZCB5ZXQK
KyogLUtWTV9FQlVTWSAgLSB0aGUgc2VsZWN0ZWQgdkNQVSBoYXMgdG9vIG1hbnkgcXVldWVkCisg
ICAgICAgICAgICAgICAgKktWTUlfVkNQVV9FVkVOVF9QQVVTRSogZXZlbnRzCisqIC1LVk1fRVBF
Uk0gIC0gdGhlICpLVk1JX1ZDUFVfRVZFTlRfUEFVU0UqIGV2ZW50IGlzIGRpc2FsbG93ZWQKKwog
RXZlbnRzCiA9PT09PT0KIApkaWZmIC0tZ2l0IGEvaW5jbHVkZS9saW51eC9rdm1pX2hvc3QuaCBi
L2luY2x1ZGUvbGludXgva3ZtaV9ob3N0LmgKaW5kZXggNzM2ZWRiNDAwYzA1Li41OWU2NDVkOWVh
MzQgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvbGludXgva3ZtaV9ob3N0LmgKKysrIGIvaW5jbHVkZS9s
aW51eC9rdm1pX2hvc3QuaApAQCAtMTgsNiArMTgsOCBAQCBzdHJ1Y3Qga3ZtX3ZjcHVfaW50cm9z
cGVjdGlvbiB7CiAKIAlzdHJ1Y3QgbGlzdF9oZWFkIGpvYl9saXN0OwogCXNwaW5sb2NrX3Qgam9i
X2xvY2s7CisKKwlhdG9taWNfdCBwYXVzZV9yZXF1ZXN0czsKIH07CiAKIHN0cnVjdCBrdm1faW50
cm9zcGVjdGlvbiB7CmRpZmYgLS1naXQgYS9pbmNsdWRlL3VhcGkvbGludXgva3ZtaS5oIGIvaW5j
bHVkZS91YXBpL2xpbnV4L2t2bWkuaAppbmRleCBkYTc2NjQyNzIzMWUuLmJiOTBkMDNmMDU5YiAx
MDA2NDQKLS0tIGEvaW5jbHVkZS91YXBpL2xpbnV4L2t2bWkuaAorKysgYi9pbmNsdWRlL3VhcGkv
bGludXgva3ZtaS5oCkBAIC0yNiw2ICsyNiw3IEBAIGVudW0gewogCUtWTUlfVk1fQ09OVFJPTF9F
VkVOVFMgPSBLVk1JX1ZNX01FU1NBR0VfSUQoNSksCiAJS1ZNSV9WTV9SRUFEX1BIWVNJQ0FMICA9
IEtWTUlfVk1fTUVTU0FHRV9JRCg2KSwKIAlLVk1JX1ZNX1dSSVRFX1BIWVNJQ0FMID0gS1ZNSV9W
TV9NRVNTQUdFX0lEKDcpLAorCUtWTUlfVk1fUEFVU0VfVkNQVSAgICAgPSBLVk1JX1ZNX01FU1NB
R0VfSUQoOCksCiAKIAlLVk1JX05FWFRfVk1fTUVTU0FHRQogfTsKQEAgLTExNSw0ICsxMTYsMTEg
QEAgc3RydWN0IGt2bWlfdmNwdV9oZHIgewogCV9fdTMyIHBhZGRpbmcyOwogfTsKIAorc3RydWN0
IGt2bWlfdm1fcGF1c2VfdmNwdSB7CisJX191MTYgdmNwdTsKKwlfX3U4IHdhaXQ7CisJX191OCBw
YWRkaW5nMTsKKwlfX3UzMiBwYWRkaW5nMjsKK307CisKICNlbmRpZiAvKiBfVUFQSV9fTElOVVhf
S1ZNSV9IICovCmRpZmYgLS1naXQgYS90b29scy90ZXN0aW5nL3NlbGZ0ZXN0cy9rdm0veDg2XzY0
L2t2bWlfdGVzdC5jIGIvdG9vbHMvdGVzdGluZy9zZWxmdGVzdHMva3ZtL3g4Nl82NC9rdm1pX3Rl
c3QuYwppbmRleCA5MzUwYmE4YjdmOWIuLjUyNzY1Y2EzZjljOCAxMDA2NDQKLS0tIGEvdG9vbHMv
dGVzdGluZy9zZWxmdGVzdHMva3ZtL3g4Nl82NC9rdm1pX3Rlc3QuYworKysgYi90b29scy90ZXN0
aW5nL3NlbGZ0ZXN0cy9rdm0veDg2XzY0L2t2bWlfdGVzdC5jCkBAIC02NzEsNiArNjcxLDM1IEBA
IHN0YXRpYyB2b2lkIHRlc3RfY21kX3ZjcHVfZ2V0X2luZm8oc3RydWN0IGt2bV92bSAqdm0pCiAJ
CQkmcnBsLCBzaXplb2YocnBsKSwgLUtWTV9FSU5WQUwpOwogfQogCitzdGF0aWMgdm9pZCBjbWRf
dmNwdV9wYXVzZShfX3U4IHdhaXQsIGludCBleHBlY3RlZF9lcnIpCit7CisJc3RydWN0IHsKKwkJ
c3RydWN0IGt2bWlfbXNnX2hkciBoZHI7CisJCXN0cnVjdCBrdm1pX3ZtX3BhdXNlX3ZjcHUgY21k
OworCX0gcmVxID0ge307CisJX191MTYgdmNwdV9pZHggPSAwOworCisJcmVxLmNtZC53YWl0ID0g
d2FpdDsKKwlyZXEuY21kLnZjcHUgPSB2Y3B1X2lkeDsKKworCXRlc3Rfdm1fY29tbWFuZChLVk1J
X1ZNX1BBVVNFX1ZDUFUsICZyZXEuaGRyLCBzaXplb2YocmVxKSwgTlVMTCwgMCwgZXhwZWN0ZWRf
ZXJyKTsKK30KKworc3RhdGljIHZvaWQgcGF1c2VfdmNwdSh2b2lkKQoreworCWNtZF92Y3B1X3Bh
dXNlKDEsIDApOworfQorCitzdGF0aWMgdm9pZCB0ZXN0X3BhdXNlKHN0cnVjdCBrdm1fdm0gKnZt
KQoreworCV9fdTggd2FpdCA9IDEsIHdhaXRfaW52YWwgPSAyOworCisJcGF1c2VfdmNwdSgpOwor
CisJY21kX3ZjcHVfcGF1c2Uod2FpdCwgMCk7CisJY21kX3ZjcHVfcGF1c2Uod2FpdF9pbnZhbCwg
LUtWTV9FSU5WQUwpOworfQorCiBzdGF0aWMgdm9pZCB0ZXN0X2ludHJvc3BlY3Rpb24oc3RydWN0
IGt2bV92bSAqdm0pCiB7CiAJc3JhbmRvbSh0aW1lKDApKTsKQEAgLTY4Niw2ICs3MTUsNyBAQCBz
dGF0aWMgdm9pZCB0ZXN0X2ludHJvc3BlY3Rpb24oc3RydWN0IGt2bV92bSAqdm0pCiAJdGVzdF9j
bWRfdm1fY29udHJvbF9ldmVudHModm0pOwogCXRlc3RfbWVtb3J5X2FjY2Vzcyh2bSk7CiAJdGVz
dF9jbWRfdmNwdV9nZXRfaW5mbyh2bSk7CisJdGVzdF9wYXVzZSh2bSk7CiAKIAl1bmhvb2tfaW50
cm9zcGVjdGlvbih2bSk7CiB9CmRpZmYgLS1naXQgYS92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2
bWkuYyBiL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaS5jCmluZGV4IGI2MDg3NTE3ODBmYy4u
NDk5OTEzMmE2NWJjIDEwMDY0NAotLS0gYS92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWkuYwor
KysgYi92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWkuYwpAQCAtMTcsNiArMTcsOCBAQAogCiAj
ZGVmaW5lIEtWTUlfTVNHX1NJWkVfQUxMT0MgKHNpemVvZihzdHJ1Y3Qga3ZtaV9tc2dfaGRyKSAr
IEtWTUlfTUFYX01TR19TSVpFKQogCisjZGVmaW5lIE1BWF9QQVVTRV9SRVFVRVNUUyAxMDAxCisK
IHN0YXRpYyBERUNMQVJFX0JJVE1BUChLdm1pX2Fsd2F5c19hbGxvd2VkX2NvbW1hbmRzLCBLVk1J
X05VTV9DT01NQU5EUyk7CiBzdGF0aWMgREVDTEFSRV9CSVRNQVAoS3ZtaV9rbm93bl9ldmVudHMs
IEtWTUlfTlVNX0VWRU5UUyk7CiBzdGF0aWMgREVDTEFSRV9CSVRNQVAoS3ZtaV9rbm93bl92bV9l
dmVudHMsIEtWTUlfTlVNX0VWRU5UUyk7CkBAIC0xMjQsMTAgKzEyNiwxNCBAQCB2b2lkIGt2bWlf
dW5pbml0KHZvaWQpCiAJa3ZtaV9jYWNoZV9kZXN0cm95KCk7CiB9CiAKLXN0YXRpYyB2b2lkIGt2
bWlfbWFrZV9yZXF1ZXN0KHN0cnVjdCBrdm1fdmNwdSAqdmNwdSkKK3N0YXRpYyB2b2lkIGt2bWlf
bWFrZV9yZXF1ZXN0KHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwgYm9vbCB3YWl0KQogewogCWt2bV9t
YWtlX3JlcXVlc3QoS1ZNX1JFUV9JTlRST1NQRUNUSU9OLCB2Y3B1KTsKLQlrdm1fdmNwdV9raWNr
KHZjcHUpOworCisJaWYgKHdhaXQpCisJCWt2bV92Y3B1X2tpY2tfYW5kX3dhaXQodmNwdSk7CisJ
ZWxzZQorCQlrdm1fdmNwdV9raWNrKHZjcHUpOwogfQogCiBzdGF0aWMgaW50IF9fa3ZtaV9hZGRf
am9iKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwKQEAgLTE2Miw3ICsxNjgsNyBAQCBpbnQga3ZtaV9h
ZGRfam9iKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwKIAllcnIgPSBfX2t2bWlfYWRkX2pvYih2Y3B1
LCBmY3QsIGN0eCwgZnJlZV9mY3QpOwogCiAJaWYgKCFlcnIpCi0JCWt2bWlfbWFrZV9yZXF1ZXN0
KHZjcHUpOworCQlrdm1pX21ha2VfcmVxdWVzdCh2Y3B1LCBmYWxzZSk7CiAKIAlyZXR1cm4gZXJy
OwogfQpAQCAtMzU5LDYgKzM2NSw5IEBAIHN0YXRpYyBpbnQgX19rdm1pX2hvb2soc3RydWN0IGt2
bSAqa3ZtLAogCiBzdGF0aWMgdm9pZCBrdm1pX2pvYl9yZWxlYXNlX3ZjcHUoc3RydWN0IGt2bV92
Y3B1ICp2Y3B1LCB2b2lkICpjdHgpCiB7CisJc3RydWN0IGt2bV92Y3B1X2ludHJvc3BlY3Rpb24g
KnZjcHVpID0gVkNQVUkodmNwdSk7CisKKwlhdG9taWNfc2V0KCZ2Y3B1aS0+cGF1c2VfcmVxdWVz
dHMsIDApOwogfQogCiBzdGF0aWMgdm9pZCBrdm1pX3JlbGVhc2VfdmNwdXMoc3RydWN0IGt2bSAq
a3ZtKQpAQCAtNzMwLDE1ICs3MzksNDUgQEAgdm9pZCBrdm1pX3J1bl9qb2JzKHN0cnVjdCBrdm1f
dmNwdSAqdmNwdSkKIAl9CiB9CiAKK3N0YXRpYyB2b2lkIGt2bWlfdmNwdV9wYXVzZV9ldmVudChz
dHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUpCit7CisJc3RydWN0IGt2bV92Y3B1X2ludHJvc3BlY3Rpb24g
KnZjcHVpID0gVkNQVUkodmNwdSk7CisKKwlhdG9taWNfZGVjKCZ2Y3B1aS0+cGF1c2VfcmVxdWVz
dHMpOworCS8qIHRvIGJlIGltcGxlbWVudGVkICovCit9CisKIHZvaWQga3ZtaV9oYW5kbGVfcmVx
dWVzdHMoc3RydWN0IGt2bV92Y3B1ICp2Y3B1KQogeworCXN0cnVjdCBrdm1fdmNwdV9pbnRyb3Nw
ZWN0aW9uICp2Y3B1aSA9IFZDUFVJKHZjcHUpOwogCXN0cnVjdCBrdm1faW50cm9zcGVjdGlvbiAq
a3ZtaTsKIAogCWt2bWkgPSBrdm1pX2dldCh2Y3B1LT5rdm0pOwogCWlmICgha3ZtaSkKIAkJcmV0
dXJuOwogCi0Ja3ZtaV9ydW5fam9icyh2Y3B1KTsKKwlmb3IgKDs7KSB7CisJCWt2bWlfcnVuX2pv
YnModmNwdSk7CisKKwkJaWYgKGF0b21pY19yZWFkKCZ2Y3B1aS0+cGF1c2VfcmVxdWVzdHMpKQor
CQkJa3ZtaV92Y3B1X3BhdXNlX2V2ZW50KHZjcHUpOworCQllbHNlCisJCQlicmVhazsKKwl9CiAK
IAlrdm1pX3B1dCh2Y3B1LT5rdm0pOwogfQorCitpbnQga3ZtaV9jbWRfdmNwdV9wYXVzZShzdHJ1
Y3Qga3ZtX3ZjcHUgKnZjcHUsIGJvb2wgd2FpdCkKK3sKKwlzdHJ1Y3Qga3ZtX3ZjcHVfaW50cm9z
cGVjdGlvbiAqdmNwdWkgPSBWQ1BVSSh2Y3B1KTsKKworCWlmIChhdG9taWNfcmVhZCgmdmNwdWkt
PnBhdXNlX3JlcXVlc3RzKSA+IE1BWF9QQVVTRV9SRVFVRVNUUykKKwkJcmV0dXJuIC1LVk1fRUJV
U1k7CisKKwlhdG9taWNfaW5jKCZ2Y3B1aS0+cGF1c2VfcmVxdWVzdHMpOworCisJa3ZtaV9tYWtl
X3JlcXVlc3QodmNwdSwgd2FpdCk7CisKKwlyZXR1cm4gMDsKK30KZGlmZiAtLWdpdCBhL3ZpcnQv
a3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9pbnQuaCBiL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3Zt
aV9pbnQuaAppbmRleCAxMjZlNzIyMDE1MTguLmYxY2FhNjdkYmRjMyAxMDA2NDQKLS0tIGEvdmly
dC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pX2ludC5oCisrKyBiL3ZpcnQva3ZtL2ludHJvc3BlY3Rp
b24va3ZtaV9pbnQuaApAQCAtNTUsNiArNTUsNyBAQCBpbnQga3ZtaV9jbWRfcmVhZF9waHlzaWNh
bChzdHJ1Y3Qga3ZtICprdm0sIHU2NCBncGEsIHNpemVfdCBzaXplLAogCQkJICAgY29uc3Qgc3Ry
dWN0IGt2bWlfbXNnX2hkciAqY3R4KTsKIGludCBrdm1pX2NtZF93cml0ZV9waHlzaWNhbChzdHJ1
Y3Qga3ZtICprdm0sIHU2NCBncGEsIHNpemVfdCBzaXplLAogCQkJICAgIGNvbnN0IHZvaWQgKmJ1
Zik7CitpbnQga3ZtaV9jbWRfdmNwdV9wYXVzZShzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsIGJvb2wg
d2FpdCk7CiAKIC8qIGFyY2ggKi8KIHZvaWQga3ZtaV9hcmNoX2luaXRfdmNwdV9ldmVudHNfbWFz
ayh1bnNpZ25lZCBsb25nICpzdXBwb3J0ZWQpOwpkaWZmIC0tZ2l0IGEvdmlydC9rdm0vaW50cm9z
cGVjdGlvbi9rdm1pX21zZy5jIGIvdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pX21zZy5jCmlu
ZGV4IGVmZDA0YjRhYTRmZi4uMDJiZGVjNWJmYmU3IDEwMDY0NAotLS0gYS92aXJ0L2t2bS9pbnRy
b3NwZWN0aW9uL2t2bWlfbXNnLmMKKysrIGIvdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pX21z
Zy5jCkBAIC0yNDUsNiArMjQ1LDI5IEBAIHN0YXRpYyBpbnQgaGFuZGxlX3ZtX3dyaXRlX3BoeXNp
Y2FsKHN0cnVjdCBrdm1faW50cm9zcGVjdGlvbiAqa3ZtaSwKIAlyZXR1cm4ga3ZtaV9tc2dfdm1f
cmVwbHkoa3ZtaSwgbXNnLCBlYywgTlVMTCwgMCk7CiB9CiAKK3N0YXRpYyBpbnQgaGFuZGxlX3Zt
X3BhdXNlX3ZjcHUoc3RydWN0IGt2bV9pbnRyb3NwZWN0aW9uICprdm1pLAorCQkJCWNvbnN0IHN0
cnVjdCBrdm1pX21zZ19oZHIgKm1zZywKKwkJCQljb25zdCB2b2lkICpfcmVxKQoreworCWNvbnN0
IHN0cnVjdCBrdm1pX3ZtX3BhdXNlX3ZjcHUgKnJlcSA9IF9yZXE7CisJc3RydWN0IGt2bV92Y3B1
ICp2Y3B1OworCWludCBlcnI7CisKKwlpZiAocmVxLT53YWl0ID4gMSB8fCByZXEtPnBhZGRpbmcx
IHx8IHJlcS0+cGFkZGluZzIpIHsKKwkJZXJyID0gLUtWTV9FSU5WQUw7CisJCWdvdG8gcmVwbHk7
CisJfQorCisJdmNwdSA9IGt2bWlfZ2V0X3ZjcHUoa3ZtaSwgcmVxLT52Y3B1KTsKKwlpZiAoIXZj
cHUpCisJCWVyciA9IC1LVk1fRUlOVkFMOworCWVsc2UKKwkJZXJyID0ga3ZtaV9jbWRfdmNwdV9w
YXVzZSh2Y3B1LCByZXEtPndhaXQgPT0gMSk7CisKK3JlcGx5OgorCXJldHVybiBrdm1pX21zZ192
bV9yZXBseShrdm1pLCBtc2csIGVyciwgTlVMTCwgMCk7Cit9CisKIC8qCiAgKiBUaGVzZSBjb21t
YW5kcyBhcmUgZXhlY3V0ZWQgYnkgdGhlIHJlY2VpdmluZyB0aHJlYWQuCiAgKi8KQEAgLTI1NCw2
ICsyNzcsNyBAQCBzdGF0aWMga3ZtaV92bV9tc2dfZmN0IGNvbnN0IG1zZ192bVtdID0gewogCVtL
Vk1JX1ZNX0NIRUNLX0VWRU5UXSAgICA9IGhhbmRsZV92bV9jaGVja19ldmVudCwKIAlbS1ZNSV9W
TV9DT05UUk9MX0VWRU5UU10gPSBoYW5kbGVfdm1fY29udHJvbF9ldmVudHMsCiAJW0tWTUlfVk1f
R0VUX0lORk9dICAgICAgID0gaGFuZGxlX3ZtX2dldF9pbmZvLAorCVtLVk1JX1ZNX1BBVVNFX1ZD
UFVdICAgICA9IGhhbmRsZV92bV9wYXVzZV92Y3B1LAogCVtLVk1JX1ZNX1JFQURfUEhZU0lDQUxd
ICA9IGhhbmRsZV92bV9yZWFkX3BoeXNpY2FsLAogCVtLVk1JX1ZNX1dSSVRFX1BIWVNJQ0FMXSA9
IGhhbmRsZV92bV93cml0ZV9waHlzaWNhbCwKIH07Cl9fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fClZpcnR1YWxpemF0aW9uIG1haWxpbmcgbGlzdApWaXJ0dWFs
aXphdGlvbkBsaXN0cy5saW51eC1mb3VuZGF0aW9uLm9yZwpodHRwczovL2xpc3RzLmxpbnV4Zm91
bmRhdGlvbi5vcmcvbWFpbG1hbi9saXN0aW5mby92aXJ0dWFsaXphdGlvbg==
