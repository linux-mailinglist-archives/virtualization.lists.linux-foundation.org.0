Return-Path: <virtualization-bounces@lists.linux-foundation.org>
X-Original-To: lists.virtualization@lfdr.de
Delivered-To: lists.virtualization@lfdr.de
Received: from hemlock.osuosl.org (smtp2.osuosl.org [140.211.166.133])
	by mail.lfdr.de (Postfix) with ESMTPS id F1E6B2C3C52
	for <lists.virtualization@lfdr.de>; Wed, 25 Nov 2020 10:42:09 +0100 (CET)
Received: from localhost (localhost [127.0.0.1])
	by hemlock.osuosl.org (Postfix) with ESMTP id AF3BE874B7;
	Wed, 25 Nov 2020 09:42:08 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from hemlock.osuosl.org ([127.0.0.1])
	by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id KiRHUJTpgMcb; Wed, 25 Nov 2020 09:42:08 +0000 (UTC)
Received: from lists.linuxfoundation.org (lf-lists.osuosl.org [140.211.9.56])
	by hemlock.osuosl.org (Postfix) with ESMTP id 2F71587458;
	Wed, 25 Nov 2020 09:42:05 +0000 (UTC)
Received: from lf-lists.osuosl.org (localhost [127.0.0.1])
	by lists.linuxfoundation.org (Postfix) with ESMTP id 0AC04C0052;
	Wed, 25 Nov 2020 09:42:05 +0000 (UTC)
X-Original-To: virtualization@lists.linux-foundation.org
Delivered-To: virtualization@lists.linuxfoundation.org
Received: from hemlock.osuosl.org (smtp2.osuosl.org [140.211.166.133])
 by lists.linuxfoundation.org (Postfix) with ESMTP id 62AA6C1836
 for <virtualization@lists.linux-foundation.org>;
 Wed, 25 Nov 2020 09:41:57 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by hemlock.osuosl.org (Postfix) with ESMTP id 5244E87356
 for <virtualization@lists.linux-foundation.org>;
 Wed, 25 Nov 2020 09:41:57 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from hemlock.osuosl.org ([127.0.0.1])
 by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id YPc+2uNiyMb4
 for <virtualization@lists.linux-foundation.org>;
 Wed, 25 Nov 2020 09:41:56 +0000 (UTC)
X-Greylist: from auto-whitelisted by SQLgrey-1.7.6
Received: from mx01.bbu.dsd.mx.bitdefender.com
 (mx01.bbu.dsd.mx.bitdefender.com [91.199.104.161])
 by hemlock.osuosl.org (Postfix) with ESMTPS id CAC538743E
 for <virtualization@lists.linux-foundation.org>;
 Wed, 25 Nov 2020 09:41:55 +0000 (UTC)
Received: from smtp.bitdefender.com (smtp01.buh.bitdefender.com [10.17.80.75])
 by mx01.bbu.dsd.mx.bitdefender.com (Postfix) with ESMTPS id
 67FDE305D50F; Wed, 25 Nov 2020 11:35:47 +0200 (EET)
Received: from localhost.localdomain (unknown [91.199.104.27])
 by smtp.bitdefender.com (Postfix) with ESMTPSA id 40A813072785;
 Wed, 25 Nov 2020 11:35:47 +0200 (EET)
From: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>
To: kvm@vger.kernel.org
Subject: [PATCH v10 29/81] KVM: x86: page_track: add support for preread,
 prewrite and preexec
Date: Wed, 25 Nov 2020 11:35:08 +0200
Message-Id: <20201125093600.2766-30-alazar@bitdefender.com>
In-Reply-To: <20201125093600.2766-1-alazar@bitdefender.com>
References: <20201125093600.2766-1-alazar@bitdefender.com>
MIME-Version: 1.0
Cc: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>,
 Paolo Bonzini <pbonzini@redhat.com>,
 =?UTF-8?q?Mihai=20Don=C8=9Bu?= <mdontu@bitdefender.com>,
 virtualization@lists.linux-foundation.org
X-BeenThere: virtualization@lists.linux-foundation.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Linux virtualization <virtualization.lists.linux-foundation.org>
List-Unsubscribe: <https://lists.linuxfoundation.org/mailman/options/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=unsubscribe>
List-Archive: <http://lists.linuxfoundation.org/pipermail/virtualization/>
List-Post: <mailto:virtualization@lists.linux-foundation.org>
List-Help: <mailto:virtualization-request@lists.linux-foundation.org?subject=help>
List-Subscribe: <https://lists.linuxfoundation.org/mailman/listinfo/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: virtualization-bounces@lists.linux-foundation.org
Sender: "Virtualization" <virtualization-bounces@lists.linux-foundation.org>

RnJvbTogTWloYWkgRG9uyJt1IDxtZG9udHVAYml0ZGVmZW5kZXIuY29tPgoKVGhlIGFjY2VzcyB0
byBhIHRyYWNrZWQgbWVtb3J5IHBhZ2UgbGVhZHMgdG8gdHdvIHR5cGVzIG9mIGFjdGlvbnMgZnJv
bSB0aGUKaW50cm9zcGVjdGlvbiB0b29sOiBlaXRoZXIgdGhlIGFjY2VzcyBpcyBhbGxvd2VkICht
YXliZSB3aXRoIGRpZmZlcmVudApkYXRhIGZvciB0aGUgc291cmNlIG9wZXJhbmQpIG9yIHRoZSB2
Q1BVIHNob3VsZCByZS1lbnRlciBpbiBndWVzdAoodGhlIHBhZ2UgaXMgbm90IHRyYWNrZWQgYW55
bW9yZSwgdGhlIGluc3RydWN0aW9uIHdhcyBza2lwcGVkL2VtdWxhdGVkIGJ5CnRoZSBpbnRyb3Nw
ZWN0aW9uIHRvb2wsIGV0Yy4pLiBUaGVzZSBuZXcgY2FsbGJhY2tzIG11c3QgcmV0dXJuICd0cnVl
Jwpmb3IgdGhlIGZpcnN0IGNhc2UgYW5kICdmYWxzZScgZm9yIHRoZSBzZWNvbmQuCgpTaWduZWQt
b2ZmLWJ5OiBNaWhhaSBEb27Im3UgPG1kb250dUBiaXRkZWZlbmRlci5jb20+ClNpZ25lZC1vZmYt
Ynk6IEFkYWxiZXJ0IExhesSDciA8YWxhemFyQGJpdGRlZmVuZGVyLmNvbT4KLS0tCiBhcmNoL3g4
Ni9pbmNsdWRlL2FzbS9rdm1fcGFnZV90cmFjay5oIHwgIDQ4ICsrKysrKysrKy0KIGFyY2gveDg2
L2t2bS9tbXUvbW11LmMgICAgICAgICAgICAgICAgfCAgODEgKysrKysrKysrKysrKysrKysKIGFy
Y2gveDg2L2t2bS9tbXUvbW11X2ludGVybmFsLmggICAgICAgfCAgIDQgKwogYXJjaC94ODYva3Zt
L21tdS9wYWdlX3RyYWNrLmMgICAgICAgICB8IDEyMyArKysrKysrKysrKysrKysrKysrKysrKyst
LQogNCBmaWxlcyBjaGFuZ2VkLCAyNDYgaW5zZXJ0aW9ucygrKSwgMTAgZGVsZXRpb25zKC0pCgpk
aWZmIC0tZ2l0IGEvYXJjaC94ODYvaW5jbHVkZS9hc20va3ZtX3BhZ2VfdHJhY2suaCBiL2FyY2gv
eDg2L2luY2x1ZGUvYXNtL2t2bV9wYWdlX3RyYWNrLmgKaW5kZXggMDBhNjZjNGQ0ZDNjLi5jMTBm
MGY2NWM3N2EgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L2luY2x1ZGUvYXNtL2t2bV9wYWdlX3RyYWNr
LmgKKysrIGIvYXJjaC94ODYvaW5jbHVkZS9hc20va3ZtX3BhZ2VfdHJhY2suaApAQCAtMyw3ICsz
LDEwIEBACiAjZGVmaW5lIF9BU01fWDg2X0tWTV9QQUdFX1RSQUNLX0gKIAogZW51bSBrdm1fcGFn
ZV90cmFja19tb2RlIHsKKwlLVk1fUEFHRV9UUkFDS19QUkVSRUFELAorCUtWTV9QQUdFX1RSQUNL
X1BSRVdSSVRFLAogCUtWTV9QQUdFX1RSQUNLX1dSSVRFLAorCUtWTV9QQUdFX1RSQUNLX1BSRUVY
RUMsCiAJS1ZNX1BBR0VfVFJBQ0tfTUFYLAogfTsKIApAQCAtMjIsNiArMjUsMzMgQEAgc3RydWN0
IGt2bV9wYWdlX3RyYWNrX25vdGlmaWVyX2hlYWQgewogc3RydWN0IGt2bV9wYWdlX3RyYWNrX25v
dGlmaWVyX25vZGUgewogCXN0cnVjdCBobGlzdF9ub2RlIG5vZGU7CiAKKwkvKgorCSAqIEl0IGlz
IGNhbGxlZCB3aGVuIGd1ZXN0IGlzIHJlYWRpbmcgdGhlIHJlYWQtdHJhY2tlZCBwYWdlCisJICog
YW5kIHRoZSByZWFkIGVtdWxhdGlvbiBpcyBhYm91dCB0byBoYXBwZW4uCisJICoKKwkgKiBAdmNw
dTogdGhlIHZjcHUgd2hlcmUgdGhlIHJlYWQgYWNjZXNzIGhhcHBlbmVkLgorCSAqIEBncGE6IHRo
ZSBwaHlzaWNhbCBhZGRyZXNzIHJlYWQgYnkgZ3Vlc3QuCisJICogQGd2YTogdGhlIHZpcnR1YWwg
YWRkcmVzcyByZWFkIGJ5IGd1ZXN0LgorCSAqIEBieXRlczogdGhlIHJlYWQgbGVuZ3RoLgorCSAq
IEBub2RlOiB0aGlzIG5vZGUuCisJICovCisJYm9vbCAoKnRyYWNrX3ByZXJlYWQpKHN0cnVjdCBr
dm1fdmNwdSAqdmNwdSwgZ3BhX3QgZ3BhLCBndmFfdCBndmEsCisJCQkgICAgICBpbnQgYnl0ZXMs
CisJCQkgICAgICBzdHJ1Y3Qga3ZtX3BhZ2VfdHJhY2tfbm90aWZpZXJfbm9kZSAqbm9kZSk7CisJ
LyoKKwkgKiBJdCBpcyBjYWxsZWQgd2hlbiBndWVzdCBpcyB3cml0aW5nIHRoZSB3cml0ZS10cmFj
a2VkIHBhZ2UKKwkgKiBhbmQgdGhlIHdyaXRlIGVtdWxhdGlvbiBkaWRuJ3QgaGFwcGVuZWQgeWV0
LgorCSAqCisJICogQHZjcHU6IHRoZSB2Y3B1IHdoZXJlIHRoZSB3cml0ZSBhY2Nlc3MgaGFwcGVu
ZWQuCisJICogQGdwYTogdGhlIHBoeXNpY2FsIGFkZHJlc3Mgd3JpdHRlbiBieSBndWVzdC4KKwkg
KiBAZ3ZhOiB0aGUgdmlydHVhbCBhZGRyZXNzIHdyaXR0ZW4gYnkgZ3Vlc3QuCisJICogQG5ldzog
dGhlIGRhdGEgd2FzIHdyaXR0ZW4gdG8gdGhlIGFkZHJlc3MuCisJICogQGJ5dGVzOiB0aGUgd3Jp
dHRlbiBsZW5ndGguCisJICogQG5vZGU6IHRoaXMgbm9kZQorCSAqLworCWJvb2wgKCp0cmFja19w
cmV3cml0ZSkoc3RydWN0IGt2bV92Y3B1ICp2Y3B1LCBncGFfdCBncGEsIGd2YV90IGd2YSwKKwkJ
CSAgICAgICBjb25zdCB1OCAqbmV3LCBpbnQgYnl0ZXMsCisJCQkgICAgICAgc3RydWN0IGt2bV9w
YWdlX3RyYWNrX25vdGlmaWVyX25vZGUgKm5vZGUpOwogCS8qCiAJICogSXQgaXMgY2FsbGVkIHdo
ZW4gZ3Vlc3QgaXMgd3JpdGluZyB0aGUgd3JpdGUtdHJhY2tlZCBwYWdlCiAJICogYW5kIHdyaXRl
IGVtdWxhdGlvbiBpcyBmaW5pc2hlZCBhdCB0aGF0IHRpbWUuCkBAIC0zNiw2ICs2NiwxNyBAQCBz
dHJ1Y3Qga3ZtX3BhZ2VfdHJhY2tfbm90aWZpZXJfbm9kZSB7CiAJdm9pZCAoKnRyYWNrX3dyaXRl
KShzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsIGdwYV90IGdwYSwgZ3ZhX3QgZ3ZhLAogCQkJICAgIGNv
bnN0IHU4ICpuZXcsIGludCBieXRlcywKIAkJCSAgICBzdHJ1Y3Qga3ZtX3BhZ2VfdHJhY2tfbm90
aWZpZXJfbm9kZSAqbm9kZSk7CisJLyoKKwkgKiBJdCBpcyBjYWxsZWQgd2hlbiBndWVzdCBpcyBm
ZXRjaGluZyBmcm9tIGEgZXhlYy10cmFja2VkIHBhZ2UKKwkgKiBhbmQgdGhlIGZldGNoIGVtdWxh
dGlvbiBpcyBhYm91dCB0byBoYXBwZW4uCisJICoKKwkgKiBAdmNwdTogdGhlIHZjcHUgd2hlcmUg
dGhlIGZldGNoIGFjY2VzcyBoYXBwZW5lZC4KKwkgKiBAZ3BhOiB0aGUgcGh5c2ljYWwgYWRkcmVz
cyBmZXRjaGVkIGJ5IGd1ZXN0LgorCSAqIEBndmE6IHRoZSB2aXJ0dWFsIGFkZHJlc3MgZmV0Y2hl
ZCBieSBndWVzdC4KKwkgKiBAbm9kZTogdGhpcyBub2RlLgorCSAqLworCWJvb2wgKCp0cmFja19w
cmVleGVjKShzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsIGdwYV90IGdwYSwgZ3ZhX3QgZ3ZhLAorCQkJ
ICAgICAgc3RydWN0IGt2bV9wYWdlX3RyYWNrX25vdGlmaWVyX25vZGUgKm5vZGUpOwogCS8qCiAJ
ICogSXQgaXMgY2FsbGVkIHdoZW4gbWVtb3J5IHNsb3QgaXMgYmVpbmcgY3JlYXRlZAogCSAqCkBA
IC00OSw3ICs5MCw3IEBAIHN0cnVjdCBrdm1fcGFnZV90cmFja19ub3RpZmllcl9ub2RlIHsKIAkJ
CQkgIHN0cnVjdCBrdm1fcGFnZV90cmFja19ub3RpZmllcl9ub2RlICpub2RlKTsKIAkvKgogCSAq
IEl0IGlzIGNhbGxlZCB3aGVuIG1lbW9yeSBzbG90IGlzIGJlaW5nIG1vdmVkIG9yIHJlbW92ZWQK
LQkgKiB1c2VycyBjYW4gZHJvcCB3cml0ZS1wcm90ZWN0aW9uIGZvciB0aGUgcGFnZXMgaW4gdGhh
dCBtZW1vcnkgc2xvdAorCSAqIHVzZXJzIGNhbiBkcm9wIGFjdGl2ZSBwcm90ZWN0aW9uIGZvciB0
aGUgcGFnZXMgaW4gdGhhdCBtZW1vcnkgc2xvdAogCSAqCiAJICogQGt2bTogdGhlIGt2bSB3aGVy
ZSBtZW1vcnkgc2xvdCBiZWluZyBtb3ZlZCBvciByZW1vdmVkCiAJICogQHNsb3Q6IHRoZSBtZW1v
cnkgc2xvdCBiZWluZyBtb3ZlZCBvciByZW1vdmVkCkBAIC04MSw3ICsxMjIsMTIgQEAga3ZtX3Bh
Z2VfdHJhY2tfcmVnaXN0ZXJfbm90aWZpZXIoc3RydWN0IGt2bSAqa3ZtLAogdm9pZAoga3ZtX3Bh
Z2VfdHJhY2tfdW5yZWdpc3Rlcl9ub3RpZmllcihzdHJ1Y3Qga3ZtICprdm0sCiAJCQkJICAgc3Ry
dWN0IGt2bV9wYWdlX3RyYWNrX25vdGlmaWVyX25vZGUgKm4pOworYm9vbCBrdm1fcGFnZV90cmFj
a19wcmVyZWFkKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwgZ3BhX3QgZ3BhLCBndmFfdCBndmEsCisJ
CQkgICAgaW50IGJ5dGVzKTsKK2Jvb2wga3ZtX3BhZ2VfdHJhY2tfcHJld3JpdGUoc3RydWN0IGt2
bV92Y3B1ICp2Y3B1LCBncGFfdCBncGEsIGd2YV90IGd2YSwKKwkJCSAgICAgY29uc3QgdTggKm5l
dywgaW50IGJ5dGVzKTsKIHZvaWQga3ZtX3BhZ2VfdHJhY2tfd3JpdGUoc3RydWN0IGt2bV92Y3B1
ICp2Y3B1LCBncGFfdCBncGEsIGd2YV90IGd2YSwKIAkJCSAgY29uc3QgdTggKm5ldywgaW50IGJ5
dGVzKTsKK2Jvb2wga3ZtX3BhZ2VfdHJhY2tfcHJlZXhlYyhzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUs
IGdwYV90IGdwYSwgZ3ZhX3QgZ3ZhKTsKIHZvaWQga3ZtX3BhZ2VfdHJhY2tfZmx1c2hfc2xvdChz
dHJ1Y3Qga3ZtICprdm0sIHN0cnVjdCBrdm1fbWVtb3J5X3Nsb3QgKnNsb3QpOwogI2VuZGlmCmRp
ZmYgLS1naXQgYS9hcmNoL3g4Ni9rdm0vbW11L21tdS5jIGIvYXJjaC94ODYva3ZtL21tdS9tbXUu
YwppbmRleCAxNjMxZTIzNjcwODUuLjM2YWRkNmZiNzEyZiAxMDA2NDQKLS0tIGEvYXJjaC94ODYv
a3ZtL21tdS9tbXUuYworKysgYi9hcmNoL3g4Ni9rdm0vbW11L21tdS5jCkBAIC0xMTI0LDYgKzEx
MjQsMzEgQEAgc3RhdGljIGJvb2wgc3B0ZV93cml0ZV9wcm90ZWN0KHU2NCAqc3B0ZXAsIGJvb2wg
cHRfcHJvdGVjdCkKIAlyZXR1cm4gbW11X3NwdGVfdXBkYXRlKHNwdGVwLCBzcHRlKTsKIH0KIAor
c3RhdGljIGJvb2wgc3B0ZV9yZWFkX3Byb3RlY3QodTY0ICpzcHRlcCkKK3sKKwl1NjQgc3B0ZSA9
ICpzcHRlcDsKKwlib29sIGV4ZWNfb25seV9zdXBwb3J0ZWQgPSAoc2hhZG93X3ByZXNlbnRfbWFz
ayA9PSAwdWxsKTsKKworCXJtYXBfcHJpbnRrKCJybWFwX3JlYWRfcHJvdGVjdDogc3B0ZSAlcCAl
bGx4XG4iLCBzcHRlcCwgKnNwdGVwKTsKKworCVdBUk5fT05fT05DRSghZXhlY19vbmx5X3N1cHBv
cnRlZCk7CisKKwlzcHRlID0gc3B0ZSAmIH4oUFRfV1JJVEFCTEVfTUFTSyB8IFBUX1BSRVNFTlRf
TUFTSyk7CisKKwlyZXR1cm4gbW11X3NwdGVfdXBkYXRlKHNwdGVwLCBzcHRlKTsKK30KKworc3Rh
dGljIGJvb2wgc3B0ZV9leGVjX3Byb3RlY3QodTY0ICpzcHRlcCkKK3sKKwl1NjQgc3B0ZSA9ICpz
cHRlcDsKKworCXJtYXBfcHJpbnRrKCJybWFwX2V4ZWNfcHJvdGVjdDogc3B0ZSAlcCAlbGx4XG4i
LCBzcHRlcCwgKnNwdGVwKTsKKworCXNwdGUgPSBzcHRlICYgflBUX1VTRVJfTUFTSzsKKworCXJl
dHVybiBtbXVfc3B0ZV91cGRhdGUoc3B0ZXAsIHNwdGUpOworfQorCiBzdGF0aWMgYm9vbCBfX3Jt
YXBfd3JpdGVfcHJvdGVjdChzdHJ1Y3Qga3ZtICprdm0sCiAJCQkJIHN0cnVjdCBrdm1fcm1hcF9o
ZWFkICpybWFwX2hlYWQsCiAJCQkJIGJvb2wgcHRfcHJvdGVjdCkKQEAgLTExMzgsNiArMTE2Mywz
MiBAQCBzdGF0aWMgYm9vbCBfX3JtYXBfd3JpdGVfcHJvdGVjdChzdHJ1Y3Qga3ZtICprdm0sCiAJ
cmV0dXJuIGZsdXNoOwogfQogCitzdGF0aWMgYm9vbCBfX3JtYXBfcmVhZF9wcm90ZWN0KHN0cnVj
dCBrdm0gKmt2bSwKKwkJCQlzdHJ1Y3Qga3ZtX3JtYXBfaGVhZCAqcm1hcF9oZWFkKQoreworCXN0
cnVjdCBybWFwX2l0ZXJhdG9yIGl0ZXI7CisJYm9vbCBmbHVzaCA9IGZhbHNlOworCXU2NCAqc3B0
ZXA7CisKKwlmb3JfZWFjaF9ybWFwX3NwdGUocm1hcF9oZWFkLCAmaXRlciwgc3B0ZXApCisJCWZs
dXNoIHw9IHNwdGVfcmVhZF9wcm90ZWN0KHNwdGVwKTsKKworCXJldHVybiBmbHVzaDsKK30KKwor
c3RhdGljIGJvb2wgX19ybWFwX2V4ZWNfcHJvdGVjdChzdHJ1Y3Qga3ZtICprdm0sCisJCQkJc3Ry
dWN0IGt2bV9ybWFwX2hlYWQgKnJtYXBfaGVhZCkKK3sKKwlzdHJ1Y3Qgcm1hcF9pdGVyYXRvciBp
dGVyOworCWJvb2wgZmx1c2ggPSBmYWxzZTsKKwl1NjQgKnNwdGVwOworCisJZm9yX2VhY2hfcm1h
cF9zcHRlKHJtYXBfaGVhZCwgJml0ZXIsIHNwdGVwKQorCQlmbHVzaCB8PSBzcHRlX2V4ZWNfcHJv
dGVjdChzcHRlcCk7CisKKwlyZXR1cm4gZmx1c2g7Cit9CisKIHN0YXRpYyBib29sIHNwdGVfY2xl
YXJfZGlydHkodTY0ICpzcHRlcCkKIHsKIAl1NjQgc3B0ZSA9ICpzcHRlcDsKQEAgLTEzMTYsNiAr
MTM2NywzNiBAQCBib29sIGt2bV9tbXVfc2xvdF9nZm5fd3JpdGVfcHJvdGVjdChzdHJ1Y3Qga3Zt
ICprdm0sCiAJcmV0dXJuIHdyaXRlX3Byb3RlY3RlZDsKIH0KIAorYm9vbCBrdm1fbW11X3Nsb3Rf
Z2ZuX3JlYWRfcHJvdGVjdChzdHJ1Y3Qga3ZtICprdm0sCisJCQkJICAgc3RydWN0IGt2bV9tZW1v
cnlfc2xvdCAqc2xvdCwgdTY0IGdmbikKK3sKKwlzdHJ1Y3Qga3ZtX3JtYXBfaGVhZCAqcm1hcF9o
ZWFkOworCWJvb2wgcmVhZF9wcm90ZWN0ZWQgPSBmYWxzZTsKKwlpbnQgaTsKKworCWZvciAoaSA9
IFBHX0xFVkVMXzRLOyBpIDw9IEtWTV9NQVhfSFVHRVBBR0VfTEVWRUw7ICsraSkgeworCQlybWFw
X2hlYWQgPSBfX2dmbl90b19ybWFwKGdmbiwgaSwgc2xvdCk7CisJCXJlYWRfcHJvdGVjdGVkIHw9
IF9fcm1hcF9yZWFkX3Byb3RlY3Qoa3ZtLCBybWFwX2hlYWQpOworCX0KKworCXJldHVybiByZWFk
X3Byb3RlY3RlZDsKK30KKworYm9vbCBrdm1fbW11X3Nsb3RfZ2ZuX2V4ZWNfcHJvdGVjdChzdHJ1
Y3Qga3ZtICprdm0sCisJCQkJICAgc3RydWN0IGt2bV9tZW1vcnlfc2xvdCAqc2xvdCwgdTY0IGdm
bikKK3sKKwlzdHJ1Y3Qga3ZtX3JtYXBfaGVhZCAqcm1hcF9oZWFkOworCWJvb2wgZXhlY19wcm90
ZWN0ZWQgPSBmYWxzZTsKKwlpbnQgaTsKKworCWZvciAoaSA9IFBHX0xFVkVMXzRLOyBpIDw9IEtW
TV9NQVhfSFVHRVBBR0VfTEVWRUw7ICsraSkgeworCQlybWFwX2hlYWQgPSBfX2dmbl90b19ybWFw
KGdmbiwgaSwgc2xvdCk7CisJCWV4ZWNfcHJvdGVjdGVkIHw9IF9fcm1hcF9leGVjX3Byb3RlY3Qo
a3ZtLCBybWFwX2hlYWQpOworCX0KKworCXJldHVybiBleGVjX3Byb3RlY3RlZDsKK30KKwogc3Rh
dGljIGJvb2wgcm1hcF93cml0ZV9wcm90ZWN0KHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwgdTY0IGdm
bikKIHsKIAlzdHJ1Y3Qga3ZtX21lbW9yeV9zbG90ICpzbG90OwpkaWZmIC0tZ2l0IGEvYXJjaC94
ODYva3ZtL21tdS9tbXVfaW50ZXJuYWwuaCBiL2FyY2gveDg2L2t2bS9tbXUvbW11X2ludGVybmFs
LmgKaW5kZXggYmZjNjM4OWVkYzI4Li42ZmExNTcyOGY2Y2EgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2
L2t2bS9tbXUvbW11X2ludGVybmFsLmgKKysrIGIvYXJjaC94ODYva3ZtL21tdS9tbXVfaW50ZXJu
YWwuaApAQCAtOTIsNiArOTIsMTAgQEAgdm9pZCBrdm1fbW11X2dmbl9kaXNhbGxvd19scGFnZShz
dHJ1Y3Qga3ZtX21lbW9yeV9zbG90ICpzbG90LCBnZm5fdCBnZm4pOwogdm9pZCBrdm1fbW11X2dm
bl9hbGxvd19scGFnZShzdHJ1Y3Qga3ZtX21lbW9yeV9zbG90ICpzbG90LCBnZm5fdCBnZm4pOwog
Ym9vbCBrdm1fbW11X3Nsb3RfZ2ZuX3dyaXRlX3Byb3RlY3Qoc3RydWN0IGt2bSAqa3ZtLAogCQkJ
CSAgICBzdHJ1Y3Qga3ZtX21lbW9yeV9zbG90ICpzbG90LCB1NjQgZ2ZuKTsKK2Jvb2wga3ZtX21t
dV9zbG90X2dmbl9yZWFkX3Byb3RlY3Qoc3RydWN0IGt2bSAqa3ZtLAorCQkJCSAgIHN0cnVjdCBr
dm1fbWVtb3J5X3Nsb3QgKnNsb3QsIHU2NCBnZm4pOworYm9vbCBrdm1fbW11X3Nsb3RfZ2ZuX2V4
ZWNfcHJvdGVjdChzdHJ1Y3Qga3ZtICprdm0sCisJCQkJICAgc3RydWN0IGt2bV9tZW1vcnlfc2xv
dCAqc2xvdCwgdTY0IGdmbik7CiB2b2lkIGt2bV9mbHVzaF9yZW1vdGVfdGxic193aXRoX2FkZHJl
c3Moc3RydWN0IGt2bSAqa3ZtLAogCQkJCQl1NjQgc3RhcnRfZ2ZuLCB1NjQgcGFnZXMpOwogCmRp
ZmYgLS1naXQgYS9hcmNoL3g4Ni9rdm0vbW11L3BhZ2VfdHJhY2suYyBiL2FyY2gveDg2L2t2bS9t
bXUvcGFnZV90cmFjay5jCmluZGV4IDI3YThkMWEwMmU4NC4uZWJiZmQ5OWE2OWRhIDEwMDY0NAot
LS0gYS9hcmNoL3g4Ni9rdm0vbW11L3BhZ2VfdHJhY2suYworKysgYi9hcmNoL3g4Ni9rdm0vbW11
L3BhZ2VfdHJhY2suYwpAQCAtMSw2ICsxLDYgQEAKIC8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVy
OiBHUEwtMi4wLW9ubHkKIC8qCi0gKiBTdXBwb3J0IEtWTSBndXN0IHBhZ2UgdHJhY2tpbmcKKyAq
IFN1cHBvcnQgS1ZNIGd1ZXN0IHBhZ2UgdHJhY2tpbmcKICAqCiAgKiBUaGlzIGZlYXR1cmUgYWxs
b3dzIHVzIHRvIHRyYWNrIHBhZ2UgYWNjZXNzIGluIGd1ZXN0LiBDdXJyZW50bHksIG9ubHkKICAq
IHdyaXRlIGFjY2VzcyBpcyB0cmFja2VkLgpAQCAtOTYsNyArOTYsNyBAQCBzdGF0aWMgdm9pZCB1
cGRhdGVfZ2ZuX3RyYWNrKHN0cnVjdCBrdm1fbWVtb3J5X3Nsb3QgKnNsb3QsIGdmbl90IGdmbiwK
ICAqIEBrdm06IHRoZSBndWVzdCBpbnN0YW5jZSB3ZSBhcmUgaW50ZXJlc3RlZCBpbi4KICAqIEBz
bG90OiB0aGUgQGdmbiBiZWxvbmdzIHRvLgogICogQGdmbjogdGhlIGd1ZXN0IHBhZ2UuCi0gKiBA
bW9kZTogdHJhY2tpbmcgbW9kZSwgY3VycmVudGx5IG9ubHkgd3JpdGUgdHJhY2sgaXMgc3VwcG9y
dGVkLgorICogQG1vZGU6IHRyYWNraW5nIG1vZGUuCiAgKi8KIHZvaWQga3ZtX3Nsb3RfcGFnZV90
cmFja19hZGRfcGFnZShzdHJ1Y3Qga3ZtICprdm0sCiAJCQkJICBzdHJ1Y3Qga3ZtX21lbW9yeV9z
bG90ICpzbG90LCBnZm5fdCBnZm4sCkBAIC0xMTQsOSArMTE0LDE2IEBAIHZvaWQga3ZtX3Nsb3Rf
cGFnZV90cmFja19hZGRfcGFnZShzdHJ1Y3Qga3ZtICprdm0sCiAJICovCiAJa3ZtX21tdV9nZm5f
ZGlzYWxsb3dfbHBhZ2Uoc2xvdCwgZ2ZuKTsKIAotCWlmIChtb2RlID09IEtWTV9QQUdFX1RSQUNL
X1dSSVRFKQorCWlmIChtb2RlID09IEtWTV9QQUdFX1RSQUNLX1BSRVdSSVRFIHx8IG1vZGUgPT0g
S1ZNX1BBR0VfVFJBQ0tfV1JJVEUpIHsKIAkJaWYgKGt2bV9tbXVfc2xvdF9nZm5fd3JpdGVfcHJv
dGVjdChrdm0sIHNsb3QsIGdmbikpCiAJCQlrdm1fZmx1c2hfcmVtb3RlX3RsYnMoa3ZtKTsKKwl9
IGVsc2UgaWYgKG1vZGUgPT0gS1ZNX1BBR0VfVFJBQ0tfUFJFUkVBRCkgeworCQlpZiAoa3ZtX21t
dV9zbG90X2dmbl9yZWFkX3Byb3RlY3Qoa3ZtLCBzbG90LCBnZm4pKQorCQkJa3ZtX2ZsdXNoX3Jl
bW90ZV90bGJzKGt2bSk7CisJfSBlbHNlIGlmIChtb2RlID09IEtWTV9QQUdFX1RSQUNLX1BSRUVY
RUMpIHsKKwkJaWYgKGt2bV9tbXVfc2xvdF9nZm5fZXhlY19wcm90ZWN0KGt2bSwgc2xvdCwgZ2Zu
KSkKKwkJCWt2bV9mbHVzaF9yZW1vdGVfdGxicyhrdm0pOworCX0KIH0KIEVYUE9SVF9TWU1CT0xf
R1BMKGt2bV9zbG90X3BhZ2VfdHJhY2tfYWRkX3BhZ2UpOwogCkBAIC0xMzEsNyArMTM4LDcgQEAg
RVhQT1JUX1NZTUJPTF9HUEwoa3ZtX3Nsb3RfcGFnZV90cmFja19hZGRfcGFnZSk7CiAgKiBAa3Zt
OiB0aGUgZ3Vlc3QgaW5zdGFuY2Ugd2UgYXJlIGludGVyZXN0ZWQgaW4uCiAgKiBAc2xvdDogdGhl
IEBnZm4gYmVsb25ncyB0by4KICAqIEBnZm46IHRoZSBndWVzdCBwYWdlLgotICogQG1vZGU6IHRy
YWNraW5nIG1vZGUsIGN1cnJlbnRseSBvbmx5IHdyaXRlIHRyYWNrIGlzIHN1cHBvcnRlZC4KKyAq
IEBtb2RlOiB0cmFja2luZyBtb2RlLgogICovCiB2b2lkIGt2bV9zbG90X3BhZ2VfdHJhY2tfcmVt
b3ZlX3BhZ2Uoc3RydWN0IGt2bSAqa3ZtLAogCQkJCSAgICAgc3RydWN0IGt2bV9tZW1vcnlfc2xv
dCAqc2xvdCwgZ2ZuX3QgZ2ZuLApAQCAtMjI0LDEyICsyMzEsODAgQEAga3ZtX3BhZ2VfdHJhY2tf
dW5yZWdpc3Rlcl9ub3RpZmllcihzdHJ1Y3Qga3ZtICprdm0sCiB9CiBFWFBPUlRfU1lNQk9MX0dQ
TChrdm1fcGFnZV90cmFja191bnJlZ2lzdGVyX25vdGlmaWVyKTsKIAorLyoKKyAqIE5vdGlmeSB0
aGUgbm9kZSB0aGF0IGEgcmVhZCBhY2Nlc3MgaXMgYWJvdXQgdG8gaGFwcGVuLiBSZXR1cm5pbmcg
ZmFsc2UKKyAqIGRvZXNuJ3Qgc3RvcCB0aGUgb3RoZXIgbm9kZXMgZnJvbSBiZWluZyBjYWxsZWQs
IGJ1dCBpdCB3aWxsIHN0b3AKKyAqIHRoZSBlbXVsYXRpb24uCisgKgorICogVGhlIG5vZGUgc2hv
dWxkIGZpZ3VyZSBvdXQgaWYgdGhlIHJlYWQgcGFnZSBpcyB0aGUgb25lIHRoYXQgdGhlIG5vZGUK
KyAqIGlzIGludGVyZXN0ZWQgaW4gYnkgaXRzZWxmLgorICoKKyAqIFRoZSBub2RlcyB3aWxsIGFs
d2F5cyBiZSBpbiBjb25mbGljdCBpZiB0aGV5IHRyYWNrIHRoZSBzYW1lIHBhZ2U6CisgKiAtIGFj
Y2VwdGluZyBhIHJlYWQgd29uJ3QgZ3VhcmFudGVlIHRoYXQgdGhlIG5leHQgbm9kZSB3aWxsIG5v
dCBvdmVycmlkZQorICogICB0aGUgZGF0YSAoZmlsbGluZyBuZXcvYnl0ZXMgYW5kIHNldHRpbmcg
ZGF0YV9yZWFkeSkKKyAqIC0gZmlsbGluZyBuZXcvYnl0ZXMgd2l0aCBjdXN0b20gZGF0YSB3b24n
dCBndWFyYW50ZWUgdGhhdCB0aGUgbmV4dCBub2RlCisgKiAgIHdpbGwgbm90IG92ZXJyaWRlIHRo
YXQKKyAqLworYm9vbCBrdm1fcGFnZV90cmFja19wcmVyZWFkKHN0cnVjdCBrdm1fdmNwdSAqdmNw
dSwgZ3BhX3QgZ3BhLCBndmFfdCBndmEsCisJCQkgICAgaW50IGJ5dGVzKQoreworCXN0cnVjdCBr
dm1fcGFnZV90cmFja19ub3RpZmllcl9oZWFkICpoZWFkOworCXN0cnVjdCBrdm1fcGFnZV90cmFj
a19ub3RpZmllcl9ub2RlICpuOworCWludCBpZHg7CisJYm9vbCByZXQgPSB0cnVlOworCisJaGVh
ZCA9ICZ2Y3B1LT5rdm0tPmFyY2gudHJhY2tfbm90aWZpZXJfaGVhZDsKKworCWlmIChobGlzdF9l
bXB0eSgmaGVhZC0+dHJhY2tfbm90aWZpZXJfbGlzdCkpCisJCXJldHVybiByZXQ7CisKKwlpZHgg
PSBzcmN1X3JlYWRfbG9jaygmaGVhZC0+dHJhY2tfc3JjdSk7CisJaGxpc3RfZm9yX2VhY2hfZW50
cnlfc3JjdShuLCAmaGVhZC0+dHJhY2tfbm90aWZpZXJfbGlzdCwgbm9kZSwKKwkJCQlzcmN1X3Jl
YWRfbG9ja19oZWxkKCZoZWFkLT50cmFja19zcmN1KSkKKwkJaWYgKG4tPnRyYWNrX3ByZXJlYWQp
CisJCQlpZiAoIW4tPnRyYWNrX3ByZXJlYWQodmNwdSwgZ3BhLCBndmEsIGJ5dGVzLCBuKSkKKwkJ
CQlyZXQgPSBmYWxzZTsKKwlzcmN1X3JlYWRfdW5sb2NrKCZoZWFkLT50cmFja19zcmN1LCBpZHgp
OworCXJldHVybiByZXQ7Cit9CisKKy8qCisgKiBOb3RpZnkgdGhlIG5vZGUgdGhhdCBhIHdyaXRl
IGFjY2VzcyBpcyBhYm91dCB0byBoYXBwZW4uIFJldHVybmluZyBmYWxzZQorICogZG9lc24ndCBz
dG9wIHRoZSBvdGhlciBub2RlcyBmcm9tIGJlaW5nIGNhbGxlZCwgYnV0IGl0IHdpbGwgc3RvcAor
ICogdGhlIGVtdWxhdGlvbi4KKyAqCisgKiBUaGUgbm9kZSBzaG91bGQgZmlndXJlIG91dCBpZiB0
aGUgd3JpdHRlbiBwYWdlIGlzIHRoZSBvbmUgdGhhdCB0aGUgbm9kZQorICogaXMgaW50ZXJlc3Rl
ZCBpbiBieSBpdHNlbGYuCisgKi8KK2Jvb2wga3ZtX3BhZ2VfdHJhY2tfcHJld3JpdGUoc3RydWN0
IGt2bV92Y3B1ICp2Y3B1LCBncGFfdCBncGEsIGd2YV90IGd2YSwKKwkJCSAgICAgY29uc3QgdTgg
Km5ldywgaW50IGJ5dGVzKQoreworCXN0cnVjdCBrdm1fcGFnZV90cmFja19ub3RpZmllcl9oZWFk
ICpoZWFkOworCXN0cnVjdCBrdm1fcGFnZV90cmFja19ub3RpZmllcl9ub2RlICpuOworCWludCBp
ZHg7CisJYm9vbCByZXQgPSB0cnVlOworCisJaGVhZCA9ICZ2Y3B1LT5rdm0tPmFyY2gudHJhY2tf
bm90aWZpZXJfaGVhZDsKKworCWlmIChobGlzdF9lbXB0eSgmaGVhZC0+dHJhY2tfbm90aWZpZXJf
bGlzdCkpCisJCXJldHVybiByZXQ7CisKKwlpZHggPSBzcmN1X3JlYWRfbG9jaygmaGVhZC0+dHJh
Y2tfc3JjdSk7CisJaGxpc3RfZm9yX2VhY2hfZW50cnlfc3JjdShuLCAmaGVhZC0+dHJhY2tfbm90
aWZpZXJfbGlzdCwgbm9kZSwKKwkJCQlzcmN1X3JlYWRfbG9ja19oZWxkKCZoZWFkLT50cmFja19z
cmN1KSkKKwkJaWYgKG4tPnRyYWNrX3ByZXdyaXRlKQorCQkJaWYgKCFuLT50cmFja19wcmV3cml0
ZSh2Y3B1LCBncGEsIGd2YSwgbmV3LCBieXRlcywgbikpCisJCQkJcmV0ID0gZmFsc2U7CisJc3Jj
dV9yZWFkX3VubG9jaygmaGVhZC0+dHJhY2tfc3JjdSwgaWR4KTsKKwlyZXR1cm4gcmV0OworfQor
CiAvKgogICogTm90aWZ5IHRoZSBub2RlIHRoYXQgd3JpdGUgYWNjZXNzIGlzIGludGVyY2VwdGVk
IGFuZCB3cml0ZSBlbXVsYXRpb24gaXMKICAqIGZpbmlzaGVkIGF0IHRoaXMgdGltZS4KICAqCi0g
KiBUaGUgbm9kZSBzaG91bGQgZmlndXJlIG91dCBpZiB0aGUgd3JpdHRlbiBwYWdlIGlzIHRoZSBv
bmUgdGhhdCBub2RlIGlzCi0gKiBpbnRlcmVzdGVkIGluIGJ5IGl0c2VsZi4KKyAqIFRoZSBub2Rl
IHNob3VsZCBmaWd1cmUgb3V0IGlmIHRoZSB3cml0dGVuIHBhZ2UgaXMgdGhlIG9uZSB0aGF0IHRo
ZSBub2RlCisgKiBpcyBpbnRlcmVzdGVkIGluIGJ5IGl0c2VsZi4KICAqLwogdm9pZCBrdm1fcGFn
ZV90cmFja193cml0ZShzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsIGdwYV90IGdwYSwgZ3ZhX3QgZ3Zh
LAogCQkJICBjb25zdCB1OCAqbmV3LCBpbnQgYnl0ZXMpCkBAIC0yNTEsMTIgKzMyNiw0MiBAQCB2
b2lkIGt2bV9wYWdlX3RyYWNrX3dyaXRlKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwgZ3BhX3QgZ3Bh
LCBndmFfdCBndmEsCiAJc3JjdV9yZWFkX3VubG9jaygmaGVhZC0+dHJhY2tfc3JjdSwgaWR4KTsK
IH0KIAorLyoKKyAqIE5vdGlmeSB0aGUgbm9kZSB0aGF0IGFuIGluc3RydWN0aW9uIGlzIGFib3V0
IHRvIGJlIGV4ZWN1dGVkLgorICogUmV0dXJuaW5nIGZhbHNlIGRvZXNuJ3Qgc3RvcCB0aGUgb3Ro
ZXIgbm9kZXMgZnJvbSBiZWluZyBjYWxsZWQsCisgKiBidXQgaXQgd2lsbCBzdG9wIHRoZSBlbXVs
YXRpb24gd2l0aCBYODZFTVVMX1JFVFJZX0lOU1RSLgorICoKKyAqIFRoZSBub2RlIHNob3VsZCBm
aWd1cmUgb3V0IGlmIHRoZSBwYWdlIGlzIHRoZSBvbmUgdGhhdCB0aGUgbm9kZQorICogaXMgaW50
ZXJlc3RlZCBpbiBieSBpdHNlbGYuCisgKi8KK2Jvb2wga3ZtX3BhZ2VfdHJhY2tfcHJlZXhlYyhz
dHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsIGdwYV90IGdwYSwgZ3ZhX3QgZ3ZhKQoreworCXN0cnVjdCBr
dm1fcGFnZV90cmFja19ub3RpZmllcl9oZWFkICpoZWFkOworCXN0cnVjdCBrdm1fcGFnZV90cmFj
a19ub3RpZmllcl9ub2RlICpuOworCWludCBpZHg7CisJYm9vbCByZXQgPSB0cnVlOworCisJaGVh
ZCA9ICZ2Y3B1LT5rdm0tPmFyY2gudHJhY2tfbm90aWZpZXJfaGVhZDsKKworCWlmIChobGlzdF9l
bXB0eSgmaGVhZC0+dHJhY2tfbm90aWZpZXJfbGlzdCkpCisJCXJldHVybiByZXQ7CisKKwlpZHgg
PSBzcmN1X3JlYWRfbG9jaygmaGVhZC0+dHJhY2tfc3JjdSk7CisJaGxpc3RfZm9yX2VhY2hfZW50
cnlfc3JjdShuLCAmaGVhZC0+dHJhY2tfbm90aWZpZXJfbGlzdCwgbm9kZSwKKwkJCQlzcmN1X3Jl
YWRfbG9ja19oZWxkKCZoZWFkLT50cmFja19zcmN1KSkKKwkJaWYgKG4tPnRyYWNrX3ByZWV4ZWMp
CisJCQlpZiAoIW4tPnRyYWNrX3ByZWV4ZWModmNwdSwgZ3BhLCBndmEsIG4pKQorCQkJCXJldCA9
IGZhbHNlOworCXNyY3VfcmVhZF91bmxvY2soJmhlYWQtPnRyYWNrX3NyY3UsIGlkeCk7CisJcmV0
dXJuIHJldDsKK30KKwogLyoKICAqIE5vdGlmeSB0aGUgbm9kZSB0aGF0IG1lbW9yeSBzbG90IGlz
IGJlaW5nIHJlbW92ZWQgb3IgbW92ZWQgc28gdGhhdCBpdCBjYW4KLSAqIGRyb3Agd3JpdGUtcHJv
dGVjdGlvbiBmb3IgdGhlIHBhZ2VzIGluIHRoZSBtZW1vcnkgc2xvdC4KKyAqIGRyb3AgYWN0aXZl
IHByb3RlY3Rpb24gZm9yIHRoZSBwYWdlcyBpbiB0aGUgbWVtb3J5IHNsb3QuCiAgKgotICogVGhl
IG5vZGUgc2hvdWxkIGZpZ3VyZSBvdXQgaXQgaGFzIGFueSB3cml0ZS1wcm90ZWN0ZWQgcGFnZXMg
aW4gdGhpcyBzbG90Ci0gKiBieSBpdHNlbGYuCisgKiBUaGUgbm9kZSBzaG91bGQgZmlndXJlIG91
dCBpZiB0aGUgcGFnZSBpcyB0aGUgb25lIHRoYXQgdGhlIG5vZGUKKyAqIGlzIGludGVyZXN0ZWQg
aW4gYnkgaXRzZWxmLgogICovCiB2b2lkIGt2bV9wYWdlX3RyYWNrX2ZsdXNoX3Nsb3Qoc3RydWN0
IGt2bSAqa3ZtLCBzdHJ1Y3Qga3ZtX21lbW9yeV9zbG90ICpzbG90KQogewpfX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpWaXJ0dWFsaXphdGlvbiBtYWlsaW5n
IGxpc3QKVmlydHVhbGl6YXRpb25AbGlzdHMubGludXgtZm91bmRhdGlvbi5vcmcKaHR0cHM6Ly9s
aXN0cy5saW51eGZvdW5kYXRpb24ub3JnL21haWxtYW4vbGlzdGluZm8vdmlydHVhbGl6YXRpb24=
