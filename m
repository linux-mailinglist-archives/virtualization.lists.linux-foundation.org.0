Return-Path: <virtualization-bounces@lists.linux-foundation.org>
X-Original-To: lists.virtualization@lfdr.de
Delivered-To: lists.virtualization@lfdr.de
Received: from whitealder.osuosl.org (smtp1.osuosl.org [140.211.166.138])
	by mail.lfdr.de (Postfix) with ESMTPS id 0810E1978DE
	for <lists.virtualization@lfdr.de>; Mon, 30 Mar 2020 12:20:20 +0200 (CEST)
Received: from localhost (localhost [127.0.0.1])
	by whitealder.osuosl.org (Postfix) with ESMTP id A022C87960;
	Mon, 30 Mar 2020 10:20:18 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from whitealder.osuosl.org ([127.0.0.1])
	by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id LsAFeaPE4Fi3; Mon, 30 Mar 2020 10:20:10 +0000 (UTC)
Received: from lists.linuxfoundation.org (lf-lists.osuosl.org [140.211.9.56])
	by whitealder.osuosl.org (Postfix) with ESMTP id 7B12B87C5F;
	Mon, 30 Mar 2020 10:20:08 +0000 (UTC)
Received: from lf-lists.osuosl.org (localhost [127.0.0.1])
	by lists.linuxfoundation.org (Postfix) with ESMTP id 7317FC07FF;
	Mon, 30 Mar 2020 10:20:08 +0000 (UTC)
X-Original-To: virtualization@lists.linux-foundation.org
Delivered-To: virtualization@lists.linuxfoundation.org
Received: from hemlock.osuosl.org (smtp2.osuosl.org [140.211.166.133])
 by lists.linuxfoundation.org (Postfix) with ESMTP id C145CC1D7E
 for <virtualization@lists.linux-foundation.org>;
 Mon, 30 Mar 2020 10:19:55 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by hemlock.osuosl.org (Postfix) with ESMTP id A79C388489
 for <virtualization@lists.linux-foundation.org>;
 Mon, 30 Mar 2020 10:19:55 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from hemlock.osuosl.org ([127.0.0.1])
 by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id xEVr3QXH4Qx7
 for <virtualization@lists.linux-foundation.org>;
 Mon, 30 Mar 2020 10:19:52 +0000 (UTC)
X-Greylist: domain auto-whitelisted by SQLgrey-1.7.6
Received: from mx01.bbu.dsd.mx.bitdefender.com
 (mx01.bbu.dsd.mx.bitdefender.com [91.199.104.161])
 by hemlock.osuosl.org (Postfix) with ESMTPS id 5C6928843E
 for <virtualization@lists.linux-foundation.org>;
 Mon, 30 Mar 2020 10:19:52 +0000 (UTC)
Received: from smtp.bitdefender.com (smtp02.buh.bitdefender.net [10.17.80.76])
 by mx01.bbu.dsd.mx.bitdefender.com (Postfix) with ESMTPS id
 38291301AB4B; Mon, 30 Mar 2020 13:12:58 +0300 (EEST)
Received: from localhost.localdomain (unknown [91.199.104.28])
 by smtp.bitdefender.com (Postfix) with ESMTPSA id 1D6C2305B7A2;
 Mon, 30 Mar 2020 13:12:58 +0300 (EEST)
From: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>
To: kvm@vger.kernel.org
Subject: [PATCH v8 59/81] KVM: introspection: add KVMI_VCPU_GET_CPUID
Date: Mon, 30 Mar 2020 13:12:46 +0300
Message-Id: <20200330101308.21702-60-alazar@bitdefender.com>
In-Reply-To: <20200330101308.21702-1-alazar@bitdefender.com>
References: <20200330101308.21702-1-alazar@bitdefender.com>
MIME-Version: 1.0
Cc: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>,
 Paolo Bonzini <pbonzini@redhat.com>,
 Marian Rotariu <marian.c.rotariu@gmail.com>,
 virtualization@lists.linux-foundation.org
X-BeenThere: virtualization@lists.linux-foundation.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Linux virtualization <virtualization.lists.linux-foundation.org>
List-Unsubscribe: <https://lists.linuxfoundation.org/mailman/options/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=unsubscribe>
List-Archive: <http://lists.linuxfoundation.org/pipermail/virtualization/>
List-Post: <mailto:virtualization@lists.linux-foundation.org>
List-Help: <mailto:virtualization-request@lists.linux-foundation.org?subject=help>
List-Subscribe: <https://lists.linuxfoundation.org/mailman/listinfo/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: virtualization-bounces@lists.linux-foundation.org
Sender: "Virtualization" <virtualization-bounces@lists.linux-foundation.org>

RnJvbTogTWFyaWFuIFJvdGFyaXUgPG1hcmlhbi5jLnJvdGFyaXVAZ21haWwuY29tPgoKVGhpcyBj
b21tYW5kIHJldHVybnMgYSBDUFVJRCBsZWFmIChhcyBzZWVuIGJ5IHRoZSBndWVzdCBPUykuCgpT
aWduZWQtb2ZmLWJ5OiBNYXJpYW4gUm90YXJpdSA8bWFyaWFuLmMucm90YXJpdUBnbWFpbC5jb20+
CkNvLWRldmVsb3BlZC1ieTogQWRhbGJlcnQgTGF6xINyIDxhbGF6YXJAYml0ZGVmZW5kZXIuY29t
PgpTaWduZWQtb2ZmLWJ5OiBBZGFsYmVydCBMYXrEg3IgPGFsYXphckBiaXRkZWZlbmRlci5jb20+
Ci0tLQogRG9jdW1lbnRhdGlvbi92aXJ0L2t2bS9rdm1pLnJzdCAgICAgICAgICAgICAgIHwgMzYg
KysrKysrKysrKysrKysrKysrKwogYXJjaC94ODYvaW5jbHVkZS91YXBpL2FzbS9rdm1pLmggICAg
ICAgICAgICAgIHwgMTIgKysrKysrKwogYXJjaC94ODYva3ZtL2t2bWkuYyAgICAgICAgICAgICAg
ICAgICAgICAgICAgIHwgMTkgKysrKysrKysrKwogaW5jbHVkZS91YXBpL2xpbnV4L2t2bWkuaCAg
ICAgICAgICAgICAgICAgICAgIHwgIDEgKwogLi4uL3Rlc3Rpbmcvc2VsZnRlc3RzL2t2bS94ODZf
NjQva3ZtaV90ZXN0LmMgIHwgMzQgKysrKysrKysrKysrKysrKysrCiB2aXJ0L2t2bS9pbnRyb3Nw
ZWN0aW9uL2t2bWlfaW50LmggICAgICAgICAgICAgfCAgMyArKwogdmlydC9rdm0vaW50cm9zcGVj
dGlvbi9rdm1pX21zZy5jICAgICAgICAgICAgIHwgMTYgKysrKysrKysrCiA3IGZpbGVzIGNoYW5n
ZWQsIDEyMSBpbnNlcnRpb25zKCspCgpkaWZmIC0tZ2l0IGEvRG9jdW1lbnRhdGlvbi92aXJ0L2t2
bS9rdm1pLnJzdCBiL0RvY3VtZW50YXRpb24vdmlydC9rdm0va3ZtaS5yc3QKaW5kZXggN2Q2ZDg1
YWExOTFhLi43NmIyMjU4NWZlZWUgMTAwNjQ0Ci0tLSBhL0RvY3VtZW50YXRpb24vdmlydC9rdm0v
a3ZtaS5yc3QKKysrIGIvRG9jdW1lbnRhdGlvbi92aXJ0L2t2bS9rdm1pLnJzdApAQCAtNjM3LDYg
KzYzNyw0MiBAQCBjdXJyZW50bHkgYmVpbmcgaGFuZGxlZCBpcyByZXBsaWVkIHRvLgogKiAtS1ZN
X0VBR0FJTiAtIHRoZSBzZWxlY3RlZCB2Q1BVIGNhbid0IGJlIGludHJvc3BlY3RlZCB5ZXQKICog
LUtWTV9FT1BOT1RTVVBQIC0gdGhlIGNvbW1hbmQgaGFzbid0IGJlZW4gcmVjZWl2ZWQgZHVyaW5n
IGFuIGludHJvc3BlY3Rpb24gZXZlbnQKIAorMTMuIEtWTUlfVkNQVV9HRVRfQ1BVSUQKKy0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tCisKKzpBcmNoaXRlY3R1cmVzOiB4ODYKKzpWZXJzaW9uczogPj0g
MQorOlBhcmFtZXRlcnM6CisKKzo6CisKKwlzdHJ1Y3Qga3ZtaV92Y3B1X2hkcjsKKwlzdHJ1Y3Qg
a3ZtaV92Y3B1X2dldF9jcHVpZCB7CisJCV9fdTMyIGZ1bmN0aW9uOworCQlfX3UzMiBpbmRleDsK
Kwl9OworCis6UmV0dXJuczoKKworOjoKKworCXN0cnVjdCBrdm1pX2Vycm9yX2NvZGU7CisJc3Ry
dWN0IGt2bWlfdmNwdV9nZXRfY3B1aWRfcmVwbHkgeworCQlfX3UzMiBlYXg7CisJCV9fdTMyIGVi
eDsKKwkJX191MzIgZWN4OworCQlfX3UzMiBlZHg7CisJfTsKKworUmV0dXJucyBhIENQVUlEIGxl
YWYgKGFzIHNlZW4gYnkgdGhlIGd1ZXN0IE9TKS4KKworOkVycm9yczoKKworKiAtS1ZNX0VJTlZB
TCAtIHRoZSBzZWxlY3RlZCB2Q1BVIGlzIGludmFsaWQKKyogLUtWTV9FSU5WQUwgLSB0aGUgcGFk
ZGluZyBpcyBub3QgemVybworKiAtS1ZNX0VBR0FJTiAtIHRoZSBzZWxlY3RlZCB2Q1BVIGNhbid0
IGJlIGludHJvc3BlY3RlZCB5ZXQKKyogLUtWTV9FTk9FTlQgLSB0aGUgc2VsZWN0ZWQgbGVhZiBp
cyBub3QgcHJlc2VudCBvciBpcyBpbnZhbGlkCisKIEV2ZW50cwogPT09PT09CiAKZGlmZiAtLWdp
dCBhL2FyY2gveDg2L2luY2x1ZGUvdWFwaS9hc20va3ZtaS5oIGIvYXJjaC94ODYvaW5jbHVkZS91
YXBpL2FzbS9rdm1pLmgKaW5kZXggZjE0Njc0YzNjMTA5Li41N2M0OGFjZTQxN2YgMTAwNjQ0Ci0t
LSBhL2FyY2gveDg2L2luY2x1ZGUvdWFwaS9hc20va3ZtaS5oCisrKyBiL2FyY2gveDg2L2luY2x1
ZGUvdWFwaS9hc20va3ZtaS5oCkBAIC00NSw0ICs0NSwxNiBAQCBzdHJ1Y3Qga3ZtaV92Y3B1X2dl
dF9yZWdpc3RlcnNfcmVwbHkgewogCXN0cnVjdCBrdm1fbXNycyBtc3JzOwogfTsKIAorc3RydWN0
IGt2bWlfdmNwdV9nZXRfY3B1aWQgeworCV9fdTMyIGZ1bmN0aW9uOworCV9fdTMyIGluZGV4Owor
fTsKKworc3RydWN0IGt2bWlfdmNwdV9nZXRfY3B1aWRfcmVwbHkgeworCV9fdTMyIGVheDsKKwlf
X3UzMiBlYng7CisJX191MzIgZWN4OworCV9fdTMyIGVkeDsKK307CisKICNlbmRpZiAvKiBfVUFQ
SV9BU01fWDg2X0tWTUlfSCAqLwpkaWZmIC0tZ2l0IGEvYXJjaC94ODYva3ZtL2t2bWkuYyBiL2Fy
Y2gveDg2L2t2bS9rdm1pLmMKaW5kZXggMWJhMjY0YzEwY2ZmLi5lZGU4YzdjYmRmMWUgMTAwNjQ0
Ci0tLSBhL2FyY2gveDg2L2t2bS9rdm1pLmMKKysrIGIvYXJjaC94ODYva3ZtL2t2bWkuYwpAQCAt
Nyw2ICs3LDcgQEAKIAogI2luY2x1ZGUgImxpbnV4L2t2bV9ob3N0LmgiCiAjaW5jbHVkZSAieDg2
LmgiCisjaW5jbHVkZSAiY3B1aWQuaCIKICNpbmNsdWRlICIuLi8uLi8uLi92aXJ0L2t2bS9pbnRy
b3NwZWN0aW9uL2t2bWlfaW50LmgiCiAKIHN0YXRpYyB1bnNpZ25lZCBpbnQga3ZtaV92Y3B1X21v
ZGUoY29uc3Qgc3RydWN0IGt2bV92Y3B1ICp2Y3B1LApAQCAtMTg5LDMgKzE5MCwyMSBAQCBpbnQg
a3ZtaV9hcmNoX2NtZF92Y3B1X2dldF9yZWdpc3RlcnMoc3RydWN0IGt2bV92Y3B1ICp2Y3B1LAog
CXJldHVybiBlcnI7CiAKIH0KKworaW50IGt2bWlfYXJjaF9jbWRfdmNwdV9nZXRfY3B1aWQoc3Ry
dWN0IGt2bV92Y3B1ICp2Y3B1LAorCQkJCSBjb25zdCBzdHJ1Y3Qga3ZtaV92Y3B1X2dldF9jcHVp
ZCAqcmVxLAorCQkJCSBzdHJ1Y3Qga3ZtaV92Y3B1X2dldF9jcHVpZF9yZXBseSAqcnBsKQorewor
CXN0cnVjdCBrdm1fY3B1aWRfZW50cnkyICplOworCisJZSA9IGt2bV9maW5kX2NwdWlkX2VudHJ5
KHZjcHUsIHJlcS0+ZnVuY3Rpb24sIHJlcS0+aW5kZXgpOworCWlmICghZSkKKwkJcmV0dXJuIC1L
Vk1fRU5PRU5UOworCisJcnBsLT5lYXggPSBlLT5lYXg7CisJcnBsLT5lYnggPSBlLT5lYng7CisJ
cnBsLT5lY3ggPSBlLT5lY3g7CisJcnBsLT5lZHggPSBlLT5lZHg7CisKKwlyZXR1cm4gMDsKK30K
ZGlmZiAtLWdpdCBhL2luY2x1ZGUvdWFwaS9saW51eC9rdm1pLmggYi9pbmNsdWRlL3VhcGkvbGlu
dXgva3ZtaS5oCmluZGV4IDc0NmY0MzNiODI2OS4uMzY4OGZhMjZkYmFmIDEwMDY0NAotLS0gYS9p
bmNsdWRlL3VhcGkvbGludXgva3ZtaS5oCisrKyBiL2luY2x1ZGUvdWFwaS9saW51eC9rdm1pLmgK
QEAgLTMwLDYgKzMwLDcgQEAgZW51bSB7CiAJS1ZNSV9WQ1BVX0NPTlRST0xfRVZFTlRTID0gMTEs
CiAJS1ZNSV9WQ1BVX0dFVF9SRUdJU1RFUlMgID0gMTIsCiAJS1ZNSV9WQ1BVX1NFVF9SRUdJU1RF
UlMgID0gMTMsCisJS1ZNSV9WQ1BVX0dFVF9DUFVJRCAgICAgID0gMTQsCiAKIAlLVk1JX05VTV9N
RVNTQUdFUwogfTsKZGlmZiAtLWdpdCBhL3Rvb2xzL3Rlc3Rpbmcvc2VsZnRlc3RzL2t2bS94ODZf
NjQva3ZtaV90ZXN0LmMgYi90b29scy90ZXN0aW5nL3NlbGZ0ZXN0cy9rdm0veDg2XzY0L2t2bWlf
dGVzdC5jCmluZGV4IDE4Y2NjNzk0YzZjYy4uMThjZTdkZGQ5MTM2IDEwMDY0NAotLS0gYS90b29s
cy90ZXN0aW5nL3NlbGZ0ZXN0cy9rdm0veDg2XzY0L2t2bWlfdGVzdC5jCisrKyBiL3Rvb2xzL3Rl
c3Rpbmcvc2VsZnRlc3RzL2t2bS94ODZfNjQva3ZtaV90ZXN0LmMKQEAgLTkwOSw2ICs5MDksMzkg
QEAgc3RhdGljIHZvaWQgdGVzdF9jbWRfdmNwdV9zZXRfcmVnaXN0ZXJzKHN0cnVjdCBrdm1fdm0g
KnZtKQogCXN0b3BfdmNwdV93b3JrZXIodmNwdV90aHJlYWQsICZkYXRhKTsKIH0KIAorc3RhdGlj
IGludCBjbWRfZ2V0X2NwdWlkKHN0cnVjdCBrdm1fdm0gKnZtLAorCQkJIF9fdTMyIGZ1bmN0aW9u
LCBfX3UzMiBpbmRleCwKKwkJCSBzdHJ1Y3Qga3ZtaV92Y3B1X2dldF9jcHVpZF9yZXBseSAqcnBs
KQoreworCXN0cnVjdCB7CisJCXN0cnVjdCBrdm1pX21zZ19oZHIgaGRyOworCQlzdHJ1Y3Qga3Zt
aV92Y3B1X2hkciB2Y3B1X2hkcjsKKwkJc3RydWN0IGt2bWlfdmNwdV9nZXRfY3B1aWQgY21kOwor
CX0gcmVxID0ge307CisKKwlyZXEuY21kLmZ1bmN0aW9uID0gZnVuY3Rpb247CisJcmVxLmNtZC5p
bmRleCA9IGluZGV4OworCisJcmV0dXJuIGRvX3ZjcHUwX2NvbW1hbmQodm0sIEtWTUlfVkNQVV9H
RVRfQ1BVSUQsICZyZXEuaGRyLCBzaXplb2YocmVxKSwKKwkJCQlycGwsIHNpemVvZigqcnBsKSk7
Cit9CisKK3N0YXRpYyB2b2lkIHRlc3RfY21kX3ZjcHVfZ2V0X2NwdWlkKHN0cnVjdCBrdm1fdm0g
KnZtKQoreworCXN0cnVjdCBrdm1pX3ZjcHVfZ2V0X2NwdWlkX3JlcGx5IHJwbCA9IHt9OworCV9f
dTMyIGZ1bmN0aW9uID0gMDsKKwlfX3UzMiBpbmRleCA9IDA7CisJaW50IHI7CisKKwlyID0gY21k
X2dldF9jcHVpZCh2bSwgZnVuY3Rpb24sIGluZGV4LCAmcnBsKTsKKwlURVNUX0FTU0VSVChyID09
IDAsCisJCSJLVk1JX1ZDUFVfR0VUX0NQVUlEIGZhaWxlZCwgZXJyb3IgJWQoJXMpXG4iLAorCQkt
ciwga3ZtX3N0cmVycm9yKC1yKSk7CisKKwlERUJVRygiY3B1aWQoJXUsICV1KSA9PiBlYXggMHgl
Ljh4LCBlYnggMHglLjh4LCBlY3ggMHglLjh4LCBlZHggMHglLjh4XG4iLAorCSAgICAgIGZ1bmN0
aW9uLCBpbmRleCwgcnBsLmVheCwgcnBsLmVieCwgcnBsLmVjeCwgcnBsLmVkeCk7Cit9CisKIHN0
YXRpYyB2b2lkIHRlc3RfaW50cm9zcGVjdGlvbihzdHJ1Y3Qga3ZtX3ZtICp2bSkKIHsKIAlzcmFu
ZG9tKHRpbWUoMCkpOwpAQCAtOTI4LDYgKzk2MSw3IEBAIHN0YXRpYyB2b2lkIHRlc3RfaW50cm9z
cGVjdGlvbihzdHJ1Y3Qga3ZtX3ZtICp2bSkKIAl0ZXN0X2NtZF92Y3B1X2NvbnRyb2xfZXZlbnRz
KHZtKTsKIAl0ZXN0X2NtZF92Y3B1X2dldF9yZWdpc3RlcnModm0pOwogCXRlc3RfY21kX3ZjcHVf
c2V0X3JlZ2lzdGVycyh2bSk7CisJdGVzdF9jbWRfdmNwdV9nZXRfY3B1aWQodm0pOwogCiAJdW5o
b29rX2ludHJvc3BlY3Rpb24odm0pOwogfQpkaWZmIC0tZ2l0IGEvdmlydC9rdm0vaW50cm9zcGVj
dGlvbi9rdm1pX2ludC5oIGIvdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pX2ludC5oCmluZGV4
IDBmNDQ4OTNiY2JkYy4uYTI4OTY2OTEyNDI3IDEwMDY0NAotLS0gYS92aXJ0L2t2bS9pbnRyb3Nw
ZWN0aW9uL2t2bWlfaW50LmgKKysrIGIvdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pX2ludC5o
CkBAIC02Niw1ICs2Niw4IEBAIGludCBrdm1pX2FyY2hfY21kX3ZjcHVfZ2V0X3JlZ2lzdGVycyhz
dHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsCiAJCQkJY29uc3Qgc3RydWN0IGt2bWlfdmNwdV9nZXRfcmVn
aXN0ZXJzICpyZXEsCiAJCQkJc3RydWN0IGt2bWlfdmNwdV9nZXRfcmVnaXN0ZXJzX3JlcGx5ICoq
ZGVzdCwKIAkJCQlzaXplX3QgKmRlc3Rfc2l6ZSk7CitpbnQga3ZtaV9hcmNoX2NtZF92Y3B1X2dl
dF9jcHVpZChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsCisJCQkJIGNvbnN0IHN0cnVjdCBrdm1pX3Zj
cHVfZ2V0X2NwdWlkICpyZXEsCisJCQkJIHN0cnVjdCBrdm1pX3ZjcHVfZ2V0X2NwdWlkX3JlcGx5
ICpycGwpOwogCiAjZW5kaWYKZGlmZiAtLWdpdCBhL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3Zt
aV9tc2cuYyBiL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9tc2cuYwppbmRleCAzOGUxYWNk
Zjc0NGYuLmQzODg5Y2U2ZTQxYiAxMDA2NDQKLS0tIGEvdmlydC9rdm0vaW50cm9zcGVjdGlvbi9r
dm1pX21zZy5jCisrKyBiL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9tc2cuYwpAQCAtMjks
NiArMjksNyBAQCBzdGF0aWMgY29uc3QgY2hhciAqY29uc3QgbXNnX0lEc1tdID0gewogCVtLVk1J
X1ZNX1JFQURfUEhZU0lDQUxdICAgID0gIktWTUlfVk1fUkVBRF9QSFlTSUNBTCIsCiAJW0tWTUlf
Vk1fV1JJVEVfUEhZU0lDQUxdICAgPSAiS1ZNSV9WTV9XUklURV9QSFlTSUNBTCIsCiAJW0tWTUlf
VkNQVV9DT05UUk9MX0VWRU5UU10gPSAiS1ZNSV9WQ1BVX0NPTlRST0xfRVZFTlRTIiwKKwlbS1ZN
SV9WQ1BVX0dFVF9DUFVJRF0gICAgICA9ICJLVk1JX1ZDUFVfR0VUX0NQVUlEIiwKIAlbS1ZNSV9W
Q1BVX0dFVF9JTkZPXSAgICAgICA9ICJLVk1JX1ZDUFVfR0VUX0lORk8iLAogCVtLVk1JX1ZDUFVf
R0VUX1JFR0lTVEVSU10gID0gIktWTUlfVkNQVV9HRVRfUkVHSVNURVJTIiwKIAlbS1ZNSV9WQ1BV
X1BBVVNFXSAgICAgICAgICA9ICJLVk1JX1ZDUFVfUEFVU0UiLApAQCAtNDk5LDYgKzUwMCwyMCBA
QCBzdGF0aWMgaW50IGhhbmRsZV9zZXRfcmVnaXN0ZXJzKGNvbnN0IHN0cnVjdCBrdm1pX3ZjcHVf
Y21kX2pvYiAqam9iLAogCXJldHVybiBrdm1pX21zZ192Y3B1X3JlcGx5KGpvYiwgbXNnLCBlYywg
TlVMTCwgMCk7CiB9CiAKK3N0YXRpYyBpbnQgaGFuZGxlX2dldF9jcHVpZChjb25zdCBzdHJ1Y3Qg
a3ZtaV92Y3B1X2NtZF9qb2IgKmpvYiwKKwkJCSAgICBjb25zdCBzdHJ1Y3Qga3ZtaV9tc2dfaGRy
ICptc2csCisJCQkgICAgY29uc3Qgdm9pZCAqcmVxKQoreworCXN0cnVjdCBrdm1pX3ZjcHVfZ2V0
X2NwdWlkX3JlcGx5IHJwbDsKKwlpbnQgZWM7CisKKwltZW1zZXQoJnJwbCwgMCwgc2l6ZW9mKHJw
bCkpOworCisJZWMgPSBrdm1pX2FyY2hfY21kX3ZjcHVfZ2V0X2NwdWlkKGpvYi0+dmNwdSwgcmVx
LCAmcnBsKTsKKworCXJldHVybiBrdm1pX21zZ192Y3B1X3JlcGx5KGpvYiwgbXNnLCBlYywgJnJw
bCwgc2l6ZW9mKHJwbCkpOworfQorCiAvKgogICogVGhlc2UgY29tbWFuZHMgYXJlIGV4ZWN1dGVk
IGZyb20gdGhlIHZDUFUgdGhyZWFkLiBUaGUgcmVjZWl2aW5nIHRocmVhZAogICogcGFzc2VzIHRo
ZSBtZXNzYWdlcyB1c2luZyBhIG5ld2x5IGFsbG9jYXRlZCAnc3RydWN0IGt2bWlfdmNwdV9jbWRf
am9iJwpAQCAtNTA5LDYgKzUyNCw3IEBAIHN0YXRpYyBpbnQoKmNvbnN0IG1zZ192Y3B1W10pKGNv
bnN0IHN0cnVjdCBrdm1pX3ZjcHVfY21kX2pvYiAqLAogCQkJICAgICAgY29uc3Qgc3RydWN0IGt2
bWlfbXNnX2hkciAqLCBjb25zdCB2b2lkICopID0gewogCVtLVk1JX0VWRU5UXSAgICAgICAgICAg
ICAgID0gaGFuZGxlX2V2ZW50X3JlcGx5LAogCVtLVk1JX1ZDUFVfQ09OVFJPTF9FVkVOVFNdID0g
aGFuZGxlX3ZjcHVfY29udHJvbF9ldmVudHMsCisJW0tWTUlfVkNQVV9HRVRfQ1BVSURdICAgICAg
PSBoYW5kbGVfZ2V0X2NwdWlkLAogCVtLVk1JX1ZDUFVfR0VUX0lORk9dICAgICAgID0gaGFuZGxl
X2dldF92Y3B1X2luZm8sCiAJW0tWTUlfVkNQVV9HRVRfUkVHSVNURVJTXSAgPSBoYW5kbGVfZ2V0
X3JlZ2lzdGVycywKIAlbS1ZNSV9WQ1BVX1NFVF9SRUdJU1RFUlNdICA9IGhhbmRsZV9zZXRfcmVn
aXN0ZXJzLApfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpW
aXJ0dWFsaXphdGlvbiBtYWlsaW5nIGxpc3QKVmlydHVhbGl6YXRpb25AbGlzdHMubGludXgtZm91
bmRhdGlvbi5vcmcKaHR0cHM6Ly9saXN0cy5saW51eGZvdW5kYXRpb24ub3JnL21haWxtYW4vbGlz
dGluZm8vdmlydHVhbGl6YXRpb24=
