Return-Path: <virtualization-bounces@lists.linux-foundation.org>
X-Original-To: lists.virtualization@lfdr.de
Delivered-To: lists.virtualization@lfdr.de
Received: from fraxinus.osuosl.org (smtp4.osuosl.org [140.211.166.137])
	by mail.lfdr.de (Postfix) with ESMTPS id E6CE4228AB9
	for <lists.virtualization@lfdr.de>; Tue, 21 Jul 2020 23:16:36 +0200 (CEST)
Received: from localhost (localhost [127.0.0.1])
	by fraxinus.osuosl.org (Postfix) with ESMTP id A4AF286C3A;
	Tue, 21 Jul 2020 21:16:35 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from fraxinus.osuosl.org ([127.0.0.1])
	by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id ruBVetD2hDxF; Tue, 21 Jul 2020 21:16:32 +0000 (UTC)
Received: from lists.linuxfoundation.org (lf-lists.osuosl.org [140.211.9.56])
	by fraxinus.osuosl.org (Postfix) with ESMTP id 2B07486CB0;
	Tue, 21 Jul 2020 21:16:18 +0000 (UTC)
Received: from lf-lists.osuosl.org (localhost [127.0.0.1])
	by lists.linuxfoundation.org (Postfix) with ESMTP id 10B87C016F;
	Tue, 21 Jul 2020 21:16:18 +0000 (UTC)
X-Original-To: virtualization@lists.linux-foundation.org
Delivered-To: virtualization@lists.linuxfoundation.org
Received: from fraxinus.osuosl.org (smtp4.osuosl.org [140.211.166.137])
 by lists.linuxfoundation.org (Postfix) with ESMTP id D5F01C08A8
 for <virtualization@lists.linux-foundation.org>;
 Tue, 21 Jul 2020 21:16:02 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by fraxinus.osuosl.org (Postfix) with ESMTP id BB70E86B8D
 for <virtualization@lists.linux-foundation.org>;
 Tue, 21 Jul 2020 21:16:02 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from fraxinus.osuosl.org ([127.0.0.1])
 by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id XdE_urrR9AQW
 for <virtualization@lists.linux-foundation.org>;
 Tue, 21 Jul 2020 21:15:57 +0000 (UTC)
X-Greylist: from auto-whitelisted by SQLgrey-1.7.6
Received: from mx01.bbu.dsd.mx.bitdefender.com
 (mx01.bbu.dsd.mx.bitdefender.com [91.199.104.161])
 by fraxinus.osuosl.org (Postfix) with ESMTPS id 3101485161
 for <virtualization@lists.linux-foundation.org>;
 Tue, 21 Jul 2020 21:15:57 +0000 (UTC)
Received: from smtp.bitdefender.com (smtp02.buh.bitdefender.net [10.17.80.76])
 by mx01.bbu.dsd.mx.bitdefender.com (Postfix) with ESMTPS id
 53376305D4FF; Wed, 22 Jul 2020 00:09:30 +0300 (EEST)
Received: from localhost.localdomain (unknown [91.199.104.27])
 by smtp.bitdefender.com (Postfix) with ESMTPSA id 361AA304FA12;
 Wed, 22 Jul 2020 00:09:30 +0300 (EEST)
From: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>
To: kvm@vger.kernel.org
Subject: [PATCH v9 71/84] KVM: introspection: add KVMI_VCPU_SET_XSAVE
Date: Wed, 22 Jul 2020 00:09:09 +0300
Message-Id: <20200721210922.7646-72-alazar@bitdefender.com>
In-Reply-To: <20200721210922.7646-1-alazar@bitdefender.com>
References: <20200721210922.7646-1-alazar@bitdefender.com>
MIME-Version: 1.0
Cc: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>,
 Paolo Bonzini <pbonzini@redhat.com>, virtualization@lists.linux-foundation.org
X-BeenThere: virtualization@lists.linux-foundation.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Linux virtualization <virtualization.lists.linux-foundation.org>
List-Unsubscribe: <https://lists.linuxfoundation.org/mailman/options/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=unsubscribe>
List-Archive: <http://lists.linuxfoundation.org/pipermail/virtualization/>
List-Post: <mailto:virtualization@lists.linux-foundation.org>
List-Help: <mailto:virtualization-request@lists.linux-foundation.org?subject=help>
List-Subscribe: <https://lists.linuxfoundation.org/mailman/listinfo/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: virtualization-bounces@lists.linux-foundation.org
Sender: "Virtualization" <virtualization-bounces@lists.linux-foundation.org>

VGhpcyBjYW4gYmUgdXNlZCBieSB0aGUgaW50cm9zcGVjdGlvbiB0b29sIHRvIGVtdWxhdGUgU1NF
IGluc3RydWN0aW9ucy4KClNpZ25lZC1vZmYtYnk6IEFkYWxiZXJ0IExhesSDciA8YWxhemFyQGJp
dGRlZmVuZGVyLmNvbT4KLS0tCiBEb2N1bWVudGF0aW9uL3ZpcnQva3ZtL2t2bWkucnN0ICAgICAg
ICAgICAgICAgfCAyOSArKysrKysrKysrKysrKysrKwogYXJjaC94ODYvaW5jbHVkZS91YXBpL2Fz
bS9rdm1pLmggICAgICAgICAgICAgIHwgIDQgKysrCiBhcmNoL3g4Ni9rdm0va3ZtaS5jICAgICAg
ICAgICAgICAgICAgICAgICAgICAgfCAyMyArKysrKysrKysrKysrKwogaW5jbHVkZS91YXBpL2xp
bnV4L2t2bWkuaCAgICAgICAgICAgICAgICAgICAgIHwgIDEgKwogLi4uL3Rlc3Rpbmcvc2VsZnRl
c3RzL2t2bS94ODZfNjQva3ZtaV90ZXN0LmMgIHwgMzEgKysrKysrKysrKysrKysrLS0tLQogdmly
dC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pX2ludC5oICAgICAgICAgICAgIHwgIDMgKysKIHZpcnQv
a3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9tc2cuYyAgICAgICAgICAgICB8IDE3ICsrKysrKysrKysK
IDcgZmlsZXMgY2hhbmdlZCwgMTAyIGluc2VydGlvbnMoKyksIDYgZGVsZXRpb25zKC0pCgpkaWZm
IC0tZ2l0IGEvRG9jdW1lbnRhdGlvbi92aXJ0L2t2bS9rdm1pLnJzdCBiL0RvY3VtZW50YXRpb24v
dmlydC9rdm0va3ZtaS5yc3QKaW5kZXggOWJmOGIwOGViNTg1Li4yNDYwNWFhZWRlOWEgMTAwNjQ0
Ci0tLSBhL0RvY3VtZW50YXRpb24vdmlydC9rdm0va3ZtaS5yc3QKKysrIGIvRG9jdW1lbnRhdGlv
bi92aXJ0L2t2bS9rdm1pLnJzdApAQCAtODczLDYgKzg3MywzNSBAQCB0aGUgYnVmZmVyIHNpemUg
ZnJvbSB0aGUgbWVzc2FnZSBzaXplIChrdm1pX21zZ19oZHIuc2l6ZSkuCiAqIC1LVk1fRUFHQUlO
IC0gdGhlIHNlbGVjdGVkIHZDUFUgY2FuJ3QgYmUgaW50cm9zcGVjdGVkIHlldAogKiAtS1ZNX0VO
T01FTSAtIHRoZXJlIGlzIG5vdCBlbm91Z2ggbWVtb3J5IHRvIGFsbG9jYXRlIHRoZSByZXBseQog
CisyMC4gS1ZNSV9WQ1BVX1NFVF9YU0FWRQorLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KKworOkFy
Y2hpdGVjdHVyZTogeDg2Cis6VmVyc2lvbnM6ID49IDEKKzpQYXJhbWV0ZXJzOgorCis6OgorCisJ
c3RydWN0IGt2bWlfdmNwdV9oZHI7CisJc3RydWN0IGt2bWlfdmNwdV9zZXRfeHNhdmUgeworCQlf
X3UzMiByZWdpb25bMF07CisJfTsKKworOlJldHVybnM6CisKKzo6CisKKwlzdHJ1Y3Qga3ZtaV9l
cnJvcl9jb2RlOworCitNb2RpZmllcyB0aGUgWFNBVkUgYXJlYS4KKworOkVycm9yczoKKworKiAt
S1ZNX0VJTlZBTCAtIHRoZSBidWZmZXIgaXMgbGFyZ2VyIHRoYW4gYGBzdHJ1Y3Qga3ZtX3hzYXZl
YGAKKyogLUtWTV9FSU5WQUwgLSB0aGUgc2VsZWN0ZWQgdkNQVSBpcyBpbnZhbGlkCisqIC1LVk1f
RUlOVkFMIC0gdGhlIHBhZGRpbmcgaXMgbm90IHplcm8KKyogLUtWTV9FQUdBSU4gLSB0aGUgc2Vs
ZWN0ZWQgdkNQVSBjYW4ndCBiZSBpbnRyb3NwZWN0ZWQgeWV0CisKIEV2ZW50cwogPT09PT09CiAK
ZGlmZiAtLWdpdCBhL2FyY2gveDg2L2luY2x1ZGUvdWFwaS9hc20va3ZtaS5oIGIvYXJjaC94ODYv
aW5jbHVkZS91YXBpL2FzbS9rdm1pLmgKaW5kZXggYTE2NWMyNTliYTBlLi43MTIwNjIwNjk3M2Mg
MTAwNjQ0Ci0tLSBhL2FyY2gveDg2L2luY2x1ZGUvdWFwaS9hc20va3ZtaS5oCisrKyBiL2FyY2gv
eDg2L2luY2x1ZGUvdWFwaS9hc20va3ZtaS5oCkBAIC0xMDMsNCArMTAzLDggQEAgc3RydWN0IGt2
bWlfdmNwdV9nZXRfeHNhdmVfcmVwbHkgewogCV9fdTMyIHJlZ2lvblswXTsKIH07CiAKK3N0cnVj
dCBrdm1pX3ZjcHVfc2V0X3hzYXZlIHsKKwlfX3UzMiByZWdpb25bMF07Cit9OworCiAjZW5kaWYg
LyogX1VBUElfQVNNX1g4Nl9LVk1JX0ggKi8KZGlmZiAtLWdpdCBhL2FyY2gveDg2L2t2bS9rdm1p
LmMgYi9hcmNoL3g4Ni9rdm0va3ZtaS5jCmluZGV4IDdiNzEyMjc4NGYwZi4uMDc3NmJlNDhhZGEx
IDEwMDY0NAotLS0gYS9hcmNoL3g4Ni9rdm0va3ZtaS5jCisrKyBiL2FyY2gveDg2L2t2bS9rdm1p
LmMKQEAgLTc2MSwzICs3NjEsMjYgQEAgaW50IGt2bWlfYXJjaF9jbWRfdmNwdV9nZXRfeHNhdmUo
c3RydWN0IGt2bV92Y3B1ICp2Y3B1LAogCiAJcmV0dXJuIDA7CiB9CisKK2ludCBrdm1pX2FyY2hf
Y21kX3ZjcHVfc2V0X3hzYXZlKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwKKwkJCQkgY29uc3Qgc3Ry
dWN0IGt2bWlfdmNwdV9zZXRfeHNhdmUgKnJlcSwKKwkJCQkgc2l6ZV90IHJlcV9zaXplKQorewor
CXN0cnVjdCBrdm1feHNhdmUgKmFyZWE7CisJc2l6ZV90IGRlc3Rfc2l6ZSA9IHNpemVvZigqYXJl
YSk7CisJaW50IGVycjsKKworCWlmIChyZXFfc2l6ZSA+IGRlc3Rfc2l6ZSkKKwkJcmV0dXJuIC1L
Vk1fRUlOVkFMOworCisJYXJlYSA9IGt6YWxsb2MoZGVzdF9zaXplLCBHRlBfS0VSTkVMKTsKKwlp
ZiAoIWFyZWEpCisJCXJldHVybiAtS1ZNX0VOT01FTTsKKworCW1lbWNweShhcmVhLCByZXEsIG1p
bihyZXFfc2l6ZSwgZGVzdF9zaXplKSk7CisKKwllcnIgPSBrdm1fdmNwdV9pb2N0bF94ODZfc2V0
X3hzYXZlKHZjcHUsIGFyZWEpOworCWtmcmVlKGFyZWEpOworCisJcmV0dXJuIGVyciA/IC1LVk1f
RUlOVkFMIDogMDsKK30KZGlmZiAtLWdpdCBhL2luY2x1ZGUvdWFwaS9saW51eC9rdm1pLmggYi9p
bmNsdWRlL3VhcGkvbGludXgva3ZtaS5oCmluZGV4IDZiNTY2MmY1NGJhMS4uNDQxNTg2Y2VjMjM4
IDEwMDY0NAotLS0gYS9pbmNsdWRlL3VhcGkvbGludXgva3ZtaS5oCisrKyBiL2luY2x1ZGUvdWFw
aS9saW51eC9rdm1pLmgKQEAgLTQxLDYgKzQxLDcgQEAgZW51bSB7CiAKIAlLVk1JX1ZDUFVfR0VU
X1hDUiA9IDE4LAogCUtWTUlfVkNQVV9HRVRfWFNBVkUgPSAxOSwKKwlLVk1JX1ZDUFVfU0VUX1hT
QVZFID0gMjAsCiAKIAlLVk1JX05VTV9NRVNTQUdFUwogfTsKZGlmZiAtLWdpdCBhL3Rvb2xzL3Rl
c3Rpbmcvc2VsZnRlc3RzL2t2bS94ODZfNjQva3ZtaV90ZXN0LmMgYi90b29scy90ZXN0aW5nL3Nl
bGZ0ZXN0cy9rdm0veDg2XzY0L2t2bWlfdGVzdC5jCmluZGV4IDY1NzY4NGVjNmZmNS4uMzA3NDE5
ODNhM2FiIDEwMDY0NAotLS0gYS90b29scy90ZXN0aW5nL3NlbGZ0ZXN0cy9rdm0veDg2XzY0L2t2
bWlfdGVzdC5jCisrKyBiL3Rvb2xzL3Rlc3Rpbmcvc2VsZnRlc3RzL2t2bS94ODZfNjQva3ZtaV90
ZXN0LmMKQEAgLTE1NTEsMjUgKzE1NTEsNDMgQEAgc3RhdGljIHZvaWQgdGVzdF9jbWRfdmNwdV9n
ZXRfeGNyKHN0cnVjdCBrdm1fdm0gKnZtKQogCWNtZF92Y3B1X2dldF94Y3Iodm0sIHhjcjEsICZ2
YWx1ZSwgbm9fcGFkZGluZywgLUtWTV9FSU5WQUwpOwogfQogCi1zdGF0aWMgdm9pZCBjbWRfdmNw
dV9nZXRfeHNhdmUoc3RydWN0IGt2bV92bSAqdm0pCitzdGF0aWMgdm9pZCBjbWRfdmNwdV9nZXRf
eHNhdmUoc3RydWN0IGt2bV92bSAqdm0sIHN0cnVjdCBrdm1feHNhdmUgKnJwbCkKIHsKIAlzdHJ1
Y3QgewogCQlzdHJ1Y3Qga3ZtaV9tc2dfaGRyIGhkcjsKIAkJc3RydWN0IGt2bWlfdmNwdV9oZHIg
dmNwdV9oZHI7CiAJfSByZXEgPSB7fTsKLQlzdHJ1Y3Qga3ZtX3hzYXZlIHJwbDsKIAlpbnQgcjsK
IAogCXIgPSBkb192Y3B1MF9jb21tYW5kKHZtLCBLVk1JX1ZDUFVfR0VUX1hTQVZFLCAmcmVxLmhk
ciwgc2l6ZW9mKHJlcSksCi0JCQkgICAgICZycGwsIHNpemVvZihycGwpKTsKKwkJCSAgICAgcnBs
LCBzaXplb2YoKnJwbCkpOwogCVRFU1RfQVNTRVJUKHIgPT0gMCwKIAkJICAgICJLVk1JX1ZDUFVf
R0VUX1hTQVZFIGZhaWxlZCB3aXRoIGVycm9yICVkICglcylcbiIsCiAJCSAgICAtciwga3ZtX3N0
cmVycm9yKC1yKSk7CiB9CiAKLXN0YXRpYyB2b2lkIHRlc3RfY21kX3ZjcHVfZ2V0X3hzYXZlKHN0
cnVjdCBrdm1fdm0gKnZtKQorc3RhdGljIHZvaWQgY21kX3ZjcHVfc2V0X3hzYXZlKHN0cnVjdCBr
dm1fdm0gKnZtLCBzdHJ1Y3Qga3ZtX3hzYXZlICpycGwpCit7CisJc3RydWN0IHsKKwkJc3RydWN0
IGt2bWlfbXNnX2hkciBoZHI7CisJCXN0cnVjdCBrdm1pX3ZjcHVfaGRyIHZjcHVfaGRyOworCQlz
dHJ1Y3Qga3ZtX3hzYXZlIHhzYXZlOworCX0gcmVxID0ge307CisJaW50IHI7CisKKwltZW1jcHko
JnJlcS54c2F2ZSwgcnBsLCBzaXplb2YoKnJwbCkpOworCisJciA9IGRvX3ZjcHUwX2NvbW1hbmQo
dm0sIEtWTUlfVkNQVV9TRVRfWFNBVkUsICZyZXEuaGRyLCBzaXplb2YocmVxKSwKKwkJCSAgICAg
TlVMTCwgMCk7CisJVEVTVF9BU1NFUlQociA9PSAwLAorCQkgICAgIktWTUlfVkNQVV9TRVRfWFNB
VkUgZmFpbGVkIHdpdGggZXJyb3IgJWQgKCVzKVxuIiwKKwkJICAgIC1yLCBrdm1fc3RyZXJyb3Io
LXIpKTsKK30KKworc3RhdGljIHZvaWQgdGVzdF9jbWRfdmNwdV94c2F2ZShzdHJ1Y3Qga3ZtX3Zt
ICp2bSkKIHsKIAlzdHJ1Y3Qga3ZtX2NwdWlkX2VudHJ5MiAqZW50cnk7CisJc3RydWN0IGt2bV94
c2F2ZSB4c2F2ZTsKIAogCWVudHJ5ID0ga3ZtX2dldF9zdXBwb3J0ZWRfY3B1aWRfZW50cnkoMSk7
CiAJaWYgKCEoZW50cnktPmVjeCAmIFg4Nl9GRUFUVVJFX1hTQVZFKSkgewpAQCAtMTU3Nyw3ICsx
NTk1LDggQEAgc3RhdGljIHZvaWQgdGVzdF9jbWRfdmNwdV9nZXRfeHNhdmUoc3RydWN0IGt2bV92
bSAqdm0pCiAJCXJldHVybjsKIAl9CiAKLQljbWRfdmNwdV9nZXRfeHNhdmUodm0pOworCWNtZF92
Y3B1X2dldF94c2F2ZSh2bSwgJnhzYXZlKTsKKwljbWRfdmNwdV9zZXRfeHNhdmUodm0sICZ4c2F2
ZSk7CiB9CiAKIHN0YXRpYyB2b2lkIHRlc3RfaW50cm9zcGVjdGlvbihzdHJ1Y3Qga3ZtX3ZtICp2
bSkKQEAgLTE2MDgsNyArMTYyNyw3IEBAIHN0YXRpYyB2b2lkIHRlc3RfaW50cm9zcGVjdGlvbihz
dHJ1Y3Qga3ZtX3ZtICp2bSkKIAl0ZXN0X2NtZF92bV9nZXRfbWF4X2dmbigpOwogCXRlc3RfZXZl
bnRfeHNldGJ2KHZtKTsKIAl0ZXN0X2NtZF92Y3B1X2dldF94Y3Iodm0pOwotCXRlc3RfY21kX3Zj
cHVfZ2V0X3hzYXZlKHZtKTsKKwl0ZXN0X2NtZF92Y3B1X3hzYXZlKHZtKTsKIAogCXVuaG9va19p
bnRyb3NwZWN0aW9uKHZtKTsKIH0KZGlmZiAtLWdpdCBhL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24v
a3ZtaV9pbnQuaCBiL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9pbnQuaAppbmRleCAyNmZj
MjdmM2ZkZGMuLmYzNThlZjFjMGM3MyAxMDA2NDQKLS0tIGEvdmlydC9rdm0vaW50cm9zcGVjdGlv
bi9rdm1pX2ludC5oCisrKyBiL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9pbnQuaApAQCAt
MTExLDUgKzExMSw4IEBAIGludCBrdm1pX2FyY2hfY21kX3ZjcHVfZ2V0X3hjcihzdHJ1Y3Qga3Zt
X3ZjcHUgKnZjcHUsCiBpbnQga3ZtaV9hcmNoX2NtZF92Y3B1X2dldF94c2F2ZShzdHJ1Y3Qga3Zt
X3ZjcHUgKnZjcHUsCiAJCQkJIHN0cnVjdCBrdm1pX3ZjcHVfZ2V0X3hzYXZlX3JlcGx5ICoqZGVz
dCwKIAkJCQkgc2l6ZV90ICpkZXN0X3NpemUpOworaW50IGt2bWlfYXJjaF9jbWRfdmNwdV9zZXRf
eHNhdmUoc3RydWN0IGt2bV92Y3B1ICp2Y3B1LAorCQkJCSBjb25zdCBzdHJ1Y3Qga3ZtaV92Y3B1
X3NldF94c2F2ZSAqcmVxLAorCQkJCSBzaXplX3QgcmVxX3NpemUpOwogCiAjZW5kaWYKZGlmZiAt
LWdpdCBhL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9tc2cuYyBiL3ZpcnQva3ZtL2ludHJv
c3BlY3Rpb24va3ZtaV9tc2cuYwppbmRleCAwNmE4ZmJiNWM4NmQuLmM4ZmU1NWMzZDVjNyAxMDA2
NDQKLS0tIGEvdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pX21zZy5jCisrKyBiL3ZpcnQva3Zt
L2ludHJvc3BlY3Rpb24va3ZtaV9tc2cuYwpAQCAtNTUzLDYgKzU1MywyMiBAQCBzdGF0aWMgaW50
IGhhbmRsZV92Y3B1X2dldF94c2F2ZShjb25zdCBzdHJ1Y3Qga3ZtaV92Y3B1X21zZ19qb2IgKmpv
YiwKIAlyZXR1cm4gZXJyOwogfQogCitzdGF0aWMgaW50IGhhbmRsZV92Y3B1X3NldF94c2F2ZShj
b25zdCBzdHJ1Y3Qga3ZtaV92Y3B1X21zZ19qb2IgKmpvYiwKKwkJCQkgY29uc3Qgc3RydWN0IGt2
bWlfbXNnX2hkciAqbXNnLAorCQkJCSBjb25zdCB2b2lkICpyZXEpCit7CisJc2l6ZV90IG1zZ19z
aXplID0gbXNnLT5zaXplLCB4c2F2ZV9zaXplOworCWludCBlYzsKKworCWlmIChjaGVja19zdWJf
b3ZlcmZsb3cobXNnX3NpemUsIHNpemVvZihzdHJ1Y3Qga3ZtaV92Y3B1X2hkciksCisJCQkJJnhz
YXZlX3NpemUpKQorCQlyZXR1cm4gLUVJTlZBTDsKKworCWVjID0ga3ZtaV9hcmNoX2NtZF92Y3B1
X3NldF94c2F2ZShqb2ItPnZjcHUsIHJlcSwgeHNhdmVfc2l6ZSk7CisKKwlyZXR1cm4ga3ZtaV9t
c2dfdmNwdV9yZXBseShqb2IsIG1zZywgZWMsIE5VTEwsIDApOworfQorCiAvKgogICogVGhlc2Ug
ZnVuY3Rpb25zIGFyZSBleGVjdXRlZCBmcm9tIHRoZSB2Q1BVIHRocmVhZC4gVGhlIHJlY2Vpdmlu
ZyB0aHJlYWQKICAqIHBhc3NlcyB0aGUgbWVzc2FnZXMgdXNpbmcgYSBuZXdseSBhbGxvY2F0ZWQg
J3N0cnVjdCBrdm1pX3ZjcHVfbXNnX2pvYicKQEAgLTU3MSw2ICs1ODcsNyBAQCBzdGF0aWMgaW50
KCpjb25zdCBtc2dfdmNwdVtdKShjb25zdCBzdHJ1Y3Qga3ZtaV92Y3B1X21zZ19qb2IgKiwKIAlb
S1ZNSV9WQ1BVX0dFVF9YU0FWRV0gICAgICAgID0gaGFuZGxlX3ZjcHVfZ2V0X3hzYXZlLAogCVtL
Vk1JX1ZDUFVfSU5KRUNUX0VYQ0VQVElPTl0gPSBoYW5kbGVfdmNwdV9pbmplY3RfZXhjZXB0aW9u
LAogCVtLVk1JX1ZDUFVfU0VUX1JFR0lTVEVSU10gICAgPSBoYW5kbGVfdmNwdV9zZXRfcmVnaXN0
ZXJzLAorCVtLVk1JX1ZDUFVfU0VUX1hTQVZFXSAgICAgICAgPSBoYW5kbGVfdmNwdV9zZXRfeHNh
dmUsCiB9OwogCiBzdGF0aWMgYm9vbCBpc192Y3B1X2NvbW1hbmQodTE2IGlkKQpfX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpWaXJ0dWFsaXphdGlvbiBtYWls
aW5nIGxpc3QKVmlydHVhbGl6YXRpb25AbGlzdHMubGludXgtZm91bmRhdGlvbi5vcmcKaHR0cHM6
Ly9saXN0cy5saW51eGZvdW5kYXRpb24ub3JnL21haWxtYW4vbGlzdGluZm8vdmlydHVhbGl6YXRp
b24=
