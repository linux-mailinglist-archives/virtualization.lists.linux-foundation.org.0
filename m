Return-Path: <virtualization-bounces@lists.linux-foundation.org>
X-Original-To: lists.virtualization@lfdr.de
Delivered-To: lists.virtualization@lfdr.de
Received: from fraxinus.osuosl.org (smtp4.osuosl.org [140.211.166.137])
	by mail.lfdr.de (Postfix) with ESMTPS id 4FF792E908B
	for <lists.virtualization@lfdr.de>; Mon,  4 Jan 2021 07:56:28 +0100 (CET)
Received: from localhost (localhost [127.0.0.1])
	by fraxinus.osuosl.org (Postfix) with ESMTP id 0CFA385F44;
	Mon,  4 Jan 2021 06:56:27 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from fraxinus.osuosl.org ([127.0.0.1])
	by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id qq_rlIZfb7B2; Mon,  4 Jan 2021 06:56:24 +0000 (UTC)
Received: from lists.linuxfoundation.org (lf-lists.osuosl.org [140.211.9.56])
	by fraxinus.osuosl.org (Postfix) with ESMTP id 14FF585F3A;
	Mon,  4 Jan 2021 06:56:24 +0000 (UTC)
Received: from lf-lists.osuosl.org (localhost [127.0.0.1])
	by lists.linuxfoundation.org (Postfix) with ESMTP id F0721C013A;
	Mon,  4 Jan 2021 06:56:23 +0000 (UTC)
X-Original-To: virtualization@lists.linux-foundation.org
Delivered-To: virtualization@lists.linuxfoundation.org
Received: from silver.osuosl.org (smtp3.osuosl.org [140.211.166.136])
 by lists.linuxfoundation.org (Postfix) with ESMTP id 38058C013A
 for <virtualization@lists.linux-foundation.org>;
 Mon,  4 Jan 2021 06:56:22 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by silver.osuosl.org (Postfix) with ESMTP id 20265203C3
 for <virtualization@lists.linux-foundation.org>;
 Mon,  4 Jan 2021 06:56:22 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from silver.osuosl.org ([127.0.0.1])
 by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id syBWIGBxS+zk
 for <virtualization@lists.linux-foundation.org>;
 Mon,  4 Jan 2021 06:56:18 +0000 (UTC)
X-Greylist: domain auto-whitelisted by SQLgrey-1.7.6
Received: from us-smtp-delivery-124.mimecast.com
 (us-smtp-delivery-124.mimecast.com [216.205.24.124])
 by silver.osuosl.org (Postfix) with ESMTPS id 2A791203DC
 for <virtualization@lists.linux-foundation.org>;
 Mon,  4 Jan 2021 06:56:18 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=redhat.com;
 s=mimecast20190719; t=1609743377;
 h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
 to:to:cc:cc:mime-version:mime-version:content-type:content-type:
 content-transfer-encoding:content-transfer-encoding:
 in-reply-to:in-reply-to:references:references;
 bh=7D106s8PdVbiGwH/sjbk33Ogbz814/9F3TDsABnU/io=;
 b=CBOQiYJ0lrxNCOdyNi7X3YvAG+V06l5Z0T4IFpml1ufl/FERpKNX9y2Vab9dVQMwT5iVCs
 iCSmqjtl6O4nUIsf48qNhVqJhNWi36hlDfuBt9i247PAFCWoTi8FMjMZbVaHhNjRr0Jd0U
 a6NWwOLLM09B7sDgT5h+NY3vvWeHUvs=
Received: from mimecast-mx01.redhat.com (mimecast-mx01.redhat.com
 [209.132.183.4]) (Using TLS) by relay.mimecast.com with ESMTP id
 us-mta-55-bxB8SChyNcaxr9e47trJsg-1; Mon, 04 Jan 2021 01:56:15 -0500
X-MC-Unique: bxB8SChyNcaxr9e47trJsg-1
Received: from smtp.corp.redhat.com (int-mx07.intmail.prod.int.phx2.redhat.com
 [10.5.11.22])
 (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by mimecast-mx01.redhat.com (Postfix) with ESMTPS id 287EB59;
 Mon,  4 Jan 2021 06:56:14 +0000 (UTC)
Received: from jason-ThinkPad-X1-Carbon-6th.redhat.com
 (ovpn-13-91.pek2.redhat.com [10.72.13.91])
 by smtp.corp.redhat.com (Postfix) with ESMTP id 8DC381002388;
 Mon,  4 Jan 2021 06:56:10 +0000 (UTC)
From: Jason Wang <jasowang@redhat.com>
To: mst@redhat.com, virtualization@lists.linux-foundation.org,
 linux-kernel@vger.kernel.org
Subject: [PATCH V3 16/19] virtio-pci: introduce modern device module
Date: Mon,  4 Jan 2021 14:55:00 +0800
Message-Id: <20210104065503.199631-17-jasowang@redhat.com>
In-Reply-To: <20210104065503.199631-1-jasowang@redhat.com>
References: <20210104065503.199631-1-jasowang@redhat.com>
MIME-Version: 1.0
X-Scanned-By: MIMEDefang 2.84 on 10.5.11.22
Cc: shahafs@mellanox.com, rdunlap@infradead.org, lulu@redhat.com
X-BeenThere: virtualization@lists.linux-foundation.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Linux virtualization <virtualization.lists.linux-foundation.org>
List-Unsubscribe: <https://lists.linuxfoundation.org/mailman/options/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=unsubscribe>
List-Archive: <http://lists.linuxfoundation.org/pipermail/virtualization/>
List-Post: <mailto:virtualization@lists.linux-foundation.org>
List-Help: <mailto:virtualization-request@lists.linux-foundation.org?subject=help>
List-Subscribe: <https://lists.linuxfoundation.org/mailman/listinfo/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: virtualization-bounces@lists.linux-foundation.org
Sender: "Virtualization" <virtualization-bounces@lists.linux-foundation.org>

U2lnbmVkLW9mZi1ieTogSmFzb24gV2FuZyA8amFzb3dhbmdAcmVkaGF0LmNvbT4KLS0tCiBkcml2
ZXJzL3ZpcnRpby9LY29uZmlnICAgICAgICAgICAgICAgICB8ICAxMCArLQogZHJpdmVycy92aXJ0
aW8vTWFrZWZpbGUgICAgICAgICAgICAgICAgfCAgIDEgKwogZHJpdmVycy92aXJ0aW8vdmlydGlv
X3BjaV9jb21tb24uaCAgICAgfCAgMjcgKy0KIGRyaXZlcnMvdmlydGlvL3ZpcnRpb19wY2lfbW9k
ZXJuLmMgICAgIHwgNjE3IC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIGRyaXZlcnMvdmlydGlv
L3ZpcnRpb19wY2lfbW9kZXJuX2Rldi5jIHwgNTk5ICsrKysrKysrKysrKysrKysrKysrKysrKwog
aW5jbHVkZS9saW51eC92aXJ0aW9fcGNpX21vZGVybi5oICAgICAgfCAxMTEgKysrKysKIDYgZmls
ZXMgY2hhbmdlZCwgNzIxIGluc2VydGlvbnMoKyksIDY0NCBkZWxldGlvbnMoLSkKIGNyZWF0ZSBt
b2RlIDEwMDY0NCBkcml2ZXJzL3ZpcnRpby92aXJ0aW9fcGNpX21vZGVybl9kZXYuYwogY3JlYXRl
IG1vZGUgMTAwNjQ0IGluY2x1ZGUvbGludXgvdmlydGlvX3BjaV9tb2Rlcm4uaAoKZGlmZiAtLWdp
dCBhL2RyaXZlcnMvdmlydGlvL0tjb25maWcgYi9kcml2ZXJzL3ZpcnRpby9LY29uZmlnCmluZGV4
IDdiNDExMzBkM2YzNS4uNmI5YjgxZjRiOGMyIDEwMDY0NAotLS0gYS9kcml2ZXJzL3ZpcnRpby9L
Y29uZmlnCisrKyBiL2RyaXZlcnMvdmlydGlvL0tjb25maWcKQEAgLTEyLDYgKzEyLDE0IEBAIGNv
bmZpZyBBUkNIX0hBU19SRVNUUklDVEVEX1ZJUlRJT19NRU1PUllfQUNDRVNTCiAJICBUaGlzIG9w
dGlvbiBpcyBzZWxlY3RlZCBpZiB0aGUgYXJjaGl0ZWN0dXJlIG1heSBuZWVkIHRvIGVuZm9yY2UK
IAkgIFZJUlRJT19GX0FDQ0VTU19QTEFURk9STQogCitjb25maWcgVklSVElPX1BDSV9NT0RFUk4K
Kwl0cmlzdGF0ZSAiTW9kZXJuIFZpcnRpbyBQQ0kgRGV2aWNlIgorCWRlcGVuZHMgb24gUENJCisJ
aGVscAorCSAgTW9kZXJuIFBDSSBkZXZpY2UgaW1wbGVtZW50YXRpb24uIFRoaXMgbW9kdWxlIGlt
cGxlbWVudHMgdGhlCisJICBiYXNpYyBwcm9iZSBhbmQgY29udHJvbCBmb3IgZGV2aWNlcyB3aGlj
aCBhcmUgYmFzZWQgb24gbW9kZXJuCisJICBQQ0kgZGV2aWNlIHdpdGggcG9zc2libGUgdmVuZG9y
IHNwZWNpZmljIGV4dGVuc2lvbnMuCisKIG1lbnVjb25maWcgVklSVElPX01FTlUKIAlib29sICJW
aXJ0aW8gZHJpdmVycyIKIAlkZWZhdWx0IHkKQEAgLTIwLDcgKzI4LDcgQEAgaWYgVklSVElPX01F
TlUKIAogY29uZmlnIFZJUlRJT19QQ0kKIAl0cmlzdGF0ZSAiUENJIGRyaXZlciBmb3IgdmlydGlv
IGRldmljZXMiCi0JZGVwZW5kcyBvbiBQQ0kKKwlkZXBlbmRzIG9uIFZJUlRJT19QQ0lfTU9ERVJO
CiAJc2VsZWN0IFZJUlRJTwogCWhlbHAKIAkgIFRoaXMgZHJpdmVyIHByb3ZpZGVzIHN1cHBvcnQg
Zm9yIHZpcnRpbyBiYXNlZCBwYXJhdmlydHVhbCBkZXZpY2UKZGlmZiAtLWdpdCBhL2RyaXZlcnMv
dmlydGlvL01ha2VmaWxlIGIvZHJpdmVycy92aXJ0aW8vTWFrZWZpbGUKaW5kZXggNTkxZTZmNzJh
YTU0Li5mMDk3NTc4YWFhOGYgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvdmlydGlvL01ha2VmaWxlCisr
KyBiL2RyaXZlcnMvdmlydGlvL01ha2VmaWxlCkBAIC0xLDUgKzEsNiBAQAogIyBTUERYLUxpY2Vu
c2UtSWRlbnRpZmllcjogR1BMLTIuMAogb2JqLSQoQ09ORklHX1ZJUlRJTykgKz0gdmlydGlvLm8g
dmlydGlvX3Jpbmcubworb2JqLSQoQ09ORklHX1ZJUlRJT19QQ0lfTU9ERVJOKSArPSB2aXJ0aW9f
cGNpX21vZGVybl9kZXYubwogb2JqLSQoQ09ORklHX1ZJUlRJT19NTUlPKSArPSB2aXJ0aW9fbW1p
by5vCiBvYmotJChDT05GSUdfVklSVElPX1BDSSkgKz0gdmlydGlvX3BjaS5vCiB2aXJ0aW9fcGNp
LXkgOj0gdmlydGlvX3BjaV9tb2Rlcm4ubyB2aXJ0aW9fcGNpX2NvbW1vbi5vCmRpZmYgLS1naXQg
YS9kcml2ZXJzL3ZpcnRpby92aXJ0aW9fcGNpX2NvbW1vbi5oIGIvZHJpdmVycy92aXJ0aW8vdmly
dGlvX3BjaV9jb21tb24uaAppbmRleCBmMzVmZjViNmI0NjcuLmJlZWMwNDdhOGY4ZCAxMDA2NDQK
LS0tIGEvZHJpdmVycy92aXJ0aW8vdmlydGlvX3BjaV9jb21tb24uaAorKysgYi9kcml2ZXJzL3Zp
cnRpby92aXJ0aW9fcGNpX2NvbW1vbi5oCkBAIC0yNSw2ICsyNSw3IEBACiAjaW5jbHVkZSA8bGlu
dXgvdmlydGlvX2NvbmZpZy5oPgogI2luY2x1ZGUgPGxpbnV4L3ZpcnRpb19yaW5nLmg+CiAjaW5j
bHVkZSA8bGludXgvdmlydGlvX3BjaS5oPgorI2luY2x1ZGUgPGxpbnV4L3ZpcnRpb19wY2lfbW9k
ZXJuLmg+CiAjaW5jbHVkZSA8bGludXgvaGlnaG1lbS5oPgogI2luY2x1ZGUgPGxpbnV4L3NwaW5s
b2NrLmg+CiAKQEAgLTM5LDMyICs0MCw2IEBAIHN0cnVjdCB2aXJ0aW9fcGNpX3ZxX2luZm8gewog
CXVuc2lnbmVkIG1zaXhfdmVjdG9yOwogfTsKIAotc3RydWN0IHZpcnRpb19wY2lfbW9kZXJuX2Rl
dmljZSB7Ci0Jc3RydWN0IHBjaV9kZXYgKnBjaV9kZXY7Ci0KLQlzdHJ1Y3QgdmlydGlvX3BjaV9j
b21tb25fY2ZnIF9faW9tZW0gKmNvbW1vbjsKLQkvKiBEZXZpY2Utc3BlY2lmaWMgZGF0YSAobm9u
LWxlZ2FjeSBtb2RlKSAgKi8KLQl2b2lkIF9faW9tZW0gKmRldmljZTsKLQkvKiBCYXNlIG9mIHZx
IG5vdGlmaWNhdGlvbnMgKG5vbi1sZWdhY3kgbW9kZSkuICovCi0Jdm9pZCBfX2lvbWVtICpub3Rp
ZnlfYmFzZTsKLQkvKiBXaGVyZSB0byByZWFkIGFuZCBjbGVhciBpbnRlcnJ1cHQgKi8KLQl1OCBf
X2lvbWVtICppc3I7Ci0KLQkvKiBTbyB3ZSBjYW4gc2FuaXR5LWNoZWNrIGFjY2Vzc2VzLiAqLwot
CXNpemVfdCBub3RpZnlfbGVuOwotCXNpemVfdCBkZXZpY2VfbGVuOwotCi0JLyogQ2FwYWJpbGl0
eSBmb3Igd2hlbiB3ZSBuZWVkIHRvIG1hcCBub3RpZmljYXRpb25zIHBlci12cS4gKi8KLQlpbnQg
bm90aWZ5X21hcF9jYXA7Ci0KLQkvKiBNdWx0aXBseSBxdWV1ZV9ub3RpZnlfb2ZmIGJ5IHRoaXMg
dmFsdWUuIChub24tbGVnYWN5IG1vZGUpLiAqLwotCXUzMiBub3RpZnlfb2Zmc2V0X211bHRpcGxp
ZXI7Ci0KLQlpbnQgbW9kZXJuX2JhcnM7Ci0KLQlzdHJ1Y3QgdmlydGlvX2RldmljZV9pZCBpZDsK
LX07Ci0KIC8qIE91ciBkZXZpY2Ugc3RydWN0dXJlICovCiBzdHJ1Y3QgdmlydGlvX3BjaV9kZXZp
Y2UgewogCXN0cnVjdCB2aXJ0aW9fZGV2aWNlIHZkZXY7CmRpZmYgLS1naXQgYS9kcml2ZXJzL3Zp
cnRpby92aXJ0aW9fcGNpX21vZGVybi5jIGIvZHJpdmVycy92aXJ0aW8vdmlydGlvX3BjaV9tb2Rl
cm4uYwppbmRleCBhNWUzYTVlNDAzMjMuLmZiZDRlYmMwMGViNiAxMDA2NDQKLS0tIGEvZHJpdmVy
cy92aXJ0aW8vdmlydGlvX3BjaV9tb2Rlcm4uYworKysgYi9kcml2ZXJzL3ZpcnRpby92aXJ0aW9f
cGNpX21vZGVybi5jCkBAIC0xOSwxNTggKzE5LDYgQEAKICNkZWZpbmUgVklSVElPX1JJTkdfTk9f
TEVHQUNZCiAjaW5jbHVkZSAidmlydGlvX3BjaV9jb21tb24uaCIKIAotLyoKLSAqIFR5cGUtc2Fm
ZSB3cmFwcGVycyBmb3IgaW8gYWNjZXNzZXMuCi0gKiBVc2UgdGhlc2UgdG8gZW5mb3JjZSBhdCBj
b21waWxlIHRpbWUgdGhlIGZvbGxvd2luZyBzcGVjIHJlcXVpcmVtZW50OgotICoKLSAqIFRoZSBk
cml2ZXIgTVVTVCBhY2Nlc3MgZWFjaCBmaWVsZCB1c2luZyB0aGUg4oCcbmF0dXJhbOKAnSBhY2Nl
c3MKLSAqIG1ldGhvZCwgaS5lLiAzMi1iaXQgYWNjZXNzZXMgZm9yIDMyLWJpdCBmaWVsZHMsIDE2
LWJpdCBhY2Nlc3NlcwotICogZm9yIDE2LWJpdCBmaWVsZHMgYW5kIDgtYml0IGFjY2Vzc2VzIGZv
ciA4LWJpdCBmaWVsZHMuCi0gKi8KLXN0YXRpYyBpbmxpbmUgdTggdnBfaW9yZWFkOChjb25zdCB1
OCBfX2lvbWVtICphZGRyKQotewotCXJldHVybiBpb3JlYWQ4KGFkZHIpOwotfQotc3RhdGljIGlu
bGluZSB1MTYgdnBfaW9yZWFkMTYgKGNvbnN0IF9fbGUxNiBfX2lvbWVtICphZGRyKQotewotCXJl
dHVybiBpb3JlYWQxNihhZGRyKTsKLX0KLQotc3RhdGljIGlubGluZSB1MzIgdnBfaW9yZWFkMzIo
Y29uc3QgX19sZTMyIF9faW9tZW0gKmFkZHIpCi17Ci0JcmV0dXJuIGlvcmVhZDMyKGFkZHIpOwot
fQotCi1zdGF0aWMgaW5saW5lIHZvaWQgdnBfaW93cml0ZTgodTggdmFsdWUsIHU4IF9faW9tZW0g
KmFkZHIpCi17Ci0JaW93cml0ZTgodmFsdWUsIGFkZHIpOwotfQotCi1zdGF0aWMgaW5saW5lIHZv
aWQgdnBfaW93cml0ZTE2KHUxNiB2YWx1ZSwgX19sZTE2IF9faW9tZW0gKmFkZHIpCi17Ci0JaW93
cml0ZTE2KHZhbHVlLCBhZGRyKTsKLX0KLQotc3RhdGljIGlubGluZSB2b2lkIHZwX2lvd3JpdGUz
Mih1MzIgdmFsdWUsIF9fbGUzMiBfX2lvbWVtICphZGRyKQotewotCWlvd3JpdGUzMih2YWx1ZSwg
YWRkcik7Ci19Ci0KLXN0YXRpYyB2b2lkIHZwX2lvd3JpdGU2NF90d29wYXJ0KHU2NCB2YWwsCi0J
CQkJIF9fbGUzMiBfX2lvbWVtICpsbywgX19sZTMyIF9faW9tZW0gKmhpKQotewotCXZwX2lvd3Jp
dGUzMigodTMyKXZhbCwgbG8pOwotCXZwX2lvd3JpdGUzMih2YWwgPj4gMzIsIGhpKTsKLX0KLQot
LyoKLSAqIHZwX21vZGVybl9tYXBfY2FwYWJpbGl0eSAtIG1hcCBhIHBhcnQgb2YgdmlydGlvIHBj
aSBjYXBhYmlsaXR5Ci0gKiBAbWRldjogdGhlIG1vZGVybiB2aXJ0aW8tcGNpIGRldmljZQotICog
QG9mZjogb2Zmc2V0IG9mIHRoZSBjYXBhYmlsaXR5Ci0gKiBAbWlubGVuOiBtaW5pbWFsIGxlbmd0
aCBvZiB0aGUgY2FwYWJpbGl0eQotICogQGFsaWduOiBhbGlnbiByZXF1aXJlbWVudAotICogQHN0
YXJ0OiBzdGFydCBmcm9tIHRoZSBjYXBhYmlsaXR5Ci0gKiBAc2l6ZTogbWFwIHNpemUKLSAqIEBs
ZW46IHRoZSBsZW5ndGggdGhhdCBpcyBhY3R1YWxseSBtYXBwZWQKLSAqCi0gKiBSZXR1cm5zIHRo
ZSBpbyBhZGRyZXNzIG9mIGZvciB0aGUgcGFydCBvZiB0aGUgY2FwYWJpbGl0eQotICovCi12b2lk
IF9faW9tZW0gKnZwX21vZGVybl9tYXBfY2FwYWJpbGl0eShzdHJ1Y3QgdmlydGlvX3BjaV9tb2Rl
cm5fZGV2aWNlICptZGV2LCBpbnQgb2ZmLAotCQkJCSAgICAgICBzaXplX3QgbWlubGVuLAotCQkJ
CSAgICAgICB1MzIgYWxpZ24sCi0JCQkJICAgICAgIHUzMiBzdGFydCwgdTMyIHNpemUsCi0JCQkJ
ICAgICAgIHNpemVfdCAqbGVuKQotewotCXN0cnVjdCBwY2lfZGV2ICpkZXYgPSBtZGV2LT5wY2lf
ZGV2OwotCXU4IGJhcjsKLQl1MzIgb2Zmc2V0LCBsZW5ndGg7Ci0Jdm9pZCBfX2lvbWVtICpwOwot
Ci0JcGNpX3JlYWRfY29uZmlnX2J5dGUoZGV2LCBvZmYgKyBvZmZzZXRvZihzdHJ1Y3QgdmlydGlv
X3BjaV9jYXAsCi0JCQkJCQkgYmFyKSwKLQkJCSAgICAgJmJhcik7Ci0JcGNpX3JlYWRfY29uZmln
X2R3b3JkKGRldiwgb2ZmICsgb2Zmc2V0b2Yoc3RydWN0IHZpcnRpb19wY2lfY2FwLCBvZmZzZXQp
LAotCQkJICAgICAmb2Zmc2V0KTsKLQlwY2lfcmVhZF9jb25maWdfZHdvcmQoZGV2LCBvZmYgKyBv
ZmZzZXRvZihzdHJ1Y3QgdmlydGlvX3BjaV9jYXAsIGxlbmd0aCksCi0JCQkgICAgICAmbGVuZ3Ro
KTsKLQotCWlmIChsZW5ndGggPD0gc3RhcnQpIHsKLQkJZGV2X2VycigmZGV2LT5kZXYsCi0JCQki
dmlydGlvX3BjaTogYmFkIGNhcGFiaWxpdHkgbGVuICV1ICg+JXUgZXhwZWN0ZWQpXG4iLAotCQkJ
bGVuZ3RoLCBzdGFydCk7Ci0JCXJldHVybiBOVUxMOwotCX0KLQotCWlmIChsZW5ndGggLSBzdGFy
dCA8IG1pbmxlbikgewotCQlkZXZfZXJyKCZkZXYtPmRldiwKLQkJCSJ2aXJ0aW9fcGNpOiBiYWQg
Y2FwYWJpbGl0eSBsZW4gJXUgKD49JXp1IGV4cGVjdGVkKVxuIiwKLQkJCWxlbmd0aCwgbWlubGVu
KTsKLQkJcmV0dXJuIE5VTEw7Ci0JfQotCi0JbGVuZ3RoIC09IHN0YXJ0OwotCi0JaWYgKHN0YXJ0
ICsgb2Zmc2V0IDwgb2Zmc2V0KSB7Ci0JCWRldl9lcnIoJmRldi0+ZGV2LAotCQkJInZpcnRpb19w
Y2k6IG1hcCB3cmFwLWFyb3VuZCAldSsldVxuIiwKLQkJCXN0YXJ0LCBvZmZzZXQpOwotCQlyZXR1
cm4gTlVMTDsKLQl9Ci0KLQlvZmZzZXQgKz0gc3RhcnQ7Ci0KLQlpZiAob2Zmc2V0ICYgKGFsaWdu
IC0gMSkpIHsKLQkJZGV2X2VycigmZGV2LT5kZXYsCi0JCQkidmlydGlvX3BjaTogb2Zmc2V0ICV1
IG5vdCBhbGlnbmVkIHRvICV1XG4iLAotCQkJb2Zmc2V0LCBhbGlnbik7Ci0JCXJldHVybiBOVUxM
OwotCX0KLQotCWlmIChsZW5ndGggPiBzaXplKQotCQlsZW5ndGggPSBzaXplOwotCi0JaWYgKGxl
bikKLQkJKmxlbiA9IGxlbmd0aDsKLQotCWlmIChtaW5sZW4gKyBvZmZzZXQgPCBtaW5sZW4gfHwK
LQkgICAgbWlubGVuICsgb2Zmc2V0ID4gcGNpX3Jlc291cmNlX2xlbihkZXYsIGJhcikpIHsKLQkJ
ZGV2X2VycigmZGV2LT5kZXYsCi0JCQkidmlydGlvX3BjaTogbWFwIHZpcnRpbyAlenVAJXUgIgot
CQkJIm91dCBvZiByYW5nZSBvbiBiYXIgJWkgbGVuZ3RoICVsdVxuIiwKLQkJCW1pbmxlbiwgb2Zm
c2V0LAotCQkJYmFyLCAodW5zaWduZWQgbG9uZylwY2lfcmVzb3VyY2VfbGVuKGRldiwgYmFyKSk7
Ci0JCXJldHVybiBOVUxMOwotCX0KLQotCXAgPSBwY2lfaW9tYXBfcmFuZ2UoZGV2LCBiYXIsIG9m
ZnNldCwgbGVuZ3RoKTsKLQlpZiAoIXApCi0JCWRldl9lcnIoJmRldi0+ZGV2LAotCQkJInZpcnRp
b19wY2k6IHVuYWJsZSB0byBtYXAgdmlydGlvICV1QCV1IG9uIGJhciAlaVxuIiwKLQkJCWxlbmd0
aCwgb2Zmc2V0LCBiYXIpOwotCXJldHVybiBwOwotfQotCi0vKgotICogdnBfbW9kZXJuX2dldF9m
ZWF0dXJlcyAtIGdldCBmZWF0dXJlcyBmcm9tIGRldmljZQotICogQG1kZXY6IHRoZSBtb2Rlcm4g
dmlydGlvLXBjaSBkZXZpY2UKLSAqCi0gKiBSZXR1cm5zIHRoZSBmZWF0dXJlcyByZWFkIGZyb20g
dGhlIGRldmljZQotICovCi1zdGF0aWMgdTY0IHZwX21vZGVybl9nZXRfZmVhdHVyZXMoc3RydWN0
IHZpcnRpb19wY2lfbW9kZXJuX2RldmljZSAqbWRldikKLXsKLQlzdHJ1Y3QgdmlydGlvX3BjaV9j
b21tb25fY2ZnIF9faW9tZW0gKmNmZyA9IG1kZXYtPmNvbW1vbjsKLQotCXU2NCBmZWF0dXJlczsK
LQotCXZwX2lvd3JpdGUzMigwLCAmY2ZnLT5kZXZpY2VfZmVhdHVyZV9zZWxlY3QpOwotCWZlYXR1
cmVzID0gdnBfaW9yZWFkMzIoJmNmZy0+ZGV2aWNlX2ZlYXR1cmUpOwotCXZwX2lvd3JpdGUzMigx
LCAmY2ZnLT5kZXZpY2VfZmVhdHVyZV9zZWxlY3QpOwotCWZlYXR1cmVzIHw9ICgodTY0KXZwX2lv
cmVhZDMyKCZjZmctPmRldmljZV9mZWF0dXJlKSA8PCAzMik7Ci0KLQlyZXR1cm4gZmVhdHVyZXM7
Ci19Ci0KLS8qIHZpcnRpbyBjb25maWctPmdldF9mZWF0dXJlcygpIGltcGxlbWVudGF0aW9uICov
CiBzdGF0aWMgdTY0IHZwX2dldF9mZWF0dXJlcyhzdHJ1Y3QgdmlydGlvX2RldmljZSAqdmRldikK
IHsKIAlzdHJ1Y3QgdmlydGlvX3BjaV9kZXZpY2UgKnZwX2RldiA9IHRvX3ZwX2RldmljZSh2ZGV2
KTsKQEAgLTE4OCwxNDkgKzM2LDYgQEAgc3RhdGljIHZvaWQgdnBfdHJhbnNwb3J0X2ZlYXR1cmVz
KHN0cnVjdCB2aXJ0aW9fZGV2aWNlICp2ZGV2LCB1NjQgZmVhdHVyZXMpCiAJCV9fdmlydGlvX3Nl
dF9iaXQodmRldiwgVklSVElPX0ZfU1JfSU9WKTsKIH0KIAotLyoKLSAqIHZwX21vZGVybl9zZXRf
ZmVhdHVyZXMgLSBzZXQgZmVhdHVyZXMgdG8gZGV2aWNlCi0gKiBAbWRldjogdGhlIG1vZGVybiB2
aXJ0aW8tcGNpIGRldmljZQotICogQGZlYXR1cmVzOiB0aGUgZmVhdHVyZXMgc2V0IHRvIGRldmlj
ZQotICovCi1zdGF0aWMgdm9pZCB2cF9tb2Rlcm5fc2V0X2ZlYXR1cmVzKHN0cnVjdCB2aXJ0aW9f
cGNpX21vZGVybl9kZXZpY2UgKm1kZXYsCi0JCQkJICAgdTY0IGZlYXR1cmVzKQotewotCXN0cnVj
dCB2aXJ0aW9fcGNpX2NvbW1vbl9jZmcgX19pb21lbSAqY2ZnID0gbWRldi0+Y29tbW9uOwotCi0J
dnBfaW93cml0ZTMyKDAsICZjZmctPmd1ZXN0X2ZlYXR1cmVfc2VsZWN0KTsKLQl2cF9pb3dyaXRl
MzIoKHUzMilmZWF0dXJlcywgJmNmZy0+Z3Vlc3RfZmVhdHVyZSk7Ci0JdnBfaW93cml0ZTMyKDEs
ICZjZmctPmd1ZXN0X2ZlYXR1cmVfc2VsZWN0KTsKLQl2cF9pb3dyaXRlMzIoZmVhdHVyZXMgPj4g
MzIsICZjZmctPmd1ZXN0X2ZlYXR1cmUpOwotfQotCi0vKgotICogdnBfbW9kZXJuX3F1ZXVlX3Zl
Y3RvciAtIHNldCB0aGUgTVNJWCB2ZWN0b3IgZm9yIGEgc3BlY2lmaWMgdmlydHF1ZXVlCi0gKiBA
bWRldjogdGhlIG1vZGVybiB2aXJ0aW8tcGNpIGRldmljZQotICogQGluZGV4OiBxdWV1ZSBpbmRl
eAotICogQHZlY3RvcjogdGhlIGNvbmZpZyB2ZWN0b3IKLSAqCi0gKiBSZXR1cm5zIHRoZSBjb25m
aWcgdmVjdG9yIHJlYWQgZnJvbSB0aGUgZGV2aWNlCi0gKi8KLXN0YXRpYyB1MTYgdnBfbW9kZXJu
X3F1ZXVlX3ZlY3RvcihzdHJ1Y3QgdmlydGlvX3BjaV9tb2Rlcm5fZGV2aWNlICptZGV2LAotCQkJ
CSAgdTE2IGluZGV4LCB1MTYgdmVjdG9yKQotewotCXN0cnVjdCB2aXJ0aW9fcGNpX2NvbW1vbl9j
ZmcgX19pb21lbSAqY2ZnID0gbWRldi0+Y29tbW9uOwotCi0JdnBfaW93cml0ZTE2KGluZGV4LCAm
Y2ZnLT5xdWV1ZV9zZWxlY3QpOwotCXZwX2lvd3JpdGUxNih2ZWN0b3IsICZjZmctPnF1ZXVlX21z
aXhfdmVjdG9yKTsKLQkvKiBGbHVzaCB0aGUgd3JpdGUgb3V0IHRvIGRldmljZSAqLwotCXJldHVy
biB2cF9pb3JlYWQxNigmY2ZnLT5xdWV1ZV9tc2l4X3ZlY3Rvcik7Ci19Ci0KLS8qCi0gKiB2cF9t
b2Rlcm5fcXVldWVfYWRkcmVzcyAtIHNldCB0aGUgdmlydHF1ZXVlIGFkZHJlc3MKLSAqIEBtZGV2
OiB0aGUgbW9kZXJuIHZpcnRpby1wY2kgZGV2aWNlCi0gKiBAaW5kZXg6IHRoZSBxdWV1ZSBpbmRl
eAotICogQGRlc2NfYWRkcjogYWRkcmVzcyBvZiB0aGUgZGVzY3JpcHRvciBhcmVhCi0gKiBAZHJp
dmVyX2FkZHI6IGFkZHJlc3Mgb2YgdGhlIGRyaXZlciBhcmVhCi0gKiBAZGV2aWNlX2FkZHI6IGFk
ZHJlc3Mgb2YgdGhlIGRldmljZSBhcmVhCi0gKi8KLXN0YXRpYyB2b2lkIHZwX21vZGVybl9xdWV1
ZV9hZGRyZXNzKHN0cnVjdCB2aXJ0aW9fcGNpX21vZGVybl9kZXZpY2UgKm1kZXYsCi0JCQkJICAg
IHUxNiBpbmRleCwgdTY0IGRlc2NfYWRkciwgdTY0IGRyaXZlcl9hZGRyLAotCQkJCSAgICB1NjQg
ZGV2aWNlX2FkZHIpCi17Ci0Jc3RydWN0IHZpcnRpb19wY2lfY29tbW9uX2NmZyBfX2lvbWVtICpj
ZmcgPSBtZGV2LT5jb21tb247Ci0KLQl2cF9pb3dyaXRlMTYoaW5kZXgsICZjZmctPnF1ZXVlX3Nl
bGVjdCk7Ci0KLQl2cF9pb3dyaXRlNjRfdHdvcGFydChkZXNjX2FkZHIsICZjZmctPnF1ZXVlX2Rl
c2NfbG8sCi0JCQkgICAgICZjZmctPnF1ZXVlX2Rlc2NfaGkpOwotCXZwX2lvd3JpdGU2NF90d29w
YXJ0KGRyaXZlcl9hZGRyLCAmY2ZnLT5xdWV1ZV9hdmFpbF9sbywKLQkJCSAgICAgJmNmZy0+cXVl
dWVfYXZhaWxfaGkpOwotCXZwX2lvd3JpdGU2NF90d29wYXJ0KGRldmljZV9hZGRyLCAmY2ZnLT5x
dWV1ZV91c2VkX2xvLAotCQkJICAgICAmY2ZnLT5xdWV1ZV91c2VkX2hpKTsKLX0KLQotLyoKLSAq
IHZwX21vZGVybl9zZXRfcXVldWVfZW5hYmxlIC0gZW5hYmxlIGEgdmlydHF1ZXVlCi0gKiBAbWRl
djogdGhlIG1vZGVybiB2aXJ0aW8tcGNpIGRldmljZQotICogQGluZGV4OiB0aGUgcXVldWUgaW5k
ZXgKLSAqIEBlbmFibGU6IHdoZXRoZXIgdGhlIHZpcnRxdWV1ZSBpcyBlbmFibGUgb3Igbm90Ci0g
Ki8KLXN0YXRpYyB2b2lkIHZwX21vZGVybl9zZXRfcXVldWVfZW5hYmxlKHN0cnVjdCB2aXJ0aW9f
cGNpX21vZGVybl9kZXZpY2UgKm1kZXYsCi0JCQkJICAgICAgIHUxNiBpbmRleCwgYm9vbCBlbmFi
bGUpCi17Ci0JdnBfaW93cml0ZTE2KGluZGV4LCAmbWRldi0+Y29tbW9uLT5xdWV1ZV9zZWxlY3Qp
OwotCXZwX2lvd3JpdGUxNihlbmFibGUsICZtZGV2LT5jb21tb24tPnF1ZXVlX2VuYWJsZSk7Ci19
Ci0KLS8qCi0gKiB2cF9tb2Rlcm5fZ2V0X3F1ZXVlX2VuYWJsZSAtIGVuYWJsZSBhIHZpcnRxdWV1
ZQotICogQG1kZXY6IHRoZSBtb2Rlcm4gdmlydGlvLXBjaSBkZXZpY2UKLSAqIEBpbmRleDogdGhl
IHF1ZXVlIGluZGV4Ci0gKgotICogUmV0dXJucyB3aGV0aGVyIGEgdmlydHF1ZXVlIGlzIGVuYWJs
ZWQgb3Igbm90Ci0gKi8KLXN0YXRpYyBib29sIHZwX21vZGVybl9nZXRfcXVldWVfZW5hYmxlKHN0
cnVjdCB2aXJ0aW9fcGNpX21vZGVybl9kZXZpY2UgKm1kZXYsCi0JCQkJICAgICAgIHUxNiBpbmRl
eCkKLXsKLQl2cF9pb3dyaXRlMTYoaW5kZXgsICZtZGV2LT5jb21tb24tPnF1ZXVlX3NlbGVjdCk7
Ci0KLQlyZXR1cm4gdnBfaW9yZWFkMTYoJm1kZXYtPmNvbW1vbi0+cXVldWVfZW5hYmxlKTsKLX0K
LQotLyoKLSAqIHZwX21vZGVybl9zZXRfcXVldWVfc2l6ZSAtIHNldCBzaXplIGZvciBhIHZpcnRx
dWV1ZQotICogQG1kZXY6IHRoZSBtb2Rlcm4gdmlydGlvLXBjaSBkZXZpY2UKLSAqIEBpbmRleDog
dGhlIHF1ZXVlIGluZGV4Ci0gKiBAc2l6ZTogdGhlIHNpemUgb2YgdGhlIHZpcnRxdWV1ZQotICov
Ci1zdGF0aWMgdm9pZCB2cF9tb2Rlcm5fc2V0X3F1ZXVlX3NpemUoc3RydWN0IHZpcnRpb19wY2lf
bW9kZXJuX2RldmljZSAqbWRldiwKLQkJCQkgICAgIHUxNiBpbmRleCwgdTE2IHNpemUpCi17Ci0J
dnBfaW93cml0ZTE2KGluZGV4LCAmbWRldi0+Y29tbW9uLT5xdWV1ZV9zZWxlY3QpOwotCXZwX2lv
d3JpdGUxNihzaXplLCAmbWRldi0+Y29tbW9uLT5xdWV1ZV9zaXplKTsKLQotfQotCi0vKgotICog
dnBfbW9kZXJuX2dldF9xdWV1ZV9zaXplIC0gZ2V0IHNpemUgZm9yIGEgdmlydHF1ZXVlCi0gKiBA
bWRldjogdGhlIG1vZGVybiB2aXJ0aW8tcGNpIGRldmljZQotICogQGluZGV4OiB0aGUgcXVldWUg
aW5kZXgKLSAqCi0gKiBSZXR1cm5zIHRoZSBzaXplIG9mIHRoZSB2aXJ0cXVldWUKLSAqLwotc3Rh
dGljIHUxNiB2cF9tb2Rlcm5fZ2V0X3F1ZXVlX3NpemUoc3RydWN0IHZpcnRpb19wY2lfbW9kZXJu
X2RldmljZSAqbWRldiwKLQkJCQkgICAgdTE2IGluZGV4KQotewotCXZwX2lvd3JpdGUxNihpbmRl
eCwgJm1kZXYtPmNvbW1vbi0+cXVldWVfc2VsZWN0KTsKLQotCXJldHVybiB2cF9pb3JlYWQxNigm
bWRldi0+Y29tbW9uLT5xdWV1ZV9zaXplKTsKLQotfQotCi0vKgotICogdnBfbW9kZXJuX2dldF9u
dW1fcXVldWVzIC0gZ2V0IHRoZSBudW1iZXIgb2YgdmlydHF1ZXVlcwotICogQG1kZXY6IHRoZSBt
b2Rlcm4gdmlydGlvLXBjaSBkZXZpY2UKLSAqCi0gKiBSZXR1cm5zIHRoZSBudW1iZXIgb2Ygdmly
dHF1ZXVlcwotICovCi1zdGF0aWMgdTE2IHZwX21vZGVybl9nZXRfbnVtX3F1ZXVlcyhzdHJ1Y3Qg
dmlydGlvX3BjaV9tb2Rlcm5fZGV2aWNlICptZGV2KQotewotCXJldHVybiB2cF9pb3JlYWQxNigm
bWRldi0+Y29tbW9uLT5udW1fcXVldWVzKTsKLX0KLQotLyoKLSAqIHZwX21vZGVybl9nZXRfcXVl
dWVfbm90aWZ5X29mZiAtIGdldCBub3RpZmljYXRpb24gb2Zmc2V0IGZvciBhIHZpcnRxdWV1ZQot
ICogQG1kZXY6IHRoZSBtb2Rlcm4gdmlydGlvLXBjaSBkZXZpY2UKLSAqIEBpbmRleDogdGhlIHF1
ZXVlIGluZGV4Ci0gKgotICogUmV0dXJucyB0aGUgbm90aWZpY2F0aW9uIG9mZnNldCBmb3IgYSB2
aXJ0cXVldWUKLSAqLwotc3RhdGljIHUxNiB2cF9tb2Rlcm5fZ2V0X3F1ZXVlX25vdGlmeV9vZmYo
c3RydWN0IHZpcnRpb19wY2lfbW9kZXJuX2RldmljZSAqbWRldiwKLQkJCQkJICB1MTYgaW5kZXgp
Ci17Ci0JdnBfaW93cml0ZTE2KGluZGV4LCAmbWRldi0+Y29tbW9uLT5xdWV1ZV9zZWxlY3QpOwot
Ci0JcmV0dXJuIHZwX2lvcmVhZDE2KCZtZGV2LT5jb21tb24tPnF1ZXVlX25vdGlmeV9vZmYpOwot
fQotCiAvKiB2aXJ0aW8gY29uZmlnLT5maW5hbGl6ZV9mZWF0dXJlcygpIGltcGxlbWVudGF0aW9u
ICovCiBzdGF0aWMgaW50IHZwX2ZpbmFsaXplX2ZlYXR1cmVzKHN0cnVjdCB2aXJ0aW9fZGV2aWNl
ICp2ZGV2KQogewpAQCAtNDI5LDE5ICsxMzQsNiBAQCBzdGF0aWMgdm9pZCB2cF9zZXQoc3RydWN0
IHZpcnRpb19kZXZpY2UgKnZkZXYsIHVuc2lnbmVkIG9mZnNldCwKIAl9CiB9CiAKLS8qCi0gKiB2
cF9tb2Rlcm5fZ2VuZXJhdGlvbiAtIGdldCB0aGUgZGV2aWNlIGdlbnJlYXRpb24KLSAqIEBtZGV2
OiB0aGUgbW9kZXJuIHZpcnRpby1wY2kgZGV2aWNlCi0gKgotICogUmV0dXJucyB0aGUgZ2VucmVh
dGlvbiByZWFkIGZyb20gZGV2aWNlCi0gKi8KLXN0YXRpYyB1MzIgdnBfbW9kZXJuX2dlbmVyYXRp
b24oc3RydWN0IHZpcnRpb19wY2lfbW9kZXJuX2RldmljZSAqbWRldikKLXsKLQlzdHJ1Y3Qgdmly
dGlvX3BjaV9jb21tb25fY2ZnIF9faW9tZW0gKmNmZyA9IG1kZXYtPmNvbW1vbjsKLQotCXJldHVy
biB2cF9pb3JlYWQ4KCZjZmctPmNvbmZpZ19nZW5lcmF0aW9uKTsKLX0KLQogc3RhdGljIHUzMiB2
cF9nZW5lcmF0aW9uKHN0cnVjdCB2aXJ0aW9fZGV2aWNlICp2ZGV2KQogewogCXN0cnVjdCB2aXJ0
aW9fcGNpX2RldmljZSAqdnBfZGV2ID0gdG9fdnBfZGV2aWNlKHZkZXYpOwpAQCAtNDQ5LDE5ICsx
NDEsNiBAQCBzdGF0aWMgdTMyIHZwX2dlbmVyYXRpb24oc3RydWN0IHZpcnRpb19kZXZpY2UgKnZk
ZXYpCiAJcmV0dXJuIHZwX21vZGVybl9nZW5lcmF0aW9uKCZ2cF9kZXYtPm1kZXYpOwogfQogCi0v
KgotICogdnBfbW9kZXJuX2dldF9zdGF0dXMgLSBnZXQgdGhlIGRldmljZSBzdGF0dXMKLSAqIEBt
ZGV2OiB0aGUgbW9kZXJuIHZpcnRpby1wY2kgZGV2aWNlCi0gKgotICogUmV0dXJucyB0aGUgc3Rh
dHVzIHJlYWQgZnJvbSBkZXZpY2UKLSAqLwotc3RhdGljIHU4IHZwX21vZGVybl9nZXRfc3RhdHVz
KHN0cnVjdCB2aXJ0aW9fcGNpX21vZGVybl9kZXZpY2UgKm1kZXYpCi17Ci0Jc3RydWN0IHZpcnRp
b19wY2lfY29tbW9uX2NmZyBfX2lvbWVtICpjZmcgPSBtZGV2LT5jb21tb247Ci0KLQlyZXR1cm4g
dnBfaW9yZWFkOCgmY2ZnLT5kZXZpY2Vfc3RhdHVzKTsKLX0KLQogLyogY29uZmlnLT57Z2V0LHNl
dH1fc3RhdHVzKCkgaW1wbGVtZW50YXRpb25zICovCiBzdGF0aWMgdTggdnBfZ2V0X3N0YXR1cyhz
dHJ1Y3QgdmlydGlvX2RldmljZSAqdmRldikKIHsKQEAgLTQ3MCwxOSArMTQ5LDYgQEAgc3RhdGlj
IHU4IHZwX2dldF9zdGF0dXMoc3RydWN0IHZpcnRpb19kZXZpY2UgKnZkZXYpCiAJcmV0dXJuIHZw
X21vZGVybl9nZXRfc3RhdHVzKCZ2cF9kZXYtPm1kZXYpOwogfQogCi0vKgotICogdnBfbW9kZXJu
X3NldF9zdGF0dXMgLSBzZXQgc3RhdHVzIHRvIGRldmljZQotICogQG1kZXY6IHRoZSBtb2Rlcm4g
dmlydGlvLXBjaSBkZXZpY2UKLSAqIEBzdGF0dXM6IHRoZSBzdGF0dXMgc2V0IHRvIGRldmljZQot
ICovCi1zdGF0aWMgdm9pZCB2cF9tb2Rlcm5fc2V0X3N0YXR1cyhzdHJ1Y3QgdmlydGlvX3BjaV9t
b2Rlcm5fZGV2aWNlICptZGV2LAotCQkJCSB1OCBzdGF0dXMpCi17Ci0Jc3RydWN0IHZpcnRpb19w
Y2lfY29tbW9uX2NmZyBfX2lvbWVtICpjZmcgPSBtZGV2LT5jb21tb247Ci0KLQl2cF9pb3dyaXRl
OChzdGF0dXMsICZjZmctPmRldmljZV9zdGF0dXMpOwotfQotCiBzdGF0aWMgdm9pZCB2cF9zZXRf
c3RhdHVzKHN0cnVjdCB2aXJ0aW9fZGV2aWNlICp2ZGV2LCB1OCBzdGF0dXMpCiB7CiAJc3RydWN0
IHZpcnRpb19wY2lfZGV2aWNlICp2cF9kZXYgPSB0b192cF9kZXZpY2UodmRldik7CkBAIC01MTAs
MjUgKzE3Niw2IEBAIHN0YXRpYyB2b2lkIHZwX3Jlc2V0KHN0cnVjdCB2aXJ0aW9fZGV2aWNlICp2
ZGV2KQogCXZwX3N5bmNocm9uaXplX3ZlY3RvcnModmRldik7CiB9CiAKLS8qCi0gKiB2cF9tb2Rl
cm5fY29uZmlnX3ZlY3RvciAtIHNldCB0aGUgdmVjdG9yIGZvciBjb25maWcgaW50ZXJydXB0Ci0g
KiBAbWRldjogdGhlIG1vZGVybiB2aXJ0aW8tcGNpIGRldmljZQotICogQHZlY3RvcjogdGhlIGNv
bmZpZyB2ZWN0b3IKLSAqCi0gKiBSZXR1cm5zIHRoZSBjb25maWcgdmVjdG9yIHJlYWQgZnJvbSB0
aGUgZGV2aWNlCi0gKi8KLXN0YXRpYyB1MTYgdnBfbW9kZXJuX2NvbmZpZ192ZWN0b3Ioc3RydWN0
IHZpcnRpb19wY2lfbW9kZXJuX2RldmljZSAqbWRldiwKLQkJCQkgICB1MTYgdmVjdG9yKQotewot
CXN0cnVjdCB2aXJ0aW9fcGNpX2NvbW1vbl9jZmcgX19pb21lbSAqY2ZnID0gbWRldi0+Y29tbW9u
OwotCi0JLyogU2V0dXAgdGhlIHZlY3RvciB1c2VkIGZvciBjb25maWd1cmF0aW9uIGV2ZW50cyAq
LwotCXZwX2lvd3JpdGUxNih2ZWN0b3IsICZjZmctPm1zaXhfY29uZmlnKTsKLQkvKiBWZXJpZnkg
d2UgaGFkIGVub3VnaCByZXNvdXJjZXMgdG8gYXNzaWduIHRoZSB2ZWN0b3IgKi8KLQkvKiBXaWxs
IGFsc28gZmx1c2ggdGhlIHdyaXRlIG91dCB0byBkZXZpY2UgKi8KLQlyZXR1cm4gdnBfaW9yZWFk
MTYoJmNmZy0+bXNpeF9jb25maWcpOwotfQotCiBzdGF0aWMgdTE2IHZwX2NvbmZpZ192ZWN0b3Io
c3RydWN0IHZpcnRpb19wY2lfZGV2aWNlICp2cF9kZXYsIHUxNiB2ZWN0b3IpCiB7CiAJcmV0dXJu
IHZwX21vZGVybl9jb25maWdfdmVjdG9yKCZ2cF9kZXYtPm1kZXYsIHZlY3Rvcik7CkBAIC03ODks
MjUzICs0MzYsNiBAQCBzdGF0aWMgY29uc3Qgc3RydWN0IHZpcnRpb19jb25maWdfb3BzIHZpcnRp
b19wY2lfY29uZmlnX29wcyA9IHsKIAkuZ2V0X3NobV9yZWdpb24gID0gdnBfZ2V0X3NobV9yZWdp
b24sCiB9OwogCi0vKioKLSAqIHZpcnRpb19wY2lfZmluZF9jYXBhYmlsaXR5IC0gd2FsayBjYXBh
YmlsaXRpZXMgdG8gZmluZCBkZXZpY2UgaW5mby4KLSAqIEBkZXY6IHRoZSBwY2kgZGV2aWNlCi0g
KiBAY2ZnX3R5cGU6IHRoZSBWSVJUSU9fUENJX0NBUF8qIHZhbHVlIHdlIHNlZWsKLSAqIEBpb3Jl
c291cmNlX3R5cGVzOiBJT1JFU09VUkNFX01FTSBhbmQvb3IgSU9SRVNPVVJDRV9JTy4KLSAqIEBi
YXJzOiB0aGUgYml0bWFzayBvZiBCQVJzCi0gKgotICogUmV0dXJucyBvZmZzZXQgb2YgdGhlIGNh
cGFiaWxpdHksIG9yIDAuCi0gKi8KLXN0YXRpYyBpbmxpbmUgaW50IHZpcnRpb19wY2lfZmluZF9j
YXBhYmlsaXR5KHN0cnVjdCBwY2lfZGV2ICpkZXYsIHU4IGNmZ190eXBlLAotCQkJCQkgICAgIHUz
MiBpb3Jlc291cmNlX3R5cGVzLCBpbnQgKmJhcnMpCi17Ci0JaW50IHBvczsKLQotCWZvciAocG9z
ID0gcGNpX2ZpbmRfY2FwYWJpbGl0eShkZXYsIFBDSV9DQVBfSURfVk5EUik7Ci0JICAgICBwb3Mg
PiAwOwotCSAgICAgcG9zID0gcGNpX2ZpbmRfbmV4dF9jYXBhYmlsaXR5KGRldiwgcG9zLCBQQ0lf
Q0FQX0lEX1ZORFIpKSB7Ci0JCXU4IHR5cGUsIGJhcjsKLQkJcGNpX3JlYWRfY29uZmlnX2J5dGUo
ZGV2LCBwb3MgKyBvZmZzZXRvZihzdHJ1Y3QgdmlydGlvX3BjaV9jYXAsCi0JCQkJCQkJIGNmZ190
eXBlKSwKLQkJCQkgICAgICZ0eXBlKTsKLQkJcGNpX3JlYWRfY29uZmlnX2J5dGUoZGV2LCBwb3Mg
KyBvZmZzZXRvZihzdHJ1Y3QgdmlydGlvX3BjaV9jYXAsCi0JCQkJCQkJIGJhciksCi0JCQkJICAg
ICAmYmFyKTsKLQotCQkvKiBJZ25vcmUgc3RydWN0dXJlcyB3aXRoIHJlc2VydmVkIEJBUiB2YWx1
ZXMgKi8KLQkJaWYgKGJhciA+IDB4NSkKLQkJCWNvbnRpbnVlOwotCi0JCWlmICh0eXBlID09IGNm
Z190eXBlKSB7Ci0JCQlpZiAocGNpX3Jlc291cmNlX2xlbihkZXYsIGJhcikgJiYKLQkJCSAgICBw
Y2lfcmVzb3VyY2VfZmxhZ3MoZGV2LCBiYXIpICYgaW9yZXNvdXJjZV90eXBlcykgewotCQkJCSpi
YXJzIHw9ICgxIDw8IGJhcik7Ci0JCQkJcmV0dXJuIHBvczsKLQkJCX0KLQkJfQotCX0KLQlyZXR1
cm4gMDsKLX0KLQotLyogVGhpcyBpcyBwYXJ0IG9mIHRoZSBBQkkuICBEb24ndCBzY3JldyB3aXRo
IGl0LiAqLwotc3RhdGljIGlubGluZSB2b2lkIGNoZWNrX29mZnNldHModm9pZCkKLXsKLQkvKiBO
b3RlOiBkaXNrIHNwYWNlIHdhcyBoYXJtZWQgaW4gY29tcGlsYXRpb24gb2YgdGhpcyBmdW5jdGlv
bi4gKi8KLQlCVUlMRF9CVUdfT04oVklSVElPX1BDSV9DQVBfVk5EUiAhPQotCQkgICAgIG9mZnNl
dG9mKHN0cnVjdCB2aXJ0aW9fcGNpX2NhcCwgY2FwX3ZuZHIpKTsKLQlCVUlMRF9CVUdfT04oVklS
VElPX1BDSV9DQVBfTkVYVCAhPQotCQkgICAgIG9mZnNldG9mKHN0cnVjdCB2aXJ0aW9fcGNpX2Nh
cCwgY2FwX25leHQpKTsKLQlCVUlMRF9CVUdfT04oVklSVElPX1BDSV9DQVBfTEVOICE9Ci0JCSAg
ICAgb2Zmc2V0b2Yoc3RydWN0IHZpcnRpb19wY2lfY2FwLCBjYXBfbGVuKSk7Ci0JQlVJTERfQlVH
X09OKFZJUlRJT19QQ0lfQ0FQX0NGR19UWVBFICE9Ci0JCSAgICAgb2Zmc2V0b2Yoc3RydWN0IHZp
cnRpb19wY2lfY2FwLCBjZmdfdHlwZSkpOwotCUJVSUxEX0JVR19PTihWSVJUSU9fUENJX0NBUF9C
QVIgIT0KLQkJICAgICBvZmZzZXRvZihzdHJ1Y3QgdmlydGlvX3BjaV9jYXAsIGJhcikpOwotCUJV
SUxEX0JVR19PTihWSVJUSU9fUENJX0NBUF9PRkZTRVQgIT0KLQkJICAgICBvZmZzZXRvZihzdHJ1
Y3QgdmlydGlvX3BjaV9jYXAsIG9mZnNldCkpOwotCUJVSUxEX0JVR19PTihWSVJUSU9fUENJX0NB
UF9MRU5HVEggIT0KLQkJICAgICBvZmZzZXRvZihzdHJ1Y3QgdmlydGlvX3BjaV9jYXAsIGxlbmd0
aCkpOwotCUJVSUxEX0JVR19PTihWSVJUSU9fUENJX05PVElGWV9DQVBfTVVMVCAhPQotCQkgICAg
IG9mZnNldG9mKHN0cnVjdCB2aXJ0aW9fcGNpX25vdGlmeV9jYXAsCi0JCQkgICAgICBub3RpZnlf
b2ZmX211bHRpcGxpZXIpKTsKLQlCVUlMRF9CVUdfT04oVklSVElPX1BDSV9DT01NT05fREZTRUxF
Q1QgIT0KLQkJICAgICBvZmZzZXRvZihzdHJ1Y3QgdmlydGlvX3BjaV9jb21tb25fY2ZnLAotCQkJ
ICAgICAgZGV2aWNlX2ZlYXR1cmVfc2VsZWN0KSk7Ci0JQlVJTERfQlVHX09OKFZJUlRJT19QQ0lf
Q09NTU9OX0RGICE9Ci0JCSAgICAgb2Zmc2V0b2Yoc3RydWN0IHZpcnRpb19wY2lfY29tbW9uX2Nm
ZywgZGV2aWNlX2ZlYXR1cmUpKTsKLQlCVUlMRF9CVUdfT04oVklSVElPX1BDSV9DT01NT05fR0ZT
RUxFQ1QgIT0KLQkJICAgICBvZmZzZXRvZihzdHJ1Y3QgdmlydGlvX3BjaV9jb21tb25fY2ZnLAot
CQkJICAgICAgZ3Vlc3RfZmVhdHVyZV9zZWxlY3QpKTsKLQlCVUlMRF9CVUdfT04oVklSVElPX1BD
SV9DT01NT05fR0YgIT0KLQkJICAgICBvZmZzZXRvZihzdHJ1Y3QgdmlydGlvX3BjaV9jb21tb25f
Y2ZnLCBndWVzdF9mZWF0dXJlKSk7Ci0JQlVJTERfQlVHX09OKFZJUlRJT19QQ0lfQ09NTU9OX01T
SVggIT0KLQkJICAgICBvZmZzZXRvZihzdHJ1Y3QgdmlydGlvX3BjaV9jb21tb25fY2ZnLCBtc2l4
X2NvbmZpZykpOwotCUJVSUxEX0JVR19PTihWSVJUSU9fUENJX0NPTU1PTl9OVU1RICE9Ci0JCSAg
ICAgb2Zmc2V0b2Yoc3RydWN0IHZpcnRpb19wY2lfY29tbW9uX2NmZywgbnVtX3F1ZXVlcykpOwot
CUJVSUxEX0JVR19PTihWSVJUSU9fUENJX0NPTU1PTl9TVEFUVVMgIT0KLQkJICAgICBvZmZzZXRv
ZihzdHJ1Y3QgdmlydGlvX3BjaV9jb21tb25fY2ZnLCBkZXZpY2Vfc3RhdHVzKSk7Ci0JQlVJTERf
QlVHX09OKFZJUlRJT19QQ0lfQ09NTU9OX0NGR0dFTkVSQVRJT04gIT0KLQkJICAgICBvZmZzZXRv
ZihzdHJ1Y3QgdmlydGlvX3BjaV9jb21tb25fY2ZnLCBjb25maWdfZ2VuZXJhdGlvbikpOwotCUJV
SUxEX0JVR19PTihWSVJUSU9fUENJX0NPTU1PTl9RX1NFTEVDVCAhPQotCQkgICAgIG9mZnNldG9m
KHN0cnVjdCB2aXJ0aW9fcGNpX2NvbW1vbl9jZmcsIHF1ZXVlX3NlbGVjdCkpOwotCUJVSUxEX0JV
R19PTihWSVJUSU9fUENJX0NPTU1PTl9RX1NJWkUgIT0KLQkJICAgICBvZmZzZXRvZihzdHJ1Y3Qg
dmlydGlvX3BjaV9jb21tb25fY2ZnLCBxdWV1ZV9zaXplKSk7Ci0JQlVJTERfQlVHX09OKFZJUlRJ
T19QQ0lfQ09NTU9OX1FfTVNJWCAhPQotCQkgICAgIG9mZnNldG9mKHN0cnVjdCB2aXJ0aW9fcGNp
X2NvbW1vbl9jZmcsIHF1ZXVlX21zaXhfdmVjdG9yKSk7Ci0JQlVJTERfQlVHX09OKFZJUlRJT19Q
Q0lfQ09NTU9OX1FfRU5BQkxFICE9Ci0JCSAgICAgb2Zmc2V0b2Yoc3RydWN0IHZpcnRpb19wY2lf
Y29tbW9uX2NmZywgcXVldWVfZW5hYmxlKSk7Ci0JQlVJTERfQlVHX09OKFZJUlRJT19QQ0lfQ09N
TU9OX1FfTk9GRiAhPQotCQkgICAgIG9mZnNldG9mKHN0cnVjdCB2aXJ0aW9fcGNpX2NvbW1vbl9j
ZmcsIHF1ZXVlX25vdGlmeV9vZmYpKTsKLQlCVUlMRF9CVUdfT04oVklSVElPX1BDSV9DT01NT05f
UV9ERVNDTE8gIT0KLQkJICAgICBvZmZzZXRvZihzdHJ1Y3QgdmlydGlvX3BjaV9jb21tb25fY2Zn
LCBxdWV1ZV9kZXNjX2xvKSk7Ci0JQlVJTERfQlVHX09OKFZJUlRJT19QQ0lfQ09NTU9OX1FfREVT
Q0hJICE9Ci0JCSAgICAgb2Zmc2V0b2Yoc3RydWN0IHZpcnRpb19wY2lfY29tbW9uX2NmZywgcXVl
dWVfZGVzY19oaSkpOwotCUJVSUxEX0JVR19PTihWSVJUSU9fUENJX0NPTU1PTl9RX0FWQUlMTE8g
IT0KLQkJICAgICBvZmZzZXRvZihzdHJ1Y3QgdmlydGlvX3BjaV9jb21tb25fY2ZnLCBxdWV1ZV9h
dmFpbF9sbykpOwotCUJVSUxEX0JVR19PTihWSVJUSU9fUENJX0NPTU1PTl9RX0FWQUlMSEkgIT0K
LQkJICAgICBvZmZzZXRvZihzdHJ1Y3QgdmlydGlvX3BjaV9jb21tb25fY2ZnLCBxdWV1ZV9hdmFp
bF9oaSkpOwotCUJVSUxEX0JVR19PTihWSVJUSU9fUENJX0NPTU1PTl9RX1VTRURMTyAhPQotCQkg
ICAgIG9mZnNldG9mKHN0cnVjdCB2aXJ0aW9fcGNpX2NvbW1vbl9jZmcsIHF1ZXVlX3VzZWRfbG8p
KTsKLQlCVUlMRF9CVUdfT04oVklSVElPX1BDSV9DT01NT05fUV9VU0VESEkgIT0KLQkJICAgICBv
ZmZzZXRvZihzdHJ1Y3QgdmlydGlvX3BjaV9jb21tb25fY2ZnLCBxdWV1ZV91c2VkX2hpKSk7Ci19
Ci0KLS8qCi0gKiB2cF9tb2Rlcm5fcHJvYmU6IHByb2JlIHRoZSBtb2Rlcm4gdmlydGlvIHBjaSBk
ZXZpY2UsIG5vdGUgdGhhdCB0aGUKLSAqIGNhbGxlciBpcyByZXF1aXJlZCB0byBlbmFibGUgUENJ
IGRldmljZSBiZWZvcmUgY2FsbGluZyB0aGlzIGZ1bmN0aW9uLgotICogQG1kZXY6IHRoZSBtb2Rl
cm4gdmlydGlvLXBjaSBkZXZpY2UKLSAqCi0gKiBSZXR1cm4gMCBvbiBzdWNjZWVkIG90aGVyd2lz
ZSBmYWlsCi0gKi8KLXN0YXRpYyBpbnQgdnBfbW9kZXJuX3Byb2JlKHN0cnVjdCB2aXJ0aW9fcGNp
X21vZGVybl9kZXZpY2UgKm1kZXYpCi17Ci0Jc3RydWN0IHBjaV9kZXYgKnBjaV9kZXYgPSBtZGV2
LT5wY2lfZGV2OwotCWludCBlcnIsIGNvbW1vbiwgaXNyLCBub3RpZnksIGRldmljZTsKLQl1MzIg
bm90aWZ5X2xlbmd0aDsKLQl1MzIgbm90aWZ5X29mZnNldDsKLQotCWNoZWNrX29mZnNldHMoKTsK
LQotCW1kZXYtPnBjaV9kZXYgPSBwY2lfZGV2OwotCi0JLyogV2Ugb25seSBvd24gZGV2aWNlcyA+
PSAweDEwMDAgYW5kIDw9IDB4MTA3ZjogbGVhdmUgdGhlIHJlc3QuICovCi0JaWYgKHBjaV9kZXYt
PmRldmljZSA8IDB4MTAwMCB8fCBwY2lfZGV2LT5kZXZpY2UgPiAweDEwN2YpCi0JCXJldHVybiAt
RU5PREVWOwotCi0JaWYgKHBjaV9kZXYtPmRldmljZSA8IDB4MTA0MCkgewotCQkvKiBUcmFuc2l0
aW9uYWwgZGV2aWNlczogdXNlIHRoZSBQQ0kgc3Vic3lzdGVtIGRldmljZSBpZCBhcwotCQkgKiB2
aXJ0aW8gZGV2aWNlIGlkLCBzYW1lIGFzIGxlZ2FjeSBkcml2ZXIgYWx3YXlzIGRpZC4KLQkJICov
Ci0JCW1kZXYtPmlkLmRldmljZSA9IHBjaV9kZXYtPnN1YnN5c3RlbV9kZXZpY2U7Ci0JfSBlbHNl
IHsKLQkJLyogTW9kZXJuIGRldmljZXM6IHNpbXBseSB1c2UgUENJIGRldmljZSBpZCwgYnV0IHN0
YXJ0IGZyb20gMHgxMDQwLiAqLwotCQltZGV2LT5pZC5kZXZpY2UgPSBwY2lfZGV2LT5kZXZpY2Ug
LSAweDEwNDA7Ci0JfQotCW1kZXYtPmlkLnZlbmRvciA9IHBjaV9kZXYtPnN1YnN5c3RlbV92ZW5k
b3I7Ci0KLQkvKiBjaGVjayBmb3IgYSBjb21tb24gY29uZmlnOiBpZiBub3QsIHVzZSBsZWdhY3kg
bW9kZSAoYmFyIDApLiAqLwotCWNvbW1vbiA9IHZpcnRpb19wY2lfZmluZF9jYXBhYmlsaXR5KHBj
aV9kZXYsIFZJUlRJT19QQ0lfQ0FQX0NPTU1PTl9DRkcsCi0JCQkJCSAgICBJT1JFU09VUkNFX0lP
IHwgSU9SRVNPVVJDRV9NRU0sCi0JCQkJCSAgICAmbWRldi0+bW9kZXJuX2JhcnMpOwotCWlmICgh
Y29tbW9uKSB7Ci0JCWRldl9pbmZvKCZwY2lfZGV2LT5kZXYsCi0JCQkgInZpcnRpb19wY2k6IGxl
YXZpbmcgZm9yIGxlZ2FjeSBkcml2ZXJcbiIpOwotCQlyZXR1cm4gLUVOT0RFVjsKLQl9Ci0KLQkv
KiBJZiBjb21tb24gaXMgdGhlcmUsIHRoZXNlIHNob3VsZCBiZSB0b28uLi4gKi8KLQlpc3IgPSB2
aXJ0aW9fcGNpX2ZpbmRfY2FwYWJpbGl0eShwY2lfZGV2LCBWSVJUSU9fUENJX0NBUF9JU1JfQ0ZH
LAotCQkJCQkgSU9SRVNPVVJDRV9JTyB8IElPUkVTT1VSQ0VfTUVNLAotCQkJCQkgJm1kZXYtPm1v
ZGVybl9iYXJzKTsKLQlub3RpZnkgPSB2aXJ0aW9fcGNpX2ZpbmRfY2FwYWJpbGl0eShwY2lfZGV2
LCBWSVJUSU9fUENJX0NBUF9OT1RJRllfQ0ZHLAotCQkJCQkgICAgSU9SRVNPVVJDRV9JTyB8IElP
UkVTT1VSQ0VfTUVNLAotCQkJCQkgICAgJm1kZXYtPm1vZGVybl9iYXJzKTsKLQlpZiAoIWlzciB8
fCAhbm90aWZ5KSB7Ci0JCWRldl9lcnIoJnBjaV9kZXYtPmRldiwKLQkJCSJ2aXJ0aW9fcGNpOiBt
aXNzaW5nIGNhcGFiaWxpdGllcyAlaS8laS8laVxuIiwKLQkJCWNvbW1vbiwgaXNyLCBub3RpZnkp
OwotCQlyZXR1cm4gLUVJTlZBTDsKLQl9Ci0KLQllcnIgPSBkbWFfc2V0X21hc2tfYW5kX2NvaGVy
ZW50KCZwY2lfZGV2LT5kZXYsIERNQV9CSVRfTUFTSyg2NCkpOwotCWlmIChlcnIpCi0JCWVyciA9
IGRtYV9zZXRfbWFza19hbmRfY29oZXJlbnQoJnBjaV9kZXYtPmRldiwKLQkJCQkJCURNQV9CSVRf
TUFTSygzMikpOwotCWlmIChlcnIpCi0JCWRldl93YXJuKCZwY2lfZGV2LT5kZXYsICJGYWlsZWQg
dG8gZW5hYmxlIDY0LWJpdCBvciAzMi1iaXQgRE1BLiAgVHJ5aW5nIHRvIGNvbnRpbnVlLCBidXQg
dGhpcyBtaWdodCBub3Qgd29yay5cbiIpOwotCi0JLyogRGV2aWNlIGNhcGFiaWxpdHkgaXMgb25s
eSBtYW5kYXRvcnkgZm9yIGRldmljZXMgdGhhdCBoYXZlCi0JICogZGV2aWNlLXNwZWNpZmljIGNv
bmZpZ3VyYXRpb24uCi0JICovCi0JZGV2aWNlID0gdmlydGlvX3BjaV9maW5kX2NhcGFiaWxpdHko
cGNpX2RldiwgVklSVElPX1BDSV9DQVBfREVWSUNFX0NGRywKLQkJCQkJICAgIElPUkVTT1VSQ0Vf
SU8gfCBJT1JFU09VUkNFX01FTSwKLQkJCQkJICAgICZtZGV2LT5tb2Rlcm5fYmFycyk7Ci0KLQll
cnIgPSBwY2lfcmVxdWVzdF9zZWxlY3RlZF9yZWdpb25zKHBjaV9kZXYsIG1kZXYtPm1vZGVybl9i
YXJzLAotCQkJCQkgICAidmlydGlvLXBjaS1tb2Rlcm4iKTsKLQlpZiAoZXJyKQotCQlyZXR1cm4g
ZXJyOwotCi0JZXJyID0gLUVJTlZBTDsKLQltZGV2LT5jb21tb24gPSB2cF9tb2Rlcm5fbWFwX2Nh
cGFiaWxpdHkobWRldiwgY29tbW9uLAotCQkJCSAgICAgIHNpemVvZihzdHJ1Y3QgdmlydGlvX3Bj
aV9jb21tb25fY2ZnKSwgNCwKLQkJCQkgICAgICAwLCBzaXplb2Yoc3RydWN0IHZpcnRpb19wY2lf
Y29tbW9uX2NmZyksCi0JCQkJICAgICAgTlVMTCk7Ci0JaWYgKCFtZGV2LT5jb21tb24pCi0JCWdv
dG8gZXJyX21hcF9jb21tb247Ci0JbWRldi0+aXNyID0gdnBfbW9kZXJuX21hcF9jYXBhYmlsaXR5
KG1kZXYsIGlzciwgc2l6ZW9mKHU4KSwgMSwKLQkJCQkJICAgICAwLCAxLAotCQkJCQkgICAgIE5V
TEwpOwotCWlmICghbWRldi0+aXNyKQotCQlnb3RvIGVycl9tYXBfaXNyOwotCi0JLyogUmVhZCBu
b3RpZnlfb2ZmX211bHRpcGxpZXIgZnJvbSBjb25maWcgc3BhY2UuICovCi0JcGNpX3JlYWRfY29u
ZmlnX2R3b3JkKHBjaV9kZXYsCi0JCQkgICAgICBub3RpZnkgKyBvZmZzZXRvZihzdHJ1Y3Qgdmly
dGlvX3BjaV9ub3RpZnlfY2FwLAotCQkJCQkJbm90aWZ5X29mZl9tdWx0aXBsaWVyKSwKLQkJCSAg
ICAgICZtZGV2LT5ub3RpZnlfb2Zmc2V0X211bHRpcGxpZXIpOwotCS8qIFJlYWQgbm90aWZ5IGxl
bmd0aCBhbmQgb2Zmc2V0IGZyb20gY29uZmlnIHNwYWNlLiAqLwotCXBjaV9yZWFkX2NvbmZpZ19k
d29yZChwY2lfZGV2LAotCQkJICAgICAgbm90aWZ5ICsgb2Zmc2V0b2Yoc3RydWN0IHZpcnRpb19w
Y2lfbm90aWZ5X2NhcCwKLQkJCQkJCWNhcC5sZW5ndGgpLAotCQkJICAgICAgJm5vdGlmeV9sZW5n
dGgpOwotCi0JcGNpX3JlYWRfY29uZmlnX2R3b3JkKHBjaV9kZXYsCi0JCQkgICAgICBub3RpZnkg
KyBvZmZzZXRvZihzdHJ1Y3QgdmlydGlvX3BjaV9ub3RpZnlfY2FwLAotCQkJCQkJY2FwLm9mZnNl
dCksCi0JCQkgICAgICAmbm90aWZ5X29mZnNldCk7Ci0KLQkvKiBXZSBkb24ndCBrbm93IGhvdyBt
YW55IFZRcyB3ZSdsbCBtYXAsIGFoZWFkIG9mIHRoZSB0aW1lLgotCSAqIElmIG5vdGlmeSBsZW5n
dGggaXMgc21hbGwsIG1hcCBpdCBhbGwgbm93LgotCSAqIE90aGVyd2lzZSwgbWFwIGVhY2ggVlEg
aW5kaXZpZHVhbGx5IGxhdGVyLgotCSAqLwotCWlmICgodTY0KW5vdGlmeV9sZW5ndGggKyAobm90
aWZ5X29mZnNldCAlIFBBR0VfU0laRSkgPD0gUEFHRV9TSVpFKSB7Ci0JCW1kZXYtPm5vdGlmeV9i
YXNlID0gdnBfbW9kZXJuX21hcF9jYXBhYmlsaXR5KG1kZXYsIG5vdGlmeSwKLQkJCQkJCQkgICAg
IDIsIDIsCi0JCQkJCQkJICAgICAwLCBub3RpZnlfbGVuZ3RoLAotCQkJCQkJCSAgICAgJm1kZXYt
Pm5vdGlmeV9sZW4pOwotCQlpZiAoIW1kZXYtPm5vdGlmeV9iYXNlKQotCQkJZ290byBlcnJfbWFw
X25vdGlmeTsKLQl9IGVsc2UgewotCQltZGV2LT5ub3RpZnlfbWFwX2NhcCA9IG5vdGlmeTsKLQl9
Ci0KLQkvKiBBZ2Fpbiwgd2UgZG9uJ3Qga25vdyBob3cgbXVjaCB3ZSBzaG91bGQgbWFwLCBidXQg
UEFHRV9TSVpFCi0JICogaXMgbW9yZSB0aGFuIGVub3VnaCBmb3IgYWxsIGV4aXN0aW5nIGRldmlj
ZXMuCi0JICovCi0JaWYgKGRldmljZSkgewotCQltZGV2LT5kZXZpY2UgPSB2cF9tb2Rlcm5fbWFw
X2NhcGFiaWxpdHkobWRldiwgZGV2aWNlLCAwLCA0LAotCQkJCQkJCTAsIFBBR0VfU0laRSwKLQkJ
CQkJCQkmbWRldi0+ZGV2aWNlX2xlbik7Ci0JCWlmICghbWRldi0+ZGV2aWNlKQotCQkJZ290byBl
cnJfbWFwX2RldmljZTsKLQl9Ci0KLQlyZXR1cm4gMDsKLQotZXJyX21hcF9kZXZpY2U6Ci0JaWYg
KG1kZXYtPm5vdGlmeV9iYXNlKQotCQlwY2lfaW91bm1hcChwY2lfZGV2LCBtZGV2LT5ub3RpZnlf
YmFzZSk7Ci1lcnJfbWFwX25vdGlmeToKLQlwY2lfaW91bm1hcChwY2lfZGV2LCBtZGV2LT5pc3Ip
OwotZXJyX21hcF9pc3I6Ci0JcGNpX2lvdW5tYXAocGNpX2RldiwgbWRldi0+Y29tbW9uKTsKLWVy
cl9tYXBfY29tbW9uOgotCXJldHVybiBlcnI7Ci19Ci0KIC8qIHRoZSBQQ0kgcHJvYmluZyBmdW5j
dGlvbiAqLwogaW50IHZpcnRpb19wY2lfbW9kZXJuX3Byb2JlKHN0cnVjdCB2aXJ0aW9fcGNpX2Rl
dmljZSAqdnBfZGV2KQogewpAQCAtMTA2MywyMyArNDYzLDYgQEAgaW50IHZpcnRpb19wY2lfbW9k
ZXJuX3Byb2JlKHN0cnVjdCB2aXJ0aW9fcGNpX2RldmljZSAqdnBfZGV2KQogCXJldHVybiAwOwog
fQogCi0vKgotICogdnBfbW9kZXJuX3Byb2JlOiByZW1vdmUgYW5kIGNsZWFudXAgdGhlIG1vZGVy
biB2aXJ0aW8gcGNpIGRldmljZQotICogQG1kZXY6IHRoZSBtb2Rlcm4gdmlydGlvLXBjaSBkZXZp
Y2UKLSAqLwotc3RhdGljIHZvaWQgdnBfbW9kZXJuX3JlbW92ZShzdHJ1Y3QgdmlydGlvX3BjaV9t
b2Rlcm5fZGV2aWNlICptZGV2KQotewotCXN0cnVjdCBwY2lfZGV2ICpwY2lfZGV2ID0gbWRldi0+
cGNpX2RldjsKLQotCWlmIChtZGV2LT5kZXZpY2UpCi0JCXBjaV9pb3VubWFwKHBjaV9kZXYsIG1k
ZXYtPmRldmljZSk7Ci0JaWYgKG1kZXYtPm5vdGlmeV9iYXNlKQotCQlwY2lfaW91bm1hcChwY2lf
ZGV2LCBtZGV2LT5ub3RpZnlfYmFzZSk7Ci0JcGNpX2lvdW5tYXAocGNpX2RldiwgbWRldi0+aXNy
KTsKLQlwY2lfaW91bm1hcChwY2lfZGV2LCBtZGV2LT5jb21tb24pOwotCXBjaV9yZWxlYXNlX3Nl
bGVjdGVkX3JlZ2lvbnMocGNpX2RldiwgbWRldi0+bW9kZXJuX2JhcnMpOwotfQotCiB2b2lkIHZp
cnRpb19wY2lfbW9kZXJuX3JlbW92ZShzdHJ1Y3QgdmlydGlvX3BjaV9kZXZpY2UgKnZwX2RldikK
IHsKIAlzdHJ1Y3QgdmlydGlvX3BjaV9tb2Rlcm5fZGV2aWNlICptZGV2ID0gJnZwX2Rldi0+bWRl
djsKZGlmZiAtLWdpdCBhL2RyaXZlcnMvdmlydGlvL3ZpcnRpb19wY2lfbW9kZXJuX2Rldi5jIGIv
ZHJpdmVycy92aXJ0aW8vdmlydGlvX3BjaV9tb2Rlcm5fZGV2LmMKbmV3IGZpbGUgbW9kZSAxMDA2
NDQKaW5kZXggMDAwMDAwMDAwMDAwLi5jYmQ2Njc0OTZiYjEKLS0tIC9kZXYvbnVsbAorKysgYi9k
cml2ZXJzL3ZpcnRpby92aXJ0aW9fcGNpX21vZGVybl9kZXYuYwpAQCAtMCwwICsxLDU5OSBAQAor
Ly8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjAtb3ItbGF0ZXIKKworI2luY2x1ZGUg
PGxpbnV4L3ZpcnRpb19wY2lfbW9kZXJuLmg+CisjaW5jbHVkZSA8bGludXgvbW9kdWxlLmg+Cisj
aW5jbHVkZSA8bGludXgvcGNpLmg+CisKKy8qCisgKiB2cF9tb2Rlcm5fbWFwX2NhcGFiaWxpdHkg
LSBtYXAgYSBwYXJ0IG9mIHZpcnRpbyBwY2kgY2FwYWJpbGl0eQorICogQG1kZXY6IHRoZSBtb2Rl
cm4gdmlydGlvLXBjaSBkZXZpY2UKKyAqIEBvZmY6IG9mZnNldCBvZiB0aGUgY2FwYWJpbGl0eQor
ICogQG1pbmxlbjogbWluaW1hbCBsZW5ndGggb2YgdGhlIGNhcGFiaWxpdHkKKyAqIEBhbGlnbjog
YWxpZ24gcmVxdWlyZW1lbnQKKyAqIEBzdGFydDogc3RhcnQgZnJvbSB0aGUgY2FwYWJpbGl0eQor
ICogQHNpemU6IG1hcCBzaXplCisgKiBAbGVuOiB0aGUgbGVuZ3RoIHRoYXQgaXMgYWN0dWFsbHkg
bWFwcGVkCisgKgorICogUmV0dXJucyB0aGUgaW8gYWRkcmVzcyBvZiBmb3IgdGhlIHBhcnQgb2Yg
dGhlIGNhcGFiaWxpdHkKKyAqLwordm9pZCBfX2lvbWVtICp2cF9tb2Rlcm5fbWFwX2NhcGFiaWxp
dHkoc3RydWN0IHZpcnRpb19wY2lfbW9kZXJuX2RldmljZSAqbWRldiwgaW50IG9mZiwKKwkJCQkg
ICAgICAgc2l6ZV90IG1pbmxlbiwKKwkJCQkgICAgICAgdTMyIGFsaWduLAorCQkJCSAgICAgICB1
MzIgc3RhcnQsIHUzMiBzaXplLAorCQkJCSAgICAgICBzaXplX3QgKmxlbikKK3sKKwlzdHJ1Y3Qg
cGNpX2RldiAqZGV2ID0gbWRldi0+cGNpX2RldjsKKwl1OCBiYXI7CisJdTMyIG9mZnNldCwgbGVu
Z3RoOworCXZvaWQgX19pb21lbSAqcDsKKworCXBjaV9yZWFkX2NvbmZpZ19ieXRlKGRldiwgb2Zm
ICsgb2Zmc2V0b2Yoc3RydWN0IHZpcnRpb19wY2lfY2FwLAorCQkJCQkJIGJhciksCisJCQkgICAg
ICZiYXIpOworCXBjaV9yZWFkX2NvbmZpZ19kd29yZChkZXYsIG9mZiArIG9mZnNldG9mKHN0cnVj
dCB2aXJ0aW9fcGNpX2NhcCwgb2Zmc2V0KSwKKwkJCSAgICAgJm9mZnNldCk7CisJcGNpX3JlYWRf
Y29uZmlnX2R3b3JkKGRldiwgb2ZmICsgb2Zmc2V0b2Yoc3RydWN0IHZpcnRpb19wY2lfY2FwLCBs
ZW5ndGgpLAorCQkJICAgICAgJmxlbmd0aCk7CisKKwlpZiAobGVuZ3RoIDw9IHN0YXJ0KSB7CisJ
CWRldl9lcnIoJmRldi0+ZGV2LAorCQkJInZpcnRpb19wY2k6IGJhZCBjYXBhYmlsaXR5IGxlbiAl
dSAoPiV1IGV4cGVjdGVkKVxuIiwKKwkJCWxlbmd0aCwgc3RhcnQpOworCQlyZXR1cm4gTlVMTDsK
Kwl9CisKKwlpZiAobGVuZ3RoIC0gc3RhcnQgPCBtaW5sZW4pIHsKKwkJZGV2X2VycigmZGV2LT5k
ZXYsCisJCQkidmlydGlvX3BjaTogYmFkIGNhcGFiaWxpdHkgbGVuICV1ICg+PSV6dSBleHBlY3Rl
ZClcbiIsCisJCQlsZW5ndGgsIG1pbmxlbik7CisJCXJldHVybiBOVUxMOworCX0KKworCWxlbmd0
aCAtPSBzdGFydDsKKworCWlmIChzdGFydCArIG9mZnNldCA8IG9mZnNldCkgeworCQlkZXZfZXJy
KCZkZXYtPmRldiwKKwkJCSJ2aXJ0aW9fcGNpOiBtYXAgd3JhcC1hcm91bmQgJXUrJXVcbiIsCisJ
CQlzdGFydCwgb2Zmc2V0KTsKKwkJcmV0dXJuIE5VTEw7CisJfQorCisJb2Zmc2V0ICs9IHN0YXJ0
OworCisJaWYgKG9mZnNldCAmIChhbGlnbiAtIDEpKSB7CisJCWRldl9lcnIoJmRldi0+ZGV2LAor
CQkJInZpcnRpb19wY2k6IG9mZnNldCAldSBub3QgYWxpZ25lZCB0byAldVxuIiwKKwkJCW9mZnNl
dCwgYWxpZ24pOworCQlyZXR1cm4gTlVMTDsKKwl9CisKKwlpZiAobGVuZ3RoID4gc2l6ZSkKKwkJ
bGVuZ3RoID0gc2l6ZTsKKworCWlmIChsZW4pCisJCSpsZW4gPSBsZW5ndGg7CisKKwlpZiAobWlu
bGVuICsgb2Zmc2V0IDwgbWlubGVuIHx8CisJICAgIG1pbmxlbiArIG9mZnNldCA+IHBjaV9yZXNv
dXJjZV9sZW4oZGV2LCBiYXIpKSB7CisJCWRldl9lcnIoJmRldi0+ZGV2LAorCQkJInZpcnRpb19w
Y2k6IG1hcCB2aXJ0aW8gJXp1QCV1ICIKKwkJCSJvdXQgb2YgcmFuZ2Ugb24gYmFyICVpIGxlbmd0
aCAlbHVcbiIsCisJCQltaW5sZW4sIG9mZnNldCwKKwkJCWJhciwgKHVuc2lnbmVkIGxvbmcpcGNp
X3Jlc291cmNlX2xlbihkZXYsIGJhcikpOworCQlyZXR1cm4gTlVMTDsKKwl9CisKKwlwID0gcGNp
X2lvbWFwX3JhbmdlKGRldiwgYmFyLCBvZmZzZXQsIGxlbmd0aCk7CisJaWYgKCFwKQorCQlkZXZf
ZXJyKCZkZXYtPmRldiwKKwkJCSJ2aXJ0aW9fcGNpOiB1bmFibGUgdG8gbWFwIHZpcnRpbyAldUAl
dSBvbiBiYXIgJWlcbiIsCisJCQlsZW5ndGgsIG9mZnNldCwgYmFyKTsKKwlyZXR1cm4gcDsKK30K
K0VYUE9SVF9TWU1CT0xfR1BMKHZwX21vZGVybl9tYXBfY2FwYWJpbGl0eSk7CisKKy8qKgorICog
dmlydGlvX3BjaV9maW5kX2NhcGFiaWxpdHkgLSB3YWxrIGNhcGFiaWxpdGllcyB0byBmaW5kIGRl
dmljZSBpbmZvLgorICogQGRldjogdGhlIHBjaSBkZXZpY2UKKyAqIEBjZmdfdHlwZTogdGhlIFZJ
UlRJT19QQ0lfQ0FQXyogdmFsdWUgd2Ugc2VlaworICogQGlvcmVzb3VyY2VfdHlwZXM6IElPUkVT
T1VSQ0VfTUVNIGFuZC9vciBJT1JFU09VUkNFX0lPLgorICogQGJhcnM6IHRoZSBiaXRtYXNrIG9m
IEJBUnMKKyAqCisgKiBSZXR1cm5zIG9mZnNldCBvZiB0aGUgY2FwYWJpbGl0eSwgb3IgMC4KKyAq
Lworc3RhdGljIGlubGluZSBpbnQgdmlydGlvX3BjaV9maW5kX2NhcGFiaWxpdHkoc3RydWN0IHBj
aV9kZXYgKmRldiwgdTggY2ZnX3R5cGUsCisJCQkJCSAgICAgdTMyIGlvcmVzb3VyY2VfdHlwZXMs
IGludCAqYmFycykKK3sKKwlpbnQgcG9zOworCisJZm9yIChwb3MgPSBwY2lfZmluZF9jYXBhYmls
aXR5KGRldiwgUENJX0NBUF9JRF9WTkRSKTsKKwkgICAgIHBvcyA+IDA7CisJICAgICBwb3MgPSBw
Y2lfZmluZF9uZXh0X2NhcGFiaWxpdHkoZGV2LCBwb3MsIFBDSV9DQVBfSURfVk5EUikpIHsKKwkJ
dTggdHlwZSwgYmFyOworCQlwY2lfcmVhZF9jb25maWdfYnl0ZShkZXYsIHBvcyArIG9mZnNldG9m
KHN0cnVjdCB2aXJ0aW9fcGNpX2NhcCwKKwkJCQkJCQkgY2ZnX3R5cGUpLAorCQkJCSAgICAgJnR5
cGUpOworCQlwY2lfcmVhZF9jb25maWdfYnl0ZShkZXYsIHBvcyArIG9mZnNldG9mKHN0cnVjdCB2
aXJ0aW9fcGNpX2NhcCwKKwkJCQkJCQkgYmFyKSwKKwkJCQkgICAgICZiYXIpOworCisJCS8qIEln
bm9yZSBzdHJ1Y3R1cmVzIHdpdGggcmVzZXJ2ZWQgQkFSIHZhbHVlcyAqLworCQlpZiAoYmFyID4g
MHg1KQorCQkJY29udGludWU7CisKKwkJaWYgKHR5cGUgPT0gY2ZnX3R5cGUpIHsKKwkJCWlmIChw
Y2lfcmVzb3VyY2VfbGVuKGRldiwgYmFyKSAmJgorCQkJICAgIHBjaV9yZXNvdXJjZV9mbGFncyhk
ZXYsIGJhcikgJiBpb3Jlc291cmNlX3R5cGVzKSB7CisJCQkJKmJhcnMgfD0gKDEgPDwgYmFyKTsK
KwkJCQlyZXR1cm4gcG9zOworCQkJfQorCQl9CisJfQorCXJldHVybiAwOworfQorCisvKiBUaGlz
IGlzIHBhcnQgb2YgdGhlIEFCSS4gIERvbid0IHNjcmV3IHdpdGggaXQuICovCitzdGF0aWMgaW5s
aW5lIHZvaWQgY2hlY2tfb2Zmc2V0cyh2b2lkKQoreworCS8qIE5vdGU6IGRpc2sgc3BhY2Ugd2Fz
IGhhcm1lZCBpbiBjb21waWxhdGlvbiBvZiB0aGlzIGZ1bmN0aW9uLiAqLworCUJVSUxEX0JVR19P
TihWSVJUSU9fUENJX0NBUF9WTkRSICE9CisJCSAgICAgb2Zmc2V0b2Yoc3RydWN0IHZpcnRpb19w
Y2lfY2FwLCBjYXBfdm5kcikpOworCUJVSUxEX0JVR19PTihWSVJUSU9fUENJX0NBUF9ORVhUICE9
CisJCSAgICAgb2Zmc2V0b2Yoc3RydWN0IHZpcnRpb19wY2lfY2FwLCBjYXBfbmV4dCkpOworCUJV
SUxEX0JVR19PTihWSVJUSU9fUENJX0NBUF9MRU4gIT0KKwkJICAgICBvZmZzZXRvZihzdHJ1Y3Qg
dmlydGlvX3BjaV9jYXAsIGNhcF9sZW4pKTsKKwlCVUlMRF9CVUdfT04oVklSVElPX1BDSV9DQVBf
Q0ZHX1RZUEUgIT0KKwkJICAgICBvZmZzZXRvZihzdHJ1Y3QgdmlydGlvX3BjaV9jYXAsIGNmZ190
eXBlKSk7CisJQlVJTERfQlVHX09OKFZJUlRJT19QQ0lfQ0FQX0JBUiAhPQorCQkgICAgIG9mZnNl
dG9mKHN0cnVjdCB2aXJ0aW9fcGNpX2NhcCwgYmFyKSk7CisJQlVJTERfQlVHX09OKFZJUlRJT19Q
Q0lfQ0FQX09GRlNFVCAhPQorCQkgICAgIG9mZnNldG9mKHN0cnVjdCB2aXJ0aW9fcGNpX2NhcCwg
b2Zmc2V0KSk7CisJQlVJTERfQlVHX09OKFZJUlRJT19QQ0lfQ0FQX0xFTkdUSCAhPQorCQkgICAg
IG9mZnNldG9mKHN0cnVjdCB2aXJ0aW9fcGNpX2NhcCwgbGVuZ3RoKSk7CisJQlVJTERfQlVHX09O
KFZJUlRJT19QQ0lfTk9USUZZX0NBUF9NVUxUICE9CisJCSAgICAgb2Zmc2V0b2Yoc3RydWN0IHZp
cnRpb19wY2lfbm90aWZ5X2NhcCwKKwkJCSAgICAgIG5vdGlmeV9vZmZfbXVsdGlwbGllcikpOwor
CUJVSUxEX0JVR19PTihWSVJUSU9fUENJX0NPTU1PTl9ERlNFTEVDVCAhPQorCQkgICAgIG9mZnNl
dG9mKHN0cnVjdCB2aXJ0aW9fcGNpX2NvbW1vbl9jZmcsCisJCQkgICAgICBkZXZpY2VfZmVhdHVy
ZV9zZWxlY3QpKTsKKwlCVUlMRF9CVUdfT04oVklSVElPX1BDSV9DT01NT05fREYgIT0KKwkJICAg
ICBvZmZzZXRvZihzdHJ1Y3QgdmlydGlvX3BjaV9jb21tb25fY2ZnLCBkZXZpY2VfZmVhdHVyZSkp
OworCUJVSUxEX0JVR19PTihWSVJUSU9fUENJX0NPTU1PTl9HRlNFTEVDVCAhPQorCQkgICAgIG9m
ZnNldG9mKHN0cnVjdCB2aXJ0aW9fcGNpX2NvbW1vbl9jZmcsCisJCQkgICAgICBndWVzdF9mZWF0
dXJlX3NlbGVjdCkpOworCUJVSUxEX0JVR19PTihWSVJUSU9fUENJX0NPTU1PTl9HRiAhPQorCQkg
ICAgIG9mZnNldG9mKHN0cnVjdCB2aXJ0aW9fcGNpX2NvbW1vbl9jZmcsIGd1ZXN0X2ZlYXR1cmUp
KTsKKwlCVUlMRF9CVUdfT04oVklSVElPX1BDSV9DT01NT05fTVNJWCAhPQorCQkgICAgIG9mZnNl
dG9mKHN0cnVjdCB2aXJ0aW9fcGNpX2NvbW1vbl9jZmcsIG1zaXhfY29uZmlnKSk7CisJQlVJTERf
QlVHX09OKFZJUlRJT19QQ0lfQ09NTU9OX05VTVEgIT0KKwkJICAgICBvZmZzZXRvZihzdHJ1Y3Qg
dmlydGlvX3BjaV9jb21tb25fY2ZnLCBudW1fcXVldWVzKSk7CisJQlVJTERfQlVHX09OKFZJUlRJ
T19QQ0lfQ09NTU9OX1NUQVRVUyAhPQorCQkgICAgIG9mZnNldG9mKHN0cnVjdCB2aXJ0aW9fcGNp
X2NvbW1vbl9jZmcsIGRldmljZV9zdGF0dXMpKTsKKwlCVUlMRF9CVUdfT04oVklSVElPX1BDSV9D
T01NT05fQ0ZHR0VORVJBVElPTiAhPQorCQkgICAgIG9mZnNldG9mKHN0cnVjdCB2aXJ0aW9fcGNp
X2NvbW1vbl9jZmcsIGNvbmZpZ19nZW5lcmF0aW9uKSk7CisJQlVJTERfQlVHX09OKFZJUlRJT19Q
Q0lfQ09NTU9OX1FfU0VMRUNUICE9CisJCSAgICAgb2Zmc2V0b2Yoc3RydWN0IHZpcnRpb19wY2lf
Y29tbW9uX2NmZywgcXVldWVfc2VsZWN0KSk7CisJQlVJTERfQlVHX09OKFZJUlRJT19QQ0lfQ09N
TU9OX1FfU0laRSAhPQorCQkgICAgIG9mZnNldG9mKHN0cnVjdCB2aXJ0aW9fcGNpX2NvbW1vbl9j
ZmcsIHF1ZXVlX3NpemUpKTsKKwlCVUlMRF9CVUdfT04oVklSVElPX1BDSV9DT01NT05fUV9NU0lY
ICE9CisJCSAgICAgb2Zmc2V0b2Yoc3RydWN0IHZpcnRpb19wY2lfY29tbW9uX2NmZywgcXVldWVf
bXNpeF92ZWN0b3IpKTsKKwlCVUlMRF9CVUdfT04oVklSVElPX1BDSV9DT01NT05fUV9FTkFCTEUg
IT0KKwkJICAgICBvZmZzZXRvZihzdHJ1Y3QgdmlydGlvX3BjaV9jb21tb25fY2ZnLCBxdWV1ZV9l
bmFibGUpKTsKKwlCVUlMRF9CVUdfT04oVklSVElPX1BDSV9DT01NT05fUV9OT0ZGICE9CisJCSAg
ICAgb2Zmc2V0b2Yoc3RydWN0IHZpcnRpb19wY2lfY29tbW9uX2NmZywgcXVldWVfbm90aWZ5X29m
ZikpOworCUJVSUxEX0JVR19PTihWSVJUSU9fUENJX0NPTU1PTl9RX0RFU0NMTyAhPQorCQkgICAg
IG9mZnNldG9mKHN0cnVjdCB2aXJ0aW9fcGNpX2NvbW1vbl9jZmcsIHF1ZXVlX2Rlc2NfbG8pKTsK
KwlCVUlMRF9CVUdfT04oVklSVElPX1BDSV9DT01NT05fUV9ERVNDSEkgIT0KKwkJICAgICBvZmZz
ZXRvZihzdHJ1Y3QgdmlydGlvX3BjaV9jb21tb25fY2ZnLCBxdWV1ZV9kZXNjX2hpKSk7CisJQlVJ
TERfQlVHX09OKFZJUlRJT19QQ0lfQ09NTU9OX1FfQVZBSUxMTyAhPQorCQkgICAgIG9mZnNldG9m
KHN0cnVjdCB2aXJ0aW9fcGNpX2NvbW1vbl9jZmcsIHF1ZXVlX2F2YWlsX2xvKSk7CisJQlVJTERf
QlVHX09OKFZJUlRJT19QQ0lfQ09NTU9OX1FfQVZBSUxISSAhPQorCQkgICAgIG9mZnNldG9mKHN0
cnVjdCB2aXJ0aW9fcGNpX2NvbW1vbl9jZmcsIHF1ZXVlX2F2YWlsX2hpKSk7CisJQlVJTERfQlVH
X09OKFZJUlRJT19QQ0lfQ09NTU9OX1FfVVNFRExPICE9CisJCSAgICAgb2Zmc2V0b2Yoc3RydWN0
IHZpcnRpb19wY2lfY29tbW9uX2NmZywgcXVldWVfdXNlZF9sbykpOworCUJVSUxEX0JVR19PTihW
SVJUSU9fUENJX0NPTU1PTl9RX1VTRURISSAhPQorCQkgICAgIG9mZnNldG9mKHN0cnVjdCB2aXJ0
aW9fcGNpX2NvbW1vbl9jZmcsIHF1ZXVlX3VzZWRfaGkpKTsKK30KKworLyoKKyAqIHZwX21vZGVy
bl9wcm9iZTogcHJvYmUgdGhlIG1vZGVybiB2aXJ0aW8gcGNpIGRldmljZSwgbm90ZSB0aGF0IHRo
ZQorICogY2FsbGVyIGlzIHJlcXVpcmVkIHRvIGVuYWJsZSBQQ0kgZGV2aWNlIGJlZm9yZSBjYWxs
aW5nIHRoaXMgZnVuY3Rpb24uCisgKiBAbWRldjogdGhlIG1vZGVybiB2aXJ0aW8tcGNpIGRldmlj
ZQorICoKKyAqIFJldHVybiAwIG9uIHN1Y2NlZWQgb3RoZXJ3aXNlIGZhaWwKKyAqLworaW50IHZw
X21vZGVybl9wcm9iZShzdHJ1Y3QgdmlydGlvX3BjaV9tb2Rlcm5fZGV2aWNlICptZGV2KQorewor
CXN0cnVjdCBwY2lfZGV2ICpwY2lfZGV2ID0gbWRldi0+cGNpX2RldjsKKwlpbnQgZXJyLCBjb21t
b24sIGlzciwgbm90aWZ5LCBkZXZpY2U7CisJdTMyIG5vdGlmeV9sZW5ndGg7CisJdTMyIG5vdGlm
eV9vZmZzZXQ7CisKKwljaGVja19vZmZzZXRzKCk7CisKKwltZGV2LT5wY2lfZGV2ID0gcGNpX2Rl
djsKKworCS8qIFdlIG9ubHkgb3duIGRldmljZXMgPj0gMHgxMDAwIGFuZCA8PSAweDEwN2Y6IGxl
YXZlIHRoZSByZXN0LiAqLworCWlmIChwY2lfZGV2LT5kZXZpY2UgPCAweDEwMDAgfHwgcGNpX2Rl
di0+ZGV2aWNlID4gMHgxMDdmKQorCQlyZXR1cm4gLUVOT0RFVjsKKworCWlmIChwY2lfZGV2LT5k
ZXZpY2UgPCAweDEwNDApIHsKKwkJLyogVHJhbnNpdGlvbmFsIGRldmljZXM6IHVzZSB0aGUgUENJ
IHN1YnN5c3RlbSBkZXZpY2UgaWQgYXMKKwkJICogdmlydGlvIGRldmljZSBpZCwgc2FtZSBhcyBs
ZWdhY3kgZHJpdmVyIGFsd2F5cyBkaWQuCisJCSAqLworCQltZGV2LT5pZC5kZXZpY2UgPSBwY2lf
ZGV2LT5zdWJzeXN0ZW1fZGV2aWNlOworCX0gZWxzZSB7CisJCS8qIE1vZGVybiBkZXZpY2VzOiBz
aW1wbHkgdXNlIFBDSSBkZXZpY2UgaWQsIGJ1dCBzdGFydCBmcm9tIDB4MTA0MC4gKi8KKwkJbWRl
di0+aWQuZGV2aWNlID0gcGNpX2Rldi0+ZGV2aWNlIC0gMHgxMDQwOworCX0KKwltZGV2LT5pZC52
ZW5kb3IgPSBwY2lfZGV2LT5zdWJzeXN0ZW1fdmVuZG9yOworCisJLyogY2hlY2sgZm9yIGEgY29t
bW9uIGNvbmZpZzogaWYgbm90LCB1c2UgbGVnYWN5IG1vZGUgKGJhciAwKS4gKi8KKwljb21tb24g
PSB2aXJ0aW9fcGNpX2ZpbmRfY2FwYWJpbGl0eShwY2lfZGV2LCBWSVJUSU9fUENJX0NBUF9DT01N
T05fQ0ZHLAorCQkJCQkgICAgSU9SRVNPVVJDRV9JTyB8IElPUkVTT1VSQ0VfTUVNLAorCQkJCQkg
ICAgJm1kZXYtPm1vZGVybl9iYXJzKTsKKwlpZiAoIWNvbW1vbikgeworCQlkZXZfaW5mbygmcGNp
X2Rldi0+ZGV2LAorCQkJICJ2aXJ0aW9fcGNpOiBsZWF2aW5nIGZvciBsZWdhY3kgZHJpdmVyXG4i
KTsKKwkJcmV0dXJuIC1FTk9ERVY7CisJfQorCisJLyogSWYgY29tbW9uIGlzIHRoZXJlLCB0aGVz
ZSBzaG91bGQgYmUgdG9vLi4uICovCisJaXNyID0gdmlydGlvX3BjaV9maW5kX2NhcGFiaWxpdHko
cGNpX2RldiwgVklSVElPX1BDSV9DQVBfSVNSX0NGRywKKwkJCQkJIElPUkVTT1VSQ0VfSU8gfCBJ
T1JFU09VUkNFX01FTSwKKwkJCQkJICZtZGV2LT5tb2Rlcm5fYmFycyk7CisJbm90aWZ5ID0gdmly
dGlvX3BjaV9maW5kX2NhcGFiaWxpdHkocGNpX2RldiwgVklSVElPX1BDSV9DQVBfTk9USUZZX0NG
RywKKwkJCQkJICAgIElPUkVTT1VSQ0VfSU8gfCBJT1JFU09VUkNFX01FTSwKKwkJCQkJICAgICZt
ZGV2LT5tb2Rlcm5fYmFycyk7CisJaWYgKCFpc3IgfHwgIW5vdGlmeSkgeworCQlkZXZfZXJyKCZw
Y2lfZGV2LT5kZXYsCisJCQkidmlydGlvX3BjaTogbWlzc2luZyBjYXBhYmlsaXRpZXMgJWkvJWkv
JWlcbiIsCisJCQljb21tb24sIGlzciwgbm90aWZ5KTsKKwkJcmV0dXJuIC1FSU5WQUw7CisJfQor
CisJZXJyID0gZG1hX3NldF9tYXNrX2FuZF9jb2hlcmVudCgmcGNpX2Rldi0+ZGV2LCBETUFfQklU
X01BU0soNjQpKTsKKwlpZiAoZXJyKQorCQllcnIgPSBkbWFfc2V0X21hc2tfYW5kX2NvaGVyZW50
KCZwY2lfZGV2LT5kZXYsCisJCQkJCQlETUFfQklUX01BU0soMzIpKTsKKwlpZiAoZXJyKQorCQlk
ZXZfd2FybigmcGNpX2Rldi0+ZGV2LCAiRmFpbGVkIHRvIGVuYWJsZSA2NC1iaXQgb3IgMzItYml0
IERNQS4gIFRyeWluZyB0byBjb250aW51ZSwgYnV0IHRoaXMgbWlnaHQgbm90IHdvcmsuXG4iKTsK
KworCS8qIERldmljZSBjYXBhYmlsaXR5IGlzIG9ubHkgbWFuZGF0b3J5IGZvciBkZXZpY2VzIHRo
YXQgaGF2ZQorCSAqIGRldmljZS1zcGVjaWZpYyBjb25maWd1cmF0aW9uLgorCSAqLworCWRldmlj
ZSA9IHZpcnRpb19wY2lfZmluZF9jYXBhYmlsaXR5KHBjaV9kZXYsIFZJUlRJT19QQ0lfQ0FQX0RF
VklDRV9DRkcsCisJCQkJCSAgICBJT1JFU09VUkNFX0lPIHwgSU9SRVNPVVJDRV9NRU0sCisJCQkJ
CSAgICAmbWRldi0+bW9kZXJuX2JhcnMpOworCisJZXJyID0gcGNpX3JlcXVlc3Rfc2VsZWN0ZWRf
cmVnaW9ucyhwY2lfZGV2LCBtZGV2LT5tb2Rlcm5fYmFycywKKwkJCQkJICAgInZpcnRpby1wY2kt
bW9kZXJuIik7CisJaWYgKGVycikKKwkJcmV0dXJuIGVycjsKKworCWVyciA9IC1FSU5WQUw7CisJ
bWRldi0+Y29tbW9uID0gdnBfbW9kZXJuX21hcF9jYXBhYmlsaXR5KG1kZXYsIGNvbW1vbiwKKwkJ
CQkgICAgICBzaXplb2Yoc3RydWN0IHZpcnRpb19wY2lfY29tbW9uX2NmZyksIDQsCisJCQkJICAg
ICAgMCwgc2l6ZW9mKHN0cnVjdCB2aXJ0aW9fcGNpX2NvbW1vbl9jZmcpLAorCQkJCSAgICAgIE5V
TEwpOworCWlmICghbWRldi0+Y29tbW9uKQorCQlnb3RvIGVycl9tYXBfY29tbW9uOworCW1kZXYt
PmlzciA9IHZwX21vZGVybl9tYXBfY2FwYWJpbGl0eShtZGV2LCBpc3IsIHNpemVvZih1OCksIDEs
CisJCQkJCSAgICAgMCwgMSwKKwkJCQkJICAgICBOVUxMKTsKKwlpZiAoIW1kZXYtPmlzcikKKwkJ
Z290byBlcnJfbWFwX2lzcjsKKworCS8qIFJlYWQgbm90aWZ5X29mZl9tdWx0aXBsaWVyIGZyb20g
Y29uZmlnIHNwYWNlLiAqLworCXBjaV9yZWFkX2NvbmZpZ19kd29yZChwY2lfZGV2LAorCQkJICAg
ICAgbm90aWZ5ICsgb2Zmc2V0b2Yoc3RydWN0IHZpcnRpb19wY2lfbm90aWZ5X2NhcCwKKwkJCQkJ
CW5vdGlmeV9vZmZfbXVsdGlwbGllciksCisJCQkgICAgICAmbWRldi0+bm90aWZ5X29mZnNldF9t
dWx0aXBsaWVyKTsKKwkvKiBSZWFkIG5vdGlmeSBsZW5ndGggYW5kIG9mZnNldCBmcm9tIGNvbmZp
ZyBzcGFjZS4gKi8KKwlwY2lfcmVhZF9jb25maWdfZHdvcmQocGNpX2RldiwKKwkJCSAgICAgIG5v
dGlmeSArIG9mZnNldG9mKHN0cnVjdCB2aXJ0aW9fcGNpX25vdGlmeV9jYXAsCisJCQkJCQljYXAu
bGVuZ3RoKSwKKwkJCSAgICAgICZub3RpZnlfbGVuZ3RoKTsKKworCXBjaV9yZWFkX2NvbmZpZ19k
d29yZChwY2lfZGV2LAorCQkJICAgICAgbm90aWZ5ICsgb2Zmc2V0b2Yoc3RydWN0IHZpcnRpb19w
Y2lfbm90aWZ5X2NhcCwKKwkJCQkJCWNhcC5vZmZzZXQpLAorCQkJICAgICAgJm5vdGlmeV9vZmZz
ZXQpOworCisJLyogV2UgZG9uJ3Qga25vdyBob3cgbWFueSBWUXMgd2UnbGwgbWFwLCBhaGVhZCBv
ZiB0aGUgdGltZS4KKwkgKiBJZiBub3RpZnkgbGVuZ3RoIGlzIHNtYWxsLCBtYXAgaXQgYWxsIG5v
dy4KKwkgKiBPdGhlcndpc2UsIG1hcCBlYWNoIFZRIGluZGl2aWR1YWxseSBsYXRlci4KKwkgKi8K
KwlpZiAoKHU2NClub3RpZnlfbGVuZ3RoICsgKG5vdGlmeV9vZmZzZXQgJSBQQUdFX1NJWkUpIDw9
IFBBR0VfU0laRSkgeworCQltZGV2LT5ub3RpZnlfYmFzZSA9IHZwX21vZGVybl9tYXBfY2FwYWJp
bGl0eShtZGV2LCBub3RpZnksCisJCQkJCQkJICAgICAyLCAyLAorCQkJCQkJCSAgICAgMCwgbm90
aWZ5X2xlbmd0aCwKKwkJCQkJCQkgICAgICZtZGV2LT5ub3RpZnlfbGVuKTsKKwkJaWYgKCFtZGV2
LT5ub3RpZnlfYmFzZSkKKwkJCWdvdG8gZXJyX21hcF9ub3RpZnk7CisJfSBlbHNlIHsKKwkJbWRl
di0+bm90aWZ5X21hcF9jYXAgPSBub3RpZnk7CisJfQorCisJLyogQWdhaW4sIHdlIGRvbid0IGtu
b3cgaG93IG11Y2ggd2Ugc2hvdWxkIG1hcCwgYnV0IFBBR0VfU0laRQorCSAqIGlzIG1vcmUgdGhh
biBlbm91Z2ggZm9yIGFsbCBleGlzdGluZyBkZXZpY2VzLgorCSAqLworCWlmIChkZXZpY2UpIHsK
KwkJbWRldi0+ZGV2aWNlID0gdnBfbW9kZXJuX21hcF9jYXBhYmlsaXR5KG1kZXYsIGRldmljZSwg
MCwgNCwKKwkJCQkJCQkwLCBQQUdFX1NJWkUsCisJCQkJCQkJJm1kZXYtPmRldmljZV9sZW4pOwor
CQlpZiAoIW1kZXYtPmRldmljZSkKKwkJCWdvdG8gZXJyX21hcF9kZXZpY2U7CisJfQorCisJcmV0
dXJuIDA7CisKK2Vycl9tYXBfZGV2aWNlOgorCWlmIChtZGV2LT5ub3RpZnlfYmFzZSkKKwkJcGNp
X2lvdW5tYXAocGNpX2RldiwgbWRldi0+bm90aWZ5X2Jhc2UpOworZXJyX21hcF9ub3RpZnk6CisJ
cGNpX2lvdW5tYXAocGNpX2RldiwgbWRldi0+aXNyKTsKK2Vycl9tYXBfaXNyOgorCXBjaV9pb3Vu
bWFwKHBjaV9kZXYsIG1kZXYtPmNvbW1vbik7CitlcnJfbWFwX2NvbW1vbjoKKwlyZXR1cm4gZXJy
OworfQorRVhQT1JUX1NZTUJPTF9HUEwodnBfbW9kZXJuX3Byb2JlKTsKKworLyoKKyAqIHZwX21v
ZGVybl9wcm9iZTogcmVtb3ZlIGFuZCBjbGVhbnVwIHRoZSBtb2Rlcm4gdmlydGlvIHBjaSBkZXZp
Y2UKKyAqIEBtZGV2OiB0aGUgbW9kZXJuIHZpcnRpby1wY2kgZGV2aWNlCisgKi8KK3ZvaWQgdnBf
bW9kZXJuX3JlbW92ZShzdHJ1Y3QgdmlydGlvX3BjaV9tb2Rlcm5fZGV2aWNlICptZGV2KQorewor
CXN0cnVjdCBwY2lfZGV2ICpwY2lfZGV2ID0gbWRldi0+cGNpX2RldjsKKworCWlmIChtZGV2LT5k
ZXZpY2UpCisJCXBjaV9pb3VubWFwKHBjaV9kZXYsIG1kZXYtPmRldmljZSk7CisJaWYgKG1kZXYt
Pm5vdGlmeV9iYXNlKQorCQlwY2lfaW91bm1hcChwY2lfZGV2LCBtZGV2LT5ub3RpZnlfYmFzZSk7
CisJcGNpX2lvdW5tYXAocGNpX2RldiwgbWRldi0+aXNyKTsKKwlwY2lfaW91bm1hcChwY2lfZGV2
LCBtZGV2LT5jb21tb24pOworCXBjaV9yZWxlYXNlX3NlbGVjdGVkX3JlZ2lvbnMocGNpX2Rldiwg
bWRldi0+bW9kZXJuX2JhcnMpOworfQorRVhQT1JUX1NZTUJPTF9HUEwodnBfbW9kZXJuX3JlbW92
ZSk7CisKKy8qCisgKiB2cF9tb2Rlcm5fZ2V0X2ZlYXR1cmVzIC0gZ2V0IGZlYXR1cmVzIGZyb20g
ZGV2aWNlCisgKiBAbWRldjogdGhlIG1vZGVybiB2aXJ0aW8tcGNpIGRldmljZQorICoKKyAqIFJl
dHVybnMgdGhlIGZlYXR1cmVzIHJlYWQgZnJvbSB0aGUgZGV2aWNlCisgKi8KK3U2NCB2cF9tb2Rl
cm5fZ2V0X2ZlYXR1cmVzKHN0cnVjdCB2aXJ0aW9fcGNpX21vZGVybl9kZXZpY2UgKm1kZXYpCit7
CisJc3RydWN0IHZpcnRpb19wY2lfY29tbW9uX2NmZyBfX2lvbWVtICpjZmcgPSBtZGV2LT5jb21t
b247CisKKwl1NjQgZmVhdHVyZXM7CisKKwl2cF9pb3dyaXRlMzIoMCwgJmNmZy0+ZGV2aWNlX2Zl
YXR1cmVfc2VsZWN0KTsKKwlmZWF0dXJlcyA9IHZwX2lvcmVhZDMyKCZjZmctPmRldmljZV9mZWF0
dXJlKTsKKwl2cF9pb3dyaXRlMzIoMSwgJmNmZy0+ZGV2aWNlX2ZlYXR1cmVfc2VsZWN0KTsKKwlm
ZWF0dXJlcyB8PSAoKHU2NCl2cF9pb3JlYWQzMigmY2ZnLT5kZXZpY2VfZmVhdHVyZSkgPDwgMzIp
OworCisJcmV0dXJuIGZlYXR1cmVzOworfQorRVhQT1JUX1NZTUJPTF9HUEwodnBfbW9kZXJuX2dl
dF9mZWF0dXJlcyk7CisKKy8qCisgKiB2cF9tb2Rlcm5fc2V0X2ZlYXR1cmVzIC0gc2V0IGZlYXR1
cmVzIHRvIGRldmljZQorICogQG1kZXY6IHRoZSBtb2Rlcm4gdmlydGlvLXBjaSBkZXZpY2UKKyAq
IEBmZWF0dXJlczogdGhlIGZlYXR1cmVzIHNldCB0byBkZXZpY2UKKyAqLwordm9pZCB2cF9tb2Rl
cm5fc2V0X2ZlYXR1cmVzKHN0cnVjdCB2aXJ0aW9fcGNpX21vZGVybl9kZXZpY2UgKm1kZXYsCisJ
CQkgICAgdTY0IGZlYXR1cmVzKQoreworCXN0cnVjdCB2aXJ0aW9fcGNpX2NvbW1vbl9jZmcgX19p
b21lbSAqY2ZnID0gbWRldi0+Y29tbW9uOworCisJdnBfaW93cml0ZTMyKDAsICZjZmctPmd1ZXN0
X2ZlYXR1cmVfc2VsZWN0KTsKKwl2cF9pb3dyaXRlMzIoKHUzMilmZWF0dXJlcywgJmNmZy0+Z3Vl
c3RfZmVhdHVyZSk7CisJdnBfaW93cml0ZTMyKDEsICZjZmctPmd1ZXN0X2ZlYXR1cmVfc2VsZWN0
KTsKKwl2cF9pb3dyaXRlMzIoZmVhdHVyZXMgPj4gMzIsICZjZmctPmd1ZXN0X2ZlYXR1cmUpOwor
fQorRVhQT1JUX1NZTUJPTF9HUEwodnBfbW9kZXJuX3NldF9mZWF0dXJlcyk7CisKKy8qCisgKiB2
cF9tb2Rlcm5fZ2VuZXJhdGlvbiAtIGdldCB0aGUgZGV2aWNlIGdlbnJlYXRpb24KKyAqIEBtZGV2
OiB0aGUgbW9kZXJuIHZpcnRpby1wY2kgZGV2aWNlCisgKgorICogUmV0dXJucyB0aGUgZ2VucmVh
dGlvbiByZWFkIGZyb20gZGV2aWNlCisgKi8KK3UzMiB2cF9tb2Rlcm5fZ2VuZXJhdGlvbihzdHJ1
Y3QgdmlydGlvX3BjaV9tb2Rlcm5fZGV2aWNlICptZGV2KQoreworCXN0cnVjdCB2aXJ0aW9fcGNp
X2NvbW1vbl9jZmcgX19pb21lbSAqY2ZnID0gbWRldi0+Y29tbW9uOworCisJcmV0dXJuIHZwX2lv
cmVhZDgoJmNmZy0+Y29uZmlnX2dlbmVyYXRpb24pOworfQorRVhQT1JUX1NZTUJPTF9HUEwodnBf
bW9kZXJuX2dlbmVyYXRpb24pOworCisvKgorICogdnBfbW9kZXJuX2dldF9zdGF0dXMgLSBnZXQg
dGhlIGRldmljZSBzdGF0dXMKKyAqIEBtZGV2OiB0aGUgbW9kZXJuIHZpcnRpby1wY2kgZGV2aWNl
CisgKgorICogUmV0dXJucyB0aGUgc3RhdHVzIHJlYWQgZnJvbSBkZXZpY2UKKyAqLwordTggdnBf
bW9kZXJuX2dldF9zdGF0dXMoc3RydWN0IHZpcnRpb19wY2lfbW9kZXJuX2RldmljZSAqbWRldikK
K3sKKwlzdHJ1Y3QgdmlydGlvX3BjaV9jb21tb25fY2ZnIF9faW9tZW0gKmNmZyA9IG1kZXYtPmNv
bW1vbjsKKworCXJldHVybiB2cF9pb3JlYWQ4KCZjZmctPmRldmljZV9zdGF0dXMpOworfQorRVhQ
T1JUX1NZTUJPTF9HUEwodnBfbW9kZXJuX2dldF9zdGF0dXMpOworCisvKgorICogdnBfbW9kZXJu
X3NldF9zdGF0dXMgLSBzZXQgc3RhdHVzIHRvIGRldmljZQorICogQG1kZXY6IHRoZSBtb2Rlcm4g
dmlydGlvLXBjaSBkZXZpY2UKKyAqIEBzdGF0dXM6IHRoZSBzdGF0dXMgc2V0IHRvIGRldmljZQor
ICovCit2b2lkIHZwX21vZGVybl9zZXRfc3RhdHVzKHN0cnVjdCB2aXJ0aW9fcGNpX21vZGVybl9k
ZXZpY2UgKm1kZXYsCisJCQkJIHU4IHN0YXR1cykKK3sKKwlzdHJ1Y3QgdmlydGlvX3BjaV9jb21t
b25fY2ZnIF9faW9tZW0gKmNmZyA9IG1kZXYtPmNvbW1vbjsKKworCXZwX2lvd3JpdGU4KHN0YXR1
cywgJmNmZy0+ZGV2aWNlX3N0YXR1cyk7Cit9CitFWFBPUlRfU1lNQk9MX0dQTCh2cF9tb2Rlcm5f
c2V0X3N0YXR1cyk7CisKKy8qCisgKiB2cF9tb2Rlcm5fcXVldWVfdmVjdG9yIC0gc2V0IHRoZSBN
U0lYIHZlY3RvciBmb3IgYSBzcGVjaWZpYyB2aXJ0cXVldWUKKyAqIEBtZGV2OiB0aGUgbW9kZXJu
IHZpcnRpby1wY2kgZGV2aWNlCisgKiBAaW5kZXg6IHF1ZXVlIGluZGV4CisgKiBAdmVjdG9yOiB0
aGUgY29uZmlnIHZlY3RvcgorICoKKyAqIFJldHVybnMgdGhlIGNvbmZpZyB2ZWN0b3IgcmVhZCBm
cm9tIHRoZSBkZXZpY2UKKyAqLwordTE2IHZwX21vZGVybl9xdWV1ZV92ZWN0b3Ioc3RydWN0IHZp
cnRpb19wY2lfbW9kZXJuX2RldmljZSAqbWRldiwKKwkJCSAgIHUxNiBpbmRleCwgdTE2IHZlY3Rv
cikKK3sKKwlzdHJ1Y3QgdmlydGlvX3BjaV9jb21tb25fY2ZnIF9faW9tZW0gKmNmZyA9IG1kZXYt
PmNvbW1vbjsKKworCXZwX2lvd3JpdGUxNihpbmRleCwgJmNmZy0+cXVldWVfc2VsZWN0KTsKKwl2
cF9pb3dyaXRlMTYodmVjdG9yLCAmY2ZnLT5xdWV1ZV9tc2l4X3ZlY3Rvcik7CisJLyogRmx1c2gg
dGhlIHdyaXRlIG91dCB0byBkZXZpY2UgKi8KKwlyZXR1cm4gdnBfaW9yZWFkMTYoJmNmZy0+cXVl
dWVfbXNpeF92ZWN0b3IpOworfQorRVhQT1JUX1NZTUJPTF9HUEwodnBfbW9kZXJuX3F1ZXVlX3Zl
Y3Rvcik7CisKKy8qCisgKiB2cF9tb2Rlcm5fY29uZmlnX3ZlY3RvciAtIHNldCB0aGUgdmVjdG9y
IGZvciBjb25maWcgaW50ZXJydXB0CisgKiBAbWRldjogdGhlIG1vZGVybiB2aXJ0aW8tcGNpIGRl
dmljZQorICogQHZlY3RvcjogdGhlIGNvbmZpZyB2ZWN0b3IKKyAqCisgKiBSZXR1cm5zIHRoZSBj
b25maWcgdmVjdG9yIHJlYWQgZnJvbSB0aGUgZGV2aWNlCisgKi8KK3UxNiB2cF9tb2Rlcm5fY29u
ZmlnX3ZlY3RvcihzdHJ1Y3QgdmlydGlvX3BjaV9tb2Rlcm5fZGV2aWNlICptZGV2LAorCQkJICAg
IHUxNiB2ZWN0b3IpCit7CisJc3RydWN0IHZpcnRpb19wY2lfY29tbW9uX2NmZyBfX2lvbWVtICpj
ZmcgPSBtZGV2LT5jb21tb247CisKKwkvKiBTZXR1cCB0aGUgdmVjdG9yIHVzZWQgZm9yIGNvbmZp
Z3VyYXRpb24gZXZlbnRzICovCisJdnBfaW93cml0ZTE2KHZlY3RvciwgJmNmZy0+bXNpeF9jb25m
aWcpOworCS8qIFZlcmlmeSB3ZSBoYWQgZW5vdWdoIHJlc291cmNlcyB0byBhc3NpZ24gdGhlIHZl
Y3RvciAqLworCS8qIFdpbGwgYWxzbyBmbHVzaCB0aGUgd3JpdGUgb3V0IHRvIGRldmljZSAqLwor
CXJldHVybiB2cF9pb3JlYWQxNigmY2ZnLT5tc2l4X2NvbmZpZyk7Cit9CitFWFBPUlRfU1lNQk9M
X0dQTCh2cF9tb2Rlcm5fY29uZmlnX3ZlY3Rvcik7CisKKy8qCisgKiB2cF9tb2Rlcm5fcXVldWVf
YWRkcmVzcyAtIHNldCB0aGUgdmlydHF1ZXVlIGFkZHJlc3MKKyAqIEBtZGV2OiB0aGUgbW9kZXJu
IHZpcnRpby1wY2kgZGV2aWNlCisgKiBAaW5kZXg6IHRoZSBxdWV1ZSBpbmRleAorICogQGRlc2Nf
YWRkcjogYWRkcmVzcyBvZiB0aGUgZGVzY3JpcHRvciBhcmVhCisgKiBAZHJpdmVyX2FkZHI6IGFk
ZHJlc3Mgb2YgdGhlIGRyaXZlciBhcmVhCisgKiBAZGV2aWNlX2FkZHI6IGFkZHJlc3Mgb2YgdGhl
IGRldmljZSBhcmVhCisgKi8KK3ZvaWQgdnBfbW9kZXJuX3F1ZXVlX2FkZHJlc3Moc3RydWN0IHZp
cnRpb19wY2lfbW9kZXJuX2RldmljZSAqbWRldiwKKwkJCSAgICAgdTE2IGluZGV4LCB1NjQgZGVz
Y19hZGRyLCB1NjQgZHJpdmVyX2FkZHIsCisJCQkgICAgIHU2NCBkZXZpY2VfYWRkcikKK3sKKwlz
dHJ1Y3QgdmlydGlvX3BjaV9jb21tb25fY2ZnIF9faW9tZW0gKmNmZyA9IG1kZXYtPmNvbW1vbjsK
KworCXZwX2lvd3JpdGUxNihpbmRleCwgJmNmZy0+cXVldWVfc2VsZWN0KTsKKworCXZwX2lvd3Jp
dGU2NF90d29wYXJ0KGRlc2NfYWRkciwgJmNmZy0+cXVldWVfZGVzY19sbywKKwkJCSAgICAgJmNm
Zy0+cXVldWVfZGVzY19oaSk7CisJdnBfaW93cml0ZTY0X3R3b3BhcnQoZHJpdmVyX2FkZHIsICZj
ZmctPnF1ZXVlX2F2YWlsX2xvLAorCQkJICAgICAmY2ZnLT5xdWV1ZV9hdmFpbF9oaSk7CisJdnBf
aW93cml0ZTY0X3R3b3BhcnQoZGV2aWNlX2FkZHIsICZjZmctPnF1ZXVlX3VzZWRfbG8sCisJCQkg
ICAgICZjZmctPnF1ZXVlX3VzZWRfaGkpOworfQorRVhQT1JUX1NZTUJPTF9HUEwodnBfbW9kZXJu
X3F1ZXVlX2FkZHJlc3MpOworCisvKgorICogdnBfbW9kZXJuX3NldF9xdWV1ZV9lbmFibGUgLSBl
bmFibGUgYSB2aXJ0cXVldWUKKyAqIEBtZGV2OiB0aGUgbW9kZXJuIHZpcnRpby1wY2kgZGV2aWNl
CisgKiBAaW5kZXg6IHRoZSBxdWV1ZSBpbmRleAorICogQGVuYWJsZTogd2hldGhlciB0aGUgdmly
dHF1ZXVlIGlzIGVuYWJsZSBvciBub3QKKyAqLwordm9pZCB2cF9tb2Rlcm5fc2V0X3F1ZXVlX2Vu
YWJsZShzdHJ1Y3QgdmlydGlvX3BjaV9tb2Rlcm5fZGV2aWNlICptZGV2LAorCQkJCXUxNiBpbmRl
eCwgYm9vbCBlbmFibGUpCit7CisJdnBfaW93cml0ZTE2KGluZGV4LCAmbWRldi0+Y29tbW9uLT5x
dWV1ZV9zZWxlY3QpOworCXZwX2lvd3JpdGUxNihlbmFibGUsICZtZGV2LT5jb21tb24tPnF1ZXVl
X2VuYWJsZSk7Cit9CitFWFBPUlRfU1lNQk9MX0dQTCh2cF9tb2Rlcm5fc2V0X3F1ZXVlX2VuYWJs
ZSk7CisKKy8qCisgKiB2cF9tb2Rlcm5fZ2V0X3F1ZXVlX2VuYWJsZSAtIGVuYWJsZSBhIHZpcnRx
dWV1ZQorICogQG1kZXY6IHRoZSBtb2Rlcm4gdmlydGlvLXBjaSBkZXZpY2UKKyAqIEBpbmRleDog
dGhlIHF1ZXVlIGluZGV4CisgKgorICogUmV0dXJucyB3aGV0aGVyIGEgdmlydHF1ZXVlIGlzIGVu
YWJsZWQgb3Igbm90CisgKi8KK2Jvb2wgdnBfbW9kZXJuX2dldF9xdWV1ZV9lbmFibGUoc3RydWN0
IHZpcnRpb19wY2lfbW9kZXJuX2RldmljZSAqbWRldiwKKwkJCQl1MTYgaW5kZXgpCit7CisJdnBf
aW93cml0ZTE2KGluZGV4LCAmbWRldi0+Y29tbW9uLT5xdWV1ZV9zZWxlY3QpOworCisJcmV0dXJu
IHZwX2lvcmVhZDE2KCZtZGV2LT5jb21tb24tPnF1ZXVlX2VuYWJsZSk7Cit9CitFWFBPUlRfU1lN
Qk9MX0dQTCh2cF9tb2Rlcm5fZ2V0X3F1ZXVlX2VuYWJsZSk7CisKKy8qCisgKiB2cF9tb2Rlcm5f
c2V0X3F1ZXVlX3NpemUgLSBzZXQgc2l6ZSBmb3IgYSB2aXJ0cXVldWUKKyAqIEBtZGV2OiB0aGUg
bW9kZXJuIHZpcnRpby1wY2kgZGV2aWNlCisgKiBAaW5kZXg6IHRoZSBxdWV1ZSBpbmRleAorICog
QHNpemU6IHRoZSBzaXplIG9mIHRoZSB2aXJ0cXVldWUKKyAqLwordm9pZCB2cF9tb2Rlcm5fc2V0
X3F1ZXVlX3NpemUoc3RydWN0IHZpcnRpb19wY2lfbW9kZXJuX2RldmljZSAqbWRldiwKKwkJCSAg
ICAgIHUxNiBpbmRleCwgdTE2IHNpemUpCit7CisJdnBfaW93cml0ZTE2KGluZGV4LCAmbWRldi0+
Y29tbW9uLT5xdWV1ZV9zZWxlY3QpOworCXZwX2lvd3JpdGUxNihzaXplLCAmbWRldi0+Y29tbW9u
LT5xdWV1ZV9zaXplKTsKKworfQorRVhQT1JUX1NZTUJPTF9HUEwodnBfbW9kZXJuX3NldF9xdWV1
ZV9zaXplKTsKKworLyoKKyAqIHZwX21vZGVybl9nZXRfcXVldWVfc2l6ZSAtIGdldCBzaXplIGZv
ciBhIHZpcnRxdWV1ZQorICogQG1kZXY6IHRoZSBtb2Rlcm4gdmlydGlvLXBjaSBkZXZpY2UKKyAq
IEBpbmRleDogdGhlIHF1ZXVlIGluZGV4CisgKgorICogUmV0dXJucyB0aGUgc2l6ZSBvZiB0aGUg
dmlydHF1ZXVlCisgKi8KK3UxNiB2cF9tb2Rlcm5fZ2V0X3F1ZXVlX3NpemUoc3RydWN0IHZpcnRp
b19wY2lfbW9kZXJuX2RldmljZSAqbWRldiwKKwkJCSAgICAgdTE2IGluZGV4KQoreworCXZwX2lv
d3JpdGUxNihpbmRleCwgJm1kZXYtPmNvbW1vbi0+cXVldWVfc2VsZWN0KTsKKworCXJldHVybiB2
cF9pb3JlYWQxNigmbWRldi0+Y29tbW9uLT5xdWV1ZV9zaXplKTsKKworfQorRVhQT1JUX1NZTUJP
TF9HUEwodnBfbW9kZXJuX2dldF9xdWV1ZV9zaXplKTsKKworLyoKKyAqIHZwX21vZGVybl9nZXRf
bnVtX3F1ZXVlcyAtIGdldCB0aGUgbnVtYmVyIG9mIHZpcnRxdWV1ZXMKKyAqIEBtZGV2OiB0aGUg
bW9kZXJuIHZpcnRpby1wY2kgZGV2aWNlCisgKgorICogUmV0dXJucyB0aGUgbnVtYmVyIG9mIHZp
cnRxdWV1ZXMKKyAqLwordTE2IHZwX21vZGVybl9nZXRfbnVtX3F1ZXVlcyhzdHJ1Y3QgdmlydGlv
X3BjaV9tb2Rlcm5fZGV2aWNlICptZGV2KQoreworCXJldHVybiB2cF9pb3JlYWQxNigmbWRldi0+
Y29tbW9uLT5udW1fcXVldWVzKTsKK30KK0VYUE9SVF9TWU1CT0xfR1BMKHZwX21vZGVybl9nZXRf
bnVtX3F1ZXVlcyk7CisKKy8qCisgKiB2cF9tb2Rlcm5fZ2V0X3F1ZXVlX25vdGlmeV9vZmYgLSBn
ZXQgbm90aWZpY2F0aW9uIG9mZnNldCBmb3IgYSB2aXJ0cXVldWUKKyAqIEBtZGV2OiB0aGUgbW9k
ZXJuIHZpcnRpby1wY2kgZGV2aWNlCisgKiBAaW5kZXg6IHRoZSBxdWV1ZSBpbmRleAorICoKKyAq
IFJldHVybnMgdGhlIG5vdGlmaWNhdGlvbiBvZmZzZXQgZm9yIGEgdmlydHF1ZXVlCisgKi8KK3Ux
NiB2cF9tb2Rlcm5fZ2V0X3F1ZXVlX25vdGlmeV9vZmYoc3RydWN0IHZpcnRpb19wY2lfbW9kZXJu
X2RldmljZSAqbWRldiwKKwkJCQkgICB1MTYgaW5kZXgpCit7CisJdnBfaW93cml0ZTE2KGluZGV4
LCAmbWRldi0+Y29tbW9uLT5xdWV1ZV9zZWxlY3QpOworCisJcmV0dXJuIHZwX2lvcmVhZDE2KCZt
ZGV2LT5jb21tb24tPnF1ZXVlX25vdGlmeV9vZmYpOworfQorRVhQT1JUX1NZTUJPTF9HUEwodnBf
bW9kZXJuX2dldF9xdWV1ZV9ub3RpZnlfb2ZmKTsKKworTU9EVUxFX1ZFUlNJT04oIjAuMSIpOwor
TU9EVUxFX0RFU0NSSVBUSU9OKCJNb2Rlcm4gVmlydGlvIFBDSSBEZXZpY2UiKTsKK01PRFVMRV9B
VVRIT1IoIkphc29uIFdhbmcgPGphc293YW5nQHJlZGhhdC5jb20+Iik7CitNT0RVTEVfTElDRU5T
RSgiR1BMIik7CmRpZmYgLS1naXQgYS9pbmNsdWRlL2xpbnV4L3ZpcnRpb19wY2lfbW9kZXJuLmgg
Yi9pbmNsdWRlL2xpbnV4L3ZpcnRpb19wY2lfbW9kZXJuLmgKbmV3IGZpbGUgbW9kZSAxMDA2NDQK
aW5kZXggMDAwMDAwMDAwMDAwLi5mMjZhY2JlZWM5NjUKLS0tIC9kZXYvbnVsbAorKysgYi9pbmNs
dWRlL2xpbnV4L3ZpcnRpb19wY2lfbW9kZXJuLmgKQEAgLTAsMCArMSwxMTEgQEAKKy8qIFNQRFgt
TGljZW5zZS1JZGVudGlmaWVyOiBHUEwtMi4wICovCisjaWZuZGVmIF9MSU5VWF9WSVJUSU9fUENJ
X01PREVSTl9ICisjZGVmaW5lIF9MSU5VWF9WSVJUSU9fUENJX01PREVSTl9ICisKKyNpbmNsdWRl
IDxsaW51eC9wY2kuaD4KKyNpbmNsdWRlIDxsaW51eC92aXJ0aW9fcGNpLmg+CisKK3N0cnVjdCB2
aXJ0aW9fcGNpX21vZGVybl9kZXZpY2UgeworCXN0cnVjdCBwY2lfZGV2ICpwY2lfZGV2OworCisJ
c3RydWN0IHZpcnRpb19wY2lfY29tbW9uX2NmZyBfX2lvbWVtICpjb21tb247CisJLyogRGV2aWNl
LXNwZWNpZmljIGRhdGEgKG5vbi1sZWdhY3kgbW9kZSkgICovCisJdm9pZCBfX2lvbWVtICpkZXZp
Y2U7CisJLyogQmFzZSBvZiB2cSBub3RpZmljYXRpb25zIChub24tbGVnYWN5IG1vZGUpLiAqLwor
CXZvaWQgX19pb21lbSAqbm90aWZ5X2Jhc2U7CisJLyogV2hlcmUgdG8gcmVhZCBhbmQgY2xlYXIg
aW50ZXJydXB0ICovCisJdTggX19pb21lbSAqaXNyOworCisJLyogU28gd2UgY2FuIHNhbml0eS1j
aGVjayBhY2Nlc3Nlcy4gKi8KKwlzaXplX3Qgbm90aWZ5X2xlbjsKKwlzaXplX3QgZGV2aWNlX2xl
bjsKKworCS8qIENhcGFiaWxpdHkgZm9yIHdoZW4gd2UgbmVlZCB0byBtYXAgbm90aWZpY2F0aW9u
cyBwZXItdnEuICovCisJaW50IG5vdGlmeV9tYXBfY2FwOworCisJLyogTXVsdGlwbHkgcXVldWVf
bm90aWZ5X29mZiBieSB0aGlzIHZhbHVlLiAobm9uLWxlZ2FjeSBtb2RlKS4gKi8KKwl1MzIgbm90
aWZ5X29mZnNldF9tdWx0aXBsaWVyOworCisJaW50IG1vZGVybl9iYXJzOworCisJc3RydWN0IHZp
cnRpb19kZXZpY2VfaWQgaWQ7Cit9OworCisvKgorICogVHlwZS1zYWZlIHdyYXBwZXJzIGZvciBp
byBhY2Nlc3Nlcy4KKyAqIFVzZSB0aGVzZSB0byBlbmZvcmNlIGF0IGNvbXBpbGUgdGltZSB0aGUg
Zm9sbG93aW5nIHNwZWMgcmVxdWlyZW1lbnQ6CisgKgorICogVGhlIGRyaXZlciBNVVNUIGFjY2Vz
cyBlYWNoIGZpZWxkIHVzaW5nIHRoZSDigJxuYXR1cmFs4oCdIGFjY2VzcworICogbWV0aG9kLCBp
LmUuIDMyLWJpdCBhY2Nlc3NlcyBmb3IgMzItYml0IGZpZWxkcywgMTYtYml0IGFjY2Vzc2VzCisg
KiBmb3IgMTYtYml0IGZpZWxkcyBhbmQgOC1iaXQgYWNjZXNzZXMgZm9yIDgtYml0IGZpZWxkcy4K
KyAqLworc3RhdGljIGlubGluZSB1OCB2cF9pb3JlYWQ4KGNvbnN0IHU4IF9faW9tZW0gKmFkZHIp
Cit7CisJcmV0dXJuIGlvcmVhZDgoYWRkcik7Cit9CitzdGF0aWMgaW5saW5lIHUxNiB2cF9pb3Jl
YWQxNiAoY29uc3QgX19sZTE2IF9faW9tZW0gKmFkZHIpCit7CisJcmV0dXJuIGlvcmVhZDE2KGFk
ZHIpOworfQorCitzdGF0aWMgaW5saW5lIHUzMiB2cF9pb3JlYWQzMihjb25zdCBfX2xlMzIgX19p
b21lbSAqYWRkcikKK3sKKwlyZXR1cm4gaW9yZWFkMzIoYWRkcik7Cit9CisKK3N0YXRpYyBpbmxp
bmUgdm9pZCB2cF9pb3dyaXRlOCh1OCB2YWx1ZSwgdTggX19pb21lbSAqYWRkcikKK3sKKwlpb3dy
aXRlOCh2YWx1ZSwgYWRkcik7Cit9CisKK3N0YXRpYyBpbmxpbmUgdm9pZCB2cF9pb3dyaXRlMTYo
dTE2IHZhbHVlLCBfX2xlMTYgX19pb21lbSAqYWRkcikKK3sKKwlpb3dyaXRlMTYodmFsdWUsIGFk
ZHIpOworfQorCitzdGF0aWMgaW5saW5lIHZvaWQgdnBfaW93cml0ZTMyKHUzMiB2YWx1ZSwgX19s
ZTMyIF9faW9tZW0gKmFkZHIpCit7CisJaW93cml0ZTMyKHZhbHVlLCBhZGRyKTsKK30KKworc3Rh
dGljIGlubGluZSB2b2lkIHZwX2lvd3JpdGU2NF90d29wYXJ0KHU2NCB2YWwsCisJCQkJCV9fbGUz
MiBfX2lvbWVtICpsbywKKwkJCQkJX19sZTMyIF9faW9tZW0gKmhpKQoreworCXZwX2lvd3JpdGUz
MigodTMyKXZhbCwgbG8pOworCXZwX2lvd3JpdGUzMih2YWwgPj4gMzIsIGhpKTsKK30KKwordTY0
IHZwX21vZGVybl9nZXRfZmVhdHVyZXMoc3RydWN0IHZpcnRpb19wY2lfbW9kZXJuX2RldmljZSAq
bWRldik7Cit2b2lkIHZwX21vZGVybl9zZXRfZmVhdHVyZXMoc3RydWN0IHZpcnRpb19wY2lfbW9k
ZXJuX2RldmljZSAqbWRldiwKKwkJICAgICB1NjQgZmVhdHVyZXMpOwordTMyIHZwX21vZGVybl9n
ZW5lcmF0aW9uKHN0cnVjdCB2aXJ0aW9fcGNpX21vZGVybl9kZXZpY2UgKm1kZXYpOwordTggdnBf
bW9kZXJuX2dldF9zdGF0dXMoc3RydWN0IHZpcnRpb19wY2lfbW9kZXJuX2RldmljZSAqbWRldik7
Cit2b2lkIHZwX21vZGVybl9zZXRfc3RhdHVzKHN0cnVjdCB2aXJ0aW9fcGNpX21vZGVybl9kZXZp
Y2UgKm1kZXYsCisJCSAgIHU4IHN0YXR1cyk7Cit1MTYgdnBfbW9kZXJuX3F1ZXVlX3ZlY3Rvcihz
dHJ1Y3QgdmlydGlvX3BjaV9tb2Rlcm5fZGV2aWNlICptZGV2LAorCQkJICAgdTE2IGlkeCwgdTE2
IHZlY3Rvcik7Cit1MTYgdnBfbW9kZXJuX2NvbmZpZ192ZWN0b3Ioc3RydWN0IHZpcnRpb19wY2lf
bW9kZXJuX2RldmljZSAqbWRldiwKKwkJICAgICB1MTYgdmVjdG9yKTsKK3ZvaWQgdnBfbW9kZXJu
X3F1ZXVlX2FkZHJlc3Moc3RydWN0IHZpcnRpb19wY2lfbW9kZXJuX2RldmljZSAqbWRldiwKKwkJ
CSAgICAgdTE2IGluZGV4LCB1NjQgZGVzY19hZGRyLCB1NjQgZHJpdmVyX2FkZHIsCisJCQkgICAg
IHU2NCBkZXZpY2VfYWRkcik7Cit2b2lkIHZwX21vZGVybl9zZXRfcXVldWVfZW5hYmxlKHN0cnVj
dCB2aXJ0aW9fcGNpX21vZGVybl9kZXZpY2UgKm1kZXYsCisJCQkJdTE2IGlkeCwgYm9vbCBlbmFi
bGUpOworYm9vbCB2cF9tb2Rlcm5fZ2V0X3F1ZXVlX2VuYWJsZShzdHJ1Y3QgdmlydGlvX3BjaV9t
b2Rlcm5fZGV2aWNlICptZGV2LAorCQkJCXUxNiBpZHgpOwordm9pZCB2cF9tb2Rlcm5fc2V0X3F1
ZXVlX3NpemUoc3RydWN0IHZpcnRpb19wY2lfbW9kZXJuX2RldmljZSAqbWRldiwKKwkJCSAgICAg
IHUxNiBpZHgsIHUxNiBzaXplKTsKK3UxNiB2cF9tb2Rlcm5fZ2V0X3F1ZXVlX3NpemUoc3RydWN0
IHZpcnRpb19wY2lfbW9kZXJuX2RldmljZSAqbWRldiwKKwkJCSAgICAgdTE2IGlkeCk7Cit1MTYg
dnBfbW9kZXJuX2dldF9udW1fcXVldWVzKHN0cnVjdCB2aXJ0aW9fcGNpX21vZGVybl9kZXZpY2Ug
Km1kZXYpOwordTE2IHZwX21vZGVybl9nZXRfcXVldWVfbm90aWZ5X29mZihzdHJ1Y3QgdmlydGlv
X3BjaV9tb2Rlcm5fZGV2aWNlICptZGV2LAorCQkJCSAgIHUxNiBpZHgpOwordm9pZCBfX2lvbWVt
ICp2cF9tb2Rlcm5fbWFwX2NhcGFiaWxpdHkoc3RydWN0IHZpcnRpb19wY2lfbW9kZXJuX2Rldmlj
ZSAqbWRldiwgaW50IG9mZiwKKwkJCQkgICAgICAgc2l6ZV90IG1pbmxlbiwKKwkJCQkgICAgICAg
dTMyIGFsaWduLAorCQkJCSAgICAgICB1MzIgc3RhcnQsIHUzMiBzaXplLAorCQkJCSAgICAgICBz
aXplX3QgKmxlbik7CitpbnQgdnBfbW9kZXJuX3Byb2JlKHN0cnVjdCB2aXJ0aW9fcGNpX21vZGVy
bl9kZXZpY2UgKm1kZXYpOwordm9pZCB2cF9tb2Rlcm5fcmVtb3ZlKHN0cnVjdCB2aXJ0aW9fcGNp
X21vZGVybl9kZXZpY2UgKm1kZXYpOworI2VuZGlmCi0tIAoyLjI1LjEKCl9fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fClZpcnR1YWxpemF0aW9uIG1haWxpbmcg
bGlzdApWaXJ0dWFsaXphdGlvbkBsaXN0cy5saW51eC1mb3VuZGF0aW9uLm9yZwpodHRwczovL2xp
c3RzLmxpbnV4Zm91bmRhdGlvbi5vcmcvbWFpbG1hbi9saXN0aW5mby92aXJ0dWFsaXphdGlvbg==
