Return-Path: <virtualization-bounces@lists.linux-foundation.org>
X-Original-To: lists.virtualization@lfdr.de
Delivered-To: lists.virtualization@lfdr.de
Received: from smtp4.osuosl.org (smtp4.osuosl.org [IPv6:2605:bc80:3010::137])
	by mail.lfdr.de (Postfix) with ESMTPS id 14DAC587C92
	for <lists.virtualization@lfdr.de>; Tue,  2 Aug 2022 14:43:00 +0200 (CEST)
Received: from localhost (localhost [127.0.0.1])
	by smtp4.osuosl.org (Postfix) with ESMTP id 5F5BF40861;
	Tue,  2 Aug 2022 12:42:58 +0000 (UTC)
DKIM-Filter: OpenDKIM Filter v2.11.0 smtp4.osuosl.org 5F5BF40861
Authentication-Results: smtp4.osuosl.org;
	dkim=fail reason="signature verification failed" (2048-bit key) header.d=collabora.com header.i=@collabora.com header.a=rsa-sha256 header.s=mail header.b=bT+Ucjn4
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from smtp4.osuosl.org ([127.0.0.1])
	by localhost (smtp4.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id OD5OxDAmB2Pz; Tue,  2 Aug 2022 12:42:56 +0000 (UTC)
Received: from lists.linuxfoundation.org (lf-lists.osuosl.org [140.211.9.56])
	by smtp4.osuosl.org (Postfix) with ESMTPS id D15C440879;
	Tue,  2 Aug 2022 12:42:55 +0000 (UTC)
DKIM-Filter: OpenDKIM Filter v2.11.0 smtp4.osuosl.org D15C440879
Received: from lf-lists.osuosl.org (localhost [127.0.0.1])
	by lists.linuxfoundation.org (Postfix) with ESMTP id DB885C0078;
	Tue,  2 Aug 2022 12:42:54 +0000 (UTC)
X-Original-To: virtualization@lists.linux-foundation.org
Delivered-To: virtualization@lists.linuxfoundation.org
Received: from smtp3.osuosl.org (smtp3.osuosl.org [IPv6:2605:bc80:3010::136])
 by lists.linuxfoundation.org (Postfix) with ESMTP id 9D17EC002D
 for <virtualization@lists.linux-foundation.org>;
 Tue,  2 Aug 2022 12:42:53 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by smtp3.osuosl.org (Postfix) with ESMTP id 7154C60C0F
 for <virtualization@lists.linux-foundation.org>;
 Tue,  2 Aug 2022 12:42:53 +0000 (UTC)
DKIM-Filter: OpenDKIM Filter v2.11.0 smtp3.osuosl.org 7154C60C0F
Authentication-Results: smtp3.osuosl.org;
 dkim=pass (2048-bit key) header.d=collabora.com header.i=@collabora.com
 header.a=rsa-sha256 header.s=mail header.b=bT+Ucjn4
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from smtp3.osuosl.org ([127.0.0.1])
 by localhost (smtp3.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id tjxs4_bmuyPG
 for <virtualization@lists.linux-foundation.org>;
 Tue,  2 Aug 2022 12:42:51 +0000 (UTC)
X-Greylist: domain auto-whitelisted by SQLgrey-1.8.0
DKIM-Filter: OpenDKIM Filter v2.11.0 smtp3.osuosl.org 26E1560C09
Received: from madras.collabora.co.uk (madras.collabora.co.uk
 [IPv6:2a00:1098:0:82:1000:25:2eeb:e5ab])
 by smtp3.osuosl.org (Postfix) with ESMTPS id 26E1560C09
 for <virtualization@lists.linux-foundation.org>;
 Tue,  2 Aug 2022 12:42:51 +0000 (UTC)
Received: from localhost.localdomain (unknown [213.194.152.135])
 (using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits)
 key-exchange X25519 server-signature RSA-PSS (4096 bits) server-digest SHA256)
 (No client certificate requested) (Authenticated sender: rcn)
 by madras.collabora.co.uk (Postfix) with ESMTPSA id E486166015AF;
 Tue,  2 Aug 2022 13:42:48 +0100 (BST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=collabora.com;
 s=mail; t=1659444169;
 bh=05hU8nn8cRfBFJm7QaOvYb421TdT8Cs03iUtzr1qqTc=;
 h=From:To:Cc:Subject:Date:From;
 b=bT+Ucjn4Jpx8Wm6c7Glui3ajNQVcW/FmGL8zC+9BKaEDj8jDa/zRvoYfDB5JCQW/i
 Lf8UvxztdwsqQ2qJIqM3DgFq8HOFvn2OB8VS1MUF0juYw51Mxl8wz+rNL6ltJ5ao1T
 4M965CjvPYc6MCYFuiPqepezThiI69DrO5c7aDGO8mvYXOCJSMy3/rSUAUE04zd3eK
 mvmbjejPLd47ijuTx49z1GGKvK1YA5p/HnX3LncQ1yfUoWQ+S+zHTuAjbQS1yEF8zx
 W3X81EG0/hseOX0g656NOHS6MYt2hOa/nXyZuj9pha3jp03m4FzSROFq/VqUebnpHg
 2ueWFmRvg6g/g==
From: =?UTF-8?q?Ricardo=20Ca=C3=B1uelo?= <ricardo.canuelo@collabora.com>
To: linux-doc@vger.kernel.org
Subject: [PATCH] docs: driver-api: virtio: virtio on Linux
Date: Tue,  2 Aug 2022 14:42:22 +0200
Message-Id: <20220802124222.3563378-1-ricardo.canuelo@collabora.com>
X-Mailer: git-send-email 2.25.1
MIME-Version: 1.0
Cc: mst@redhat.com, kernel@collabora.com,
 virtualization@lists.linux-foundation.org
X-BeenThere: virtualization@lists.linux-foundation.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Linux virtualization <virtualization.lists.linux-foundation.org>
List-Unsubscribe: <https://lists.linuxfoundation.org/mailman/options/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=unsubscribe>
List-Archive: <http://lists.linuxfoundation.org/pipermail/virtualization/>
List-Post: <mailto:virtualization@lists.linux-foundation.org>
List-Help: <mailto:virtualization-request@lists.linux-foundation.org?subject=help>
List-Subscribe: <https://lists.linuxfoundation.org/mailman/listinfo/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: virtualization-bounces@lists.linux-foundation.org
Sender: "Virtualization" <virtualization-bounces@lists.linux-foundation.org>

QmFzaWMgZG9jIGFib3V0IFZpcnRpbyBvbiBMaW51eCBhbmQgYSBzaG9ydCB0dXRvcmlhbCBvbiBW
aXJ0aW8gZHJpdmVycy4KTWlub3IgZml4ZXMgdG8gZXhpc3RpbmcgdmlydGlvIGtlcm5lbGRvY3Mu
CgpTaWduZWQtb2ZmLWJ5OiBSaWNhcmRvIENhw7F1ZWxvIDxyaWNhcmRvLmNhbnVlbG9AY29sbGFi
b3JhLmNvbT4KLS0tCiBEb2N1bWVudGF0aW9uL2RyaXZlci1hcGkvaW5kZXgucnN0ICAgICAgICAg
ICAgfCAgIDEgKwogRG9jdW1lbnRhdGlvbi9kcml2ZXItYXBpL3ZpcnRpby9pbmRleC5yc3QgICAg
IHwgIDExICsKIERvY3VtZW50YXRpb24vZHJpdmVyLWFwaS92aXJ0aW8vdmlydGlvLnJzdCAgICB8
IDI3NCArKysrKysrKysrKysrKysrKysKIC4uLi92aXJ0aW8vd3JpdGluZ192aXJ0aW9fZHJpdmVy
cy5yc3QgICAgICAgICB8IDE5MCArKysrKysrKysrKysKIE1BSU5UQUlORVJTICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICB8ICAgMSArCiBpbmNsdWRlL2xpbnV4L3ZpcnRpby5oICAg
ICAgICAgICAgICAgICAgICAgICAgfCAgIDYgKy0KIGluY2x1ZGUvbGludXgvdmlydGlvX2NvbmZp
Zy5oICAgICAgICAgICAgICAgICB8ICAgNiArLQogaW5jbHVkZS91YXBpL2xpbnV4L3ZpcnRpb19y
aW5nLmggICAgICAgICAgICAgIHwgIDE2ICstCiA4IGZpbGVzIGNoYW5nZWQsIDQ5NCBpbnNlcnRp
b25zKCspLCAxMSBkZWxldGlvbnMoLSkKIGNyZWF0ZSBtb2RlIDEwMDY0NCBEb2N1bWVudGF0aW9u
L2RyaXZlci1hcGkvdmlydGlvL2luZGV4LnJzdAogY3JlYXRlIG1vZGUgMTAwNjQ0IERvY3VtZW50
YXRpb24vZHJpdmVyLWFwaS92aXJ0aW8vdmlydGlvLnJzdAogY3JlYXRlIG1vZGUgMTAwNjQ0IERv
Y3VtZW50YXRpb24vZHJpdmVyLWFwaS92aXJ0aW8vd3JpdGluZ192aXJ0aW9fZHJpdmVycy5yc3QK
CmRpZmYgLS1naXQgYS9Eb2N1bWVudGF0aW9uL2RyaXZlci1hcGkvaW5kZXgucnN0IGIvRG9jdW1l
bnRhdGlvbi9kcml2ZXItYXBpL2luZGV4LnJzdAppbmRleCBkM2E1OGY3NzMyOGUuLjMwYTNkZTQ1
MmIxZCAxMDA2NDQKLS0tIGEvRG9jdW1lbnRhdGlvbi9kcml2ZXItYXBpL2luZGV4LnJzdAorKysg
Yi9Eb2N1bWVudGF0aW9uL2RyaXZlci1hcGkvaW5kZXgucnN0CkBAIC0xMDYsNiArMTA2LDcgQEAg
YXZhaWxhYmxlIHN1YnNlY3Rpb25zIGNhbiBiZSBzZWVuIGJlbG93LgogICAgdmZpby1tZWRpYXRl
ZC1kZXZpY2UKICAgIHZmaW8KICAgIHZmaW8tcGNpLWRldmljZS1zcGVjaWZpYy1kcml2ZXItYWNj
ZXB0YW5jZQorICAgdmlydGlvL2luZGV4CiAgICB4aWxpbngvaW5kZXgKICAgIHhpbGx5YnVzCiAg
ICB6b3JybwpkaWZmIC0tZ2l0IGEvRG9jdW1lbnRhdGlvbi9kcml2ZXItYXBpL3ZpcnRpby9pbmRl
eC5yc3QgYi9Eb2N1bWVudGF0aW9uL2RyaXZlci1hcGkvdmlydGlvL2luZGV4LnJzdApuZXcgZmls
ZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAuLjUyOGIxNGIyOTFlMwotLS0gL2Rldi9u
dWxsCisrKyBiL0RvY3VtZW50YXRpb24vZHJpdmVyLWFwaS92aXJ0aW8vaW5kZXgucnN0CkBAIC0w
LDAgKzEsMTEgQEAKKy4uIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBHUEwtMi4wCisKKz09PT09
PQorVmlydGlvCis9PT09PT0KKworLi4gdG9jdHJlZTo6CisgICA6bWF4ZGVwdGg6IDEKKworICAg
dmlydGlvCisgICB3cml0aW5nX3ZpcnRpb19kcml2ZXJzCmRpZmYgLS1naXQgYS9Eb2N1bWVudGF0
aW9uL2RyaXZlci1hcGkvdmlydGlvL3ZpcnRpby5yc3QgYi9Eb2N1bWVudGF0aW9uL2RyaXZlci1h
cGkvdmlydGlvL3ZpcnRpby5yc3QKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAw
MDAwLi4wNDlhOGFlZmFkOTIKLS0tIC9kZXYvbnVsbAorKysgYi9Eb2N1bWVudGF0aW9uL2RyaXZl
ci1hcGkvdmlydGlvL3ZpcnRpby5yc3QKQEAgLTAsMCArMSwyNzQgQEAKKy4uIFNQRFgtTGljZW5z
ZS1JZGVudGlmaWVyOiBHUEwtMi4wCisKKy4uIF92aXJ0aW86CisKKz09PT09PT09PT09PT09PQor
VmlydGlvIG9uIExpbnV4Cis9PT09PT09PT09PT09PT0KKworSW50cm9kdWN0aW9uCis9PT09PT09
PT09PT0KKworVmlydGlvIGlzIGFuIG9wZW4gc3RhbmRhcmQgaW50ZXJmYWNlIGZvciB2aXJ0dWFs
IG1hY2hpbmVzIHRvIGFjY2VzcworcGFyYXZpcnR1YWxpemVkIGRldmljZXMsIGllLiBkZXZpY2Vz
IHRoYXQgYXJlbid0IGVtdWxhdGVkIGJ5IGEKK2h5cGVydmlzb3IsIGJ1dCByYXRoZXIgcmVhbCBo
b3N0IGRldmljZXMgdGhhdCBhcmUgZXhwb3NlZCBieSB0aGUKK2h5cGVydmlzb3IgdG8gdGhlIGd1
ZXN0IHRvIGFjaGlldmUgbmF0aXZlIHBlcmZvcm1hbmNlLiBJbiBvdGhlciB3b3JkcywKK2l0IHBy
b3ZpZGVzIGEgY29tbXVuaWNhdGlvbiBtZWNoYW5pc20gZm9yIGEgZ3Vlc3QgT1MgdG8gdXNlIGRl
dmljZXMgb24KK3RoZSBob3N0IG1hY2hpbmUuCisKK1RoZSBjb25jcmV0ZSBoYXJkd2FyZSBkZXRh
aWxzIG9mIHRoZSByZWFsIGhvc3QgZGV2aWNlcyBhcmUgYWJzdHJhY3RlZCBpbiB0aGUKK2h5cGVy
dmlzb3IsIHdoaWNoIHByb3ZpZGVzIGEgc2V0IG9mIHNpbXBsaWZpZWQgdmlydHVhbCBkZXZpY2Vz
IHRoYXQKK2ltcGxlbWVudCB0aGUgVmlydGlvIHByb3RvY29sLiBUaGVzZSBkZXZpY2VzIGFyZSBk
ZWZpbmVkIGluIHRoZSBWaXJ0aW8KK3NwZWMgWzFdIGFuZCB0aGV5J3JlIHRoZSBkZXZpY2VzIHRo
YXQgdGhlIGd1ZXN0IE9TIHdpbGwgdWx0aW1hdGVseQoraGFuZGxlLiBTbywgaW4gdGhhdCByZWdh
cmQsIHRoZSBndWVzdCBPUyBrbm93cyBpdCdzIHJ1bm5pbmcgaW4gYSB2aXJ0dWFsCitlbnZpcm9u
bWVudCBhbmQgdGhhdCBpdCBuZWVkcyB0byB1c2UgdGhlIGFwcHJvcHJpYXRlIFZpcnRpbyBkcml2
ZXJzIHRvCitoYW5kbGUgdGhlIGRldmljZXMgaW5zdGVhZCBvZiB0aGUgcmVndWxhciBkZXZpY2Ug
ZHJpdmVycyBpdCdkIHVzZSBpbiBhCituYXRpdmUgb3IgcHVyZWx5IHZpcnR1YWwgZW52aXJvbm1l
bnQgKHdpdGggZW11bGF0ZWQgZGV2aWNlcykuCisKKworRGV2aWNlIC0gRHJpdmVyIGNvbW11bmlj
YXRpb246IHZpcnRxdWV1ZXMKKz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09CisKK0FsdGhvdWdoIHRoZSBWaXJ0aW8gZGV2aWNlcyBhcmUgcmVhbGx5IGFuIGFic3RyYWN0
aW9uIGxheWVyIGluIHRoZQoraHlwZXJ2aXNvciwgdGhleSdyZSBleHBvc2VkIHRvIHRoZSBndWVz
dCBhcyBpZiB0aGV5IGFyZSBwaHlzaWNhbCBkZXZpY2VzCitlaXRoZXIgUENJIG9yIE1NSU8tYmFz
ZWQuIFdlIHJlZmVyIHRvIHRoYXQgYXMgdGhlIHRyYW5zcG9ydCBtZXRob2QgYW5kCitpdCdzIG9y
dGhvZ29uYWwgdG8gdGhlIGRldmljZSBpdHNlbGYuIFRoZSBWaXJ0aW8gc3BlYyBkZWZpbmVzIHRo
ZXNlIHR3bworYW5kIG90aGVyIHRyYW5zcG9ydCBtZXRob2RzIGluIGRldGFpbCwgaW5jbHVkaW5n
IGRldmljZSBkaXNjb3ZlcnksCitjYXBhYmlsaXRpZXMgYW5kIGludGVycnVwdCBoYW5kbGluZy4K
KworVGhlIGNvbW11bmljYXRpb24gYmV0d2VlbiB0aGUgZHJpdmVyIGluIHRoZSBndWVzdCBPUyBh
bmQgdGhlIGRldmljZSBpbgordGhlIGh5cGVydmlzb3IgaXMgZG9uZSB0aHJvdWdoIHNoYXJlZCBt
ZW1vcnkgKHRoYXQncyB3aGF0IG1ha2VzIHZpcnRpbworZGV2aWNlcyBzbyBlZmZpY2llbnQpIHVz
aW5nIHNwZWNpYWxpemVkIGRhdGEgc3RydWN0dXJlcyBjYWxsZWQKK3ZpcnRxdWV1ZXMuIFRoZSB1
c2Ugb2YgdGhlc2UgdmlydHF1ZXVlcyBmb3IgZGF0YSB0cmFuc2ZlcnMgaXMgcmVmZXJyZWQKK3Rv
IGFzIHRoZSBkYXRhIHBsYW5lLCB3aGlsZSB0aGUgcHJvY2VzcyBvZiBzZXR0aW5nIHRoZW0gdXAg
YW5kCitjb29yZGluYXRpbmcgdGhlIGRyaXZlciBhbmQgdGhlIGRldmljZSBkdXJpbmcgdGhlIHNl
dHVwIHN0YWdlIGlzIGNhbGxlZAordGhlIGNvbnRyb2wgcGxhbmUuCisKK1ZpcnRxdWV1ZXMsIHdo
aWNoIGFyZSB1c2VkIHRvIGNvbW11bmljYXRlIHRoZSBkcml2ZXIgYW5kIHRoZSBkZXZpY2UKK3Jl
Z2FyZGxlc3Mgb2YgdGhlIHRyYW5zcG9ydCBtZXRob2QgdXNlZCwgYXJlIGFjdHVhbGx5IHJpbmcg
YnVmZmVycworWyNmMV1fIG9mIGJ1ZmZlciBkZXNjcmlwdG9ycyBzaW1pbGFyIHRvIHRoZSBvbmVz
IHVzZWQgaW4gYSBuZXR3b3JrCitkZXZpY2U6CisKKy4uIGtlcm5lbC1kb2M6OiBpbmNsdWRlL3Vh
cGkvbGludXgvdmlydGlvX3JpbmcuaAorICAgIDppZGVudGlmaWVyczogc3RydWN0IHZyaW5nX2Rl
c2MKKworQWxsIHRoZSBidWZmZXJzIHRoZSBkZXNjcmlwdG9ycyBwb2ludCB0byBhcmUgYWxsb2Nh
dGVkIGJ5IHRoZSBndWVzdCBhbmQKK3VzZWQgYnkgdGhlIGhvc3QgZWl0aGVyIGZvciByZWFkaW5n
IG9yIGZvciB3cml0aW5nIGJ1dCBub3QgZm9yIGJvdGguCisKK1JlZmVyIHRvIFsyXSBmb3IgYW4g
aWxsdXN0cmF0ZWQgb3ZlcnZpZXcgb2YgdmlydHF1ZXVlcyBhbmQgaG93IHRoZSBob3N0CitkZXZp
Y2UgYW5kIHRoZSBndWVzdCBkcml2ZXIgY29tbXVuaWNhdGUuCisKK0VhY2ggdmlydHF1ZXVlIGRl
ZmluZXMgdGhyZWUgYXJlYXM6IHRoZSBkZXNjcmlwdG9yIGFyZWEgKGBkZXNjYCksIHdoaWNoCitp
cyBhbiBhcnJheSBvZiBkZXNjcmlwdG9ycyBhcyBkZXNjcmliZWQgYWJvdmUsIGFuZCB0aGUgYXZh
aWwgYW5kIHVzZWQKK3JpbmdzLgorCitUaGUgYGF2YWlsYCByaW5nIGlzIHdoZXJlIHRoZSBkcml2
ZXIgcHV0cyB0aGUgaW5kZXhlcyBvZiB0aGUgZGVzY3JpcHRvcnMKK3RoYXQgaXQgaGFzIHNldCB1
cCBmb3IgdGhlIGRldmljZSB0byBjb25zdW1lLiBUaGUgYHVzZWRgIHJpbmcgaXMgdXNlZCBieQor
dGhlIGRldmljZSB0byByZXR1cm4gdGhlIGNvbnN1bWVkIGJ1ZmZlcnMgKHJlYWQgb3Igd3JpdHRl
bikgdG8gdGhlCitkcml2ZXIuIEZvciBlYWNoIHVzZWQgZGVzY3JpcHRvciwgdGhlIHJpbmcgYWxz
byBjb250YWlucyB0aGUgdXNlZCBidWZmZXIKK2xlbmd0aCBpbiBjYXNlIGl0IHdhcyB3cml0dGVu
LgorCitUaGVzZSByaW5ncyBhcmUgbGFpZCBvdXQgaW4gdGhlIDpjOnR5cGU6YHZyaW5nX3ZpcnRx
dWV1ZWAgc3RydWN0Cit0b2dldGhlciB3aXRoIG90aGVyIG5lY2Vzc2FyeSBtYW5hZ2VtZW50IGRh
dGEsIGluY2x1ZGluZyBhIHBvaW50ZXIgdG8gYQordHJhbnNwb3J0LXNwZWNpZmljIGBgbm90aWZ5
YGAgZnVuY3Rpb24gdGhhdCBpcyB1c2VkIHRvIGxldCB0aGUgaG9zdCBzaWRlCitrbm93IHdoZW4g
bmV3IGJ1ZmZlcnMgaGF2ZSBiZWVuIHB1dCBpbiB0aGUgdmlydHF1ZXVlIGZvcgorcHJvY2Vzc2lu
Zy4gRW1iZWRkZWQgaW4gdGhpcyBzdHJ1Y3QgaXMgdGhlIDpjOnR5cGU6YHZpcnRxdWV1ZWAgc3Ry
dWN0LAord2hpY2ggaXMgdGhlIGRhdGEgc3RydWN0dXJlIHRoYXQncyB1bHRpbWF0ZWx5IHVzZWQg
YnkgdmlydGlvIGRyaXZlcnM6CisKKy4uIGtlcm5lbC1kb2M6OiBpbmNsdWRlL2xpbnV4L3ZpcnRp
by5oCisgICAgOmlkZW50aWZpZXJzOiBzdHJ1Y3QgdmlydHF1ZXVlCisKK1RoZSBjYWxsYmFjayBz
YXZlZCBpbiB0aGlzIHN0cnVjdCBzZXJ2ZXMgdGhlIHNhbWUgcHVycG9zZSBhcyB0aGUKK2Bgbm90
aWZ5YGAgZnVuY3Rpb24gaW4gOmM6dHlwZTpgdnJpbmdfdmlydHF1ZXVlYCBidXQgaW4gdGhlCitv
cHBvc2l0ZSBkaXJlY3Rpb24uIFRoYXQgaXMsIHRoZSBjYWxsYmFjayBpcyB0cmlnZ2VyZWQgd2hl
biB0aGUgaG9zdCBoYXMKK3VzZWQgdGhlIHByb3ZpZGVkIGJ1ZmZlcnMuIE1vcmUgc3BlY2lmaWNh
bGx5LCB0aGUgdHJpZ2dlciB3aWxsIGJlIGFuCitpbnRlcnJ1cHQgaXNzdWVkIGJ5IHRoZSBoeXBl
cnZpc29yIChRRU1VLCBmb3IgZXhhbXBsZSkuIEludGVycnVwdAorcmVxdWVzdCBoYW5kbGVycyBh
cmUgcmVnaXN0ZXJlZCBmb3IgYSB2aXJ0cXVldWUgZHVyaW5nIHRoZSB2aXJ0cXVldWUKK3NldHVw
IHByb2Nlc3M6OgorCisJc3RhdGljIGludCB2cF9maW5kX3Zxc19pbnR4KHN0cnVjdCB2aXJ0aW9f
ZGV2aWNlICp2ZGV2LCB1bnNpZ25lZCBpbnQgbnZxcywKKwkJCXN0cnVjdCB2aXJ0cXVldWUgKnZx
c1tdLCB2cV9jYWxsYmFja190ICpjYWxsYmFja3NbXSwKKwkJCWNvbnN0IGNoYXIgKiBjb25zdCBu
YW1lc1tdLCBjb25zdCBib29sICpjdHgpCisJeworCQlzdHJ1Y3QgdmlydGlvX3BjaV9kZXZpY2Ug
KnZwX2RldiA9IHRvX3ZwX2RldmljZSh2ZGV2KTsKKwkJaW50IGksIGVyciwgcXVldWVfaWR4ID0g
MDsKKworCQl2cF9kZXYtPnZxcyA9IGtjYWxsb2MobnZxcywgc2l6ZW9mKCp2cF9kZXYtPnZxcyks
IEdGUF9LRVJORUwpOworCQlpZiAoIXZwX2Rldi0+dnFzKQorCQkJcmV0dXJuIC1FTk9NRU07CisK
KwkJZXJyID0gcmVxdWVzdF9pcnEodnBfZGV2LT5wY2lfZGV2LT5pcnEsIHZwX2ludGVycnVwdCwg
SVJRRl9TSEFSRUQsCisJCQkJZGV2X25hbWUoJnZkZXYtPmRldiksIHZwX2Rldik7CisJCS4uLgor
CitJbiB0aGlzIGNhc2UsIHdoZW4gdGhlIGludGVycnVwdCBhcnJpdmVzIDpjOmZ1bmM6YHZwX2lu
dGVycnVwdGAgd2lsbCBiZQorY2FsbGVkIGFuZCBpdCB3aWxsIHVsdGltYXRlbHkgbGVhZCB0byBh
IGNhbGwgdG8KKzpjOmZ1bmM6YHZyaW5nX2ludGVycnVwdGAsIHdoaWNoIGVuZHMgdXAgY2FsbGlu
ZyB0aGUgdmlydHF1ZXVlIGNhbGxiYWNrCitmdW5jdGlvbjo6CisKKwlpcnFyZXR1cm5fdCB2cmlu
Z19pbnRlcnJ1cHQoaW50IGlycSwgdm9pZCAqX3ZxKQorCXsKKwkJc3RydWN0IHZyaW5nX3ZpcnRx
dWV1ZSAqdnEgPSB0b192dnEoX3ZxKTsKKworCQkuLi4KKworCQlwcl9kZWJ1ZygidmlydHF1ZXVl
IGNhbGxiYWNrIGZvciAlcCAoJXApXG4iLCB2cSwgdnEtPnZxLmNhbGxiYWNrKTsKKwkJaWYgKHZx
LT52cS5jYWxsYmFjaykKKwkJCXZxLT52cS5jYWxsYmFjaygmdnEtPnZxKTsKKworCQlyZXR1cm4g
SVJRX0hBTkRMRUQ7CisJfQorCitWaXJ0cXVldWVzIGFyZSBhbGxvY2F0ZWQgYnkgdGhlIGd1ZXN0
IGtlcm5lbCBhbmQgdGhlaXIgbWVtb3J5IGFkZHJlc3NlcworYXJlIHRoZW4gY29tbXVuaWNhdGVk
IHRvIHRoZSBoeXBlcnZpc29yIHNvIGl0IGNhbiBhY2Nlc3MgdGhlbS4gSW4gdGhlCitob3N0IHNp
ZGUgdGhlcmUgY291bGQgYmUgc29tZSBkaWZmZXJlbmNlcyBpbiB0aGlzIHByb2Nlc3MgZGVwZW5k
aW5nIG9uCit3aG8gaXMgYWN0aW5nIGFzIHRoZSBoeXBlcnZpc29yLCBidXQgZnJvbSB0aGUgZ3Vl
c3QgcG9pbnQgb2YgdmlldyB0aGlzCitjb21tdW5pY2F0aW9uIGRlcGVuZHMgb24gdGhlIHRyYW5z
cG9ydCBtZXRob2QgdXNlZC4gU28gZm9yIGEgUENJIGRldmljZQoraW4gUUVNVSwgZm9yIGV4YW1w
bGUsIHRoZSBRRU1VIHNldHVwcyB0aGUgUENJIEJBUnMgKHdoaWNoIGFyZSBtZW1vcnkKK3JlZ2lv
bnMgZGVmaW5lZCBpbiB0aGUgdmlydHVhbCBQQ0kgZGV2aWNlKSBhbmQgdGhlIGd1ZXN0IGtlcm5l
bCBtYXBzCit0aGVtIHRvIHZpcnR1YWwgbWVtb3J5LCBzbyB3aGVuIGl0IHdyaXRlcyB0byB0aGVt
IGl0J3MgYWN0dWFsbHkgd3JpdGluZwordG8gdGhlIGhvc3QgdXNlcnNwYWNlIG1lbW9yeSwgYWN0
aW5nIGxpa2Ugc29tZSBraW5kIG9mIGd1ZXN0LWhvc3QgSVBDCittZWNoYW5pc20gb24gdG9wIG9m
IFBDSTo6CisKKwkvKgorCSAqIHZwX21vZGVybl9xdWV1ZV9hZGRyZXNzIC0gc2V0IHRoZSB2aXJ0
cXVldWUgYWRkcmVzcworCSAqIEBtZGV2OiB0aGUgbW9kZXJuIHZpcnRpby1wY2kgZGV2aWNlCisJ
ICogQGluZGV4OiB0aGUgcXVldWUgaW5kZXgKKwkgKiBAZGVzY19hZGRyOiBhZGRyZXNzIG9mIHRo
ZSBkZXNjcmlwdG9yIGFyZWEKKwkgKiBAZHJpdmVyX2FkZHI6IGFkZHJlc3Mgb2YgdGhlIGRyaXZl
ciBhcmVhCisJICogQGRldmljZV9hZGRyOiBhZGRyZXNzIG9mIHRoZSBkZXZpY2UgYXJlYQorCSAq
LworCXZvaWQgdnBfbW9kZXJuX3F1ZXVlX2FkZHJlc3Moc3RydWN0IHZpcnRpb19wY2lfbW9kZXJu
X2RldmljZSAqbWRldiwKKwkJCQkgICAgIHUxNiBpbmRleCwgdTY0IGRlc2NfYWRkciwgdTY0IGRy
aXZlcl9hZGRyLAorCQkJCSAgICAgdTY0IGRldmljZV9hZGRyKQorCXsKKwkJc3RydWN0IHZpcnRp
b19wY2lfY29tbW9uX2NmZyBfX2lvbWVtICpjZmcgPSBtZGV2LT5jb21tb247CisKKwkJdnBfaW93
cml0ZTE2KGluZGV4LCAmY2ZnLT5xdWV1ZV9zZWxlY3QpOworCisJCXZwX2lvd3JpdGU2NF90d29w
YXJ0KGRlc2NfYWRkciwgJmNmZy0+cXVldWVfZGVzY19sbywKKwkJCQkgICAgICZjZmctPnF1ZXVl
X2Rlc2NfaGkpOworCQl2cF9pb3dyaXRlNjRfdHdvcGFydChkcml2ZXJfYWRkciwgJmNmZy0+cXVl
dWVfYXZhaWxfbG8sCisJCQkJICAgICAmY2ZnLT5xdWV1ZV9hdmFpbF9oaSk7CisJCXZwX2lvd3Jp
dGU2NF90d29wYXJ0KGRldmljZV9hZGRyLCAmY2ZnLT5xdWV1ZV91c2VkX2xvLAorCQkJCSAgICAg
JmNmZy0+cXVldWVfdXNlZF9oaSk7CisJfQorCisKK0RldmljZSBkaXNjb3ZlcnkgYW5kIHByb2Jp
bmcKKz09PT09PT09PT09PT09PT09PT09PT09PT09PT0KKworSG93IGEgdmlydGlvIGRldmljZSBp
cyBmb3VuZCBhbmQgY29uZmlndXJlZCBieSB0aGUga2VybmVsIGRlcGVuZHMgb24gaG93Cit0aGUg
aHlwZXJ2aXNvciBkZWZpbmVzIGl0LiBUYWtpbmcgdGhlIGBRRU1VIHZpcnRpby1jb25zb2xlCis8
aHR0cHM6Ly9naXRsYWIuY29tL3FlbXUtcHJvamVjdC9xZW11Ly0vYmxvYi9tYXN0ZXIvaHcvY2hh
ci92aXJ0aW8tY29uc29sZS5jPmBfXworZGV2aWNlIGFzIGFuIGV4YW1wbGUsIHdoaWNoIHVzZXMg
UENJIGFzIGEgdHJhbnNwb3J0IG1ldGhvZCwgdGhlIGRldmljZQord2lsbCBwcmVzZW50IGl0c2Vs
ZiBpbiB0aGUgUENJIGJ1cyB3aXRoIHZlbmRvciAweDFhZjQgKFJlZEhhdCwgSW5jLikgYW5kCitk
ZXZpY2UgaWQgMHgxMDAzIChWaXJ0aW8gY29uc29sZSksIGFzIGRlZmluZWQgaW4gdGhlIHNwZWMs
IHNvIHRoZSBrZXJuZWwKK3dpbGwgZGV0ZWN0IGl0IGFzIGl0IHdvdWxkIGRvIHdpdGggYW55IG90
aGVyIFBDSSBkZXZpY2UuCisKK0luIG1vcmUgZGV0YWlsOgorCitUaGUgdmlydGlvIGNvcmUgc3Vi
c3lzdGVtIGlzIGNvbXBvc2VkIG9mIG11bHRpcGxlIG1vZHVsZXMvZHJpdmVycywgYW1vbmcKK3Ro
ZW06CisKKy0gdmlydGlvLmM6IGltcGxlbWVudHMgdGhlIHZpcnRpbyBidXMgZHJpdmVyLgorLSB2
aXJ0aW9fbW1pby5jOiBpbXBsZW1lbnRzIHRoZSBNTUlPIHRyYW5zcG9ydCwgdGhpcyBpcyBhIHBs
YXRmb3JtCisgIGRyaXZlciAodmlydGlvLW1taW8pLgorLSB2aXJ0aW9fcGNpX2NvbW1vbi5jIGFu
ZCB2aXJ0aW9fcGNpX21vZGVybi5jIChhbmQsIG9wdGlvbmFsbHksCisgIHZpcnRpb19wY2lfbGVn
YWN5LmMpOiBpbXBsZW1lbnQgdGhlIHZpcnRpby1wY2kgUENJIGRyaXZlcgorCitUaGVuIHRoZXJl
IGFyZSBpbmRpdmlkdWFsIHZpcnRpbyBkcml2ZXJzIGZvciBzcGVjaWZpYyBkZXZpY2UgdHlwZXMs
IHN1Y2gKK2FzIHRoZSB2aXJ0aW8tY29uc29sZSBkcml2ZXIuIFRoZXNlIGFyZSByZWdpc3RlcmVk
IHRvIHRoZSB2aXJ0aW8gYnVzCitkcml2ZXIuCisKK0R1cmluZyB0aGUgUENJIGVudW1lcmF0aW9u
IHByb2Nlc3MsIGlmIGEgZGV2aWNlIGlzIGZvdW5kIHRvIG1hdGNoIHRoZQordmlydGlvLXBjaSBk
cml2ZXIgKGFjY29yZGluZyB0byB0aGUgdmlydGlvLXBjaSBkZXZpY2UgdGFibGUsIGFueSBQQ0kK
K2RldmljZSB3aXRoIHZlbmRvciBpZCA9IDB4MWFmNCk6OgorCisJLyogUXVtcmFuZXQgZG9uYXRl
ZCB0aGVpciB2ZW5kb3IgSUQgZm9yIGRldmljZXMgMHgxMDAwIHRocnUgMHgxMEZGLiAqLworCXN0
YXRpYyBjb25zdCBzdHJ1Y3QgcGNpX2RldmljZV9pZCB2aXJ0aW9fcGNpX2lkX3RhYmxlW10gPSB7
CisJCXsgUENJX0RFVklDRShQQ0lfVkVORE9SX0lEX1JFREhBVF9RVU1SQU5FVCwgUENJX0FOWV9J
RCkgfSwKKwkJeyAwIH0KKwl9OworCit0aGVuIHRoZSB2aXJ0aW8tcGNpIGRyaXZlciBpcyBwcm9i
ZWQuIFRoaXMgaW5jbHVkZXMgc2V0dGluZyB1cCB0aGUKK2RldmljZSBgYHZpcnRpb19jb25maWdf
b3BzYGAgZnVuY3Rpb25zIGFuZCBpdHMgdmlydHF1ZXVlIGhhbmRsaW5nCittZXRob2RzLCBzdWNo
IGFzIDpjOmZ1bmM6YHNldHVwX3ZxYCB0byBhbGxvY2F0ZSBhbmQgY29uZmlndXJlIHRoZW0sIChi
dXQKK3RoaXMgbWV0aG9kIGlzIG5vdCBjYWxsZWQgeWV0KTo6CisKKwlpbnQgdmlydGlvX3BjaV9t
b2Rlcm5fcHJvYmUoc3RydWN0IHZpcnRpb19wY2lfZGV2aWNlICp2cF9kZXYpCisJeworCQlzdHJ1
Y3QgdmlydGlvX3BjaV9tb2Rlcm5fZGV2aWNlICptZGV2ID0gJnZwX2Rldi0+bWRldjsKKwkJc3Ry
dWN0IHBjaV9kZXYgKnBjaV9kZXYgPSB2cF9kZXYtPnBjaV9kZXY7CisJCWludCBlcnI7CisKKwkJ
bWRldi0+cGNpX2RldiA9IHBjaV9kZXY7CisKKwkJZXJyID0gdnBfbW9kZXJuX3Byb2JlKG1kZXYp
OworCQlpZiAoZXJyKQorCQkJcmV0dXJuIGVycjsKKworCQlpZiAobWRldi0+ZGV2aWNlKQorCQkJ
dnBfZGV2LT52ZGV2LmNvbmZpZyA9ICZ2aXJ0aW9fcGNpX2NvbmZpZ19vcHM7CisJCWVsc2UKKwkJ
CXZwX2Rldi0+dmRldi5jb25maWcgPSAmdmlydGlvX3BjaV9jb25maWdfbm9kZXZfb3BzOworCisJ
CXZwX2Rldi0+Y29uZmlnX3ZlY3RvciA9IHZwX2NvbmZpZ192ZWN0b3I7CisJCXZwX2Rldi0+c2V0
dXBfdnEgPSBzZXR1cF92cTsKKwkJdnBfZGV2LT5kZWxfdnEgPSBkZWxfdnE7CisJCXZwX2Rldi0+
aXNyID0gbWRldi0+aXNyOworCQl2cF9kZXYtPnZkZXYuaWQgPSBtZGV2LT5pZDsKKworCQlyZXR1
cm4gMDsKKwl9CisKK0lmIHRoZSBwcm9iaW5nIGdvZXMgd2VsbCwgdGhlIGRldmljZSBpcyByZWdp
c3RlcmVkIHRvIHRoZSB2aXJ0aW8gYnVzOjoKKworCXN0YXRpYyBpbnQgdmlydGlvX3BjaV9wcm9i
ZShzdHJ1Y3QgcGNpX2RldiAqcGNpX2RldiwKKwkJCQkgICAgY29uc3Qgc3RydWN0IHBjaV9kZXZp
Y2VfaWQgKmlkKQorCXsKKwkJLi4uCisKKwkJaWYgKGZvcmNlX2xlZ2FjeSkgeworCQkJcmMgPSB2
aXJ0aW9fcGNpX2xlZ2FjeV9wcm9iZSh2cF9kZXYpOworCQkJLyogQWxzbyB0cnkgbW9kZXJuIG1v
ZGUgaWYgd2UgY2FuJ3QgbWFwIEJBUjAgKG5vIElPIHNwYWNlKS4gKi8KKwkJCWlmIChyYyA9PSAt
RU5PREVWIHx8IHJjID09IC1FTk9NRU0pCisJCQkJcmMgPSB2aXJ0aW9fcGNpX21vZGVybl9wcm9i
ZSh2cF9kZXYpOworCQkJaWYgKHJjKQorCQkJCWdvdG8gZXJyX3Byb2JlOworCQl9IGVsc2Ugewor
CQkJcmMgPSB2aXJ0aW9fcGNpX21vZGVybl9wcm9iZSh2cF9kZXYpOworCQkJaWYgKHJjID09IC1F
Tk9ERVYpCisJCQkJcmMgPSB2aXJ0aW9fcGNpX2xlZ2FjeV9wcm9iZSh2cF9kZXYpOworCQkJaWYg
KHJjKQorCQkJCWdvdG8gZXJyX3Byb2JlOworCQl9CisKKwkJLi4uCisKKwkJcmMgPSByZWdpc3Rl
cl92aXJ0aW9fZGV2aWNlKCZ2cF9kZXYtPnZkZXYpOworCitXaGVuIHRoZSBkZXZpY2UgaXMgcmVn
aXN0ZXJlZCB0byB0aGUgdmlydGlvIGJ1cyB0aGUga2VybmVsIHdpbGwgbG9vaworZm9yIGEgZHJp
dmVyIGluIHRoZSBidXMgdGhhdCBjYW4gaGFuZGxlIHRoZSBkZXZpY2UgYW5kIGNhbGwgdGhhdAor
ZHJpdmVyJ3MgYGBwcm9iZWBgIG1ldGhvZC4KKworSXQncyBhdCB0aGlzIHN0YWdlIHRoYXQgdGhl
IHZpcnRxdWV1ZXMgd2lsbCBiZSBzZXR1cCBieSBjYWxsaW5nIHRoZQorYXBwcm9wcmlhdGUgYHZp
cnRpb19maW5kYCBoZWxwZXIgZnVuY3Rpb24sIHN1Y2ggYXMKKzpjOmZ1bmM6YHZpcnRpb19maW5k
X3NpbmdsZV92cWAgb3IgOmM6ZnVuYzpgdmlydGlvX2ZpbmRfdnFzYCwgd2hpY2ggd2lsbAorZW5k
IHVwIGNhbGxpbmcgdGhlIGRldmljZSBgYGZpbmRfdnFzYGAgY29uZmlnIG9wICh0cmFuc3BvcnQt
c3BlY2lmaWMpLAord2hpY2ggd2lsbCBhbGxvY2F0ZSB0aGUgdmlydHF1ZXVlcyBhbmQgY29uZmln
dXJlIHRoZW0uIEluIHRoZSBjYXNlIG9mCit2aXJ0aW8gUENJIGRldmljZXMsIHRoYXQncyBkb25l
IGJ5IHRoZSBgYHNldHVwX3ZxYGAgbWV0aG9kIHNlZW4gYWJvdmUuCisKKworUmVmZXJlbmNlcwor
PT09PT09PT09PQorCitbMV0gVmlydGlvIFNwZWMgdjEuMToKK2h0dHBzOi8vZG9jcy5vYXNpcy1v
cGVuLm9yZy92aXJ0aW8vdmlydGlvL3YxLjEvdmlydGlvLXYxLjEuaHRtbAorCitbMl0gVmlydHF1
ZXVlcyBhbmQgdmlydGlvIHJpbmc6IEhvdyB0aGUgZGF0YSB0cmF2ZWxzCitodHRwczovL3d3dy5y
ZWRoYXQuY29tL2VuL2Jsb2cvdmlydHF1ZXVlcy1hbmQtdmlydGlvLXJpbmctaG93LWRhdGEtdHJh
dmVscworCisuLiBydWJyaWM6OiBGb290bm90ZXMKKworLi4gWyNmMV0gdGhhdCdzIHdoeSB0aGV5
IG1heSBiZSBhbHNvIHJlZmVycmVkIGFzIHZpcnRyaW5ncy4KZGlmZiAtLWdpdCBhL0RvY3VtZW50
YXRpb24vZHJpdmVyLWFwaS92aXJ0aW8vd3JpdGluZ192aXJ0aW9fZHJpdmVycy5yc3QgYi9Eb2N1
bWVudGF0aW9uL2RyaXZlci1hcGkvdmlydGlvL3dyaXRpbmdfdmlydGlvX2RyaXZlcnMucnN0Cm5l
dyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAwMC4uNWNiMDg4YjgxN2FlCi0tLSAv
ZGV2L251bGwKKysrIGIvRG9jdW1lbnRhdGlvbi9kcml2ZXItYXBpL3ZpcnRpby93cml0aW5nX3Zp
cnRpb19kcml2ZXJzLnJzdApAQCAtMCwwICsxLDE5MCBAQAorLi4gU1BEWC1MaWNlbnNlLUlkZW50
aWZpZXI6IEdQTC0yLjAKKworLi4gX3dyaXRpbmdfdmlydGlvX2RyaXZlcnM6CisKKz09PT09PT09
PT09PT09PT09PT09PT0KK1dyaXRpbmcgVmlydGlvIERyaXZlcnMKKz09PT09PT09PT09PT09PT09
PT09PT0KKworSW50cm9kdWN0aW9uCis9PT09PT09PT09PT0KKworVGhlIGBWaXJ0aW8gc3BlYwor
PGh0dHBzOi8vZG9jcy5vYXNpcy1vcGVuLm9yZy92aXJ0aW8vdmlydGlvL3YxLjEvY3MwMS92aXJ0
aW8tdjEuMS1jczAxLmh0bWwjeDEtMTkzMDAwNT5gX18KK2RlZmluZXMgYWxsIHRoZSBzdXBwb3J0
ZWQgVmlydGlvIGRldmljZSB0eXBlcy4gU2luY2UgdGhlc2UgZGV2aWNlcyBhcmUsCitieSBkZWZp
bml0aW9uLCBtZWFudCBhcyBhYnN0cmFjdGlvbnMgZm9yIGEgd2lkZSB2YXJpZXR5IG9mIHJlYWwK
K2hhcmR3YXJlLCB0aGUgYWRkaXRpb24gb2YgbmV3IHZpcnRpbyBkcml2ZXJzIGlzIG5vdCBleHBl
Y3RlZCB0byBiZSB2ZXJ5CitmcmVxdWVudC4gU3RpbGwsIHRoaXMgZG9jdW1lbnQgc2VydmVzIGFz
IGEgYmFzaWMgZ3VpZGVsaW5lIGZvciBkcml2ZXIKK3Byb2dyYW1tZXJzIHRoYXQgbmVlZCB0byBo
YWNrIGEgbmV3IFZpcnRpbyBkcml2ZXIgb3IgdW5kZXJzdGFuZCB0aGUKK2Vzc2VudGlhbHMgb2Yg
dGhlIGV4aXN0aW5nIG9uZXMuIFNlZSA6cmVmOmBWaXJ0aW8gb24gTGludXggPHZpcnRpbz5gIGZv
cgorYSBnZW5lcmFsIG92ZXJ2aWV3IG9mIFZpcnRpby4KKworCitEcml2ZXIgYm9pbGVycGxhdGUK
Kz09PT09PT09PT09PT09PT09PQorCitBcyBhIGJhcmUgbWluaW11bSwgYSB2aXJ0aW8gZHJpdmVy
IHNob3VsZCByZWdpc3RlciBpbiB0aGUgdmlydGlvIGJ1cyBhbmQKK2NvbmZpZ3VyZSB0aGUgdmly
dHF1ZXVlcyBmb3IgdGhlIGRldmljZSBhY2NvcmRpbmcgdG8gaXRzIHNwZWMsIHRoZQorY29uZmln
dXJhdGlvbiBvZiB0aGUgdmlydHF1ZXVlcyBpbiB0aGUgZHJpdmVyIHNpZGUgbXVzdCBtYXRjaCB0
aGUKK3ZpcnRxdWV1ZSBkZWZpbml0aW9ucyBpbiB0aGUgZGV2aWNlLiBBIGJhc2ljIGRyaXZlciBz
a2VsZXRvbiBjb3VsZCBsb29rCitsaWtlIHRoaXM6OgorCisJI2luY2x1ZGUgPGxpbnV4L3ZpcnRp
by5oPgorCSNpbmNsdWRlIDxsaW51eC92aXJ0aW9faWRzLmg+CisJI2luY2x1ZGUgPGxpbnV4L3Zp
cnRpb19jb25maWcuaD4KKwkjaW5jbHVkZSA8bGludXgvbW9kdWxlLmg+CisKKwkvKiBkZXZpY2Ug
cHJpdmF0ZSBkYXRhIChvbmUgcGVyIGRldmljZSkgKi8KKwlzdHJ1Y3QgdmlydGlvX2R1bW15X2Rl
diB7CisJCXN0cnVjdCB2aXJ0cXVldWUgKnZxOworCX07CisKKwlzdGF0aWMgdm9pZCB2aXJ0aW9f
ZHVtbXlfcmVjdl9jYihzdHJ1Y3QgdmlydHF1ZXVlICp2cSkKKwl7CisJCXN0cnVjdCB2aXJ0aW9f
ZHVtbXlfZGV2ICpkZXYgPSB2cS0+dmRldi0+cHJpdjsKKwkJY2hhciAqYnVmOworCQl1bnNpZ25l
ZCBpbnQgbGVuOworCisJCWJ1ZiA9IHZpcnRxdWV1ZV9nZXRfYnVmKGRldi0+dnEsICZsZW4pOwor
CQkvKiBzcHVyaW91cyBjYWxsYmFjaz8gKi8KKwkJaWYgKCFidWYpCisJCQlyZXR1cm47CisKKwkJ
LyogUHJvY2VzcyB0aGUgcmVjZWl2ZWQgZGF0YSAqLworCX0KKworCXN0YXRpYyBpbnQgdmlydGlv
X2R1bW15X3Byb2JlKHN0cnVjdCB2aXJ0aW9fZGV2aWNlICp2ZGV2KQorCXsKKwkJc3RydWN0IHZp
cnRpb19kdW1teV9kZXYgKmRldiA9IE5VTEw7CisKKwkJLyogaW5pdGlhbGl6ZSBkZXZpY2UgZGF0
YSAqLworCQlkZXYgPSBremFsbG9jKHNpemVvZihzdHJ1Y3QgdmlydGlvX2R1bW15X2RldiksIEdG
UF9LRVJORUwpOworCQlpZiAoIWRldikKKwkJCXJldHVybiAtRU5PTUVNOworCisJCS8qIHRoZSBk
ZXZpY2UgaGFzIGEgc2luZ2xlIHZpcnRxdWV1ZSAqLworCQlkZXYtPnZxID0gdmlydGlvX2ZpbmRf
c2luZ2xlX3ZxKHZkZXYsIHZpcnRpb19kdW1teV9yZWN2X2NiLCAiaW5wdXQiKTsKKwkJaWYgKElT
X0VSUihkZXYtPnZxKSkgeworCQkJa2ZyZWUoZGV2KTsKKwkJCXJldHVybiBQVFJfRVJSKGRldi0+
dnEpOworCisJCX0KKwkJdmRldi0+cHJpdiA9IGRldjsKKworCQlyZXR1cm4gMDsKKwl9CisKKwlz
dGF0aWMgdm9pZCB2aXJ0aW9fZHVtbXlfcmVtb3ZlKHN0cnVjdCB2aXJ0aW9fZGV2aWNlICp2ZGV2
KQorCXsKKwkJc3RydWN0IHZpcnRpb19kdW1teV9kZXYgKmRldiA9IHZkZXYtPnByaXY7CisKKwkJ
LyoKKwkJICogRGlzYWJsZSB2cSBpbnRlcnJ1cHRzOiBlcXVpdmFsZW50IHRvCisJCSAqIHZkZXYt
PmNvbmZpZy0+cmVzZXQodmRldikKKwkJICovCisJCXZpcnRpb19yZXNldF9kZXZpY2UodmRldik7
CisKKwkJLyogcmVtb3ZlIHZpcnRxdWV1ZXMgKi8KKwkJdmRldi0+Y29uZmlnLT5kZWxfdnFzKHZk
ZXYpOworCisJCWtmcmVlKGRldik7CisJfQorCisJc3RhdGljIGNvbnN0IHN0cnVjdCB2aXJ0aW9f
ZGV2aWNlX2lkIGlkX3RhYmxlW10gPSB7CisJCXsgVklSVElPX0lEX0RVTU1ZLCBWSVJUSU9fREVW
X0FOWV9JRCB9LAorCQl7IDAgfSwKKwl9OworCisJc3RhdGljIHN0cnVjdCB2aXJ0aW9fZHJpdmVy
IHZpcnRpb19kdW1teV9kcml2ZXIgPSB7CisJCS5kcml2ZXIubmFtZSA9CUtCVUlMRF9NT0ROQU1F
LAorCQkuZHJpdmVyLm93bmVyID0JVEhJU19NT0RVTEUsCisJCS5pZF90YWJsZSA9CWlkX3RhYmxl
LAorCQkucHJvYmUgPQl2aXJ0aW9fZHVtbXlfcHJvYmUsCisJCS5yZW1vdmUgPQl2aXJ0aW9fZHVt
bXlfcmVtb3ZlLAorCX07CisKKwltb2R1bGVfdmlydGlvX2RyaXZlcih2aXJ0aW9fZHVtbXlfZHJp
dmVyKTsKKwlNT0RVTEVfREVWSUNFX1RBQkxFKHZpcnRpbywgaWRfdGFibGUpOworCU1PRFVMRV9E
RVNDUklQVElPTigiRHVtbXkgdmlydGlvIGRyaXZlciIpOworCU1PRFVMRV9MSUNFTlNFKCJHUEwi
KTsKKworVGhpcyBhc3N1bWVzIHRoZSBkZXZpY2UgaXMgb2YgYSBuZXcgdmlydGlvIGRldmljZSB0
eXBlIG5vdCBkZWZpbmVkCitiZWZvcmU6IGBgVklSVElPX0RFVklDRV9EVU1NWWBgLCB3aGljaCB3
ZSBzaG91bGQgZGVmaW5lIGluCitpbmNsdWRlL3VhcGkvbGludXgvdmlydGlvX2lkcy5oLiBUaGUg
ZGV2aWNlIGhhcyBvbmx5IG9uZSB2aXJ0cXVldWUgd2hpY2gKK2lzIG1lYW50IHRvIGJlIHVzZWQg
dG8gc2VuZCBkYXRhIGZyb20gdGhlIGhvc3QgdG8gdGhlIGd1ZXN0LgorCitJZiB5b3VyIGRyaXZl
ciBkb2Vzbid0IGhhdmUgdG8gZG8gYW55dGhpbmcgc3BlY2lhbCBpbiBpdHMgYGBpbml0YGAgYW5k
CitgYGV4aXRgYCBtZXRob2RzLCB5b3UgY2FuIHVzZSB0aGUgOmM6ZnVuYzpgbW9kdWxlX3ZpcnRp
b19kcml2ZXJgIGhlbHBlciB0bworcmVkdWNlIHRoZSBhbW91bnQgb2YgYm9pbGVycGxhdGUgY29k
ZS4KKworVGhlIGBgcHJvYmVgYCBtZXRob2QgZG9lcyB0aGUgbWluaW11bSBkcml2ZXIgc2V0dXAg
aW4gdGhpcyBjYXNlCisobWVtb3J5IGFsbG9jYXRpb24gZm9yIHRoZSBkZXZpY2UgZGF0YSkgYW5k
IGluaXRpYWxpemVzIHRoZQordmlydHF1ZXVlLiBUaGUgdmlydHF1ZXVlcyBhcmUgYXV0b21hdGlj
YWxseSBlbmFibGVkIGFmdGVyIGBgcHJvYmVgYAorcmV0dXJucywgc2VuZGluZyB0aGUgYXBwcm9w
cmlhdGUgIkRSSVZFUl9PSyIgc3RhdHVzIHNpZ25hbCB0byB0aGUKK2RldmljZS4gSWYgdGhlIHZp
cnRxdWV1ZXMgbmVlZCB0byBiZSBlbmFibGVkIGJlZm9yZSBgYHByb2JlYGAgZW5kcywgdGhleQor
Y2FuIGJlIG1hbnVhbGx5IGVuYWJsZWQgYnkgY2FsbGluZyA6YzpmdW5jOmB2aXJ0aW9fZGV2aWNl
X3JlYWR5YDoKKworLi4ga2VybmVsLWRvYzo6IGluY2x1ZGUvbGludXgvdmlydGlvX2NvbmZpZy5o
CisgICAgOmlkZW50aWZpZXJzOiB2aXJ0aW9fZGV2aWNlX3JlYWR5CisKKworU2VuZGluZyBhbmQg
cmVjZWl2aW5nIGRhdGEKKz09PT09PT09PT09PT09PT09PT09PT09PT09CisKK1RoZSA6YzpmdW5j
OmB2aXJ0aW9fZHVtbXlfcmVjdl9jYmAgY2FsbGJhY2sgaW4gdGhlIGNvZGUgYWJvdmUgd2lsbCBi
ZQordHJpZ2dlcmVkIHdoZW4gdGhlIGRldmljZSBub3RpZmllcyB0aGUgZHJpdmVyIGFmdGVyIGl0
IGZpbmlzaGVzCitwcm9jZXNzaW5nIGEgZGVzY3JpcHRvciBvciBkZXNjcmlwdG9yIGNoYWluLCBl
aXRoZXIgZm9yIHJlYWRpbmcgb3IKK3dyaXRpbmcuIEhvd2V2ZXIsIHRoYXQncyBvbmx5IHRoZSBz
ZWNvbmQgaGFsZiBvZiB0aGUgVmlydGlvCitkZXZpY2UtZHJpdmVyIGNvbW11bmljYXRpb24gcHJv
Y2VzcywgYXMgdGhlIGNvbW11bmljYXRpb24gaXMgYWx3YXlzCitzdGFydGVkIGJ5IHRoZSBkcml2
ZXIgcmVnYXJkbGVzcyBvZiB0aGUgZGlyZWN0aW9uIG9mIHRoZSBkYXRhIHRyYW5zZmVyLgorCitU
byBjb25maWd1cmUgYSBidWZmZXIgdHJhbnNmZXIgZnJvbSB0aGUgZHJpdmVyIHRvIHRoZSBkZXZp
Y2UsIGZpcnN0IHlvdQoraGF2ZSB0byBhZGQgdGhlIGJ1ZmZlcnMgLS0gcGFja2VkIGFzIGBzY2F0
dGVybGlzdHNgIC0tIHRvIHRoZQorYXBwcm9wcmlhdGUgdmlydHF1ZXVlIHVzaW5nIGFueSBvZiB0
aGUgOmM6ZnVuYzpgdmlydHF1ZXVlX2FkZF9pbmJ1ZmAsCis6YzpmdW5jOmB2aXJ0cXVldWVfYWRk
X291dGJ1ZmAgb3IgOmM6ZnVuYzpgdmlydHF1ZXVlX2FkZF9zZ3NgLCBkZXBlbmRpbmcKK29uIHdo
ZXRoZXIgeW91IG5lZWQgdG8gYWRkIG9uZSBpbnB1dCBgc2NhdHRlcmxpc3RgIChmb3IgdGhlIGRl
dmljZSB0bworZmlsbCBpbiksIG9uZSBvdXRwdXQgYHNjYXR0ZXJsaXN0YCAoZm9yIHRoZSBkZXZp
Y2UgdG8gY29uc3VtZSkgb3IKK211bHRpcGxlIGBzY2F0dGVybGlzdHNgLCByZXNwZWN0aXZlbHku
IFRoZW4sIG9uY2UgdGhlIHZpcnRxdWV1ZSBpcyBzZXQKK3VwLCBhIGNhbGwgdG8gOmM6ZnVuYzpg
dmlydHF1ZXVlX2tpY2tgIHNlbmRzIGEgbm90aWZpY2F0aW9uIHRoYXQgd2lsbCBiZQorc2Vydmlj
ZWQgYnkgdGhlIGh5cGVydmlzb3IgdGhhdCBpbXBsZW1lbnRzIHRoZSBkZXZpY2U6OgorCisJc3Ry
dWN0IHNjYXR0ZXJsaXN0IHNnWzFdOworCXNnX2luaXRfb25lKHNnLCBidWZmZXIsIEJVRkxFTik7
CisJdmlydHF1ZXVlX2FkZF9pbmJ1ZihkZXYtPnZxLCBzZywgMSwgYnVmZmVyLCBHRlBfQVRPTUlD
KTsKKwl2aXJ0cXVldWVfa2ljayhkZXYtPnZxKTsKKworLi4ga2VybmVsLWRvYzo6IGRyaXZlcnMv
dmlydGlvL3ZpcnRpb19yaW5nLmMKKyAgICA6aWRlbnRpZmllcnM6IHZpcnRxdWV1ZV9hZGRfaW5i
dWYKKworLi4ga2VybmVsLWRvYzo6IGRyaXZlcnMvdmlydGlvL3ZpcnRpb19yaW5nLmMKKyAgICA6
aWRlbnRpZmllcnM6IHZpcnRxdWV1ZV9hZGRfb3V0YnVmCisKKy4uIGtlcm5lbC1kb2M6OiBkcml2
ZXJzL3ZpcnRpby92aXJ0aW9fcmluZy5jCisgICAgOmlkZW50aWZpZXJzOiB2aXJ0cXVldWVfYWRk
X3NncworCitUaGVuLCBhZnRlciB0aGUgZGV2aWNlIGhhcyByZWFkIG9yIHdyaXR0ZW4gdGhlIGJ1
ZmZlcnMgcHJlcGFyZWQgYnkgdGhlCitkcml2ZXIgYW5kIG5vdGlmaWVzIGl0IGJhY2ssIHRoZSBk
cml2ZXIgY2FuIGNhbGwKKzpjOmZ1bmM6YHZpcnRxdWV1ZV9nZXRfYnVmYCB0byByZWFkIHRoZSBk
YXRhIHByb2R1Y2VkIGJ5IHRoZSBkZXZpY2UgKGlmCit0aGUgdmlydHF1ZXVlIHdhcyBzZXQgdXAg
d2l0aCBpbnB1dCBidWZmZXJzKSBvciBzaW1wbHkgdG8gcmVjbGFpbSB0aGUKK2J1ZmZlcnMgaWYg
dGhleSB3ZXJlIGFscmVhZHkgY29uc3VtZWQgYnkgdGhlIGRldmljZToKKworLi4ga2VybmVsLWRv
Yzo6IGRyaXZlcnMvdmlydGlvL3ZpcnRpb19yaW5nLmMKKyAgICA6aWRlbnRpZmllcnM6IHZpcnRx
dWV1ZV9nZXRfYnVmX2N0eAorCitUaGUgdmlydHF1ZXVlIGNhbGxiYWNrcyBjYW4gYmUgZGlzYWJs
ZWQgYW5kIHJlLWVuYWJsZWQgdXNpbmcgdGhlCis6YzpmdW5jOmB2aXJ0cXVldWVfZGlzYWJsZV9j
YmAgYW5kIHRoZSBmYW1pbHkgb2YKKzpjOmZ1bmM6YHZpcnRxdWV1ZV9lbmFibGVfY2JgIGZ1bmN0
aW9ucyByZXNwZWN0aXZlbHkuIFNlZQorZHJpdmVycy92aXJ0aW8vdmlydGlvX3JpbmcuYyBmb3Ig
bW9yZSBkZXRhaWxzOgorCisuLiBrZXJuZWwtZG9jOjogZHJpdmVycy92aXJ0aW8vdmlydGlvX3Jp
bmcuYworICAgIDppZGVudGlmaWVyczogdmlydHF1ZXVlX2Rpc2FibGVfY2IKKworLi4ga2VybmVs
LWRvYzo6IGRyaXZlcnMvdmlydGlvL3ZpcnRpb19yaW5nLmMKKyAgICA6aWRlbnRpZmllcnM6IHZp
cnRxdWV1ZV9lbmFibGVfY2IKKworCitSZWZlcmVuY2VzCis9PT09PT09PT09CisKK1sxXSBWaXJ0
aW8gU3BlYyB2MS4xOgoraHR0cHM6Ly9kb2NzLm9hc2lzLW9wZW4ub3JnL3ZpcnRpby92aXJ0aW8v
djEuMS92aXJ0aW8tdjEuMS5odG1sCmRpZmYgLS1naXQgYS9NQUlOVEFJTkVSUyBiL01BSU5UQUlO
RVJTCmluZGV4IGMwZjk1OGRmZDI4OS4uMWVhNzU0ZTQ1ZTA3IDEwMDY0NAotLS0gYS9NQUlOVEFJ
TkVSUworKysgYi9NQUlOVEFJTkVSUwpAQCAtMjE0NjUsNiArMjE0NjUsNyBAQCBTOglNYWludGFp
bmVkCiBGOglEb2N1bWVudGF0aW9uL0FCSS90ZXN0aW5nL3N5c2ZzLWJ1cy12ZHBhCiBGOglEb2N1
bWVudGF0aW9uL0FCSS90ZXN0aW5nL3N5c2ZzLWNsYXNzLXZkdXNlCiBGOglEb2N1bWVudGF0aW9u
L2RldmljZXRyZWUvYmluZGluZ3MvdmlydGlvLworRjoJRG9jdW1lbnRhdGlvbi9kcml2ZXItYXBp
L3ZpcnRpby8KIEY6CWRyaXZlcnMvYmxvY2svdmlydGlvX2Jsay5jCiBGOglkcml2ZXJzL2NyeXB0
by92aXJ0aW8vCiBGOglkcml2ZXJzL25ldC92aXJ0aW9fbmV0LmMKZGlmZiAtLWdpdCBhL2luY2x1
ZGUvbGludXgvdmlydGlvLmggYi9pbmNsdWRlL2xpbnV4L3ZpcnRpby5oCmluZGV4IGQ4ZmRmMTcw
NjM3Yy4uZmQ4NDQwZTg1OTMzIDEwMDY0NAotLS0gYS9pbmNsdWRlL2xpbnV4L3ZpcnRpby5oCisr
KyBiL2luY2x1ZGUvbGludXgvdmlydGlvLmgKQEAgLTExLDcgKzExLDcgQEAKICNpbmNsdWRlIDxs
aW51eC9nZnAuaD4KIAogLyoqCi0gKiB2aXJ0cXVldWUgLSBhIHF1ZXVlIHRvIHJlZ2lzdGVyIGJ1
ZmZlcnMgZm9yIHNlbmRpbmcgb3IgcmVjZWl2aW5nLgorICogc3RydWN0IHZpcnRxdWV1ZSAtIGEg
cXVldWUgdG8gcmVnaXN0ZXIgYnVmZmVycyBmb3Igc2VuZGluZyBvciByZWNlaXZpbmcuCiAgKiBA
bGlzdDogdGhlIGNoYWluIG9mIHZpcnRxdWV1ZXMgZm9yIHRoaXMgZGV2aWNlCiAgKiBAY2FsbGJh
Y2s6IHRoZSBmdW5jdGlvbiB0byBjYWxsIHdoZW4gYnVmZmVycyBhcmUgY29uc3VtZWQgKGNhbiBi
ZSBOVUxMKS4KICAqIEBuYW1lOiB0aGUgbmFtZSBvZiB0aGlzIHZpcnRxdWV1ZSAobWFpbmx5IGZv
ciBkZWJ1Z2dpbmcpCkBAIC05MCw3ICs5MCw3IEBAIGRtYV9hZGRyX3QgdmlydHF1ZXVlX2dldF9h
dmFpbF9hZGRyKHN0cnVjdCB2aXJ0cXVldWUgKnZxKTsKIGRtYV9hZGRyX3QgdmlydHF1ZXVlX2dl
dF91c2VkX2FkZHIoc3RydWN0IHZpcnRxdWV1ZSAqdnEpOwogCiAvKioKLSAqIHZpcnRpb19kZXZp
Y2UgLSByZXByZXNlbnRhdGlvbiBvZiBhIGRldmljZSB1c2luZyB2aXJ0aW8KKyAqIHN0cnVjdCB2
aXJ0aW9fZGV2aWNlIC0gcmVwcmVzZW50YXRpb24gb2YgYSBkZXZpY2UgdXNpbmcgdmlydGlvCiAg
KiBAaW5kZXg6IHVuaXF1ZSBwb3NpdGlvbiBvbiB0aGUgdmlydGlvIGJ1cwogICogQGZhaWxlZDog
c2F2ZWQgdmFsdWUgZm9yIFZJUlRJT19DT05GSUdfU19GQUlMRUQgYml0IChmb3IgcmVzdG9yZSkK
ICAqIEBjb25maWdfZW5hYmxlZDogY29uZmlndXJhdGlvbiBjaGFuZ2UgcmVwb3J0aW5nIGVuYWJs
ZWQKQEAgLTE0Niw3ICsxNDYsNyBAQCBzaXplX3QgdmlydGlvX21heF9kbWFfc2l6ZShzdHJ1Y3Qg
dmlydGlvX2RldmljZSAqdmRldik7CiAJbGlzdF9mb3JfZWFjaF9lbnRyeSh2cSwgJnZkZXYtPnZx
cywgbGlzdCkKIAogLyoqCi0gKiB2aXJ0aW9fZHJpdmVyIC0gb3BlcmF0aW9ucyBmb3IgYSB2aXJ0
aW8gSS9PIGRyaXZlcgorICogc3RydWN0IHZpcnRpb19kcml2ZXIgLSBvcGVyYXRpb25zIGZvciBh
IHZpcnRpbyBJL08gZHJpdmVyCiAgKiBAZHJpdmVyOiB1bmRlcmx5aW5nIGRldmljZSBkcml2ZXIg
KHBvcHVsYXRlIG5hbWUgYW5kIG93bmVyKS4KICAqIEBpZF90YWJsZTogdGhlIGlkcyBzZXJ2aWNl
ZCBieSB0aGlzIGRyaXZlci4KICAqIEBmZWF0dXJlX3RhYmxlOiBhbiBhcnJheSBvZiBmZWF0dXJl
IG51bWJlcnMgc3VwcG9ydGVkIGJ5IHRoaXMgZHJpdmVyLgpkaWZmIC0tZ2l0IGEvaW5jbHVkZS9s
aW51eC92aXJ0aW9fY29uZmlnLmggYi9pbmNsdWRlL2xpbnV4L3ZpcnRpb19jb25maWcuaAppbmRl
eCBiNDdjMmU3ZWQwZWUuLjk5NzgwMTAxOGFlNCAxMDA2NDQKLS0tIGEvaW5jbHVkZS9saW51eC92
aXJ0aW9fY29uZmlnLmgKKysrIGIvaW5jbHVkZS9saW51eC92aXJ0aW9fY29uZmlnLmgKQEAgLTIy
NSw3ICsyMjUsNyBAQCBpbnQgdmlydGlvX2ZpbmRfdnFzX2N0eChzdHJ1Y3QgdmlydGlvX2Rldmlj
ZSAqdmRldiwgdW5zaWduZWQgbnZxcywKIAogLyoqCiAgKiB2aXJ0aW9fc3luY2hyb25pemVfY2Jz
IC0gc3luY2hyb25pemUgd2l0aCB2aXJ0cXVldWUgY2FsbGJhY2tzCi0gKiBAdmRldjogdGhlIGRl
dmljZQorICogQGRldjogdGhlIGRldmljZQogICovCiBzdGF0aWMgaW5saW5lCiB2b2lkIHZpcnRp
b19zeW5jaHJvbml6ZV9jYnMoc3RydWN0IHZpcnRpb19kZXZpY2UgKmRldikKQEAgLTI0NCw3ICsy
NDQsNyBAQCB2b2lkIHZpcnRpb19zeW5jaHJvbml6ZV9jYnMoc3RydWN0IHZpcnRpb19kZXZpY2Ug
KmRldikKIAogLyoqCiAgKiB2aXJ0aW9fZGV2aWNlX3JlYWR5IC0gZW5hYmxlIHZxIHVzZSBpbiBw
cm9iZSBmdW5jdGlvbgotICogQHZkZXY6IHRoZSBkZXZpY2UKKyAqIEBkZXY6IHRoZSBkZXZpY2UK
ICAqCiAgKiBEcml2ZXIgbXVzdCBjYWxsIHRoaXMgdG8gdXNlIHZxcyBpbiB0aGUgcHJvYmUgZnVu
Y3Rpb24uCiAgKgpAQCAtMjkyLDcgKzI5Miw3IEBAIGNvbnN0IGNoYXIgKnZpcnRpb19idXNfbmFt
ZShzdHJ1Y3QgdmlydGlvX2RldmljZSAqdmRldikKIC8qKgogICogdmlydHF1ZXVlX3NldF9hZmZp
bml0eSAtIHNldHRpbmcgYWZmaW5pdHkgZm9yIGEgdmlydHF1ZXVlCiAgKiBAdnE6IHRoZSB2aXJ0
cXVldWUKLSAqIEBjcHU6IHRoZSBjcHUgbm8uCisgKiBAY3B1X21hc2s6IHRoZSBjcHUgbWFzawog
ICoKICAqIFBheSBhdHRlbnRpb24gdGhlIGZ1bmN0aW9uIGFyZSBiZXN0LWVmZm9ydDogdGhlIGFm
ZmluaXR5IGhpbnQgbWF5IG5vdCBiZSBzZXQKICAqIGR1ZSB0byBjb25maWcgc3VwcG9ydCwgaXJx
IHR5cGUgYW5kIHNoYXJpbmcuCmRpZmYgLS1naXQgYS9pbmNsdWRlL3VhcGkvbGludXgvdmlydGlv
X3JpbmcuaCBiL2luY2x1ZGUvdWFwaS9saW51eC92aXJ0aW9fcmluZy5oCmluZGV4IDQ3NmQzZTVj
MGZlNy4uZjhjMjBkM2RlOGRhIDEwMDY0NAotLS0gYS9pbmNsdWRlL3VhcGkvbGludXgvdmlydGlv
X3JpbmcuaAorKysgYi9pbmNsdWRlL3VhcGkvbGludXgvdmlydGlvX3JpbmcuaApAQCAtOTMsMTUg
KzkzLDIxIEBACiAjZGVmaW5lIFZSSU5HX1VTRURfQUxJR05fU0laRSA0CiAjZGVmaW5lIFZSSU5H
X0RFU0NfQUxJR05fU0laRSAxNgogCi0vKiBWaXJ0aW8gcmluZyBkZXNjcmlwdG9yczogMTYgYnl0
ZXMuICBUaGVzZSBjYW4gY2hhaW4gdG9nZXRoZXIgdmlhICJuZXh0Ii4gKi8KKy8qKgorICogc3Ry
dWN0IHZyaW5nX2Rlc2MgLSBWaXJ0aW8gcmluZyBkZXNjcmlwdG9ycywKKyAqIDE2IGJ5dGVzIGxv
bmcuIFRoZXNlIGNhbiBjaGFpbiB0b2dldGhlciB2aWEgQG5leHQuCisgKgorICogQGFkZHI6IGJ1
ZmZlciBhZGRyZXNzIChndWVzdC1waHlzaWNhbCkKKyAqIEBsZW46IGJ1ZmZlciBsZW5ndGgKKyAq
IEBmbGFnczogZGVzY3JpcHRvciBmbGFncworICogQG5leHQ6IGluZGV4IG9mIHRoZSBuZXh0IGRl
c2NyaXB0b3IgaW4gdGhlIGNoYWluLAorICogICAgICAgIGlmIHRoZSBWUklOR19ERVNDX0ZfTkVY
VCBmbGFnIGlzIHNldC4gV2UgY2hhaW4gdW51c2VkCisgKiAgICAgICAgZGVzY3JpcHRvcnMgdmlh
IHRoaXMsIHRvby4KKyAqLwogc3RydWN0IHZyaW5nX2Rlc2MgewotCS8qIEFkZHJlc3MgKGd1ZXN0
LXBoeXNpY2FsKS4gKi8KIAlfX3ZpcnRpbzY0IGFkZHI7Ci0JLyogTGVuZ3RoLiAqLwogCV9fdmly
dGlvMzIgbGVuOwotCS8qIFRoZSBmbGFncyBhcyBpbmRpY2F0ZWQgYWJvdmUuICovCiAJX192aXJ0
aW8xNiBmbGFnczsKLQkvKiBXZSBjaGFpbiB1bnVzZWQgZGVzY3JpcHRvcnMgdmlhIHRoaXMsIHRv
byAqLwogCV9fdmlydGlvMTYgbmV4dDsKIH07CiAKLS0gCjIuMjUuMQoKX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KVmlydHVhbGl6YXRpb24gbWFpbGluZyBs
aXN0ClZpcnR1YWxpemF0aW9uQGxpc3RzLmxpbnV4LWZvdW5kYXRpb24ub3JnCmh0dHBzOi8vbGlz
dHMubGludXhmb3VuZGF0aW9uLm9yZy9tYWlsbWFuL2xpc3RpbmZvL3ZpcnR1YWxpemF0aW9u
