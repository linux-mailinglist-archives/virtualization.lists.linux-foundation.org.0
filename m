Return-Path: <virtualization-bounces@lists.linux-foundation.org>
X-Original-To: lists.virtualization@lfdr.de
Delivered-To: lists.virtualization@lfdr.de
Received: from silver.osuosl.org (smtp3.osuosl.org [140.211.166.136])
	by mail.lfdr.de (Postfix) with ESMTPS id 51303228B9A
	for <lists.virtualization@lfdr.de>; Tue, 21 Jul 2020 23:46:05 +0200 (CEST)
Received: from localhost (localhost [127.0.0.1])
	by silver.osuosl.org (Postfix) with ESMTP id 34474220FB;
	Tue, 21 Jul 2020 21:46:03 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from silver.osuosl.org ([127.0.0.1])
	by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id dvZFCHcCFGYp; Tue, 21 Jul 2020 21:45:59 +0000 (UTC)
Received: from lists.linuxfoundation.org (lf-lists.osuosl.org [140.211.9.56])
	by silver.osuosl.org (Postfix) with ESMTP id E32F9227A0;
	Tue, 21 Jul 2020 21:45:58 +0000 (UTC)
Received: from lf-lists.osuosl.org (localhost [127.0.0.1])
	by lists.linuxfoundation.org (Postfix) with ESMTP id DAD13C016F;
	Tue, 21 Jul 2020 21:45:58 +0000 (UTC)
X-Original-To: virtualization@lists.linux-foundation.org
Delivered-To: virtualization@lists.linuxfoundation.org
Received: from silver.osuosl.org (smtp3.osuosl.org [140.211.166.136])
 by lists.linuxfoundation.org (Postfix) with ESMTP id 04C4CC016F
 for <virtualization@lists.linux-foundation.org>;
 Tue, 21 Jul 2020 21:45:58 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by silver.osuosl.org (Postfix) with ESMTP id E335E22763
 for <virtualization@lists.linux-foundation.org>;
 Tue, 21 Jul 2020 21:45:57 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from silver.osuosl.org ([127.0.0.1])
 by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id tSSeaVgevIYR
 for <virtualization@lists.linux-foundation.org>;
 Tue, 21 Jul 2020 21:45:55 +0000 (UTC)
X-Greylist: from auto-whitelisted by SQLgrey-1.7.6
Received: from mx01.bbu.dsd.mx.bitdefender.com
 (mx01.bbu.dsd.mx.bitdefender.com [91.199.104.161])
 by silver.osuosl.org (Postfix) with ESMTPS id 1F08C204C2
 for <virtualization@lists.linux-foundation.org>;
 Tue, 21 Jul 2020 21:45:55 +0000 (UTC)
Received: from smtp.bitdefender.com (smtp02.buh.bitdefender.net [10.17.80.76])
 by mx01.bbu.dsd.mx.bitdefender.com (Postfix) with ESMTPS id
 F271A305D4F6; Wed, 22 Jul 2020 00:09:28 +0300 (EEST)
Received: from localhost.localdomain (unknown [91.199.104.27])
 by smtp.bitdefender.com (Postfix) with ESMTPSA id D0A92304FA13;
 Wed, 22 Jul 2020 00:09:28 +0300 (EEST)
From: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>
To: kvm@vger.kernel.org
Subject: [PATCH v9 62/84] KVM: introspection: restore the state of #BP
 interception on unhook
Date: Wed, 22 Jul 2020 00:09:00 +0300
Message-Id: <20200721210922.7646-63-alazar@bitdefender.com>
In-Reply-To: <20200721210922.7646-1-alazar@bitdefender.com>
References: <20200721210922.7646-1-alazar@bitdefender.com>
MIME-Version: 1.0
Cc: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>,
 Paolo Bonzini <pbonzini@redhat.com>,
 =?UTF-8?q?Nicu=C8=99or=20C=C3=AE=C8=9Bu?= <ncitu@bitdefender.com>,
 virtualization@lists.linux-foundation.org
X-BeenThere: virtualization@lists.linux-foundation.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Linux virtualization <virtualization.lists.linux-foundation.org>
List-Unsubscribe: <https://lists.linuxfoundation.org/mailman/options/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=unsubscribe>
List-Archive: <http://lists.linuxfoundation.org/pipermail/virtualization/>
List-Post: <mailto:virtualization@lists.linux-foundation.org>
List-Help: <mailto:virtualization-request@lists.linux-foundation.org?subject=help>
List-Subscribe: <https://lists.linuxfoundation.org/mailman/listinfo/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: virtualization-bounces@lists.linux-foundation.org
Sender: "Virtualization" <virtualization-bounces@lists.linux-foundation.org>

RnJvbTogTmljdciZb3IgQ8OuyJt1IDxuY2l0dUBiaXRkZWZlbmRlci5jb20+CgpUaGlzIGNvbW1p
dCBhbHNvIGVuc3VyZXMgdGhhdCBvbmx5IHRoZSB1c2Vyc3BhY2Ugb3IgdGhlIGludHJvc3BlY3Rp
b24KdG9vbCBjYW4gY29udHJvbCB0aGUgI0JQIGludGVyY2VwdGlvbiBleGNsdXNpdmVseSBhdCBv
bmUgdGltZS4KClNpZ25lZC1vZmYtYnk6IE5pY3XImW9yIEPDrsibdSA8bmNpdHVAYml0ZGVmZW5k
ZXIuY29tPgpTaWduZWQtb2ZmLWJ5OiBBZGFsYmVydCBMYXrEg3IgPGFsYXphckBiaXRkZWZlbmRl
ci5jb20+Ci0tLQogYXJjaC94ODYvaW5jbHVkZS9hc20va3ZtaV9ob3N0LmggICAgICAgICAgICAg
IHwgMTggKysrKysrCiBhcmNoL3g4Ni9rdm0va3ZtaS5jICAgICAgICAgICAgICAgICAgICAgICAg
ICAgfCA2MCArKysrKysrKysrKysrKysrKysrCiBhcmNoL3g4Ni9rdm0veDg2LmMgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgfCAgNSArKwogLi4uL3Rlc3Rpbmcvc2VsZnRlc3RzL2t2bS94ODZf
NjQva3ZtaV90ZXN0LmMgIHwgMTYgKysrKysKIDQgZmlsZXMgY2hhbmdlZCwgOTkgaW5zZXJ0aW9u
cygrKQoKZGlmZiAtLWdpdCBhL2FyY2gveDg2L2luY2x1ZGUvYXNtL2t2bWlfaG9zdC5oIGIvYXJj
aC94ODYvaW5jbHVkZS9hc20va3ZtaV9ob3N0LmgKaW5kZXggNmQyNzRmMTczZmI1Li41ZjJhOTY4
ODMxZDMgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L2luY2x1ZGUvYXNtL2t2bWlfaG9zdC5oCisrKyBi
L2FyY2gveDg2L2luY2x1ZGUvYXNtL2t2bWlfaG9zdC5oCkBAIC00LDggKzQsMTUgQEAKIAogI2lu
Y2x1ZGUgPGFzbS9rdm1pLmg+CiAKK3N0cnVjdCBrdm1pX21vbml0b3JfaW50ZXJjZXB0aW9uIHsK
Kwlib29sIGt2bWlfaW50ZXJjZXB0ZWQ7CisJYm9vbCBrdm1faW50ZXJjZXB0ZWQ7CisJYm9vbCAo
Km1vbml0b3JfZmN0KShzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsIGJvb2wgZW5hYmxlKTsKK307CisK
IHN0cnVjdCBrdm1pX2ludGVyY2VwdGlvbiB7CiAJYm9vbCByZXN0b3JlX2ludGVyY2VwdGlvbjsK
KwlzdHJ1Y3Qga3ZtaV9tb25pdG9yX2ludGVyY2VwdGlvbiBicmVha3BvaW50OwogfTsKIAogc3Ry
dWN0IGt2bV92Y3B1X2FyY2hfaW50cm9zcGVjdGlvbiB7CkBAIC0xNCw0ICsyMSwxNSBAQCBzdHJ1
Y3Qga3ZtX3ZjcHVfYXJjaF9pbnRyb3NwZWN0aW9uIHsKIHN0cnVjdCBrdm1fYXJjaF9pbnRyb3Nw
ZWN0aW9uIHsKIH07CiAKKyNpZmRlZiBDT05GSUdfS1ZNX0lOVFJPU1BFQ1RJT04KKworYm9vbCBr
dm1pX21vbml0b3JfYnBfaW50ZXJjZXB0KHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwgdTMyIGRiZyk7
CisKKyNlbHNlIC8qIENPTkZJR19LVk1fSU5UUk9TUEVDVElPTiAqLworCitzdGF0aWMgaW5saW5l
IGJvb2wga3ZtaV9tb25pdG9yX2JwX2ludGVyY2VwdChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsIHUz
MiBkYmcpCisJeyByZXR1cm4gZmFsc2U7IH0KKworI2VuZGlmIC8qIENPTkZJR19LVk1fSU5UUk9T
UEVDVElPTiAqLworCiAjZW5kaWYgLyogX0FTTV9YODZfS1ZNSV9IT1NUX0ggKi8KZGlmZiAtLWdp
dCBhL2FyY2gveDg2L2t2bS9rdm1pLmMgYi9hcmNoL3g4Ni9rdm0va3ZtaS5jCmluZGV4IGNhMmNl
NzQ5OGNmZS4uNTZjMDJkYWQzYjU3IDEwMDY0NAotLS0gYS9hcmNoL3g4Ni9rdm0va3ZtaS5jCisr
KyBiL2FyY2gveDg2L2t2bS9rdm1pLmMKQEAgLTI0MywxOCArMjQzLDcxIEBAIHZvaWQga3ZtaV9h
cmNoX2h5cGVyY2FsbF9ldmVudChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUpCiAJfQogfQogCisvKgor
ICogUmV0dXJucyB0cnVlIGlmIG9uZSBzaWRlIChrdm0gb3Iga3ZtaSkgdHJpZXMgdG8gZW5hYmxl
L2Rpc2FibGUgdGhlIGJyZWFrcG9pbnQKKyAqIGludGVyY2VwdGlvbiB3aGlsZSB0aGUgb3RoZXIg
c2lkZSBpcyBzdGlsbCB0cmFja2luZyBpdC4KKyAqLworYm9vbCBrdm1pX21vbml0b3JfYnBfaW50
ZXJjZXB0KHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwgdTMyIGRiZykKK3sKKwlzdHJ1Y3Qga3ZtaV9p
bnRlcmNlcHRpb24gKmFyY2hfdmNwdWkgPSBSRUFEX09OQ0UodmNwdS0+YXJjaC5rdm1pKTsKKwl1
MzIgYnBfbWFzayA9IEtWTV9HVUVTVERCR19FTkFCTEUgfCBLVk1fR1VFU1REQkdfVVNFX1NXX0JQ
OworCWJvb2wgZW5hYmxlID0gZmFsc2U7CisKKwlpZiAoKGRiZyAmIGJwX21hc2spID09IGJwX21h
c2spCisJCWVuYWJsZSA9IHRydWU7CisKKwlyZXR1cm4gKGFyY2hfdmNwdWkgJiYgYXJjaF92Y3B1
aS0+YnJlYWtwb2ludC5tb25pdG9yX2ZjdCh2Y3B1LCBlbmFibGUpKTsKK30KK0VYUE9SVF9TWU1C
T0woa3ZtaV9tb25pdG9yX2JwX2ludGVyY2VwdCk7CisKK3N0YXRpYyBib29sIG1vbml0b3JfYnBf
ZmN0X2t2bWkoc3RydWN0IGt2bV92Y3B1ICp2Y3B1LCBib29sIGVuYWJsZSkKK3sKKwlpZiAoZW5h
YmxlKSB7CisJCWlmIChrdm1feDg2X29wcy5icF9pbnRlcmNlcHRlZCh2Y3B1KSkKKwkJCXJldHVy
biB0cnVlOworCX0gZWxzZSBpZiAoIXZjcHUtPmFyY2gua3ZtaS0+YnJlYWtwb2ludC5rdm1pX2lu
dGVyY2VwdGVkKQorCQlyZXR1cm4gdHJ1ZTsKKworCXZjcHUtPmFyY2gua3ZtaS0+YnJlYWtwb2lu
dC5rdm1pX2ludGVyY2VwdGVkID0gZW5hYmxlOworCisJcmV0dXJuIGZhbHNlOworfQorCitzdGF0
aWMgYm9vbCBtb25pdG9yX2JwX2ZjdF9rdm0oc3RydWN0IGt2bV92Y3B1ICp2Y3B1LCBib29sIGVu
YWJsZSkKK3sKKwlpZiAoZW5hYmxlKSB7CisJCWlmIChrdm1feDg2X29wcy5icF9pbnRlcmNlcHRl
ZCh2Y3B1KSkKKwkJCXJldHVybiB0cnVlOworCX0gZWxzZSBpZiAoIXZjcHUtPmFyY2gua3ZtaS0+
YnJlYWtwb2ludC5rdm1faW50ZXJjZXB0ZWQpCisJCXJldHVybiB0cnVlOworCisJdmNwdS0+YXJj
aC5rdm1pLT5icmVha3BvaW50Lmt2bV9pbnRlcmNlcHRlZCA9IGVuYWJsZTsKKworCXJldHVybiBm
YWxzZTsKK30KKwogc3RhdGljIGludCBrdm1pX2NvbnRyb2xfYnBfaW50ZXJjZXB0KHN0cnVjdCBr
dm1fdmNwdSAqdmNwdSwgYm9vbCBlbmFibGUpCiB7CiAJc3RydWN0IGt2bV9ndWVzdF9kZWJ1ZyBk
YmcgPSB7fTsKIAlpbnQgZXJyID0gMDsKIAorCXZjcHUtPmFyY2gua3ZtaS0+YnJlYWtwb2ludC5t
b25pdG9yX2ZjdCA9IG1vbml0b3JfYnBfZmN0X2t2bWk7CiAJaWYgKGVuYWJsZSkKIAkJZGJnLmNv
bnRyb2wgPSBLVk1fR1VFU1REQkdfRU5BQkxFIHwgS1ZNX0dVRVNUREJHX1VTRV9TV19CUDsKIAll
cnIgPSBrdm1fYXJjaF92Y3B1X3NldF9ndWVzdF9kZWJ1Zyh2Y3B1LCAmZGJnKTsKKwl2Y3B1LT5h
cmNoLmt2bWktPmJyZWFrcG9pbnQubW9uaXRvcl9mY3QgPSBtb25pdG9yX2JwX2ZjdF9rdm07CiAK
IAlyZXR1cm4gZXJyOwogfQogCitzdGF0aWMgdm9pZCBrdm1pX2FyY2hfZGlzYWJsZV9icF9pbnRl
cmNlcHQoc3RydWN0IGt2bV92Y3B1ICp2Y3B1KQoreworCWt2bWlfY29udHJvbF9icF9pbnRlcmNl
cHQodmNwdSwgZmFsc2UpOworCisJdmNwdS0+YXJjaC5rdm1pLT5icmVha3BvaW50Lmt2bWlfaW50
ZXJjZXB0ZWQgPSBmYWxzZTsKKwl2Y3B1LT5hcmNoLmt2bWktPmJyZWFrcG9pbnQua3ZtX2ludGVy
Y2VwdGVkID0gZmFsc2U7Cit9CisKIGludCBrdm1pX2FyY2hfY21kX2NvbnRyb2xfaW50ZXJjZXB0
KHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwKIAkJCQkgICAgdW5zaWduZWQgaW50IGV2ZW50X2lkLCBi
b29sIGVuYWJsZSkKIHsKQEAgLTI5Myw2ICszNDYsNyBAQCB2b2lkIGt2bWlfYXJjaF9icmVha3Bv
aW50X2V2ZW50KHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwgdTY0IGd2YSwgdTggaW5zbl9sZW4pCiAK
IHN0YXRpYyB2b2lkIGt2bWlfYXJjaF9yZXN0b3JlX2ludGVyY2VwdGlvbihzdHJ1Y3Qga3ZtX3Zj
cHUgKnZjcHUpCiB7CisJa3ZtaV9hcmNoX2Rpc2FibGVfYnBfaW50ZXJjZXB0KHZjcHUpOwogfQog
CiBib29sIGt2bWlfYXJjaF9jbGVhbl91cF9pbnRlcmNlcHRpb24oc3RydWN0IGt2bV92Y3B1ICp2
Y3B1KQpAQCAtMzE4LDYgKzM3MiwxMiBAQCBib29sIGt2bWlfYXJjaF92Y3B1X2FsbG9jX2ludGVy
Y2VwdGlvbihzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUpCiAJaWYgKCFhcmNoX3ZjcHVpKQogCQlyZXR1
cm4gZmFsc2U7CiAKKwlhcmNoX3ZjcHVpLT5icmVha3BvaW50Lm1vbml0b3JfZmN0ID0gbW9uaXRv
cl9icF9mY3Rfa3ZtOworCisJLyogcGFpciB3aXRoIGt2bWlfbW9uaXRvcl9icF9pbnRlcmNlcHQo
KSAqLworCXNtcF93bWIoKTsKKwlXUklURV9PTkNFKHZjcHUtPmFyY2gua3ZtaSwgYXJjaF92Y3B1
aSk7CisKIAlyZXR1cm4gdHJ1ZTsKIH0KIApkaWZmIC0tZ2l0IGEvYXJjaC94ODYva3ZtL3g4Ni5j
IGIvYXJjaC94ODYva3ZtL3g4Ni5jCmluZGV4IDBkNWNlMDdjNDE2NC4uOWM4YjdhM2M1NzU4IDEw
MDY0NAotLS0gYS9hcmNoL3g4Ni9rdm0veDg2LmMKKysrIGIvYXJjaC94ODYva3ZtL3g4Ni5jCkBA
IC05MzI1LDYgKzkzMjUsMTEgQEAgaW50IGt2bV9hcmNoX3ZjcHVfc2V0X2d1ZXN0X2RlYnVnKHN0
cnVjdCBrdm1fdmNwdSAqdmNwdSwKIAkJCWt2bV9xdWV1ZV9leGNlcHRpb24odmNwdSwgQlBfVkVD
VE9SKTsKIAl9CiAKKwlpZiAoa3ZtaV9tb25pdG9yX2JwX2ludGVyY2VwdCh2Y3B1LCBkYmctPmNv
bnRyb2wpKSB7CisJCXIgPSAtRUJVU1k7CisJCWdvdG8gb3V0OworCX0KKwogCS8qCiAJICogUmVh
ZCByZmxhZ3MgYXMgbG9uZyBhcyBwb3RlbnRpYWxseSBpbmplY3RlZCB0cmFjZSBmbGFncyBhcmUg
c3RpbGwKIAkgKiBmaWx0ZXJlZCBvdXQuCmRpZmYgLS1naXQgYS90b29scy90ZXN0aW5nL3NlbGZ0
ZXN0cy9rdm0veDg2XzY0L2t2bWlfdGVzdC5jIGIvdG9vbHMvdGVzdGluZy9zZWxmdGVzdHMva3Zt
L3g4Nl82NC9rdm1pX3Rlc3QuYwppbmRleCAzYjkyMWUzY2Y5NTguLjE0MThlMzE5MThiZSAxMDA2
NDQKLS0tIGEvdG9vbHMvdGVzdGluZy9zZWxmdGVzdHMva3ZtL3g4Nl82NC9rdm1pX3Rlc3QuYwor
KysgYi90b29scy90ZXN0aW5nL3NlbGZ0ZXN0cy9rdm0veDg2XzY0L2t2bWlfdGVzdC5jCkBAIC01
OCw2ICs1OCwxMCBAQCBlbnVtIHsKIAogI2RlZmluZSBIT1NUX1NFTkRfVEVTVCh1YykgICAgICAg
KHVjLmNtZCA9PSBVQ0FMTF9TWU5DICYmIHVjLmFyZ3NbMV0gPT0gMCkKIAorc3RhdGljIHB0aHJl
YWRfdCBzdGFydF92Y3B1X3dvcmtlcihzdHJ1Y3QgdmNwdV93b3JrZXJfZGF0YSAqZGF0YSk7Citz
dGF0aWMgdm9pZCBzdG9wX3ZjcHVfd29ya2VyKHB0aHJlYWRfdCB2Y3B1X3RocmVhZCwKKwkJCSAg
ICAgc3RydWN0IHZjcHVfd29ya2VyX2RhdGEgKmRhdGEpOworCiBzdGF0aWMgaW50IGd1ZXN0X3Rl
c3RfaWQodm9pZCkKIHsKIAlHVUVTVF9SRVFVRVNUX1RFU1QoKTsKQEAgLTE3MSw4ICsxNzUsMTAg
QEAgc3RhdGljIHZvaWQgYWxsb3dfY29tbWFuZChzdHJ1Y3Qga3ZtX3ZtICp2bSwgX19zMzIgaWQp
CiAKIHN0YXRpYyB2b2lkIGhvb2tfaW50cm9zcGVjdGlvbihzdHJ1Y3Qga3ZtX3ZtICp2bSkKIHsK
KwlzdHJ1Y3QgdmNwdV93b3JrZXJfZGF0YSBkYXRhID0gey52bSA9IHZtLCAudmNwdV9pZCA9IFZD
UFVfSUQgfTsKIAlfX3UzMiBhbGxvdyA9IDEsIGRpc2FsbG93ID0gMCwgYWxsb3dfaW52YWwgPSAy
OwogCV9fdTMyIHBhZGRpbmcgPSAxLCBub19wYWRkaW5nID0gMDsKKwlwdGhyZWFkX3QgdmNwdV90
aHJlYWQ7CiAJX19zMzIgYWxsX0lEcyA9IC0xOwogCiAJc2V0X2NvbW1hbmRfcGVybSh2bSwgYWxs
X0lEcywgYWxsb3csIEVGQVVMVCk7CkBAIC0xODAsNiArMTg2LDE2IEBAIHN0YXRpYyB2b2lkIGhv
b2tfaW50cm9zcGVjdGlvbihzdHJ1Y3Qga3ZtX3ZtICp2bSkKIAogCWRvX2hvb2tfaW9jdGwodm0s
IEt2bV9zb2NrZXQsIHBhZGRpbmcsIEVJTlZBTCk7CiAJZG9faG9va19pb2N0bCh2bSwgLTEsIG5v
X3BhZGRpbmcsIEVJTlZBTCk7CisKKwkvKgorCSAqIFRoZSBsYXN0IGNhbGwgZmFpbGVkICJ0b28g
bGF0ZSIuCisJICogV2UgaGF2ZSB0byBsZXQgdGhlIHZDUFUgcnVuIGFuZCBjbGVhbiB1cCBpdHMg
c3RydWN0dXJlcywKKwkgKiBvdGhlcndpc2UgdGhlIG5leHQgY2FsbCB3aWxsIGZhaWwgd2l0aCBF
RVhJU1QuCisJICovCisJdmNwdV90aHJlYWQgPSBzdGFydF92Y3B1X3dvcmtlcigmZGF0YSk7CisJ
c2xlZXAoMSk7CisJc3RvcF92Y3B1X3dvcmtlcih2Y3B1X3RocmVhZCwgJmRhdGEpOworCiAJZG9f
aG9va19pb2N0bCh2bSwgS3ZtX3NvY2tldCwgbm9fcGFkZGluZywgMCk7CiAJZG9faG9va19pb2N0
bCh2bSwgS3ZtX3NvY2tldCwgbm9fcGFkZGluZywgRUVYSVNUKTsKIApfX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpWaXJ0dWFsaXphdGlvbiBtYWlsaW5nIGxp
c3QKVmlydHVhbGl6YXRpb25AbGlzdHMubGludXgtZm91bmRhdGlvbi5vcmcKaHR0cHM6Ly9saXN0
cy5saW51eGZvdW5kYXRpb24ub3JnL21haWxtYW4vbGlzdGluZm8vdmlydHVhbGl6YXRpb24=
