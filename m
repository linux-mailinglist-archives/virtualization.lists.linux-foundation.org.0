Return-Path: <virtualization-bounces@lists.linux-foundation.org>
X-Original-To: lists.virtualization@lfdr.de
Delivered-To: lists.virtualization@lfdr.de
Received: from smtp2.osuosl.org (smtp2.osuosl.org [IPv6:2605:bc80:3010::133])
	by mail.lfdr.de (Postfix) with ESMTPS id BCAD3424494
	for <lists.virtualization@lfdr.de>; Wed,  6 Oct 2021 19:40:50 +0200 (CEST)
Received: from localhost (localhost [127.0.0.1])
	by smtp2.osuosl.org (Postfix) with ESMTP id C2AD6407F6;
	Wed,  6 Oct 2021 17:40:48 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from smtp2.osuosl.org ([127.0.0.1])
	by localhost (smtp2.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id mzrBuUj0Vk2t; Wed,  6 Oct 2021 17:40:47 +0000 (UTC)
Received: from lists.linuxfoundation.org (lf-lists.osuosl.org [IPv6:2605:bc80:3010:104::8cd3:938])
	by smtp2.osuosl.org (Postfix) with ESMTPS id BADCD40898;
	Wed,  6 Oct 2021 17:40:46 +0000 (UTC)
Received: from lf-lists.osuosl.org (localhost [127.0.0.1])
	by lists.linuxfoundation.org (Postfix) with ESMTP id 4E58DC000D;
	Wed,  6 Oct 2021 17:40:46 +0000 (UTC)
X-Original-To: virtualization@lists.linux-foundation.org
Delivered-To: virtualization@lists.linuxfoundation.org
Received: from smtp3.osuosl.org (smtp3.osuosl.org [IPv6:2605:bc80:3010::136])
 by lists.linuxfoundation.org (Postfix) with ESMTP id D87FAC0029
 for <virtualization@lists.linux-foundation.org>;
 Wed,  6 Oct 2021 17:40:42 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by smtp3.osuosl.org (Postfix) with ESMTP id CC40B60EE9
 for <virtualization@lists.linux-foundation.org>;
 Wed,  6 Oct 2021 17:40:41 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from smtp3.osuosl.org ([127.0.0.1])
 by localhost (smtp3.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id yGx3qwACF5f3
 for <virtualization@lists.linux-foundation.org>;
 Wed,  6 Oct 2021 17:40:40 +0000 (UTC)
X-Greylist: delayed 00:09:46 by SQLgrey-1.8.0
Received: from mx01.bbu.dsd.mx.bitdefender.com
 (mx01.bbu.dsd.mx.bitdefender.com [91.199.104.161])
 by smtp3.osuosl.org (Postfix) with ESMTPS id 754986068F
 for <virtualization@lists.linux-foundation.org>;
 Wed,  6 Oct 2021 17:40:40 +0000 (UTC)
Received: from smtp.bitdefender.com (smtp01.buh.bitdefender.com [10.17.80.75])
 by mx01.bbu.dsd.mx.bitdefender.com (Postfix) with ESMTPS id
 ED577307CAF9; Wed,  6 Oct 2021 20:31:08 +0300 (EEST)
Received: from localhost (unknown [91.199.104.28])
 by smtp.bitdefender.com (Postfix) with ESMTPSA id D2E33305FFA0;
 Wed,  6 Oct 2021 20:31:08 +0300 (EEST)
X-Is-Junk-Enabled: fGZTSsP0qEJE2AIKtlSuFiRRwg9xyHmJ
From: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>
To: kvm@vger.kernel.org
Subject: [PATCH v12 37/77] KVM: introspection: add KVMI_VM_EVENT_UNHOOK
Date: Wed,  6 Oct 2021 20:30:33 +0300
Message-Id: <20211006173113.26445-38-alazar@bitdefender.com>
In-Reply-To: <20211006173113.26445-1-alazar@bitdefender.com>
References: <20211006173113.26445-1-alazar@bitdefender.com>
MIME-Version: 1.0
Cc: Tamas K Lengyel <tamas@tklengyel.com>, Wanpeng Li <wanpengli@tencent.com>,
 Sean Christopherson <seanjc@google.com>, Joerg Roedel <joro@8bytes.org>,
 virtualization@lists.linux-foundation.org,
 =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>,
 Mathieu Tarral <mathieu.tarral@protonmail.com>,
 Paolo Bonzini <pbonzini@redhat.com>, Jim Mattson <jmattson@google.com>
X-BeenThere: virtualization@lists.linux-foundation.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Linux virtualization <virtualization.lists.linux-foundation.org>
List-Unsubscribe: <https://lists.linuxfoundation.org/mailman/options/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=unsubscribe>
List-Archive: <http://lists.linuxfoundation.org/pipermail/virtualization/>
List-Post: <mailto:virtualization@lists.linux-foundation.org>
List-Help: <mailto:virtualization-request@lists.linux-foundation.org?subject=help>
List-Subscribe: <https://lists.linuxfoundation.org/mailman/listinfo/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: virtualization-bounces@lists.linux-foundation.org
Sender: "Virtualization" <virtualization-bounces@lists.linux-foundation.org>

VGhpcyBldmVudCBpcyBzZW50IHdoZW4gdGhlIGd1ZXN0IGlzIGFib3V0IHRvIGJlCnBhdXNlZC9z
dXNwZW5kZWQvbWlncmF0ZWQuIFRoZSBpbnRyb3NwZWN0aW9uIHRvb2wgaGFzIHRoZSBjaGFuY2Ug
dG8KcmVtb3ZlIGl0cyBob29rcyAoZS5nLiBicmVha3BvaW50cykgd2hpbGUgdGhlIGd1ZXN0IGlz
IHN0aWxsIHJ1bm5pbmcuCgpTaWduZWQtb2ZmLWJ5OiBBZGFsYmVydCBMYXrEg3IgPGFsYXphckBi
aXRkZWZlbmRlci5jb20+Ci0tLQogRG9jdW1lbnRhdGlvbi92aXJ0L2t2bS9rdm1pLnJzdCAgICAg
ICAgICAgICAgIHwgMzEgKysrKysrKysrCiBhcmNoL3g4Ni9rdm0vTWFrZWZpbGUgICAgICAgICAg
ICAgICAgICAgICAgICAgfCAgMiArLQogYXJjaC94ODYva3ZtL2t2bWkuYyAgICAgICAgICAgICAg
ICAgICAgICAgICAgIHwgMTAgKysrCiBpbmNsdWRlL2xpbnV4L2t2bWlfaG9zdC5oICAgICAgICAg
ICAgICAgICAgICAgfCAgMiArCiBpbmNsdWRlL3VhcGkvbGludXgva3ZtaS5oICAgICAgICAgICAg
ICAgICAgICAgfCAgOSArKysKIC4uLi90ZXN0aW5nL3NlbGZ0ZXN0cy9rdm0veDg2XzY0L2t2bWlf
dGVzdC5jICB8IDY4ICsrKysrKysrKysrKysrKysrKy0KIHZpcnQva3ZtL2ludHJvc3BlY3Rpb24v
a3ZtaS5jICAgICAgICAgICAgICAgICB8IDEzICsrKy0KIHZpcnQva3ZtL2ludHJvc3BlY3Rpb24v
a3ZtaV9pbnQuaCAgICAgICAgICAgICB8ICAzICsKIHZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3Zt
aV9tc2cuYyAgICAgICAgICAgICB8IDQyICsrKysrKysrKysrLQogOSBmaWxlcyBjaGFuZ2VkLCAx
NzMgaW5zZXJ0aW9ucygrKSwgNyBkZWxldGlvbnMoLSkKIGNyZWF0ZSBtb2RlIDEwMDY0NCBhcmNo
L3g4Ni9rdm0va3ZtaS5jCgpkaWZmIC0tZ2l0IGEvRG9jdW1lbnRhdGlvbi92aXJ0L2t2bS9rdm1p
LnJzdCBiL0RvY3VtZW50YXRpb24vdmlydC9rdm0va3ZtaS5yc3QKaW5kZXggMzM0OTBiYzlkMWMx
Li4yZWVjZDdlOGJmZDAgMTAwNjQ0Ci0tLSBhL0RvY3VtZW50YXRpb24vdmlydC9rdm0va3ZtaS5y
c3QKKysrIGIvRG9jdW1lbnRhdGlvbi92aXJ0L2t2bS9rdm1pLnJzdApAQCAtMzMxLDMgKzMzMSwz
NCBAQCBUaGlzIGNvbW1hbmQgaXMgYWx3YXlzIGFsbG93ZWQuCiAJfTsKIAogUmV0dXJucyB0aGUg
bnVtYmVyIG9mIG9ubGluZSB2Q1BVcy4KKworRXZlbnRzCis9PT09PT0KKworVGhlIFZNIGludHJv
c3BlY3Rpb24gZXZlbnRzIGFyZSBzZW50IHdpdGggdGhlIEtWTUlfVk1fRVZFTlQgbWVzc2FnZSBp
ZC4KK1RoZSBtZXNzYWdlIGRhdGEgYmVnaW5zIHdpdGggYSBjb21tb24gc3RydWN0dXJlIGhhdmlu
ZyB0aGUgZXZlbnQgaWQ6OgorCisJc3RydWN0IGt2bWlfZXZlbnRfaGRyIHsKKwkJX191MTYgZXZl
bnQ7CisJCV9fdTE2IHBhZGRpbmdbM107CisJfTsKKworU3BlY2lmaWMgZXZlbnQgZGF0YSBjYW4g
Zm9sbG93IHRoaXMgY29tbW9uIHN0cnVjdHVyZS4KKworMS4gS1ZNSV9WTV9FVkVOVF9VTkhPT0sK
Ky0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCisKKzpBcmNoaXRlY3R1cmVzOiBhbGwKKzpWZXJzaW9u
czogPj0gMQorOkFjdGlvbnM6IG5vbmUKKzpQYXJhbWV0ZXJzOgorCis6OgorCisJc3RydWN0IGt2
bWlfZXZlbnRfaGRyOworCis6UmV0dXJuczogbm9uZQorCitUaGlzIGV2ZW50IGlzIHNlbnQgd2hl
biB0aGUgZGV2aWNlIG1hbmFnZXIgaGFzIHRvIHBhdXNlL3N0b3AvbWlncmF0ZSB0aGUKK2d1ZXN0
IChzZWUgKipVbmhvb2tpbmcqKikuIFRoZSBpbnRyb3NwZWN0aW9uIHRvb2wgaGFzIGEgY2hhbmNl
IHRvIHVuaG9vaworYW5kIGNsb3NlIHRoZSBLVk1JIGNoYW5uZWwgKHNpZ25hbGluZyB0aGF0IHRo
ZSBvcGVyYXRpb24gY2FuIHByb2NlZWQpLgpkaWZmIC0tZ2l0IGEvYXJjaC94ODYva3ZtL01ha2Vm
aWxlIGIvYXJjaC94ODYva3ZtL01ha2VmaWxlCmluZGV4IDNhMGNjNDJmMzZjOS4uYWY1OGUxZGFm
N2NmIDEwMDY0NAotLS0gYS9hcmNoL3g4Ni9rdm0vTWFrZWZpbGUKKysrIGIvYXJjaC94ODYva3Zt
L01ha2VmaWxlCkBAIC0xNCw3ICsxNCw3IEBAIGt2bS15CQkJKz0gJChLVk0pL2t2bV9tYWluLm8g
JChLVk0pL2NvYWxlc2NlZF9tbWlvLm8gXAogCQkJCSQoS1ZNKS9ldmVudGZkLm8gJChLVk0pL2ly
cWNoaXAubyAkKEtWTSkvdmZpby5vIFwKIAkJCQkkKEtWTSkvZGlydHlfcmluZy5vICQoS1ZNKS9i
aW5hcnlfc3RhdHMubwoga3ZtLSQoQ09ORklHX0tWTV9BU1lOQ19QRikJKz0gJChLVk0pL2FzeW5j
X3BmLm8KLWt2bS0kKENPTkZJR19LVk1fSU5UUk9TUEVDVElPTikgKz0gJChLVk1JKS9rdm1pLm8g
JChLVk1JKS9rdm1pX21zZy5vCitrdm0tJChDT05GSUdfS1ZNX0lOVFJPU1BFQ1RJT04pICs9ICQo
S1ZNSSkva3ZtaS5vICQoS1ZNSSkva3ZtaV9tc2cubyBrdm1pLm8KIAoga3ZtLXkJCQkrPSB4ODYu
byBlbXVsYXRlLm8gaTgyNTkubyBpcnEubyBsYXBpYy5vIFwKIAkJCSAgIGk4MjU0Lm8gaW9hcGlj
Lm8gaXJxX2NvbW0ubyBjcHVpZC5vIHBtdS5vIG10cnIubyBcCmRpZmYgLS1naXQgYS9hcmNoL3g4
Ni9rdm0va3ZtaS5jIGIvYXJjaC94ODYva3ZtL2t2bWkuYwpuZXcgZmlsZSBtb2RlIDEwMDY0NApp
bmRleCAwMDAwMDAwMDAwMDAuLjQzODhmMmQ5ZmYyYwotLS0gL2Rldi9udWxsCisrKyBiL2FyY2gv
eDg2L2t2bS9rdm1pLmMKQEAgLTAsMCArMSwxMCBAQAorLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZp
ZXI6IEdQTC0yLjAKKy8qCisgKiBLVk0gaW50cm9zcGVjdGlvbiAtIHg4NgorICoKKyAqIENvcHly
aWdodCAoQykgMjAxOS0yMDIxIEJpdGRlZmVuZGVyIFMuUi5MLgorICovCisKK3ZvaWQga3ZtaV9h
cmNoX2luaXRfdmNwdV9ldmVudHNfbWFzayh1bnNpZ25lZCBsb25nICpzdXBwb3J0ZWQpCit7Cit9
CmRpZmYgLS1naXQgYS9pbmNsdWRlL2xpbnV4L2t2bWlfaG9zdC5oIGIvaW5jbHVkZS9saW51eC9r
dm1pX2hvc3QuaAppbmRleCA4MWVhYzlmNTNhM2YuLjY0NzZjN2Q2YTRkMyAxMDA2NDQKLS0tIGEv
aW5jbHVkZS9saW51eC9rdm1pX2hvc3QuaAorKysgYi9pbmNsdWRlL2xpbnV4L2t2bWlfaG9zdC5o
CkBAIC0xNyw2ICsxNyw4IEBAIHN0cnVjdCBrdm1faW50cm9zcGVjdGlvbiB7CiAKIAl1bnNpZ25l
ZCBsb25nICpjbWRfYWxsb3dfbWFzazsKIAl1bnNpZ25lZCBsb25nICpldmVudF9hbGxvd19tYXNr
OworCisJYXRvbWljX3QgZXZfc2VxOwogfTsKIAogaW50IGt2bWlfdmVyc2lvbih2b2lkKTsKZGlm
ZiAtLWdpdCBhL2luY2x1ZGUvdWFwaS9saW51eC9rdm1pLmggYi9pbmNsdWRlL3VhcGkvbGludXgv
a3ZtaS5oCmluZGV4IGUwNmE3YjgwZDRkOS4uMThmYjUxMDc4ZDQ4IDEwMDY0NAotLS0gYS9pbmNs
dWRlL3VhcGkvbGludXgva3ZtaS5oCisrKyBiL2luY2x1ZGUvdWFwaS9saW51eC9rdm1pLmgKQEAg
LTE3LDYgKzE3LDggQEAgZW51bSB7CiAjZGVmaW5lIEtWTUlfVkNQVV9NRVNTQUdFX0lEKGlkKSAo
KChpZCkgPDwgMSkgfCAxKQogCiBlbnVtIHsKKwlLVk1JX1ZNX0VWRU5UID0gS1ZNSV9WTV9NRVNT
QUdFX0lEKDApLAorCiAJS1ZNSV9HRVRfVkVSU0lPTiAgICAgID0gS1ZNSV9WTV9NRVNTQUdFX0lE
KDEpLAogCUtWTUlfVk1fQ0hFQ0tfQ09NTUFORCA9IEtWTUlfVk1fTUVTU0FHRV9JRCgyKSwKIAlL
Vk1JX1ZNX0NIRUNLX0VWRU5UICAgPSBLVk1JX1ZNX01FU1NBR0VfSUQoMyksCkBAIC0zMyw2ICsz
NSw4IEBAIGVudW0gewogI2RlZmluZSBLVk1JX1ZDUFVfRVZFTlRfSUQoaWQpICgoKGlkKSA8PCAx
KSB8IDEpCiAKIGVudW0geworCUtWTUlfVk1fRVZFTlRfVU5IT09LID0gS1ZNSV9WTV9FVkVOVF9J
RCgwKSwKKwogCUtWTUlfTkVYVF9WTV9FVkVOVAogfTsKIApAQCAtNzMsNCArNzcsOSBAQCBzdHJ1
Y3Qga3ZtaV92bV9nZXRfaW5mb19yZXBseSB7CiAJX191MzIgcGFkZGluZ1szXTsKIH07CiAKK3N0
cnVjdCBrdm1pX2V2ZW50X2hkciB7CisJX191MTYgZXZlbnQ7CisJX191MTYgcGFkZGluZ1szXTsK
K307CisKICNlbmRpZiAvKiBfVUFQSV9fTElOVVhfS1ZNSV9IICovCmRpZmYgLS1naXQgYS90b29s
cy90ZXN0aW5nL3NlbGZ0ZXN0cy9rdm0veDg2XzY0L2t2bWlfdGVzdC5jIGIvdG9vbHMvdGVzdGlu
Zy9zZWxmdGVzdHMva3ZtL3g4Nl82NC9rdm1pX3Rlc3QuYwppbmRleCAyYWRhM2Q5YmMyMzAuLjcy
MjczN2UwMWQ5YiAxMDA2NDQKLS0tIGEvdG9vbHMvdGVzdGluZy9zZWxmdGVzdHMva3ZtL3g4Nl82
NC9rdm1pX3Rlc3QuYworKysgYi90b29scy90ZXN0aW5nL3NlbGZ0ZXN0cy9rdm0veDg2XzY0L2t2
bWlfdGVzdC5jCkBAIC02OCw2ICs2OCwxMSBAQCBzdGF0aWMgdm9pZCBzZXRfZXZlbnRfcGVybShz
dHJ1Y3Qga3ZtX3ZtICp2bSwgX19zMzIgaWQsIF9fdTMyIGFsbG93LAogCQkgIktWTV9JTlRST1NQ
RUNUSU9OX0VWRU5UIik7CiB9CiAKK3N0YXRpYyB2b2lkIGRpc2FsbG93X2V2ZW50KHN0cnVjdCBr
dm1fdm0gKnZtLCBfX3MzMiBldmVudF9pZCkKK3sKKwlzZXRfZXZlbnRfcGVybSh2bSwgZXZlbnRf
aWQsIDAsIDApOworfQorCiBzdGF0aWMgdm9pZCBhbGxvd19ldmVudChzdHJ1Y3Qga3ZtX3ZtICp2
bSwgX19zMzIgZXZlbnRfaWQpCiB7CiAJc2V0X2V2ZW50X3Blcm0odm0sIGV2ZW50X2lkLCAxLCAw
KTsKQEAgLTI5OCwxMSArMzAzLDE2IEBAIHN0YXRpYyB2b2lkIGNtZF92bV9jaGVja19ldmVudChf
X3UxNiBpZCwgaW50IGV4cGVjdGVkX2VycikKIAkJCWV4cGVjdGVkX2Vycik7CiB9CiAKLXN0YXRp
YyB2b2lkIHRlc3RfY21kX3ZtX2NoZWNrX2V2ZW50KHZvaWQpCitzdGF0aWMgdm9pZCB0ZXN0X2Nt
ZF92bV9jaGVja19ldmVudChzdHJ1Y3Qga3ZtX3ZtICp2bSkKIHsKLQlfX3UxNiBpbnZhbGlkX2lk
ID0gMHhmZmZmOworCV9fdTE2IHZhbGlkX2lkID0gS1ZNSV9WTV9FVkVOVF9VTkhPT0ssIGludmFs
aWRfaWQgPSAweGZmZmY7CiAKIAljbWRfdm1fY2hlY2tfZXZlbnQoaW52YWxpZF9pZCwgLUtWTV9F
Tk9FTlQpOworCWNtZF92bV9jaGVja19ldmVudCh2YWxpZF9pZCwgMCk7CisKKwlkaXNhbGxvd19l
dmVudCh2bSwgdmFsaWRfaWQpOworCWNtZF92bV9jaGVja19ldmVudCh2YWxpZF9pZCwgLUtWTV9F
UEVSTSk7CisJYWxsb3dfZXZlbnQodm0sIHZhbGlkX2lkKTsKIH0KIAogc3RhdGljIHZvaWQgdGVz
dF9jbWRfdm1fZ2V0X2luZm8odm9pZCkKQEAgLTMxOSw2ICszMjksNTcgQEAgc3RhdGljIHZvaWQg
dGVzdF9jbWRfdm1fZ2V0X2luZm8odm9pZCkKIAlwcl9kZWJ1ZygidmNwdSBjb3VudDogJXVcbiIs
IHJwbC52Y3B1X2NvdW50KTsKIH0KIAorc3RhdGljIHZvaWQgdHJpZ2dlcl9ldmVudF91bmhvb2tf
bm90aWZpY2F0aW9uKHN0cnVjdCBrdm1fdm0gKnZtKQoreworCWludCByOworCisJciA9IGlvY3Rs
KHZtLT5mZCwgS1ZNX0lOVFJPU1BFQ1RJT05fUFJFVU5IT09LLCBOVUxMKTsKKwlURVNUX0FTU0VS
VChyID09IDAsCisJCSJLVk1fSU5UUk9TUEVDVElPTl9QUkVVTkhPT0sgZmFpbGVkLCBlcnJubyAl
ZCAoJXMpXG4iLAorCQllcnJubywgc3RyZXJyb3IoZXJybm8pKTsKK30KKworc3RhdGljIHZvaWQg
cmVjZWl2ZV9ldmVudChzdHJ1Y3Qga3ZtaV9tc2dfaGRyICptc2dfaGRyLCB1MTYgbXNnX2lkLAor
CQkJICBzdHJ1Y3Qga3ZtaV9ldmVudF9oZHIgKmV2X2hkciwgdTE2IGV2ZW50X2lkLAorCQkJICBz
aXplX3QgZXZfc2l6ZSkKK3sKKwlzaXplX3QgdG9fcmVhZCA9IGV2X3NpemU7CisKKwlyZWNlaXZl
X2RhdGEobXNnX2hkciwgc2l6ZW9mKCptc2dfaGRyKSk7CisKKwlURVNUX0FTU0VSVChtc2dfaGRy
LT5pZCA9PSBtc2dfaWQsCisJCSJVbmV4cGVjdGVkIG1lc3NhZ2VzIGlkICVkLCBleHBlY3RlZCAl
ZFxuIiwKKwkJbXNnX2hkci0+aWQsIG1zZ19pZCk7CisKKwlpZiAodG9fcmVhZCA+IG1zZ19oZHIt
PnNpemUpCisJCXRvX3JlYWQgPSBtc2dfaGRyLT5zaXplOworCisJcmVjZWl2ZV9kYXRhKGV2X2hk
ciwgdG9fcmVhZCk7CisJVEVTVF9BU1NFUlQoZXZfaGRyLT5ldmVudCA9PSBldmVudF9pZCwKKwkJ
IlVuZXhwZWN0ZWQgZXZlbnQgJWQsIGV4cGVjdGVkICVkXG4iLAorCQlldl9oZHItPmV2ZW50LCBl
dmVudF9pZCk7CisKKwlURVNUX0FTU0VSVChtc2dfaGRyLT5zaXplID09IGV2X3NpemUsCisJCSJJ
bnZhbGlkIGV2ZW50IHNpemUgJWQsIGV4cGVjdGVkICV6ZCBieXRlc1xuIiwKKwkJbXNnX2hkci0+
c2l6ZSwgZXZfc2l6ZSk7Cit9CisKK3N0YXRpYyB2b2lkIHJlY2VpdmVfdm1fZXZlbnRfdW5ob29r
KHZvaWQpCit7CisJc3RydWN0IGt2bWlfbXNnX2hkciBtc2dfaGRyOworCXN0cnVjdCBrdm1pX2V2
ZW50X2hkciBldl9oZHI7CisKKwlyZWNlaXZlX2V2ZW50KCZtc2dfaGRyLCBLVk1JX1ZNX0VWRU5U
LAorCQkgICAgICAmZXZfaGRyLCBLVk1JX1ZNX0VWRU5UX1VOSE9PSywgc2l6ZW9mKGV2X2hkcikp
OworfQorCitzdGF0aWMgdm9pZCB0ZXN0X2V2ZW50X3VuaG9vayhzdHJ1Y3Qga3ZtX3ZtICp2bSkK
K3sKKwl0cmlnZ2VyX2V2ZW50X3VuaG9va19ub3RpZmljYXRpb24odm0pOworCisJcmVjZWl2ZV92
bV9ldmVudF91bmhvb2soKTsKK30KKwogc3RhdGljIHZvaWQgdGVzdF9pbnRyb3NwZWN0aW9uKHN0
cnVjdCBrdm1fdm0gKnZtKQogewogCXNldHVwX3NvY2tldCgpOwpAQCAtMzI3LDggKzM4OCw5IEBA
IHN0YXRpYyB2b2lkIHRlc3RfaW50cm9zcGVjdGlvbihzdHJ1Y3Qga3ZtX3ZtICp2bSkKIAl0ZXN0
X2NtZF9pbnZhbGlkKCk7CiAJdGVzdF9jbWRfZ2V0X3ZlcnNpb24oKTsKIAl0ZXN0X2NtZF92bV9j
aGVja19jb21tYW5kKHZtKTsKLQl0ZXN0X2NtZF92bV9jaGVja19ldmVudCgpOworCXRlc3RfY21k
X3ZtX2NoZWNrX2V2ZW50KHZtKTsKIAl0ZXN0X2NtZF92bV9nZXRfaW5mbygpOworCXRlc3RfZXZl
bnRfdW5ob29rKHZtKTsKIAogCXVuaG9va19pbnRyb3NwZWN0aW9uKHZtKTsKIH0KZGlmZiAtLWdp
dCBhL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaS5jIGIvdmlydC9rdm0vaW50cm9zcGVjdGlv
bi9rdm1pLmMKaW5kZXggYTUyNzc5NWYwMWE0Li40YmEwOWNiZDNhZmQgMTAwNjQ0Ci0tLSBhL3Zp
cnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaS5jCisrKyBiL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24v
a3ZtaS5jCkBAIC0xNyw2ICsxNyw4IEBACiAKIHN0YXRpYyBERUNMQVJFX0JJVE1BUChLdm1pX2Fs
d2F5c19hbGxvd2VkX2NvbW1hbmRzLCBLVk1JX05VTV9DT01NQU5EUyk7CiBzdGF0aWMgREVDTEFS
RV9CSVRNQVAoS3ZtaV9rbm93bl9ldmVudHMsIEtWTUlfTlVNX0VWRU5UUyk7CitzdGF0aWMgREVD
TEFSRV9CSVRNQVAoS3ZtaV9rbm93bl92bV9ldmVudHMsIEtWTUlfTlVNX0VWRU5UUyk7CitzdGF0
aWMgREVDTEFSRV9CSVRNQVAoS3ZtaV9rbm93bl92Y3B1X2V2ZW50cywgS1ZNSV9OVU1fRVZFTlRT
KTsKIAogc3RhdGljIHN0cnVjdCBrbWVtX2NhY2hlICptc2dfY2FjaGU7CiAKQEAgLTc2LDcgKzc4
LDE0IEBAIHN0YXRpYyB2b2lkIGt2bWlfaW5pdF9hbHdheXNfYWxsb3dlZF9jb21tYW5kcyh2b2lk
KQogCiBzdGF0aWMgdm9pZCBrdm1pX2luaXRfa25vd25fZXZlbnRzKHZvaWQpCiB7Ci0JYml0bWFw
X3plcm8oS3ZtaV9rbm93bl9ldmVudHMsIEtWTUlfTlVNX0VWRU5UUyk7CisJYml0bWFwX3plcm8o
S3ZtaV9rbm93bl92bV9ldmVudHMsIEtWTUlfTlVNX0VWRU5UUyk7CisJc2V0X2JpdChLVk1JX1ZN
X0VWRU5UX1VOSE9PSywgS3ZtaV9rbm93bl92bV9ldmVudHMpOworCisJYml0bWFwX3plcm8oS3Zt
aV9rbm93bl92Y3B1X2V2ZW50cywgS1ZNSV9OVU1fRVZFTlRTKTsKKwlrdm1pX2FyY2hfaW5pdF92
Y3B1X2V2ZW50c19tYXNrKEt2bWlfa25vd25fdmNwdV9ldmVudHMpOworCisJYml0bWFwX29yKEt2
bWlfa25vd25fZXZlbnRzLCBLdm1pX2tub3duX3ZtX2V2ZW50cywKKwkJICBLdm1pX2tub3duX3Zj
cHVfZXZlbnRzLCBLVk1JX05VTV9FVkVOVFMpOwogfQogCiBpbnQga3ZtaV9pbml0KHZvaWQpCkBA
IC0xMzAsNiArMTM5LDggQEAga3ZtaV9hbGxvYyhzdHJ1Y3Qga3ZtICprdm0sIGNvbnN0IHN0cnVj
dCBrdm1faW50cm9zcGVjdGlvbl9ob29rICpob29rKQogCWJpdG1hcF9jb3B5KGt2bWktPmNtZF9h
bGxvd19tYXNrLCBLdm1pX2Fsd2F5c19hbGxvd2VkX2NvbW1hbmRzLAogCQkgICAgS1ZNSV9OVU1f
Q09NTUFORFMpOwogCisJYXRvbWljX3NldCgma3ZtaS0+ZXZfc2VxLCAwKTsKKwogCWt2bWktPmt2
bSA9IGt2bTsKIAogCXJldHVybiBrdm1pOwpkaWZmIC0tZ2l0IGEvdmlydC9rdm0vaW50cm9zcGVj
dGlvbi9rdm1pX2ludC5oIGIvdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pX2ludC5oCmluZGV4
IGVmNDg1MGU4YmZhZS4uNTdjMjJmMjBlNzRmIDEwMDY0NAotLS0gYS92aXJ0L2t2bS9pbnRyb3Nw
ZWN0aW9uL2t2bWlfaW50LmgKKysrIGIvdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pX2ludC5o
CkBAIC0yNyw0ICsyNyw3IEBAIGJvb2wga3ZtaV9pc19jb21tYW5kX2FsbG93ZWQoc3RydWN0IGt2
bV9pbnRyb3NwZWN0aW9uICprdm1pLCB1MTYgaWQpOwogYm9vbCBrdm1pX2lzX2V2ZW50X2FsbG93
ZWQoc3RydWN0IGt2bV9pbnRyb3NwZWN0aW9uICprdm1pLCB1MTYgaWQpOwogYm9vbCBrdm1pX2lz
X2tub3duX2V2ZW50KHUxNiBpZCk7CiAKKy8qIGFyY2ggKi8KK3ZvaWQga3ZtaV9hcmNoX2luaXRf
dmNwdV9ldmVudHNfbWFzayh1bnNpZ25lZCBsb25nICpzdXBwb3J0ZWQpOworCiAjZW5kaWYKZGlm
ZiAtLWdpdCBhL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9tc2cuYyBiL3ZpcnQva3ZtL2lu
dHJvc3BlY3Rpb24va3ZtaV9tc2cuYwppbmRleCAwOTMyMTM4MDYyOWYuLjQ4MzFmMWI0MTcxNCAx
MDA2NDQKLS0tIGEvdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pX21zZy5jCisrKyBiL3ZpcnQv
a3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9tc2cuYwpAQCAtMTg2LDcgKzE4Niw3IEBAIHN0YXRpYyBi
b29sIGlzX3ZtX21lc3NhZ2UodTE2IGlkKQogCiBzdGF0aWMgYm9vbCBpc192bV9jb21tYW5kKHUx
NiBpZCkKIHsKLQlyZXR1cm4gaXNfdm1fbWVzc2FnZShpZCk7CisJcmV0dXJuIGlzX3ZtX21lc3Nh
Z2UoaWQpICYmIGlkICE9IEtWTUlfVk1fRVZFTlQ7CiB9CiAKIHN0YXRpYyBzdHJ1Y3Qga3ZtaV9t
c2dfaGRyICprdm1pX21zZ19yZWN2KHN0cnVjdCBrdm1faW50cm9zcGVjdGlvbiAqa3ZtaSkKQEAg
LTI2MSw3ICsyNjEsNDUgQEAgYm9vbCBrdm1pX21zZ19wcm9jZXNzKHN0cnVjdCBrdm1faW50cm9z
cGVjdGlvbiAqa3ZtaSkKIAlyZXR1cm4gZXJyID09IDA7CiB9CiAKK3N0YXRpYyB2b2lkIGt2bWlf
ZmlsbF9ldl9tc2dfaGRyKHN0cnVjdCBrdm1faW50cm9zcGVjdGlvbiAqa3ZtaSwKKwkJCQkgc3Ry
dWN0IGt2bWlfbXNnX2hkciAqbXNnX2hkciwKKwkJCQkgc3RydWN0IGt2bWlfZXZlbnRfaGRyICpl
dl9oZHIsCisJCQkJIHUxNiBtc2dfaWQsIHUzMiBtc2dfc2VxLAorCQkJCSBzaXplX3QgbXNnX3Np
emUsIHUxNiBldl9pZCkKK3sKKwltZW1zZXQobXNnX2hkciwgMCwgc2l6ZW9mKCptc2dfaGRyKSk7
CisJbXNnX2hkci0+aWQgPSBtc2dfaWQ7CisJbXNnX2hkci0+c2VxID0gbXNnX3NlcTsKKwltc2df
aGRyLT5zaXplID0gbXNnX3NpemUgLSBzaXplb2YoKm1zZ19oZHIpOworCisJbWVtc2V0KGV2X2hk
ciwgMCwgc2l6ZW9mKCpldl9oZHIpKTsKKwlldl9oZHItPmV2ZW50ID0gZXZfaWQ7Cit9CisKK3N0
YXRpYyB2b2lkIGt2bWlfZmlsbF92bV9ldmVudChzdHJ1Y3Qga3ZtX2ludHJvc3BlY3Rpb24gKmt2
bWksCisJCQkgICAgICAgc3RydWN0IGt2bWlfbXNnX2hkciAqbXNnX2hkciwKKwkJCSAgICAgICBz
dHJ1Y3Qga3ZtaV9ldmVudF9oZHIgKmV2X2hkciwKKwkJCSAgICAgICB1MTYgZXZfaWQsIHNpemVf
dCBtc2dfc2l6ZSkKK3sKKwl1MzIgbXNnX3NlcSA9IGF0b21pY19pbmNfcmV0dXJuKCZrdm1pLT5l
dl9zZXEpOworCisJa3ZtaV9maWxsX2V2X21zZ19oZHIoa3ZtaSwgbXNnX2hkciwgZXZfaGRyLCBL
Vk1JX1ZNX0VWRU5ULAorCQkJICAgICBtc2dfc2VxLCBtc2dfc2l6ZSwgZXZfaWQpOworfQorCiBp
bnQga3ZtaV9tc2dfc2VuZF91bmhvb2soc3RydWN0IGt2bV9pbnRyb3NwZWN0aW9uICprdm1pKQog
ewotCXJldHVybiAtMTsKKwlzdHJ1Y3Qga3ZtaV9tc2dfaGRyIG1zZ19oZHI7CisJc3RydWN0IGt2
bWlfZXZlbnRfaGRyIGV2X2hkcjsKKwlzdHJ1Y3Qga3ZlYyB2ZWNbXSA9IHsKKwkJey5pb3ZfYmFz
ZSA9ICZtc2dfaGRyLCAuaW92X2xlbiA9IHNpemVvZihtc2dfaGRyKX0sCisJCXsuaW92X2Jhc2Ug
PSAmZXZfaGRyLCAgLmlvdl9sZW4gPSBzaXplb2YoZXZfaGRyKSB9LAorCX07CisJc2l6ZV90IG1z
Z19zaXplID0gc2l6ZW9mKG1zZ19oZHIpICsgc2l6ZW9mKGV2X2hkcik7CisJc2l6ZV90IG4gPSBB
UlJBWV9TSVpFKHZlYyk7CisKKwlrdm1pX2ZpbGxfdm1fZXZlbnQoa3ZtaSwgJm1zZ19oZHIsICZl
dl9oZHIsCisJCQkgICBLVk1JX1ZNX0VWRU5UX1VOSE9PSywgbXNnX3NpemUpOworCisJcmV0dXJu
IGt2bWlfc29ja193cml0ZShrdm1pLCB2ZWMsIG4sIG1zZ19zaXplKTsKIH0KX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KVmlydHVhbGl6YXRpb24gbWFpbGlu
ZyBsaXN0ClZpcnR1YWxpemF0aW9uQGxpc3RzLmxpbnV4LWZvdW5kYXRpb24ub3JnCmh0dHBzOi8v
bGlzdHMubGludXhmb3VuZGF0aW9uLm9yZy9tYWlsbWFuL2xpc3RpbmZvL3ZpcnR1YWxpemF0aW9u
