Return-Path: <virtualization-bounces@lists.linux-foundation.org>
X-Original-To: lists.virtualization@lfdr.de
Delivered-To: lists.virtualization@lfdr.de
Received: from hemlock.osuosl.org (smtp2.osuosl.org [140.211.166.133])
	by mail.lfdr.de (Postfix) with ESMTPS id DB8E92C3CF5
	for <lists.virtualization@lfdr.de>; Wed, 25 Nov 2020 10:52:18 +0100 (CET)
Received: from localhost (localhost [127.0.0.1])
	by hemlock.osuosl.org (Postfix) with ESMTP id 8720887488;
	Wed, 25 Nov 2020 09:52:17 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from hemlock.osuosl.org ([127.0.0.1])
	by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id 2Q2uvBccmi2V; Wed, 25 Nov 2020 09:52:14 +0000 (UTC)
Received: from lists.linuxfoundation.org (lf-lists.osuosl.org [140.211.9.56])
	by hemlock.osuosl.org (Postfix) with ESMTP id AF75A874F5;
	Wed, 25 Nov 2020 09:52:07 +0000 (UTC)
Received: from lf-lists.osuosl.org (localhost [127.0.0.1])
	by lists.linuxfoundation.org (Postfix) with ESMTP id 937FDC0052;
	Wed, 25 Nov 2020 09:52:07 +0000 (UTC)
X-Original-To: virtualization@lists.linux-foundation.org
Delivered-To: virtualization@lists.linuxfoundation.org
Received: from fraxinus.osuosl.org (smtp4.osuosl.org [140.211.166.137])
 by lists.linuxfoundation.org (Postfix) with ESMTP id D591FC1DA1
 for <virtualization@lists.linux-foundation.org>;
 Wed, 25 Nov 2020 09:52:01 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by fraxinus.osuosl.org (Postfix) with ESMTP id C8FC886AE8
 for <virtualization@lists.linux-foundation.org>;
 Wed, 25 Nov 2020 09:52:01 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from fraxinus.osuosl.org ([127.0.0.1])
 by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id KA5xSxsun4D6
 for <virtualization@lists.linux-foundation.org>;
 Wed, 25 Nov 2020 09:51:58 +0000 (UTC)
X-Greylist: from auto-whitelisted by SQLgrey-1.7.6
Received: from mx01.bbu.dsd.mx.bitdefender.com
 (mx01.bbu.dsd.mx.bitdefender.com [91.199.104.161])
 by fraxinus.osuosl.org (Postfix) with ESMTPS id C5B4086A95
 for <virtualization@lists.linux-foundation.org>;
 Wed, 25 Nov 2020 09:51:56 +0000 (UTC)
Received: from smtp.bitdefender.com (smtp01.buh.bitdefender.com [10.17.80.75])
 by mx01.bbu.dsd.mx.bitdefender.com (Postfix) with ESMTPS id
 DF791305D3C4; Wed, 25 Nov 2020 11:35:51 +0200 (EET)
Received: from localhost.localdomain (unknown [91.199.104.27])
 by smtp.bitdefender.com (Postfix) with ESMTPSA id B92E83072784;
 Wed, 25 Nov 2020 11:35:51 +0200 (EET)
From: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>
To: kvm@vger.kernel.org
Subject: [PATCH v10 56/81] KVM: introspection: add KVMI_VCPU_EVENT_HYPERCALL
Date: Wed, 25 Nov 2020 11:35:35 +0200
Message-Id: <20201125093600.2766-57-alazar@bitdefender.com>
In-Reply-To: <20201125093600.2766-1-alazar@bitdefender.com>
References: <20201125093600.2766-1-alazar@bitdefender.com>
MIME-Version: 1.0
Cc: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>,
 Paolo Bonzini <pbonzini@redhat.com>,
 =?UTF-8?q?Mihai=20Don=C8=9Bu?= <mdontu@bitdefender.com>,
 virtualization@lists.linux-foundation.org
X-BeenThere: virtualization@lists.linux-foundation.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Linux virtualization <virtualization.lists.linux-foundation.org>
List-Unsubscribe: <https://lists.linuxfoundation.org/mailman/options/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=unsubscribe>
List-Archive: <http://lists.linuxfoundation.org/pipermail/virtualization/>
List-Post: <mailto:virtualization@lists.linux-foundation.org>
List-Help: <mailto:virtualization-request@lists.linux-foundation.org?subject=help>
List-Subscribe: <https://lists.linuxfoundation.org/mailman/listinfo/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: virtualization-bounces@lists.linux-foundation.org
Sender: "Virtualization" <virtualization-bounces@lists.linux-foundation.org>

RnJvbTogTWloYWkgRG9uyJt1IDxtZG9udHVAYml0ZGVmZW5kZXIuY29tPgoKVGhpcyBldmVudCBp
cyBzZW50IG9uIGEgc3BlY2lmaWMgaHlwZXJjYWxsLgoKSXQgaXMgdXNlZCBieSB0aGUgY29kZSBy
ZXNpZGluZyBpbnNpZGUgdGhlIGludHJvc3BlY3RlZCBndWVzdCB0byBjYWxsIHRoZQppbnRyb3Nw
ZWN0aW9uIHRvb2wgYW5kIHRvIHJlcG9ydCBjZXJ0YWluIGRldGFpbHMgYWJvdXQgaXRzIG9wZXJh
dGlvbi4KRm9yIGV4YW1wbGUsIGEgY2xhc3NpYyBhbnRpbWFsd2FyZSByZW1lZGlhdGlvbiB0b29s
IGNhbiByZXBvcnQKd2hhdCBpdCBoYXMgZm91bmQgZHVyaW5nIGEgc2Nhbi4KClNpZ25lZC1vZmYt
Ynk6IE1paGFpIERvbsibdSA8bWRvbnR1QGJpdGRlZmVuZGVyLmNvbT4KQ28tZGV2ZWxvcGVkLWJ5
OiBBZGFsYmVydCBMYXrEg3IgPGFsYXphckBiaXRkZWZlbmRlci5jb20+ClNpZ25lZC1vZmYtYnk6
IEFkYWxiZXJ0IExhesSDciA8YWxhemFyQGJpdGRlZmVuZGVyLmNvbT4KLS0tCiBEb2N1bWVudGF0
aW9uL3ZpcnQva3ZtL2h5cGVyY2FsbHMucnN0ICAgICAgICAgfCAzNSArKysrKysrKysrKysrKysr
CiBEb2N1bWVudGF0aW9uL3ZpcnQva3ZtL2t2bWkucnN0ICAgICAgICAgICAgICAgfCA0MCArKysr
KysrKysrKysrKysrKy0KIGFyY2gveDg2L2luY2x1ZGUvdWFwaS9hc20va3ZtaS5oICAgICAgICAg
ICAgICB8ICA0ICsrCiBhcmNoL3g4Ni9rdm0va3ZtaS5jICAgICAgICAgICAgICAgICAgICAgICAg
ICAgfCAyMCArKysrKysrKysKIGFyY2gveDg2L2t2bS94ODYuYyAgICAgICAgICAgICAgICAgICAg
ICAgICAgICB8IDE4ICsrKysrKy0tCiBpbmNsdWRlL2xpbnV4L2t2bWlfaG9zdC5oICAgICAgICAg
ICAgICAgICAgICAgfCAgMiArCiBpbmNsdWRlL3VhcGkvbGludXgva3ZtX3BhcmEuaCAgICAgICAg
ICAgICAgICAgfCAgMSArCiBpbmNsdWRlL3VhcGkvbGludXgva3ZtaS5oICAgICAgICAgICAgICAg
ICAgICAgfCAgMyArLQogLi4uL3Rlc3Rpbmcvc2VsZnRlc3RzL2t2bS94ODZfNjQva3ZtaV90ZXN0
LmMgIHwgNDIgKysrKysrKysrKysrKysrKysrKwogdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1p
LmMgICAgICAgICAgICAgICAgIHwgMzggKysrKysrKysrKysrKysrKysKIHZpcnQva3ZtL2ludHJv
c3BlY3Rpb24va3ZtaV9pbnQuaCAgICAgICAgICAgICB8ICA4ICsrKysKIHZpcnQva3ZtL2ludHJv
c3BlY3Rpb24va3ZtaV9tc2cuYyAgICAgICAgICAgICB8IDEzICsrKysrKwogMTIgZmlsZXMgY2hh
bmdlZCwgMjE4IGluc2VydGlvbnMoKyksIDYgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvRG9j
dW1lbnRhdGlvbi92aXJ0L2t2bS9oeXBlcmNhbGxzLnJzdCBiL0RvY3VtZW50YXRpb24vdmlydC9r
dm0vaHlwZXJjYWxscy5yc3QKaW5kZXggNzBlNzdjNjZiNjRjLi5hYmZiZmY5NmI5ZTMgMTAwNjQ0
Ci0tLSBhL0RvY3VtZW50YXRpb24vdmlydC9rdm0vaHlwZXJjYWxscy5yc3QKKysrIGIvRG9jdW1l
bnRhdGlvbi92aXJ0L2t2bS9oeXBlcmNhbGxzLnJzdApAQCAtMTY5LDMgKzE2OSwzOCBAQCBhMDog
ZGVzdGluYXRpb24gQVBJQyBJRAogCiA6VXNhZ2UgZXhhbXBsZTogV2hlbiBzZW5kaW5nIGEgY2Fs
bC1mdW5jdGlvbiBJUEktbWFueSB0byB2Q1BVcywgeWllbGQgaWYKIAkgICAgICAgIGFueSBvZiB0
aGUgSVBJIHRhcmdldCB2Q1BVcyB3YXMgcHJlZW1wdGVkLgorCis5LiBLVk1fSENfWEVOX0hWTV9P
UAorLS0tLS0tLS0tLS0tLS0tLS0tLS0KKworOkFyY2hpdGVjdHVyZTogeDg2Cis6U3RhdHVzOiBh
Y3RpdmUKKzpQdXJwb3NlOiBUbyBlbmFibGUgY29tbXVuaWNhdGlvbiBiZXR3ZWVuIGEgZ3Vlc3Qg
YWdlbnQgYW5kIGEgVk1JIGFwcGxpY2F0aW9uCisKK1VzYWdlOgorCitBbiBldmVudCB3aWxsIGJl
IHNlbnQgdG8gdGhlIFZNSSBhcHBsaWNhdGlvbiAoc2VlIGt2bWkucnN0KSBpZiB0aGUgZm9sbG93
aW5nCityZWdpc3RlcnMsIHdoaWNoIGRpZmZlciBiZXR3ZWVuIDMyYml0IGFuZCA2NGJpdCwgaGF2
ZSB0aGUgZm9sbG93aW5nIHZhbHVlczoKKworICAgICAgID09PT09PT09ICAgID09PT09ICAgICA9
PT09PQorICAgICAgIDMyYml0ICAgICAgIDY0Yml0ICAgICB2YWx1ZQorICAgICAgID09PT09PT09
ICAgID09PT09ICAgICA9PT09PQorICAgICAgIGVieCAoYTApICAgIHJkaSAgICAgICBLVk1fSENf
WEVOX0hWTV9PUF9HVUVTVF9SRVFVRVNUX1ZNX0VWRU5UCisgICAgICAgZWN4IChhMSkgICAgcnNp
ICAgICAgIDAKKyAgICAgICA9PT09PT09PSAgICA9PT09PSAgICAgPT09PT0KKworVGhpcyBzcGVj
aWZpY2F0aW9uIGNvcGllcyBYZW4ncyB7IF9fSFlQRVJWSVNPUl9odm1fb3AsCitIVk1PUF9ndWVz
dF9yZXF1ZXN0X3ZtX2V2ZW50IH0gaHlwZXJjYWxsIGFuZCBjYW4gb3JpZ2luYXRlIGZyb20ga2Vy
bmVsIG9yCit1c2Vyc3BhY2UuCisKK0l0IHJldHVybnMgMCBpZiBzdWNjZXNzZnVsLCBvciBhIG5l
Z2F0aXZlIFBPU0lYLjEgZXJyb3IgY29kZSBpZiBpdCBmYWlscy4gVGhlCithYnNlbmNlIG9mIGFu
IGFjdGl2ZSBWTUkgYXBwbGljYXRpb24gaXMgbm90IHNpZ25hbGVkIGluIGFueSB3YXkuCisKK1Ro
ZSBmb2xsb3dpbmcgcmVnaXN0ZXJzIGFyZSBjbG9iYmVyZWQ6CisKKyAgKiAzMmJpdDogZWR4LCBl
c2ksIGVkaSwgZWJwCisgICogNjRiaXQ6IHJkeCwgcjEwLCByOCwgcjkKKworSW4gcGFydGljdWxh
ciwgZm9yIEtWTV9IQ19YRU5fSFZNX09QX0dVRVNUX1JFUVVFU1RfVk1fRVZFTlQsIHRoZSBsYXN0
IHR3bworcmVnaXN0ZXJzIGNhbiBiZSBwb2lzb25lZCBkZWxpYmVyYXRlbHkgYW5kIGNhbm5vdCBi
ZSB1c2VkIGZvciBwYXNzaW5nCitpbmZvcm1hdGlvbi4KZGlmZiAtLWdpdCBhL0RvY3VtZW50YXRp
b24vdmlydC9rdm0va3ZtaS5yc3QgYi9Eb2N1bWVudGF0aW9uL3ZpcnQva3ZtL2t2bWkucnN0Cmlu
ZGV4IDEwOTY2NDMwNjIxYy4uMDIzYzg4NTYzOGFmIDEwMDY0NAotLS0gYS9Eb2N1bWVudGF0aW9u
L3ZpcnQva3ZtL2t2bWkucnN0CisrKyBiL0RvY3VtZW50YXRpb24vdmlydC9rdm0va3ZtaS5yc3QK
QEAgLTUzNSw3ICs1MzUsMTAgQEAgY29tbWFuZCkgYmVmb3JlIHJldHVybmluZyB0byBndWVzdC4K
IAogCXN0cnVjdCBrdm1pX2Vycm9yX2NvZGUKIAotRW5hYmxlcy9kaXNhYmxlcyB2Q1BVIGludHJv
c3BlY3Rpb24gZXZlbnRzLgorRW5hYmxlcy9kaXNhYmxlcyB2Q1BVIGludHJvc3BlY3Rpb24gZXZl
bnRzLiBUaGlzIGNvbW1hbmQgY2FuIGJlIHVzZWQgd2l0aAordGhlIGZvbGxvd2luZyBldmVudHM6
OgorCisJS1ZNSV9WQ1BVX0VWRU5UX0hZUEVSQ0FMTAogCiBXaGVuIGFuIGV2ZW50IGlzIGVuYWJs
ZWQsIHRoZSBpbnRyb3NwZWN0aW9uIHRvb2wgaXMgbm90aWZpZWQgYW5kCiBtdXN0IHJlcGx5IHdp
dGg6IGNvbnRpbnVlLCByZXRyeSwgY3Jhc2gsIGV0Yy4gKHNlZSAqKkV2ZW50cyoqIGJlbG93KS4K
QEAgLTc3OSwzICs3ODIsMzggQEAgY2Fubm90IGJlIGNvbnRyb2xsZWQgd2l0aCAqS1ZNSV9WQ1BV
X0NPTlRST0xfRVZFTlRTKi4KIEJlY2F1c2UgaXQgaGFzIGEgbG93IHByaW9yaXR5LCBpdCB3aWxs
IGJlIHNlbnQgYWZ0ZXIgYW55IG90aGVyIHZDUFUKIGludHJvc3BlY3Rpb24gZXZlbnQgYW5kIHdo
ZW4gbm8gb3RoZXIgdkNQVSBpbnRyb3NwZWN0aW9uIGNvbW1hbmQgaXMKIHF1ZXVlZC4KKworMy4g
S1ZNSV9WQ1BVX0VWRU5UX0hZUEVSQ0FMTAorLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQor
Cis6QXJjaGl0ZWN0dXJlczogeDg2Cis6VmVyc2lvbnM6ID49IDEKKzpBY3Rpb25zOiBDT05USU5V
RSwgQ1JBU0gKKzpQYXJhbWV0ZXJzOgorCis6OgorCisJc3RydWN0IGt2bWlfZXZlbnRfaGRyOwor
CXN0cnVjdCBrdm1pX3ZjcHVfZXZlbnQ7CisKKzpSZXR1cm5zOgorCis6OgorCisJc3RydWN0IGt2
bWlfdmNwdV9oZHI7CisJc3RydWN0IGt2bWlfdmNwdV9ldmVudF9yZXBseTsKKworVGhpcyBldmVu
dCBpcyBzZW50IG9uIGEgc3BlY2lmaWMgdXNlciBoeXBlcmNhbGwgd2hlbiB0aGUgaW50cm9zcGVj
dGlvbiBoYXMKK2JlZW4gZW5hYmxlZCBmb3IgdGhpcyBldmVudCAoc2VlICpLVk1JX1ZDUFVfQ09O
VFJPTF9FVkVOVFMqKS4KKworVGhlIGh5cGVyY2FsbCBudW1iZXIgbXVzdCBiZSBgYEtWTV9IQ19Y
RU5fSFZNX09QYGAgd2l0aCB0aGUKK2BgS1ZNX0hDX1hFTl9IVk1fT1BfR1VFU1RfUkVRVUVTVF9W
TV9FVkVOVGBgIHN1Yi1mdW5jdGlvbgorKHNlZSBoeXBlcmNhbGxzLnJzdCkuCisKK0l0IGlzIHVz
ZWQgYnkgdGhlIGNvZGUgcmVzaWRpbmcgaW5zaWRlIHRoZSBpbnRyb3NwZWN0ZWQgZ3Vlc3QgdG8g
Y2FsbCB0aGUKK2ludHJvc3BlY3Rpb24gdG9vbCBhbmQgdG8gcmVwb3J0IGNlcnRhaW4gZGV0YWls
cyBhYm91dCBpdHMgb3BlcmF0aW9uLiBGb3IKK2V4YW1wbGUsIGEgY2xhc3NpYyBhbnRpbWFsd2Fy
ZSByZW1lZGlhdGlvbiB0b29sIGNhbiByZXBvcnQgd2hhdCBpdCBoYXMKK2ZvdW5kIGR1cmluZyBh
IHNjYW4uCisKK1RoZSBtb3N0IHVzZWZ1bCByZWdpc3RlcnMgZGVzY3JpYmluZyB0aGUgdkNQVSBz
dGF0ZSBjYW4gYmUgcmVhZCBmcm9tCitgYGt2bWlfdmNwdV9ldmVudC5hcmNoLnJlZ3NgYC4KZGlm
ZiAtLWdpdCBhL2FyY2gveDg2L2luY2x1ZGUvdWFwaS9hc20va3ZtaS5oIGIvYXJjaC94ODYvaW5j
bHVkZS91YXBpL2FzbS9rdm1pLmgKaW5kZXggMzYzMWRhOWVlZjhjLi5hNDQyYmE0ZDIxOTAgMTAw
NjQ0Ci0tLSBhL2FyY2gveDg2L2luY2x1ZGUvdWFwaS9hc20va3ZtaS5oCisrKyBiL2FyY2gveDg2
L2luY2x1ZGUvdWFwaS9hc20va3ZtaS5oCkBAIC04LDYgKzgsMTAgQEAKIAogI2luY2x1ZGUgPGFz
bS9rdm0uaD4KIAorZW51bSB7CisJS1ZNX0hDX1hFTl9IVk1fT1BfR1VFU1RfUkVRVUVTVF9WTV9F
VkVOVCA9IDI0LAorfTsKKwogc3RydWN0IGt2bWlfdmNwdV9nZXRfaW5mb19yZXBseSB7CiAJX191
NjQgdHNjX3NwZWVkOwogfTsKZGlmZiAtLWdpdCBhL2FyY2gveDg2L2t2bS9rdm1pLmMgYi9hcmNo
L3g4Ni9rdm0va3ZtaS5jCmluZGV4IDM5NjM4YWY3NzU3ZS4uNWYwOGNmMGQxOWJjIDEwMDY0NAot
LS0gYS9hcmNoL3g4Ni9rdm0va3ZtaS5jCisrKyBiL2FyY2gveDg2L2t2bS9rdm1pLmMKQEAgLTEx
LDYgKzExLDcgQEAKIAogdm9pZCBrdm1pX2FyY2hfaW5pdF92Y3B1X2V2ZW50c19tYXNrKHVuc2ln
bmVkIGxvbmcgKnN1cHBvcnRlZCkKIHsKKwlzZXRfYml0KEtWTUlfVkNQVV9FVkVOVF9IWVBFUkNB
TEwsIHN1cHBvcnRlZCk7CiB9CiAKIHN0YXRpYyB1bnNpZ25lZCBpbnQga3ZtaV92Y3B1X21vZGUo
Y29uc3Qgc3RydWN0IGt2bV92Y3B1ICp2Y3B1LApAQCAtMTQwLDMgKzE0MSwyMiBAQCB2b2lkIGt2
bWlfYXJjaF9wb3N0X3JlcGx5KHN0cnVjdCBrdm1fdmNwdSAqdmNwdSkKIAlrdm1fYXJjaF92Y3B1
X3NldF9yZWdzKHZjcHUsICZ2Y3B1aS0+YXJjaC5kZWxheWVkX3JlZ3MsIGZhbHNlKTsKIAl2Y3B1
aS0+YXJjaC5oYXZlX2RlbGF5ZWRfcmVncyA9IGZhbHNlOwogfQorCitib29sIGt2bWlfYXJjaF9p
c19hZ2VudF9oeXBlcmNhbGwoc3RydWN0IGt2bV92Y3B1ICp2Y3B1KQoreworCXVuc2lnbmVkIGxv
bmcgc3ViZnVuYzEsIHN1YmZ1bmMyOworCWJvb2wgbG9uZ21vZGUgPSBpc182NF9iaXRfbW9kZSh2
Y3B1KTsKKworCWlmIChsb25nbW9kZSkgeworCQlzdWJmdW5jMSA9IGt2bV9yZGlfcmVhZCh2Y3B1
KTsKKwkJc3ViZnVuYzIgPSBrdm1fcnNpX3JlYWQodmNwdSk7CisJfSBlbHNlIHsKKwkJc3ViZnVu
YzEgPSBrdm1fcmJ4X3JlYWQodmNwdSk7CisJCXN1YmZ1bmMxICY9IDB4RkZGRkZGRkY7CisJCXN1
YmZ1bmMyID0ga3ZtX3JjeF9yZWFkKHZjcHUpOworCQlzdWJmdW5jMiAmPSAweEZGRkZGRkZGOwor
CX0KKworCXJldHVybiAoc3ViZnVuYzEgPT0gS1ZNX0hDX1hFTl9IVk1fT1BfR1VFU1RfUkVRVUVT
VF9WTV9FVkVOVAorCQkmJiBzdWJmdW5jMiA9PSAwKTsKK30KZGlmZiAtLWdpdCBhL2FyY2gveDg2
L2t2bS94ODYuYyBiL2FyY2gveDg2L2t2bS94ODYuYwppbmRleCA0ZTkxZDY3OTRiNWUuLmFhZDEy
ZGY3NDJkZiAxMDA2NDQKLS0tIGEvYXJjaC94ODYva3ZtL3g4Ni5jCisrKyBiL2FyY2gveDg2L2t2
bS94ODYuYwpAQCAtODEwMiwxMSArODEwMiwxNCBAQCBpbnQga3ZtX2VtdWxhdGVfaHlwZXJjYWxs
KHN0cnVjdCBrdm1fdmNwdSAqdmNwdSkKIHsKIAl1bnNpZ25lZCBsb25nIG5yLCBhMCwgYTEsIGEy
LCBhMywgcmV0OwogCWludCBvcF82NF9iaXQ7Ci0KLQlpZiAoa3ZtX2h2X2h5cGVyY2FsbF9lbmFi
bGVkKHZjcHUtPmt2bSkpCi0JCXJldHVybiBrdm1faHZfaHlwZXJjYWxsKHZjcHUpOworCWJvb2wg
a3ZtaV9oYzsKIAogCW5yID0ga3ZtX3JheF9yZWFkKHZjcHUpOworCWt2bWlfaGMgPSAodTMyKW5y
ID09IEtWTV9IQ19YRU5fSFZNX09QOworCisJaWYgKGt2bV9odl9oeXBlcmNhbGxfZW5hYmxlZCh2
Y3B1LT5rdm0pICYmICFrdm1pX2hjKQorCQlyZXR1cm4ga3ZtX2h2X2h5cGVyY2FsbCh2Y3B1KTsK
KwogCWEwID0ga3ZtX3JieF9yZWFkKHZjcHUpOwogCWExID0ga3ZtX3JjeF9yZWFkKHZjcHUpOwog
CWEyID0ga3ZtX3JkeF9yZWFkKHZjcHUpOwpAQCAtODEyMyw3ICs4MTI2LDcgQEAgaW50IGt2bV9l
bXVsYXRlX2h5cGVyY2FsbChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUpCiAJCWEzICY9IDB4RkZGRkZG
RkY7CiAJfQogCi0JaWYgKGt2bV94ODZfb3BzLmdldF9jcGwodmNwdSkgIT0gMCkgeworCWlmIChr
dm1feDg2X29wcy5nZXRfY3BsKHZjcHUpICE9IDAgJiYgIWt2bWlfaGMpIHsKIAkJcmV0ID0gLUtW
TV9FUEVSTTsKIAkJZ290byBvdXQ7CiAJfQpAQCAtODE2MCw2ICs4MTYzLDEzIEBAIGludCBrdm1f
ZW11bGF0ZV9oeXBlcmNhbGwoc3RydWN0IGt2bV92Y3B1ICp2Y3B1KQogCQlrdm1fc2NoZWRfeWll
bGQodmNwdS0+a3ZtLCBhMCk7CiAJCXJldCA9IDA7CiAJCWJyZWFrOworI2lmZGVmIENPTkZJR19L
Vk1fSU5UUk9TUEVDVElPTgorCWNhc2UgS1ZNX0hDX1hFTl9IVk1fT1A6CisJCXJldCA9IDA7CisJ
CWlmICgha3ZtaV9oeXBlcmNhbGxfZXZlbnQodmNwdSkpCisJCQlyZXQgPSAtS1ZNX0VOT1NZUzsK
KwkJYnJlYWs7CisjZW5kaWYgLyogQ09ORklHX0tWTV9JTlRST1NQRUNUSU9OICovCiAJZGVmYXVs
dDoKIAkJcmV0ID0gLUtWTV9FTk9TWVM7CiAJCWJyZWFrOwpkaWZmIC0tZ2l0IGEvaW5jbHVkZS9s
aW51eC9rdm1pX2hvc3QuaCBiL2luY2x1ZGUvbGludXgva3ZtaV9ob3N0LmgKaW5kZXggNWU1ZDI1
NWU1YTJjLi4xZmI3NzViMGRlMzMgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvbGludXgva3ZtaV9ob3N0
LmgKKysrIGIvaW5jbHVkZS9saW51eC9rdm1pX2hvc3QuaApAQCAtNjksNiArNjksNyBAQCBpbnQg
a3ZtaV9pb2N0bF9ldmVudChzdHJ1Y3Qga3ZtICprdm0sCiBpbnQga3ZtaV9pb2N0bF9wcmV1bmhv
b2soc3RydWN0IGt2bSAqa3ZtKTsKIAogdm9pZCBrdm1pX2hhbmRsZV9yZXF1ZXN0cyhzdHJ1Y3Qg
a3ZtX3ZjcHUgKnZjcHUpOworYm9vbCBrdm1pX2h5cGVyY2FsbF9ldmVudChzdHJ1Y3Qga3ZtX3Zj
cHUgKnZjcHUpOwogCiAjZWxzZQogCkBAIC04MCw2ICs4MSw3IEBAIHN0YXRpYyBpbmxpbmUgdm9p
ZCBrdm1pX2Rlc3Ryb3lfdm0oc3RydWN0IGt2bSAqa3ZtKSB7IH0KIHN0YXRpYyBpbmxpbmUgdm9p
ZCBrdm1pX3ZjcHVfdW5pbml0KHN0cnVjdCBrdm1fdmNwdSAqdmNwdSkgeyB9CiAKIHN0YXRpYyBp
bmxpbmUgdm9pZCBrdm1pX2hhbmRsZV9yZXF1ZXN0cyhzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUpIHsg
fQorc3RhdGljIGlubGluZSBib29sIGt2bWlfaHlwZXJjYWxsX2V2ZW50KHN0cnVjdCBrdm1fdmNw
dSAqdmNwdSkgeyByZXR1cm4gZmFsc2U7IH0KIAogI2VuZGlmIC8qIENPTkZJR19LVk1fSU5UUk9T
UEVDVElPTiAqLwogCmRpZmYgLS1naXQgYS9pbmNsdWRlL3VhcGkvbGludXgva3ZtX3BhcmEuaCBi
L2luY2x1ZGUvdWFwaS9saW51eC9rdm1fcGFyYS5oCmluZGV4IDNjZTM4ODI0OTY4Mi4uNTNjZWJi
ZTIyMDk5IDEwMDY0NAotLS0gYS9pbmNsdWRlL3VhcGkvbGludXgva3ZtX3BhcmEuaAorKysgYi9p
bmNsdWRlL3VhcGkvbGludXgva3ZtX3BhcmEuaApAQCAtMzMsNiArMzMsNyBAQAogI2RlZmluZSBL
Vk1fSENfQ0xPQ0tfUEFJUklORwkJOQogI2RlZmluZSBLVk1fSENfU0VORF9JUEkJCTEwCiAjZGVm
aW5lIEtWTV9IQ19TQ0hFRF9ZSUVMRAkJMTEKKyNkZWZpbmUgS1ZNX0hDX1hFTl9IVk1fT1AJCTM0
IC8qIFhlbidzIF9fSFlQRVJWSVNPUl9odm1fb3AgKi8KIAogLyoKICAqIGh5cGVyY2FsbHMgdXNl
IGFyY2hpdGVjdHVyZSBzcGVjaWZpYwpkaWZmIC0tZ2l0IGEvaW5jbHVkZS91YXBpL2xpbnV4L2t2
bWkuaCBiL2luY2x1ZGUvdWFwaS9saW51eC9rdm1pLmgKaW5kZXggMmM5M2EzNmJmYTQzLi4zZGZj
MzQ4NmNjNDYgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvdWFwaS9saW51eC9rdm1pLmgKKysrIGIvaW5j
bHVkZS91YXBpL2xpbnV4L2t2bWkuaApAQCAtNTQsNyArNTQsOCBAQCBlbnVtIHsKIH07CiAKIGVu
dW0gewotCUtWTUlfVkNQVV9FVkVOVF9QQVVTRSA9IEtWTUlfVkNQVV9FVkVOVF9JRCgwKSwKKwlL
Vk1JX1ZDUFVfRVZFTlRfUEFVU0UgICAgID0gS1ZNSV9WQ1BVX0VWRU5UX0lEKDApLAorCUtWTUlf
VkNQVV9FVkVOVF9IWVBFUkNBTEwgPSBLVk1JX1ZDUFVfRVZFTlRfSUQoMSksCiAKIAlLVk1JX05F
WFRfVkNQVV9FVkVOVAogfTsKZGlmZiAtLWdpdCBhL3Rvb2xzL3Rlc3Rpbmcvc2VsZnRlc3RzL2t2
bS94ODZfNjQva3ZtaV90ZXN0LmMgYi90b29scy90ZXN0aW5nL3NlbGZ0ZXN0cy9rdm0veDg2XzY0
L2t2bWlfdGVzdC5jCmluZGV4IDU0MmI1OTQ2NmQxMi4uOGM3NzJiMmJmZjJhIDEwMDY0NAotLS0g
YS90b29scy90ZXN0aW5nL3NlbGZ0ZXN0cy9rdm0veDg2XzY0L2t2bWlfdGVzdC5jCisrKyBiL3Rv
b2xzL3Rlc3Rpbmcvc2VsZnRlc3RzL2t2bS94ODZfNjQva3ZtaV90ZXN0LmMKQEAgLTUzLDYgKzUz
LDcgQEAgc3RydWN0IHZjcHVfd29ya2VyX2RhdGEgewogCiBlbnVtIHsKIAlHVUVTVF9URVNUX05P
T1AgPSAwLAorCUdVRVNUX1RFU1RfSFlQRVJDQUxMLAogfTsKIAogI2RlZmluZSBHVUVTVF9SRVFV
RVNUX1RFU1QoKSAgICAgR1VFU1RfU1lOQygwKQpAQCAtNjcsMTIgKzY4LDIzIEBAIHN0YXRpYyBp
bnQgZ3Vlc3RfdGVzdF9pZCh2b2lkKQogCXJldHVybiBSRUFEX09OQ0UodGVzdF9pZCk7CiB9CiAK
K3N0YXRpYyB2b2lkIGd1ZXN0X2h5cGVyY2FsbF90ZXN0KHZvaWQpCit7CisJYXNtIHZvbGF0aWxl
KCJtb3YgJDM0LCAlcmF4Iik7CisJYXNtIHZvbGF0aWxlKCJtb3YgJDI0LCAlcmRpIik7CisJYXNt
IHZvbGF0aWxlKCJtb3YgJDAsICVyc2kiKTsKKwlhc20gdm9sYXRpbGUoIi5ieXRlIDB4MGYsMHgw
MSwweGMxIik7Cit9CisKIHN0YXRpYyB2b2lkIGd1ZXN0X2NvZGUodm9pZCkKIHsKIAl3aGlsZSAo
dHJ1ZSkgewogCQlzd2l0Y2ggKGd1ZXN0X3Rlc3RfaWQoKSkgewogCQljYXNlIEdVRVNUX1RFU1Rf
Tk9PUDoKIAkJCWJyZWFrOworCQljYXNlIEdVRVNUX1RFU1RfSFlQRVJDQUxMOgorCQkJZ3Vlc3Rf
aHlwZXJjYWxsX3Rlc3QoKTsKKwkJCWJyZWFrOwogCQl9CiAJCUdVRVNUX1NJR05BTF9URVNUX0RP
TkUoKTsKIAl9CkBAIC05NzcsNiArOTg5LDM1IEBAIHN0YXRpYyB2b2lkIHRlc3RfY21kX3ZjcHVf
Z2V0X2NwdWlkKHN0cnVjdCBrdm1fdm0gKnZtKQogCSAgICAgIGZ1bmN0aW9uLCBpbmRleCwgcnBs
LmVheCwgcnBsLmVieCwgcnBsLmVjeCwgcnBsLmVkeCk7CiB9CiAKK3N0YXRpYyB2b2lkIHRlc3Rf
ZXZlbnRfaHlwZXJjYWxsKHN0cnVjdCBrdm1fdm0gKnZtKQoreworCXN0cnVjdCB2Y3B1X3dvcmtl
cl9kYXRhIGRhdGEgPSB7CisJCS52bSA9IHZtLAorCQkudmNwdV9pZCA9IFZDUFVfSUQsCisJCS50
ZXN0X2lkID0gR1VFU1RfVEVTVF9IWVBFUkNBTEwsCisJfTsKKwlzdHJ1Y3Qga3ZtaV9tc2dfaGRy
IGhkcjsKKwlzdHJ1Y3QgdmNwdV9ldmVudCBldjsKKwlzdHJ1Y3QgdmNwdV9yZXBseSBycGwgPSB7
fTsKKwlfX3UxNiBldmVudF9pZCA9IEtWTUlfVkNQVV9FVkVOVF9IWVBFUkNBTEw7CisJcHRocmVh
ZF90IHZjcHVfdGhyZWFkOworCisJZW5hYmxlX3ZjcHVfZXZlbnQodm0sIGV2ZW50X2lkKTsKKwor
CXZjcHVfdGhyZWFkID0gc3RhcnRfdmNwdV93b3JrZXIoJmRhdGEpOworCisJcmVjZWl2ZV92Y3B1
X2V2ZW50KCZoZHIsICZldiwgc2l6ZW9mKGV2KSwgZXZlbnRfaWQpOworCisJcHJfZGVidWcoIkh5
cGVyY2FsbCBldmVudCwgcmlwIDB4JWxseFxuIiwgZXYuY29tbW9uLmFyY2gucmVncy5yaXApOwor
CisJcmVwbHlfdG9fZXZlbnQoJmhkciwgJmV2LCBLVk1JX0VWRU5UX0FDVElPTl9DT05USU5VRSwK
KwkJCSZycGwsIHNpemVvZihycGwpKTsKKworCXdhaXRfdmNwdV93b3JrZXIodmNwdV90aHJlYWQp
OworCisJZGlzYWJsZV92Y3B1X2V2ZW50KHZtLCBldmVudF9pZCk7Cit9CisKIHN0YXRpYyB2b2lk
IHRlc3RfaW50cm9zcGVjdGlvbihzdHJ1Y3Qga3ZtX3ZtICp2bSkKIHsKIAlzcmFuZG9tKHRpbWUo
MCkpOwpAQCAtOTk3LDYgKzEwMzgsNyBAQCBzdGF0aWMgdm9pZCB0ZXN0X2ludHJvc3BlY3Rpb24o
c3RydWN0IGt2bV92bSAqdm0pCiAJdGVzdF9jbWRfdmNwdV9nZXRfcmVnaXN0ZXJzKHZtKTsKIAl0
ZXN0X2NtZF92Y3B1X3NldF9yZWdpc3RlcnModm0pOwogCXRlc3RfY21kX3ZjcHVfZ2V0X2NwdWlk
KHZtKTsKKwl0ZXN0X2V2ZW50X2h5cGVyY2FsbCh2bSk7CiAKIAl1bmhvb2tfaW50cm9zcGVjdGlv
bih2bSk7CiB9CmRpZmYgLS1naXQgYS92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWkuYyBiL3Zp
cnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaS5jCmluZGV4IDQ1N2QxYjkxMjJhZC4uZTFlMGNkMTcx
MzhjIDEwMDY0NAotLS0gYS92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWkuYworKysgYi92aXJ0
L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWkuYwpAQCAtODM2LDMgKzgzNiw0MSBAQCBpbnQga3ZtaV9j
bWRfdmNwdV9wYXVzZShzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsIGJvb2wgd2FpdCkKIAogCXJldHVy
biAwOwogfQorCitzdGF0aWMgYm9vbCBfX2t2bWlfaHlwZXJjYWxsX2V2ZW50KHN0cnVjdCBrdm1f
dmNwdSAqdmNwdSkKK3sKKwl1MzIgYWN0aW9uOworCWJvb2wgcmV0OworCisJYWN0aW9uID0ga3Zt
aV9tc2dfc2VuZF92Y3B1X2h5cGVyY2FsbCh2Y3B1KTsKKwlzd2l0Y2ggKGFjdGlvbikgeworCWNh
c2UgS1ZNSV9FVkVOVF9BQ1RJT05fQ09OVElOVUU6CisJCXJldCA9IHRydWU7CisJCWJyZWFrOwor
CWRlZmF1bHQ6CisJCWt2bWlfaGFuZGxlX2NvbW1vbl9ldmVudF9hY3Rpb25zKHZjcHUsIGFjdGlv
bik7CisJCXJldCA9IGZhbHNlOworCX0KKworCXJldHVybiByZXQ7Cit9CisKK2Jvb2wga3ZtaV9o
eXBlcmNhbGxfZXZlbnQoc3RydWN0IGt2bV92Y3B1ICp2Y3B1KQoreworCXN0cnVjdCBrdm1faW50
cm9zcGVjdGlvbiAqa3ZtaTsKKwlib29sIHJldCA9IGZhbHNlOworCisJaWYgKCFrdm1pX2FyY2hf
aXNfYWdlbnRfaHlwZXJjYWxsKHZjcHUpKQorCQlyZXR1cm4gcmV0OworCisJa3ZtaSA9IGt2bWlf
Z2V0KHZjcHUtPmt2bSk7CisJaWYgKCFrdm1pKQorCQlyZXR1cm4gcmV0OworCisJaWYgKGlzX3Zj
cHVfZXZlbnRfZW5hYmxlZCh2Y3B1LCBLVk1JX1ZDUFVfRVZFTlRfSFlQRVJDQUxMKSkKKwkJcmV0
ID0gX19rdm1pX2h5cGVyY2FsbF9ldmVudCh2Y3B1KTsKKworCWt2bWlfcHV0KHZjcHUtPmt2bSk7
CisKKwlyZXR1cm4gcmV0OworfQpkaWZmIC0tZ2l0IGEvdmlydC9rdm0vaW50cm9zcGVjdGlvbi9r
dm1pX2ludC5oIGIvdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pX2ludC5oCmluZGV4IDAxODc2
NGNhMWI3MS4uNzJmMGI3NWQyY2Y1IDEwMDY0NAotLS0gYS92aXJ0L2t2bS9pbnRyb3NwZWN0aW9u
L2t2bWlfaW50LmgKKysrIGIvdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pX2ludC5oCkBAIC0y
Niw2ICsyNiwxMSBAQCB0eXBlZGVmIGludCAoKmt2bWlfdmNwdV9tc2dfam9iX2ZjdCkoY29uc3Qg
c3RydWN0IGt2bWlfdmNwdV9tc2dfam9iICpqb2IsCiAJCQkJICAgICBjb25zdCBzdHJ1Y3Qga3Zt
aV9tc2dfaGRyICptc2csCiAJCQkJICAgICBjb25zdCB2b2lkICpyZXEpOwogCitzdGF0aWMgaW5s
aW5lIGJvb2wgaXNfdmNwdV9ldmVudF9lbmFibGVkKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwgdTE2
IGV2ZW50X2lkKQoreworCXJldHVybiB0ZXN0X2JpdChldmVudF9pZCwgVkNQVUkodmNwdSktPmV2
X2VuYWJsZV9tYXNrKTsKK30KKwogLyoga3ZtaV9tc2cuYyAqLwogYm9vbCBrdm1pX3NvY2tfZ2V0
KHN0cnVjdCBrdm1faW50cm9zcGVjdGlvbiAqa3ZtaSwgaW50IGZkKTsKIHZvaWQga3ZtaV9zb2Nr
X3NodXRkb3duKHN0cnVjdCBrdm1faW50cm9zcGVjdGlvbiAqa3ZtaSk7CkBAIC0zOSw2ICs0NCw3
IEBAIGludCBrdm1pX21zZ192Y3B1X3JlcGx5KGNvbnN0IHN0cnVjdCBrdm1pX3ZjcHVfbXNnX2pv
YiAqam9iLAogCQkJY29uc3Qgc3RydWN0IGt2bWlfbXNnX2hkciAqbXNnLCBpbnQgZXJyLAogCQkJ
Y29uc3Qgdm9pZCAqcnBsLCBzaXplX3QgcnBsX3NpemUpOwogdTMyIGt2bWlfbXNnX3NlbmRfdmNw
dV9wYXVzZShzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUpOwordTMyIGt2bWlfbXNnX3NlbmRfdmNwdV9o
eXBlcmNhbGwoc3RydWN0IGt2bV92Y3B1ICp2Y3B1KTsKIAogLyoga3ZtaS5jICovCiB2b2lkICpr
dm1pX21zZ19hbGxvYyh2b2lkKTsKQEAgLTUyLDYgKzU4LDcgQEAgaW50IGt2bWlfYWRkX2pvYihz
dHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsCiAJCSB2b2lkICgqZmN0KShzdHJ1Y3Qga3ZtX3ZjcHUgKnZj
cHUsIHZvaWQgKmN0eCksCiAJCSB2b2lkICpjdHgsIHZvaWQgKCpmcmVlX2ZjdCkodm9pZCAqY3R4
KSk7CiB2b2lkIGt2bWlfcnVuX2pvYnMoc3RydWN0IGt2bV92Y3B1ICp2Y3B1KTsKK3ZvaWQga3Zt
aV9oYW5kbGVfY29tbW9uX2V2ZW50X2FjdGlvbnMoc3RydWN0IGt2bV92Y3B1ICp2Y3B1LCB1MzIg
YWN0aW9uKTsKIGludCBrdm1pX2NtZF92bV9jb250cm9sX2V2ZW50cyhzdHJ1Y3Qga3ZtX2ludHJv
c3BlY3Rpb24gKmt2bWksCiAJCQkgICAgICAgdTE2IGV2ZW50X2lkLCBib29sIGVuYWJsZSk7CiBp
bnQga3ZtaV9jbWRfdmNwdV9jb250cm9sX2V2ZW50cyhzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsCkBA
IC03MSw1ICs3OCw2IEBAIGt2bWlfdmNwdV9tc2dfam9iX2ZjdCBrdm1pX2FyY2hfdmNwdV9tc2df
aGFuZGxlcih1MTYgaWQpOwogdm9pZCBrdm1pX2FyY2hfc2V0dXBfdmNwdV9ldmVudChzdHJ1Y3Qg
a3ZtX3ZjcHUgKnZjcHUsCiAJCQkJc3RydWN0IGt2bWlfdmNwdV9ldmVudCAqZXYpOwogdm9pZCBr
dm1pX2FyY2hfcG9zdF9yZXBseShzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUpOworYm9vbCBrdm1pX2Fy
Y2hfaXNfYWdlbnRfaHlwZXJjYWxsKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSk7CiAKICNlbmRpZgpk
aWZmIC0tZ2l0IGEvdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pX21zZy5jIGIvdmlydC9rdm0v
aW50cm9zcGVjdGlvbi9rdm1pX21zZy5jCmluZGV4IGI3ZGUzOWQ0YWZhNi4uMGMzZjA0NDcyM2Zj
IDEwMDY0NAotLS0gYS92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWlfbXNnLmMKKysrIGIvdmly
dC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pX21zZy5jCkBAIC03MzksMyArNzM5LDE2IEBAIHUzMiBr
dm1pX21zZ19zZW5kX3ZjcHVfcGF1c2Uoc3RydWN0IGt2bV92Y3B1ICp2Y3B1KQogCiAJcmV0dXJu
IGFjdGlvbjsKIH0KKwordTMyIGt2bWlfbXNnX3NlbmRfdmNwdV9oeXBlcmNhbGwoc3RydWN0IGt2
bV92Y3B1ICp2Y3B1KQoreworCXUzMiBhY3Rpb247CisJaW50IGVycjsKKworCWVyciA9IGt2bWlf
c2VuZF92Y3B1X2V2ZW50KHZjcHUsIEtWTUlfVkNQVV9FVkVOVF9IWVBFUkNBTEwsIE5VTEwsIDAs
CisJCQkJICAgTlVMTCwgMCwgJmFjdGlvbik7CisJaWYgKGVycikKKwkJcmV0dXJuIEtWTUlfRVZF
TlRfQUNUSU9OX0NPTlRJTlVFOworCisJcmV0dXJuIGFjdGlvbjsKK30KX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KVmlydHVhbGl6YXRpb24gbWFpbGluZyBs
aXN0ClZpcnR1YWxpemF0aW9uQGxpc3RzLmxpbnV4LWZvdW5kYXRpb24ub3JnCmh0dHBzOi8vbGlz
dHMubGludXhmb3VuZGF0aW9uLm9yZy9tYWlsbWFuL2xpc3RpbmZvL3ZpcnR1YWxpemF0aW9u
