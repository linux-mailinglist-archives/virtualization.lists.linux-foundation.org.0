Return-Path: <virtualization-bounces@lists.linux-foundation.org>
X-Original-To: lists.virtualization@lfdr.de
Delivered-To: lists.virtualization@lfdr.de
Received: from whitealder.osuosl.org (smtp1.osuosl.org [140.211.166.138])
	by mail.lfdr.de (Postfix) with ESMTPS id 615EB228B26
	for <lists.virtualization@lfdr.de>; Tue, 21 Jul 2020 23:26:11 +0200 (CEST)
Received: from localhost (localhost [127.0.0.1])
	by whitealder.osuosl.org (Postfix) with ESMTP id 0E4408829E;
	Tue, 21 Jul 2020 21:26:10 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from whitealder.osuosl.org ([127.0.0.1])
	by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id B2bxsbLlhh04; Tue, 21 Jul 2020 21:26:01 +0000 (UTC)
Received: from lists.linuxfoundation.org (lf-lists.osuosl.org [140.211.9.56])
	by whitealder.osuosl.org (Postfix) with ESMTP id 6F580882A4;
	Tue, 21 Jul 2020 21:25:57 +0000 (UTC)
Received: from lf-lists.osuosl.org (localhost [127.0.0.1])
	by lists.linuxfoundation.org (Postfix) with ESMTP id 4B12AC016F;
	Tue, 21 Jul 2020 21:25:57 +0000 (UTC)
X-Original-To: virtualization@lists.linux-foundation.org
Delivered-To: virtualization@lists.linuxfoundation.org
Received: from hemlock.osuosl.org (smtp2.osuosl.org [140.211.166.133])
 by lists.linuxfoundation.org (Postfix) with ESMTP id 84D37C088E
 for <virtualization@lists.linux-foundation.org>;
 Tue, 21 Jul 2020 21:25:55 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by hemlock.osuosl.org (Postfix) with ESMTP id 7C71987A72
 for <virtualization@lists.linux-foundation.org>;
 Tue, 21 Jul 2020 21:25:55 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from hemlock.osuosl.org ([127.0.0.1])
 by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id OHhP7Ufxgdz3
 for <virtualization@lists.linux-foundation.org>;
 Tue, 21 Jul 2020 21:25:55 +0000 (UTC)
X-Greylist: from auto-whitelisted by SQLgrey-1.7.6
Received: from mx01.bbu.dsd.mx.bitdefender.com
 (mx01.bbu.dsd.mx.bitdefender.com [91.199.104.161])
 by hemlock.osuosl.org (Postfix) with ESMTPS id ECEBB87B05
 for <virtualization@lists.linux-foundation.org>;
 Tue, 21 Jul 2020 21:25:54 +0000 (UTC)
Received: from smtp.bitdefender.com (smtp02.buh.bitdefender.net [10.17.80.76])
 by mx01.bbu.dsd.mx.bitdefender.com (Postfix) with ESMTPS id
 256C9305D4F7; Wed, 22 Jul 2020 00:09:29 +0300 (EEST)
Received: from localhost.localdomain (unknown [91.199.104.27])
 by smtp.bitdefender.com (Postfix) with ESMTPSA id 04B47304FA14;
 Wed, 22 Jul 2020 00:09:29 +0300 (EEST)
From: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>
To: kvm@vger.kernel.org
Subject: [PATCH v9 63/84] KVM: introspection: add KVMI_VM_CONTROL_CLEANUP
Date: Wed, 22 Jul 2020 00:09:01 +0300
Message-Id: <20200721210922.7646-64-alazar@bitdefender.com>
In-Reply-To: <20200721210922.7646-1-alazar@bitdefender.com>
References: <20200721210922.7646-1-alazar@bitdefender.com>
MIME-Version: 1.0
Cc: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>,
 Paolo Bonzini <pbonzini@redhat.com>, virtualization@lists.linux-foundation.org
X-BeenThere: virtualization@lists.linux-foundation.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Linux virtualization <virtualization.lists.linux-foundation.org>
List-Unsubscribe: <https://lists.linuxfoundation.org/mailman/options/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=unsubscribe>
List-Archive: <http://lists.linuxfoundation.org/pipermail/virtualization/>
List-Post: <mailto:virtualization@lists.linux-foundation.org>
List-Help: <mailto:virtualization-request@lists.linux-foundation.org?subject=help>
List-Subscribe: <https://lists.linuxfoundation.org/mailman/listinfo/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: virtualization-bounces@lists.linux-foundation.org
Sender: "Virtualization" <virtualization-bounces@lists.linux-foundation.org>

VGhpcyBjb21tYW5kIHdpbGwgYWxsb3cgbW9yZSBjb250cm9sIG92ZXIgdGhlIGd1ZXN0IHN0YXRl
IG9uCnVuaG9vay4gIEhvd2V2ZXIsIHRoZSBtZW1vcnkgcmVzdHJpY3Rpb25zIChlLmcuIHRob3Nl
IHNldCB3aXRoCktWTUlfVk1fU0VUX1BBR0VfQUNDRVNTKSB3aWxsIGJlIHJlbW92ZWQgb24gdW5o
b29rLgoKU2lnbmVkLW9mZi1ieTogQWRhbGJlcnQgTGF6xINyIDxhbGF6YXJAYml0ZGVmZW5kZXIu
Y29tPgoKLS0KSXQgd2lsbCBiZSBtb3JlIGludGVyZXN0aW5nIGlmIHRoZSB1c2Vyc3BhY2UgY291
bGQgY29udHJvbCB0aGUgY2xlYW51cApiZWhhdmlvciB0aHJvdWdoIHRoZSB1c2Ugb2YgdGhlIEtW
TV9JTlRST1NQRUNUSU9OX0NPTU1BTkQgaW9jdGwuIE5vdywgYnkKZGlzYWxsb3dpbmcgdGhpcyBj
b21tYW5kLCB0aGUgdXNlcnNwYWNlIGNhbiBvbmx5IGtlZXAgdGhlIGRlZmF1bHQgYmVoYXZpb3IK
KHRvIG5vdCBhdXRvbWF0aWNhbGx5IGNsZWFuIHVwKS4KClNpZ25lZC1vZmYtYnk6IEFkYWxiZXJ0
IExhesSDciA8YWxhemFyQGJpdGRlZmVuZGVyLmNvbT4KLS0tCiBEb2N1bWVudGF0aW9uL3ZpcnQv
a3ZtL2t2bWkucnN0ICAgICAgICAgICAgICAgfCAzMCArKysrKysrKysrKysrKysrCiBhcmNoL3g4
Ni9pbmNsdWRlL2FzbS9rdm1pX2hvc3QuaCAgICAgICAgICAgICAgfCAgMSArCiBhcmNoL3g4Ni9r
dm0va3ZtaS5jICAgICAgICAgICAgICAgICAgICAgICAgICAgfCAxNyArKysrKy0tLS0tCiBpbmNs
dWRlL2xpbnV4L2t2bWlfaG9zdC5oICAgICAgICAgICAgICAgICAgICAgfCAgMiArKwogaW5jbHVk
ZS91YXBpL2xpbnV4L2t2bWkuaCAgICAgICAgICAgICAgICAgICAgIHwgIDkgKysrKysKIC4uLi90
ZXN0aW5nL3NlbGZ0ZXN0cy9rdm0veDg2XzY0L2t2bWlfdGVzdC5jICB8IDM0ICsrKysrKysrKysr
KysrKysrKysKIHZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaS5jICAgICAgICAgICAgICAgICB8
IDE0ICsrKysrLS0tCiB2aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWlfaW50LmggICAgICAgICAg
ICAgfCAgNCArKy0KIHZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9tc2cuYyAgICAgICAgICAg
ICB8IDM0ICsrKysrKysrKysrKysrLS0tLS0KIDkgZmlsZXMgY2hhbmdlZCwgMTI0IGluc2VydGlv
bnMoKyksIDIxIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL0RvY3VtZW50YXRpb24vdmlydC9r
dm0va3ZtaS5yc3QgYi9Eb2N1bWVudGF0aW9uL3ZpcnQva3ZtL2t2bWkucnN0CmluZGV4IDExMGE2
ZTdhN2QyYS4uZjc2MDk1N2IyN2Y0IDEwMDY0NAotLS0gYS9Eb2N1bWVudGF0aW9uL3ZpcnQva3Zt
L2t2bWkucnN0CisrKyBiL0RvY3VtZW50YXRpb24vdmlydC9rdm0va3ZtaS5yc3QKQEAgLTY4NCw2
ICs2ODQsMzYgQEAgUmV0dXJucyBhIENQVUlEIGxlYWYgKGFzIHNlZW4gYnkgdGhlIGd1ZXN0IE9T
KS4KICogLUtWTV9FQUdBSU4gLSB0aGUgc2VsZWN0ZWQgdkNQVSBjYW4ndCBiZSBpbnRyb3NwZWN0
ZWQgeWV0CiAqIC1LVk1fRU5PRU5UIC0gdGhlIHNlbGVjdGVkIGxlYWYgaXMgbm90IHByZXNlbnQg
b3IgaXMgaW52YWxpZAogCisxNC4gS1ZNSV9WTV9DT05UUk9MX0NMRUFOVVAKKy0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLQorOkFyY2hpdGVjdHVyZXM6IGFsbAorOlZlcnNpb25zOiA+PSAxCis6
UGFyYW1ldGVyczoKKworOjoKKworCXN0cnVjdCBrdm1pX3ZtX2NvbnRyb2xfY2xlYW51cCB7CisJ
CV9fdTggZW5hYmxlOworCQlfX3U4IHBhZGRpbmcxOworCQlfX3UxNiBwYWRkaW5nMjsKKwkJX191
MzIgcGFkZGluZzM7CisJfTsKKworOlJldHVybnM6CisKKzo6CisKKwlzdHJ1Y3Qga3ZtaV9lcnJv
cl9jb2RlCisKK0VuYWJsZXMvZGlzYWJsZXMgdGhlIGF1dG9tYXRpYyBjbGVhbnVwIG9mIHRoZSBj
aGFuZ2VzIG1hZGUgYnkKK3RoZSBpbnRyb3NwZWN0aW9uIHRvb2wgYXQgdGhlIGh5cGVydmlzb3Ig
bGV2ZWwgKGUuZy4gQ1IvTVNSL0JQCitpbnRlcmNlcHRpb25zKS4gQnkgZGVmYXVsdCBpdCBpcyBk
aXNhYmxlZC4KKworOkVycm9yczoKKworKiAtS1ZNX0VJTlZBTCAtIHRoZSBwYWRkaW5nIGlzIG5v
dCB6ZXJvCisqIC1LVk1fRUlOVkFMIC0gJ2VuYWJsZWQnIGlzIG5vdCAxIG9yIDAKKwogRXZlbnRz
CiA9PT09PT0KIApkaWZmIC0tZ2l0IGEvYXJjaC94ODYvaW5jbHVkZS9hc20va3ZtaV9ob3N0Lmgg
Yi9hcmNoL3g4Ni9pbmNsdWRlL2FzbS9rdm1pX2hvc3QuaAppbmRleCA1ZjJhOTY4ODMxZDMuLjNl
ODVhZTRmZTVmMCAxMDA2NDQKLS0tIGEvYXJjaC94ODYvaW5jbHVkZS9hc20va3ZtaV9ob3N0LmgK
KysrIGIvYXJjaC94ODYvaW5jbHVkZS9hc20va3ZtaV9ob3N0LmgKQEAgLTExLDYgKzExLDcgQEAg
c3RydWN0IGt2bWlfbW9uaXRvcl9pbnRlcmNlcHRpb24gewogfTsKIAogc3RydWN0IGt2bWlfaW50
ZXJjZXB0aW9uIHsKKwlib29sIGNsZWFudXA7CiAJYm9vbCByZXN0b3JlX2ludGVyY2VwdGlvbjsK
IAlzdHJ1Y3Qga3ZtaV9tb25pdG9yX2ludGVyY2VwdGlvbiBicmVha3BvaW50OwogfTsKZGlmZiAt
LWdpdCBhL2FyY2gveDg2L2t2bS9rdm1pLmMgYi9hcmNoL3g4Ni9rdm0va3ZtaS5jCmluZGV4IDU2
YzAyZGFkM2I1Ny4uODlmYTE1OGE2NTM1IDEwMDY0NAotLS0gYS9hcmNoL3g4Ni9rdm0va3ZtaS5j
CisrKyBiL2FyY2gveDg2L2t2bS9rdm1pLmMKQEAgLTM1MywxMyArMzUzLDExIEBAIGJvb2wga3Zt
aV9hcmNoX2NsZWFuX3VwX2ludGVyY2VwdGlvbihzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUpCiB7CiAJ
c3RydWN0IGt2bWlfaW50ZXJjZXB0aW9uICphcmNoX3ZjcHVpID0gdmNwdS0+YXJjaC5rdm1pOwog
Ci0JaWYgKCFhcmNoX3ZjcHVpKQorCWlmICghYXJjaF92Y3B1aSB8fCAhYXJjaF92Y3B1aS0+Y2xl
YW51cCkKIAkJcmV0dXJuIGZhbHNlOwogCi0JaWYgKCFhcmNoX3ZjcHVpLT5yZXN0b3JlX2ludGVy
Y2VwdGlvbikKLQkJcmV0dXJuIGZhbHNlOwotCi0Ja3ZtaV9hcmNoX3Jlc3RvcmVfaW50ZXJjZXB0
aW9uKHZjcHUpOworCWlmIChhcmNoX3ZjcHVpLT5yZXN0b3JlX2ludGVyY2VwdGlvbikKKwkJa3Zt
aV9hcmNoX3Jlc3RvcmVfaW50ZXJjZXB0aW9uKHZjcHUpOwogCiAJcmV0dXJuIHRydWU7CiB9CkBA
IC0zOTIsMTAgKzM5MCwxMyBAQCBib29sIGt2bWlfYXJjaF92Y3B1X2ludHJvc3BlY3RlZChzdHJ1
Y3Qga3ZtX3ZjcHUgKnZjcHUpCiAJcmV0dXJuICEhUkVBRF9PTkNFKHZjcHUtPmFyY2gua3ZtaSk7
CiB9CiAKLXZvaWQga3ZtaV9hcmNoX3JlcXVlc3RfaW50ZXJjZXB0aW9uX2NsZWFudXAoc3RydWN0
IGt2bV92Y3B1ICp2Y3B1KQordm9pZCBrdm1pX2FyY2hfcmVxdWVzdF9pbnRlcmNlcHRpb25fY2xl
YW51cChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsCisJCQkJCSAgICBib29sIHJlc3RvcmVfaW50ZXJj
ZXB0aW9uKQogewogCXN0cnVjdCBrdm1pX2ludGVyY2VwdGlvbiAqYXJjaF92Y3B1aSA9IFJFQURf
T05DRSh2Y3B1LT5hcmNoLmt2bWkpOwogCi0JaWYgKGFyY2hfdmNwdWkpCi0JCWFyY2hfdmNwdWkt
PnJlc3RvcmVfaW50ZXJjZXB0aW9uID0gdHJ1ZTsKKwlpZiAoYXJjaF92Y3B1aSkgeworCQlhcmNo
X3ZjcHVpLT5yZXN0b3JlX2ludGVyY2VwdGlvbiA9IHJlc3RvcmVfaW50ZXJjZXB0aW9uOworCQlh
cmNoX3ZjcHVpLT5jbGVhbnVwID0gdHJ1ZTsKKwl9CiB9CmRpZmYgLS1naXQgYS9pbmNsdWRlL2xp
bnV4L2t2bWlfaG9zdC5oIGIvaW5jbHVkZS9saW51eC9rdm1pX2hvc3QuaAppbmRleCBjNGZhYzQx
YmQ1YzcuLjAxMjE5YzU2ZDA0MiAxMDA2NDQKLS0tIGEvaW5jbHVkZS9saW51eC9rdm1pX2hvc3Qu
aAorKysgYi9pbmNsdWRlL2xpbnV4L2t2bWlfaG9zdC5oCkBAIC01Myw2ICs1Myw4IEBAIHN0cnVj
dCBrdm1faW50cm9zcGVjdGlvbiB7CiAJdW5zaWduZWQgbG9uZyAqdm1fZXZlbnRfZW5hYmxlX21h
c2s7CiAKIAlhdG9taWNfdCBldl9zZXE7CisKKwlib29sIGNsZWFudXBfb25fdW5ob29rOwogfTsK
IAogaW50IGt2bWlfdmVyc2lvbih2b2lkKTsKZGlmZiAtLWdpdCBhL2luY2x1ZGUvdWFwaS9saW51
eC9rdm1pLmggYi9pbmNsdWRlL3VhcGkvbGludXgva3ZtaS5oCmluZGV4IDAyNmFlNTkxMWIxYy4u
MjBiZjViZjE5NGE0IDEwMDY0NAotLS0gYS9pbmNsdWRlL3VhcGkvbGludXgva3ZtaS5oCisrKyBi
L2luY2x1ZGUvdWFwaS9saW51eC9rdm1pLmgKQEAgLTMyLDYgKzMyLDggQEAgZW51bSB7CiAJS1ZN
SV9WQ1BVX1NFVF9SRUdJU1RFUlMgID0gMTIsCiAJS1ZNSV9WQ1BVX0dFVF9DUFVJRCAgICAgID0g
MTMsCiAKKwlLVk1JX1ZNX0NPTlRST0xfQ0xFQU5VUCA9IDE0LAorCiAJS1ZNSV9OVU1fTUVTU0FH
RVMKIH07CiAKQEAgLTEzNSw2ICsxMzcsMTMgQEAgc3RydWN0IGt2bWlfdmNwdV9jb250cm9sX2V2
ZW50cyB7CiAJX191MzIgcGFkZGluZzI7CiB9OwogCitzdHJ1Y3Qga3ZtaV92bV9jb250cm9sX2Ns
ZWFudXAgeworCV9fdTggZW5hYmxlOworCV9fdTggcGFkZGluZzE7CisJX191MTYgcGFkZGluZzI7
CisJX191MzIgcGFkZGluZzM7Cit9OworCiBzdHJ1Y3Qga3ZtaV9ldmVudCB7CiAJX191MTYgc2l6
ZTsKIAlfX3UxNiB2Y3B1OwpkaWZmIC0tZ2l0IGEvdG9vbHMvdGVzdGluZy9zZWxmdGVzdHMva3Zt
L3g4Nl82NC9rdm1pX3Rlc3QuYyBiL3Rvb2xzL3Rlc3Rpbmcvc2VsZnRlc3RzL2t2bS94ODZfNjQv
a3ZtaV90ZXN0LmMKaW5kZXggMTQxOGUzMTkxOGJlLi5kM2I3Nzc4YTY0ZDQgMTAwNjQ0Ci0tLSBh
L3Rvb2xzL3Rlc3Rpbmcvc2VsZnRlc3RzL2t2bS94ODZfNjQva3ZtaV90ZXN0LmMKKysrIGIvdG9v
bHMvdGVzdGluZy9zZWxmdGVzdHMva3ZtL3g4Nl82NC9rdm1pX3Rlc3QuYwpAQCAtMTE2OCw2ICsx
MTY4LDM5IEBAIHN0YXRpYyB2b2lkIHRlc3RfZXZlbnRfYnJlYWtwb2ludChzdHJ1Y3Qga3ZtX3Zt
ICp2bSkKIAlkaXNhYmxlX3ZjcHVfZXZlbnQodm0sIGV2ZW50X2lkKTsKIH0KIAorc3RhdGljIHZv
aWQgY21kX3ZtX2NvbnRyb2xfY2xlYW51cChfX3U4IGVuYWJsZSwgX191OCBwYWRkaW5nLAorCQkJ
CSAgIGludCBleHBlY3RlZF9lcnIpCit7CisJc3RydWN0IHsKKwkJc3RydWN0IGt2bWlfbXNnX2hk
ciBoZHI7CisJCXN0cnVjdCBrdm1pX3ZtX2NvbnRyb2xfY2xlYW51cCBjbWQ7CisJfSByZXEgPSB7
fTsKKwlpbnQgcjsKKworCXJlcS5jbWQuZW5hYmxlID0gZW5hYmxlOworCXJlcS5jbWQucGFkZGlu
ZzEgPSBwYWRkaW5nOworCXJlcS5jbWQucGFkZGluZzIgPSBwYWRkaW5nOworCXJlcS5jbWQucGFk
ZGluZzMgPSBwYWRkaW5nOworCisJciA9IGRvX2NvbW1hbmQoS1ZNSV9WTV9DT05UUk9MX0NMRUFO
VVAsICZyZXEuaGRyLCBzaXplb2YocmVxKSwKKwkJCSAgICAgTlVMTCwgMCk7CisJVEVTVF9BU1NF
UlQociA9PSBleHBlY3RlZF9lcnIsCisJCSJLVk1JX1ZNX0NPTlRST0xfQ0xFQU5VUCBmYWlsZWQs
IGVycm9yICVkICglcyksIGV4cGVjdGVkIGVycm9yICVkXG4iLAorCQktciwga3ZtX3N0cmVycm9y
KC1yKSwgZXhwZWN0ZWRfZXJyKTsKK30KKworc3RhdGljIHZvaWQgdGVzdF9jbWRfdm1fY29udHJv
bF9jbGVhbnVwKHN0cnVjdCBrdm1fdm0gKnZtKQoreworCV9fdTggZGlzYWJsZSA9IDAsIGVuYWJs
ZSA9IDEsIGVuYWJsZV9pbnZhbCA9IDI7CisJX191MTYgcGFkZGluZyA9IDEsIG5vX3BhZGRpbmcg
PSAwOworCisJY21kX3ZtX2NvbnRyb2xfY2xlYW51cChlbmFibGUsIHBhZGRpbmcsIC1LVk1fRUlO
VkFMKTsKKwljbWRfdm1fY29udHJvbF9jbGVhbnVwKGVuYWJsZV9pbnZhbCwgbm9fcGFkZGluZywg
LUtWTV9FSU5WQUwpOworCisJY21kX3ZtX2NvbnRyb2xfY2xlYW51cChlbmFibGUsIG5vX3BhZGRp
bmcsIDApOworCWNtZF92bV9jb250cm9sX2NsZWFudXAoZGlzYWJsZSwgbm9fcGFkZGluZywgMCk7
Cit9CisKIHN0YXRpYyB2b2lkIHRlc3RfaW50cm9zcGVjdGlvbihzdHJ1Y3Qga3ZtX3ZtICp2bSkK
IHsKIAlzcmFuZG9tKHRpbWUoMCkpOwpAQCAtMTE5MCw2ICsxMjIzLDcgQEAgc3RhdGljIHZvaWQg
dGVzdF9pbnRyb3NwZWN0aW9uKHN0cnVjdCBrdm1fdm0gKnZtKQogCXRlc3RfY21kX3ZjcHVfZ2V0
X2NwdWlkKHZtKTsKIAl0ZXN0X2V2ZW50X2h5cGVyY2FsbCh2bSk7CiAJdGVzdF9ldmVudF9icmVh
a3BvaW50KHZtKTsKKwl0ZXN0X2NtZF92bV9jb250cm9sX2NsZWFudXAodm0pOwogCiAJdW5ob29r
X2ludHJvc3BlY3Rpb24odm0pOwogfQpkaWZmIC0tZ2l0IGEvdmlydC9rdm0vaW50cm9zcGVjdGlv
bi9rdm1pLmMgYi92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWkuYwppbmRleCAwODNkZDhiZTky
NTIuLmRiMWY0NTIzY2VjNSAxMDA2NDQKLS0tIGEvdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1p
LmMKKysrIGIvdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pLmMKQEAgLTIxOCw3ICsyMTgsNyBA
QCBzdGF0aWMgdm9pZCBmcmVlX3ZjcHVfam9icyhzdHJ1Y3Qga3ZtX3ZjcHVfaW50cm9zcGVjdGlv
biAqdmNwdWkpCiAJfQogfQogCi1zdGF0aWMgdm9pZCBmcmVlX3ZjcHVpKHN0cnVjdCBrdm1fdmNw
dSAqdmNwdSkKK3N0YXRpYyB2b2lkIGZyZWVfdmNwdWkoc3RydWN0IGt2bV92Y3B1ICp2Y3B1LCBi
b29sIHJlc3RvcmVfaW50ZXJjZXB0aW9uKQogewogCXN0cnVjdCBrdm1fdmNwdV9pbnRyb3NwZWN0
aW9uICp2Y3B1aSA9IFZDUFVJKHZjcHUpOwogCkBAIC0yMzIsMTcgKzIzMiwxOCBAQCBzdGF0aWMg
dm9pZCBmcmVlX3ZjcHVpKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSkKIAlrZnJlZSh2Y3B1aSk7CiAJ
dmNwdS0+a3ZtaSA9IE5VTEw7CiAKLQlrdm1pX2FyY2hfcmVxdWVzdF9pbnRlcmNlcHRpb25fY2xl
YW51cCh2Y3B1KTsKKwlrdm1pX2FyY2hfcmVxdWVzdF9pbnRlcmNlcHRpb25fY2xlYW51cCh2Y3B1
LCByZXN0b3JlX2ludGVyY2VwdGlvbik7CiAJa3ZtaV9tYWtlX3JlcXVlc3QodmNwdSwgZmFsc2Up
OwogfQogCiBzdGF0aWMgdm9pZCBmcmVlX2t2bWkoc3RydWN0IGt2bSAqa3ZtKQogeworCWJvb2wg
cmVzdG9yZV9pbnRlcmNlcHRpb24gPSBLVk1JKGt2bSktPmNsZWFudXBfb25fdW5ob29rOwogCXN0
cnVjdCBrdm1fdmNwdSAqdmNwdTsKIAlpbnQgaTsKIAogCWt2bV9mb3JfZWFjaF92Y3B1KGksIHZj
cHUsIGt2bSkKLQkJZnJlZV92Y3B1aSh2Y3B1KTsKKwkJZnJlZV92Y3B1aSh2Y3B1LCByZXN0b3Jl
X2ludGVyY2VwdGlvbik7CiAKIAliaXRtYXBfZnJlZShrdm0tPmt2bWktPmNtZF9hbGxvd19tYXNr
KTsKIAliaXRtYXBfZnJlZShrdm0tPmt2bWktPmV2ZW50X2FsbG93X21hc2spOwpAQCAtMjU1LDcg
KzI1Niw3IEBAIHN0YXRpYyB2b2lkIGZyZWVfa3ZtaShzdHJ1Y3Qga3ZtICprdm0pCiB2b2lkIGt2
bWlfdmNwdV91bmluaXQoc3RydWN0IGt2bV92Y3B1ICp2Y3B1KQogewogCW11dGV4X2xvY2soJnZj
cHUtPmt2bS0+a3ZtaV9sb2NrKTsKLQlmcmVlX3ZjcHVpKHZjcHUpOworCWZyZWVfdmNwdWkodmNw
dSwgZmFsc2UpOwogCWt2bWlfYXJjaF92Y3B1X2ZyZWVfaW50ZXJjZXB0aW9uKHZjcHUpOwogCW11
dGV4X3VubG9jaygmdmNwdS0+a3ZtLT5rdm1pX2xvY2spOwogfQpAQCAtNjYwLDYgKzY2MSwxMSBA
QCBpbnQga3ZtaV9jbWRfdmNwdV9jb250cm9sX2V2ZW50cyhzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUs
CiAJcmV0dXJuIGt2bWlfYXJjaF9jbWRfY29udHJvbF9pbnRlcmNlcHQodmNwdSwgZXZlbnRfaWQs
IGVuYWJsZSk7CiB9CiAKK3ZvaWQga3ZtaV9jbWRfdm1fY29udHJvbF9jbGVhbnVwKHN0cnVjdCBr
dm1faW50cm9zcGVjdGlvbiAqa3ZtaSwgYm9vbCBlbmFibGUpCit7CisJa3ZtaS0+Y2xlYW51cF9v
bl91bmhvb2sgPSBlbmFibGU7Cit9CisKIHN0YXRpYyB1bnNpZ25lZCBsb25nIGdmbl90b19odmFf
c2FmZShzdHJ1Y3Qga3ZtICprdm0sIGdmbl90IGdmbikKIHsKIAl1bnNpZ25lZCBsb25nIGh2YTsK
ZGlmZiAtLWdpdCBhL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9pbnQuaCBiL3ZpcnQva3Zt
L2ludHJvc3BlY3Rpb24va3ZtaV9pbnQuaAppbmRleCAwNWJmZGU3ZDdmMWEuLjgzMWU3ZTE0NTI0
ZiAxMDA2NDQKLS0tIGEvdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pX2ludC5oCisrKyBiL3Zp
cnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9pbnQuaApAQCAtNDksNiArNDksNyBAQCBpbnQga3Zt
aV9hZGRfam9iKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwKIHZvaWQga3ZtaV9ydW5fam9icyhzdHJ1
Y3Qga3ZtX3ZjcHUgKnZjcHUpOwogdm9pZCBrdm1pX3Bvc3RfcmVwbHkoc3RydWN0IGt2bV92Y3B1
ICp2Y3B1KTsKIHZvaWQga3ZtaV9oYW5kbGVfY29tbW9uX2V2ZW50X2FjdGlvbnMoc3RydWN0IGt2
bSAqa3ZtLCB1MzIgYWN0aW9uKTsKK3ZvaWQga3ZtaV9jbWRfdm1fY29udHJvbF9jbGVhbnVwKHN0
cnVjdCBrdm1faW50cm9zcGVjdGlvbiAqa3ZtaSwgYm9vbCBlbmFibGUpOwogaW50IGt2bWlfY21k
X3ZtX2NvbnRyb2xfZXZlbnRzKHN0cnVjdCBrdm1faW50cm9zcGVjdGlvbiAqa3ZtaSwKIAkJCQl1
bnNpZ25lZCBpbnQgZXZlbnRfaWQsIGJvb2wgZW5hYmxlKTsKIGludCBrdm1pX2NtZF92Y3B1X2Nv
bnRyb2xfZXZlbnRzKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwKQEAgLTY4LDcgKzY5LDggQEAgaW50
IGt2bWlfY21kX3ZjcHVfc2V0X3JlZ2lzdGVycyhzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsCiBib29s
IGt2bWlfYXJjaF92Y3B1X2FsbG9jX2ludGVyY2VwdGlvbihzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUp
Owogdm9pZCBrdm1pX2FyY2hfdmNwdV9mcmVlX2ludGVyY2VwdGlvbihzdHJ1Y3Qga3ZtX3ZjcHUg
KnZjcHUpOwogYm9vbCBrdm1pX2FyY2hfdmNwdV9pbnRyb3NwZWN0ZWQoc3RydWN0IGt2bV92Y3B1
ICp2Y3B1KTsKLXZvaWQga3ZtaV9hcmNoX3JlcXVlc3RfaW50ZXJjZXB0aW9uX2NsZWFudXAoc3Ry
dWN0IGt2bV92Y3B1ICp2Y3B1KTsKK3ZvaWQga3ZtaV9hcmNoX3JlcXVlc3RfaW50ZXJjZXB0aW9u
X2NsZWFudXAoc3RydWN0IGt2bV92Y3B1ICp2Y3B1LAorCQkJCWJvb2wgcmVzdG9yZV9pbnRlcmNl
cHRpb24pOwogYm9vbCBrdm1pX2FyY2hfY2xlYW5fdXBfaW50ZXJjZXB0aW9uKHN0cnVjdCBrdm1f
dmNwdSAqdmNwdSk7CiBpbnQga3ZtaV9hcmNoX2NtZF92Y3B1X2dldF9pbmZvKHN0cnVjdCBrdm1f
dmNwdSAqdmNwdSwKIAkJCQlzdHJ1Y3Qga3ZtaV92Y3B1X2dldF9pbmZvX3JlcGx5ICpycGwpOwpk
aWZmIC0tZ2l0IGEvdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pX21zZy5jIGIvdmlydC9rdm0v
aW50cm9zcGVjdGlvbi9rdm1pX21zZy5jCmluZGV4IDRhMDM5ODBlMGJiYi4uODZjZWU0N2QyMTRm
IDEwMDY0NAotLS0gYS92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWlfbXNnLmMKKysrIGIvdmly
dC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pX21zZy5jCkBAIC0zMDUsMTkgKzMwNSwzNyBAQCBzdGF0
aWMgaW50IGhhbmRsZV92Y3B1X3BhdXNlKHN0cnVjdCBrdm1faW50cm9zcGVjdGlvbiAqa3ZtaSwK
IAlyZXR1cm4ga3ZtaV9tc2dfdm1fcmVwbHkoa3ZtaSwgbXNnLCBlcnIsIE5VTEwsIDApOwogfQog
CitzdGF0aWMgaW50IGhhbmRsZV92bV9jb250cm9sX2NsZWFudXAoc3RydWN0IGt2bV9pbnRyb3Nw
ZWN0aW9uICprdm1pLAorCQkJCSAgICAgY29uc3Qgc3RydWN0IGt2bWlfbXNnX2hkciAqbXNnLAor
CQkJCSAgICAgY29uc3Qgdm9pZCAqX3JlcSkKK3sKKwljb25zdCBzdHJ1Y3Qga3ZtaV92bV9jb250
cm9sX2NsZWFudXAgKnJlcSA9IF9yZXE7CisJaW50IGVjID0gMDsKKworCWlmIChyZXEtPnBhZGRp
bmcxIHx8IHJlcS0+cGFkZGluZzIgfHwgcmVxLT5wYWRkaW5nMykKKwkJZWMgPSAtS1ZNX0VJTlZB
TDsKKwllbHNlIGlmIChyZXEtPmVuYWJsZSA+IDEpCisJCWVjID0gLUtWTV9FSU5WQUw7CisJZWxz
ZQorCQlrdm1pX2NtZF92bV9jb250cm9sX2NsZWFudXAoa3ZtaSwgcmVxLT5lbmFibGUgPT0gMSk7
CisKKwlyZXR1cm4ga3ZtaV9tc2dfdm1fcmVwbHkoa3ZtaSwgbXNnLCBlYywgTlVMTCwgMCk7Cit9
CisKIC8qCiAgKiBUaGVzZSBjb21tYW5kcyBhcmUgZXhlY3V0ZWQgYnkgdGhlIHJlY2VpdmluZyB0
aHJlYWQuCiAgKi8KIHN0YXRpYyBpbnQoKmNvbnN0IG1zZ192bVtdKShzdHJ1Y3Qga3ZtX2ludHJv
c3BlY3Rpb24gKiwKIAkJCSAgICBjb25zdCBzdHJ1Y3Qga3ZtaV9tc2dfaGRyICosIGNvbnN0IHZv
aWQgKikgPSB7Ci0JW0tWTUlfR0VUX1ZFUlNJT05dICAgICAgID0gaGFuZGxlX2dldF92ZXJzaW9u
LAotCVtLVk1JX1ZDUFVfUEFVU0VdICAgICAgICA9IGhhbmRsZV92Y3B1X3BhdXNlLAotCVtLVk1J
X1ZNX0NIRUNLX0NPTU1BTkRdICA9IGhhbmRsZV92bV9jaGVja19jb21tYW5kLAotCVtLVk1JX1ZN
X0NIRUNLX0VWRU5UXSAgICA9IGhhbmRsZV92bV9jaGVja19ldmVudCwKLQlbS1ZNSV9WTV9DT05U
Uk9MX0VWRU5UU10gPSBoYW5kbGVfdm1fY29udHJvbF9ldmVudHMsCi0JW0tWTUlfVk1fR0VUX0lO
Rk9dICAgICAgID0gaGFuZGxlX3ZtX2dldF9pbmZvLAotCVtLVk1JX1ZNX1JFQURfUEhZU0lDQUxd
ICA9IGhhbmRsZV92bV9yZWFkX3BoeXNpY2FsLAotCVtLVk1JX1ZNX1dSSVRFX1BIWVNJQ0FMXSA9
IGhhbmRsZV92bV93cml0ZV9waHlzaWNhbCwKKwlbS1ZNSV9HRVRfVkVSU0lPTl0gICAgICAgID0g
aGFuZGxlX2dldF92ZXJzaW9uLAorCVtLVk1JX1ZDUFVfUEFVU0VdICAgICAgICAgPSBoYW5kbGVf
dmNwdV9wYXVzZSwKKwlbS1ZNSV9WTV9DSEVDS19DT01NQU5EXSAgID0gaGFuZGxlX3ZtX2NoZWNr
X2NvbW1hbmQsCisJW0tWTUlfVk1fQ0hFQ0tfRVZFTlRdICAgICA9IGhhbmRsZV92bV9jaGVja19l
dmVudCwKKwlbS1ZNSV9WTV9DT05UUk9MX0NMRUFOVVBdID0gaGFuZGxlX3ZtX2NvbnRyb2xfY2xl
YW51cCwKKwlbS1ZNSV9WTV9DT05UUk9MX0VWRU5UU10gID0gaGFuZGxlX3ZtX2NvbnRyb2xfZXZl
bnRzLAorCVtLVk1JX1ZNX0dFVF9JTkZPXSAgICAgICAgPSBoYW5kbGVfdm1fZ2V0X2luZm8sCisJ
W0tWTUlfVk1fUkVBRF9QSFlTSUNBTF0gICA9IGhhbmRsZV92bV9yZWFkX3BoeXNpY2FsLAorCVtL
Vk1JX1ZNX1dSSVRFX1BIWVNJQ0FMXSAgPSBoYW5kbGVfdm1fd3JpdGVfcGh5c2ljYWwsCiB9Owog
CiBzdGF0aWMgYm9vbCBpc192bV9jb21tYW5kKHUxNiBpZCkKX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX18KVmlydHVhbGl6YXRpb24gbWFpbGluZyBsaXN0ClZp
cnR1YWxpemF0aW9uQGxpc3RzLmxpbnV4LWZvdW5kYXRpb24ub3JnCmh0dHBzOi8vbGlzdHMubGlu
dXhmb3VuZGF0aW9uLm9yZy9tYWlsbWFuL2xpc3RpbmZvL3ZpcnR1YWxpemF0aW9u
