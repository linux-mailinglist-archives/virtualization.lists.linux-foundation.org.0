Return-Path: <virtualization-bounces@lists.linux-foundation.org>
X-Original-To: lists.virtualization@lfdr.de
Delivered-To: lists.virtualization@lfdr.de
Received: from smtp4.osuosl.org (smtp4.osuosl.org [140.211.166.137])
	by mail.lfdr.de (Postfix) with ESMTPS id 62776424564
	for <lists.virtualization@lfdr.de>; Wed,  6 Oct 2021 19:55:56 +0200 (CEST)
Received: from localhost (localhost [127.0.0.1])
	by smtp4.osuosl.org (Postfix) with ESMTP id D86D240908;
	Wed,  6 Oct 2021 17:55:52 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from smtp4.osuosl.org ([127.0.0.1])
	by localhost (smtp4.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id QquNRp95JRdC; Wed,  6 Oct 2021 17:55:51 +0000 (UTC)
Received: from lists.linuxfoundation.org (lf-lists.osuosl.org [140.211.9.56])
	by smtp4.osuosl.org (Postfix) with ESMTPS id 2A46A4090C;
	Wed,  6 Oct 2021 17:55:51 +0000 (UTC)
Received: from lf-lists.osuosl.org (localhost [127.0.0.1])
	by lists.linuxfoundation.org (Postfix) with ESMTP id E5E48C0023;
	Wed,  6 Oct 2021 17:55:49 +0000 (UTC)
X-Original-To: virtualization@lists.linux-foundation.org
Delivered-To: virtualization@lists.linuxfoundation.org
Received: from smtp4.osuosl.org (smtp4.osuosl.org [IPv6:2605:bc80:3010::137])
 by lists.linuxfoundation.org (Postfix) with ESMTP id A7A88C002B
 for <virtualization@lists.linux-foundation.org>;
 Wed,  6 Oct 2021 17:55:45 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by smtp4.osuosl.org (Postfix) with ESMTP id 7B7384068E
 for <virtualization@lists.linux-foundation.org>;
 Wed,  6 Oct 2021 17:55:45 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from smtp4.osuosl.org ([127.0.0.1])
 by localhost (smtp4.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id is6t06rvP81W
 for <virtualization@lists.linux-foundation.org>;
 Wed,  6 Oct 2021 17:55:44 +0000 (UTC)
X-Greylist: from auto-whitelisted by SQLgrey-1.8.0
Received: from mx01.bbu.dsd.mx.bitdefender.com
 (mx01.bbu.dsd.mx.bitdefender.com [91.199.104.161])
 by smtp4.osuosl.org (Postfix) with ESMTPS id 6ED6B407A5
 for <virtualization@lists.linux-foundation.org>;
 Wed,  6 Oct 2021 17:55:44 +0000 (UTC)
Received: from smtp.bitdefender.com (smtp01.buh.bitdefender.com [10.17.80.75])
 by mx01.bbu.dsd.mx.bitdefender.com (Postfix) with ESMTPS id
 4C544305D344; Wed,  6 Oct 2021 20:31:14 +0300 (EEST)
Received: from localhost (unknown [91.199.104.28])
 by smtp.bitdefender.com (Postfix) with ESMTPSA id 3082C3064495;
 Wed,  6 Oct 2021 20:31:14 +0300 (EEST)
X-Is-Junk-Enabled: fGZTSsP0qEJE2AIKtlSuFiRRwg9xyHmJ
From: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>
To: kvm@vger.kernel.org
Subject: [PATCH v12 49/77] KVM: introspection: add KVMI_VCPU_CONTROL_EVENTS
Date: Wed,  6 Oct 2021 20:30:45 +0300
Message-Id: <20211006173113.26445-50-alazar@bitdefender.com>
In-Reply-To: <20211006173113.26445-1-alazar@bitdefender.com>
References: <20211006173113.26445-1-alazar@bitdefender.com>
MIME-Version: 1.0
Cc: Tamas K Lengyel <tamas@tklengyel.com>, Wanpeng Li <wanpengli@tencent.com>,
 Sean Christopherson <seanjc@google.com>, Joerg Roedel <joro@8bytes.org>,
 virtualization@lists.linux-foundation.org,
 =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>,
 Mathieu Tarral <mathieu.tarral@protonmail.com>,
 Paolo Bonzini <pbonzini@redhat.com>,
 =?UTF-8?q?Mihai=20Don=C8=9Bu?= <mdontu@bitdefender.com>,
 Jim Mattson <jmattson@google.com>
X-BeenThere: virtualization@lists.linux-foundation.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Linux virtualization <virtualization.lists.linux-foundation.org>
List-Unsubscribe: <https://lists.linuxfoundation.org/mailman/options/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=unsubscribe>
List-Archive: <http://lists.linuxfoundation.org/pipermail/virtualization/>
List-Post: <mailto:virtualization@lists.linux-foundation.org>
List-Help: <mailto:virtualization-request@lists.linux-foundation.org?subject=help>
List-Subscribe: <https://lists.linuxfoundation.org/mailman/listinfo/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: virtualization-bounces@lists.linux-foundation.org
Sender: "Virtualization" <virtualization-bounces@lists.linux-foundation.org>

RnJvbTogTWloYWkgRG9uyJt1IDxtZG9udHVAYml0ZGVmZW5kZXIuY29tPgoKQnkgZGVmYXVsdCwg
YWxsIGludHJvc3BlY3Rpb24gZXZlbnRzIGFyZSBkaXNhYmxlZC4gVGhlIGludHJvc3BlY3Rpb24g
dG9vbAptdXN0IGV4cGxpY2l0bHkgZW5hYmxlIHRoZSBldmVudHMgaXQgd2FudHMgdG8gcmVjZWl2
ZS4gV2l0aCB0aGlzIGNvbW1hbmQKKEtWTUlfVkNQVV9DT05UUk9MX0VWRU5UUykgaXQgY2FuIGVu
YWJsZS9kaXNhYmxlIGFueSB2Q1BVIGV2ZW50IGFsbG93ZWQKYnkgdGhlIGRldmljZSBtYW5hZ2Vy
LgoKU29tZSB2Q1BVIGV2ZW50cyBkb2Vzbid0IGhhdmUgdG8gYmUgZXhwbGljaXRseSBlbmFibGVk
IChhbmQgY2FuJ3QKYmUgZGlzYWJsZWQpIHdpdGggdGhpcyBjb21tYW5kIGJlY2F1c2UgdGhleSBh
cmUgaW1wbGljaXRseSBlbmFibGVkCm9yIHJlcXVlc3RlZCBieSB0aGUgdXNlIG9mIGNlcnRhaW4g
Y29tbWFuZHMuIEZvciBleGFtcGxlLCBpZiB0aGUKaW50cm9zcGVjdGlvbiB0b29sIHVzZXMgdGhl
IEtWTUlfVk1fUEFVU0VfVkNQVSBjb21tYW5kLCBpdCB3YW50cyB0bwpyZWNlaXZlIGFuIEtWTUlf
VkNQVV9FVkVOVF9QQVVTRSBldmVudC4KClNpZ25lZC1vZmYtYnk6IE1paGFpIERvbsibdSA8bWRv
bnR1QGJpdGRlZmVuZGVyLmNvbT4KQ28tZGV2ZWxvcGVkLWJ5OiBBZGFsYmVydCBMYXrEg3IgPGFs
YXphckBiaXRkZWZlbmRlci5jb20+ClNpZ25lZC1vZmYtYnk6IEFkYWxiZXJ0IExhesSDciA8YWxh
emFyQGJpdGRlZmVuZGVyLmNvbT4KLS0tCiBEb2N1bWVudGF0aW9uL3ZpcnQva3ZtL2t2bWkucnN0
ICAgICAgICAgICAgICAgfCA0OCArKysrKysrKysrKysrKysrKysrCiBpbmNsdWRlL2xpbnV4L2t2
bWlfaG9zdC5oICAgICAgICAgICAgICAgICAgICAgfCAgMiArCiBpbmNsdWRlL3VhcGkvbGludXgv
a3ZtaS5oICAgICAgICAgICAgICAgICAgICAgfCAxMCArKystCiAuLi4vdGVzdGluZy9zZWxmdGVz
dHMva3ZtL3g4Nl82NC9rdm1pX3Rlc3QuYyAgfCA0NiArKysrKysrKysrKysrKysrKysKIHZpcnQv
a3ZtL2ludHJvc3BlY3Rpb24va3ZtaS5jICAgICAgICAgICAgICAgICB8IDI2ICsrKysrKysrKysK
IHZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaV9pbnQuaCAgICAgICAgICAgICB8ICAzICsrCiB2
aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWlfbXNnLmMgICAgICAgICAgICAgfCAyNCArKysrKysr
KystCiA3IGZpbGVzIGNoYW5nZWQsIDE1NyBpbnNlcnRpb25zKCspLCAyIGRlbGV0aW9ucygtKQoK
ZGlmZiAtLWdpdCBhL0RvY3VtZW50YXRpb24vdmlydC9rdm0va3ZtaS5yc3QgYi9Eb2N1bWVudGF0
aW9uL3ZpcnQva3ZtL2t2bWkucnN0CmluZGV4IDdmM2RhZWI4ODg4Ni4uODkyYjk2MGQ5NzhkIDEw
MDY0NAotLS0gYS9Eb2N1bWVudGF0aW9uL3ZpcnQva3ZtL2t2bWkucnN0CisrKyBiL0RvY3VtZW50
YXRpb24vdmlydC9rdm0va3ZtaS5yc3QKQEAgLTM2Nyw2ICszNjcsOSBAQCB0aGUgZm9sbG93aW5n
IGV2ZW50czo6CiAKIAlLVk1JX1ZNX0VWRU5UX1VOSE9PSwogCitUaGUgdkNQVSBldmVudHMgKGUu
Zy4gKktWTUlfVkNQVV9FVkVOVF9QQVVTRSopIGFyZSBjb250cm9sbGVkIHdpdGgKK3RoZSAqS1ZN
SV9WQ1BVX0NPTlRST0xfRVZFTlRTKiBjb21tYW5kLgorCiA6RXJyb3JzOgogCiAqIC1LVk1fRUlO
VkFMIC0gdGhlIHBhZGRpbmcgaXMgbm90IHplcm8KQEAgLTUwOSw2ICs1MTIsNTEgQEAgY29tbWFu
ZCkgYmVmb3JlIHJldHVybmluZyB0byBndWVzdC4KICAgICAgICAgICAgICAgICAqS1ZNSV9WQ1BV
X0VWRU5UX1BBVVNFKiBldmVudHMKICogLUtWTV9FUEVSTSAgLSB0aGUgKktWTUlfVkNQVV9FVkVO
VF9QQVVTRSogZXZlbnQgaXMgZGlzYWxsb3dlZAogCisxMC4gS1ZNSV9WQ1BVX0NPTlRST0xfRVZF
TlRTCistLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCisKKzpBcmNoaXRlY3R1cmVzOiBhbGwK
KzpWZXJzaW9uczogPj0gMQorOlBhcmFtZXRlcnM6CisKKzo6CisKKwlzdHJ1Y3Qga3ZtaV92Y3B1
X2hkcjsKKwlzdHJ1Y3Qga3ZtaV92Y3B1X2NvbnRyb2xfZXZlbnRzIHsKKwkJX191MTYgZXZlbnRf
aWQ7CisJCV9fdTggZW5hYmxlOworCQlfX3U4IHBhZGRpbmcxOworCQlfX3UzMiBwYWRkaW5nMjsK
Kwl9OworCis6UmV0dXJuczoKKworOjoKKworCXN0cnVjdCBrdm1pX2Vycm9yX2NvZGUKKworRW5h
Ymxlcy9kaXNhYmxlcyB2Q1BVIGludHJvc3BlY3Rpb24gZXZlbnRzLgorCitXaGVuIGFuIGV2ZW50
IGlzIGVuYWJsZWQsIHRoZSBpbnRyb3NwZWN0aW9uIHRvb2wgaXMgbm90aWZpZWQgYW5kCittdXN0
IHJlcGx5IHdpdGg6IGNvbnRpbnVlLCByZXRyeSwgY3Jhc2gsIGV0Yy4gKHNlZSAqKkV2ZW50cyoq
IGJlbG93KS4KKworVGhlIGZvbGxvd2luZyB2Q1BVIGV2ZW50cyBkb2Vzbid0IGhhdmUgdG8gYmUg
ZW5hYmxlZCBhbmQgY2FuJ3QgYmUgZGlzYWJsZWQsCitiZWNhdXNlIHRoZXNlIGFyZSBzZW50IGFz
IGEgcmVzdWx0IG9mIGNlcnRhaW4gY29tbWFuZHMgKGJ1dCB0aGV5IGNhbiBiZQorZGlzYWxsb3dl
ZCBieSB0aGUgZGV2aWNlIG1hbmFnZXIpIDo6CisKKwlLVk1JX1ZDUFVfRVZFTlRfUEFVU0UKKwor
VGhlIFZNIGV2ZW50cyAoZS5nLiAqS1ZNSV9WTV9FVkVOVF9VTkhPT0sqKSBhcmUgY29udHJvbGxl
ZCB3aXRoCit0aGUgKktWTUlfVk1fQ09OVFJPTF9FVkVOVFMqIGNvbW1hbmQuCisKKzpFcnJvcnM6
CisKKyogLUtWTV9FSU5WQUwgLSB0aGUgcGFkZGluZyBpcyBub3QgemVybworKiAtS1ZNX0VJTlZB
TCAtIHRoZSBzZWxlY3RlZCB2Q1BVIGlzIGludmFsaWQKKyogLUtWTV9FSU5WQUwgLSB0aGUgZXZl
bnQgSUQgaXMgdW5rbm93biAodXNlICpLVk1JX1ZNX0NIRUNLX0VWRU5UKiBmaXJzdCkKKyogLUtW
TV9FUEVSTSAtIHRoZSBhY2Nlc3MgaXMgZGlzYWxsb3dlZCAodXNlICpLVk1JX1ZNX0NIRUNLX0VW
RU5UKiBmaXJzdCkKKyogLUtWTV9FQUdBSU4gLSB0aGUgc2VsZWN0ZWQgdkNQVSBjYW4ndCBiZSBp
bnRyb3NwZWN0ZWQgeWV0CisKIEV2ZW50cwogPT09PT09CiAKZGlmZiAtLWdpdCBhL2luY2x1ZGUv
bGludXgva3ZtaV9ob3N0LmggYi9pbmNsdWRlL2xpbnV4L2t2bWlfaG9zdC5oCmluZGV4IDRhNDNl
NTFhNDRjOS4uNWU1ZDI1NWU1YTJjIDEwMDY0NAotLS0gYS9pbmNsdWRlL2xpbnV4L2t2bWlfaG9z
dC5oCisrKyBiL2luY2x1ZGUvbGludXgva3ZtaV9ob3N0LmgKQEAgLTMxLDYgKzMxLDggQEAgc3Ry
dWN0IGt2bV92Y3B1X2ludHJvc3BlY3Rpb24gewogCiAJc3RydWN0IGt2bWlfdmNwdV9yZXBseSBy
ZXBseTsKIAlib29sIHdhaXRpbmdfZm9yX3JlcGx5OworCisJdW5zaWduZWQgbG9uZyAqZXZfZW5h
YmxlX21hc2s7CiB9OwogCiBzdHJ1Y3Qga3ZtX2ludHJvc3BlY3Rpb24gewpkaWZmIC0tZ2l0IGEv
aW5jbHVkZS91YXBpL2xpbnV4L2t2bWkuaCBiL2luY2x1ZGUvdWFwaS9saW51eC9rdm1pLmgKaW5k
ZXggNzU3ZDRiODRmNDczLi5hY2QwMGU4ODNkYzkgMTAwNjQ0Ci0tLSBhL2luY2x1ZGUvdWFwaS9s
aW51eC9rdm1pLmgKKysrIGIvaW5jbHVkZS91YXBpL2xpbnV4L2t2bWkuaApAQCAtMzUsNyArMzUs
OCBAQCBlbnVtIHsKIGVudW0gewogCUtWTUlfVkNQVV9FVkVOVCA9IEtWTUlfVkNQVV9NRVNTQUdF
X0lEKDApLAogCi0JS1ZNSV9WQ1BVX0dFVF9JTkZPID0gS1ZNSV9WQ1BVX01FU1NBR0VfSUQoMSks
CisJS1ZNSV9WQ1BVX0dFVF9JTkZPICAgICAgID0gS1ZNSV9WQ1BVX01FU1NBR0VfSUQoMSksCisJ
S1ZNSV9WQ1BVX0NPTlRST0xfRVZFTlRTID0gS1ZNSV9WQ1BVX01FU1NBR0VfSUQoMiksCiAKIAlL
Vk1JX05FWFRfVkNQVV9NRVNTQUdFCiB9OwpAQCAtMTQ4LDQgKzE0OSwxMSBAQCBzdHJ1Y3Qga3Zt
aV92Y3B1X2V2ZW50X3JlcGx5IHsKIAlfX3UzMiBwYWRkaW5nMjsKIH07CiAKK3N0cnVjdCBrdm1p
X3ZjcHVfY29udHJvbF9ldmVudHMgeworCV9fdTE2IGV2ZW50X2lkOworCV9fdTggZW5hYmxlOwor
CV9fdTggcGFkZGluZzE7CisJX191MzIgcGFkZGluZzI7Cit9OworCiAjZW5kaWYgLyogX1VBUElf
X0xJTlVYX0tWTUlfSCAqLwpkaWZmIC0tZ2l0IGEvdG9vbHMvdGVzdGluZy9zZWxmdGVzdHMva3Zt
L3g4Nl82NC9rdm1pX3Rlc3QuYyBiL3Rvb2xzL3Rlc3Rpbmcvc2VsZnRlc3RzL2t2bS94ODZfNjQv
a3ZtaV90ZXN0LmMKaW5kZXggOWViMTdkODIwYThiLi5lMmQwOWUwY2JjZTggMTAwNjQ0Ci0tLSBh
L3Rvb2xzL3Rlc3Rpbmcvc2VsZnRlc3RzL2t2bS94ODZfNjQva3ZtaV90ZXN0LmMKKysrIGIvdG9v
bHMvdGVzdGluZy9zZWxmdGVzdHMva3ZtL3g4Nl82NC9rdm1pX3Rlc3QuYwpAQCAtNzc3LDYgKzc3
Nyw1MSBAQCBzdGF0aWMgdm9pZCB0ZXN0X3BhdXNlKHN0cnVjdCBrdm1fdm0gKnZtKQogCWFsbG93
X2V2ZW50KHZtLCBLVk1JX1ZDUFVfRVZFTlRfUEFVU0UpOwogfQogCitzdGF0aWMgdm9pZCBjbWRf
dmNwdV9jb250cm9sX2V2ZW50KHN0cnVjdCBrdm1fdm0gKnZtLCBfX3UxNiBldmVudF9pZCwKKwkJ
CQkgICBfX3U4IGVuYWJsZSwgaW50IGV4cGVjdGVkX2VycikKK3sKKwlzdHJ1Y3QgeworCQlzdHJ1
Y3Qga3ZtaV9tc2dfaGRyIGhkcjsKKwkJc3RydWN0IGt2bWlfdmNwdV9oZHIgdmNwdV9oZHI7CisJ
CXN0cnVjdCBrdm1pX3ZjcHVfY29udHJvbF9ldmVudHMgY21kOworCX0gcmVxID0ge307CisKKwly
ZXEuY21kLmV2ZW50X2lkID0gZXZlbnRfaWQ7CisJcmVxLmNtZC5lbmFibGUgPSBlbmFibGU7CisK
Kwl0ZXN0X3ZjcHUwX2NvbW1hbmQodm0sIEtWTUlfVkNQVV9DT05UUk9MX0VWRU5UUywKKwkJCSAg
ICZyZXEuaGRyLCBzaXplb2YocmVxKSwgTlVMTCwgMCwKKwkJCSAgIGV4cGVjdGVkX2Vycik7Cit9
CisKKworc3RhdGljIHZvaWQgZW5hYmxlX3ZjcHVfZXZlbnQoc3RydWN0IGt2bV92bSAqdm0sIF9f
dTE2IGV2ZW50X2lkKQoreworCWNtZF92Y3B1X2NvbnRyb2xfZXZlbnQodm0sIGV2ZW50X2lkLCAx
LCAwKTsKK30KKworc3RhdGljIHZvaWQgZGlzYWJsZV92Y3B1X2V2ZW50KHN0cnVjdCBrdm1fdm0g
KnZtLCBfX3UxNiBldmVudF9pZCkKK3sKKwljbWRfdmNwdV9jb250cm9sX2V2ZW50KHZtLCBldmVu
dF9pZCwgMCwgMCk7Cit9CisKK3N0YXRpYyB2b2lkIHRlc3RfY21kX3ZjcHVfY29udHJvbF9ldmVu
dHMoc3RydWN0IGt2bV92bSAqdm0pCit7CisJX191MTYgaWQgPSBLVk1JX1ZDUFVfRVZFTlRfUEFV
U0UsIGludmFsaWRfaWQgPSAweGZmZmY7CisJX191OCBlbmFibGUgPSAxLCBlbmFibGVfaW52YWwg
PSAyOworCisJZW5hYmxlX3ZjcHVfZXZlbnQodm0sIGlkKTsKKwlkaXNhYmxlX3ZjcHVfZXZlbnQo
dm0sIGlkKTsKKworCWNtZF92Y3B1X2NvbnRyb2xfZXZlbnQodm0sIGlkLCBlbmFibGVfaW52YWws
IC1LVk1fRUlOVkFMKTsKKwljbWRfdmNwdV9jb250cm9sX2V2ZW50KHZtLCBpbnZhbGlkX2lkLCBl
bmFibGUsIC1LVk1fRUlOVkFMKTsKKworCWRpc2FsbG93X2V2ZW50KHZtLCBpZCk7CisJY21kX3Zj
cHVfY29udHJvbF9ldmVudCh2bSwgaWQsIGVuYWJsZSwgLUtWTV9FUEVSTSk7CisJYWxsb3dfZXZl
bnQodm0sIGlkKTsKKworfQorCiBzdGF0aWMgdm9pZCB0ZXN0X2ludHJvc3BlY3Rpb24oc3RydWN0
IGt2bV92bSAqdm0pCiB7CiAJc3JhbmRvbSh0aW1lKDApKTsKQEAgLTc5Myw2ICs4MzgsNyBAQCBz
dGF0aWMgdm9pZCB0ZXN0X2ludHJvc3BlY3Rpb24oc3RydWN0IGt2bV92bSAqdm0pCiAJdGVzdF9t
ZW1vcnlfYWNjZXNzKHZtKTsKIAl0ZXN0X2NtZF92Y3B1X2dldF9pbmZvKHZtKTsKIAl0ZXN0X3Bh
dXNlKHZtKTsKKwl0ZXN0X2NtZF92Y3B1X2NvbnRyb2xfZXZlbnRzKHZtKTsKIAogCXVuaG9va19p
bnRyb3NwZWN0aW9uKHZtKTsKIH0KZGlmZiAtLWdpdCBhL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24v
a3ZtaS5jIGIvdmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pLmMKaW5kZXggOTNmYjIwYzQzYjlj
Li45NmY2MDlmNjY5NGEgMTAwNjQ0Ci0tLSBhL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaS5j
CisrKyBiL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3ZtaS5jCkBAIC04Myw2ICs4MywxMSBAQCBi
b29sIGt2bWlfaXNfa25vd25fdm1fZXZlbnQodTE2IGlkKQogCXJldHVybiBpZCA8IEtWTUlfTlVN
X0VWRU5UUyAmJiB0ZXN0X2JpdChpZCwgS3ZtaV9rbm93bl92bV9ldmVudHMpOwogfQogCitib29s
IGt2bWlfaXNfa25vd25fdmNwdV9ldmVudCh1MTYgaWQpCit7CisJcmV0dXJuIGlkIDwgS1ZNSV9O
VU1fRVZFTlRTICYmIHRlc3RfYml0KGlkLCBLdm1pX2tub3duX3ZjcHVfZXZlbnRzKTsKK30KKwog
c3RhdGljIGJvb2wga3ZtaV9pc192bV9ldmVudF9lbmFibGVkKHN0cnVjdCBrdm1faW50cm9zcGVj
dGlvbiAqa3ZtaSwgdTE2IGlkKQogewogCXJldHVybiBpZCA8IEtWTUlfTlVNX0VWRU5UUyAmJiB0
ZXN0X2JpdChpZCwga3ZtaS0+dm1fZXZlbnRfZW5hYmxlX21hc2spOwpAQCAtMTkwLDYgKzE5NSwx
MiBAQCBzdGF0aWMgYm9vbCBrdm1pX2FsbG9jX3ZjcHVpKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSkK
IAlpZiAoIXZjcHVpKQogCQlyZXR1cm4gZmFsc2U7CiAKKwl2Y3B1aS0+ZXZfZW5hYmxlX21hc2sg
PSBiaXRtYXBfemFsbG9jKEtWTUlfTlVNX0VWRU5UUywgR0ZQX0tFUk5FTCk7CisJaWYgKCF2Y3B1
aS0+ZXZfZW5hYmxlX21hc2spIHsKKwkJa2ZyZWUodmNwdSk7CisJCXJldHVybiBmYWxzZTsKKwl9
CisKIAlJTklUX0xJU1RfSEVBRCgmdmNwdWktPmpvYl9saXN0KTsKIAlzcGluX2xvY2tfaW5pdCgm
dmNwdWktPmpvYl9sb2NrKTsKIApAQCAtMjI1LDYgKzIzNiw4IEBAIHN0YXRpYyB2b2lkIGt2bWlf
ZnJlZV92Y3B1aShzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUpCiAKIAlrdm1pX2ZyZWVfdmNwdV9qb2Jz
KHZjcHVpKTsKIAorCWJpdG1hcF9mcmVlKHZjcHVpLT5ldl9lbmFibGVfbWFzayk7CisKIAlrZnJl
ZSh2Y3B1aSk7CiAJdmNwdS0+a3ZtaSA9IE5VTEw7CiB9CkBAIC02MjIsNiArNjM1LDE5IEBAIGlu
dCBrdm1pX2NtZF92bV9jb250cm9sX2V2ZW50cyhzdHJ1Y3Qga3ZtX2ludHJvc3BlY3Rpb24gKmt2
bWksCiAJcmV0dXJuIDA7CiB9CiAKK2ludCBrdm1pX2NtZF92Y3B1X2NvbnRyb2xfZXZlbnRzKHN0
cnVjdCBrdm1fdmNwdSAqdmNwdSwKKwkJCQkgdTE2IGV2ZW50X2lkLCBib29sIGVuYWJsZSkKK3sK
KwlzdHJ1Y3Qga3ZtX3ZjcHVfaW50cm9zcGVjdGlvbiAqdmNwdWkgPSBWQ1BVSSh2Y3B1KTsKKwor
CWlmIChlbmFibGUpCisJCXNldF9iaXQoZXZlbnRfaWQsIHZjcHVpLT5ldl9lbmFibGVfbWFzayk7
CisJZWxzZQorCQljbGVhcl9iaXQoZXZlbnRfaWQsIHZjcHVpLT5ldl9lbmFibGVfbWFzayk7CisK
KwlyZXR1cm4gMDsKK30KKwogc3RhdGljIGxvbmcKIGdldF91c2VyX3BhZ2VzX3JlbW90ZV91bmxv
Y2tlZChzdHJ1Y3QgbW1fc3RydWN0ICptbSwgdW5zaWduZWQgbG9uZyBzdGFydCwKIAkJCQl1bnNp
Z25lZCBsb25nIG5yX3BhZ2VzLCB1bnNpZ25lZCBpbnQgZ3VwX2ZsYWdzLApkaWZmIC0tZ2l0IGEv
dmlydC9rdm0vaW50cm9zcGVjdGlvbi9rdm1pX2ludC5oIGIvdmlydC9rdm0vaW50cm9zcGVjdGlv
bi9rdm1pX2ludC5oCmluZGV4IDA4NzY3NDBkZmEyNC4uODA1OTAyOWNhZGY0IDEwMDY0NAotLS0g
YS92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWlfaW50LmgKKysrIGIvdmlydC9rdm0vaW50cm9z
cGVjdGlvbi9rdm1pX2ludC5oCkBAIC00NywxMiArNDcsMTUgQEAgYm9vbCBrdm1pX2lzX2NvbW1h
bmRfYWxsb3dlZChzdHJ1Y3Qga3ZtX2ludHJvc3BlY3Rpb24gKmt2bWksIHUxNiBpZCk7CiBib29s
IGt2bWlfaXNfZXZlbnRfYWxsb3dlZChzdHJ1Y3Qga3ZtX2ludHJvc3BlY3Rpb24gKmt2bWksIHUx
NiBpZCk7CiBib29sIGt2bWlfaXNfa25vd25fZXZlbnQodTE2IGlkKTsKIGJvb2wga3ZtaV9pc19r
bm93bl92bV9ldmVudCh1MTYgaWQpOworYm9vbCBrdm1pX2lzX2tub3duX3ZjcHVfZXZlbnQodTE2
IGlkKTsKIGludCBrdm1pX2FkZF9qb2Ioc3RydWN0IGt2bV92Y3B1ICp2Y3B1LAogCQkgdm9pZCAo
KmZjdCkoc3RydWN0IGt2bV92Y3B1ICp2Y3B1LCB2b2lkICpjdHgpLAogCQkgdm9pZCAqY3R4LCB2
b2lkICgqZnJlZV9mY3QpKHZvaWQgKmN0eCkpOwogdm9pZCBrdm1pX3J1bl9qb2JzKHN0cnVjdCBr
dm1fdmNwdSAqdmNwdSk7CiBpbnQga3ZtaV9jbWRfdm1fY29udHJvbF9ldmVudHMoc3RydWN0IGt2
bV9pbnRyb3NwZWN0aW9uICprdm1pLAogCQkJICAgICAgIHUxNiBldmVudF9pZCwgYm9vbCBlbmFi
bGUpOworaW50IGt2bWlfY21kX3ZjcHVfY29udHJvbF9ldmVudHMoc3RydWN0IGt2bV92Y3B1ICp2
Y3B1LAorCQkJCSB1MTYgZXZlbnRfaWQsIGJvb2wgZW5hYmxlKTsKIGludCBrdm1pX2NtZF9yZWFk
X3BoeXNpY2FsKHN0cnVjdCBrdm0gKmt2bSwgdTY0IGdwYSwgc2l6ZV90IHNpemUsCiAJCQkgICBp
bnQgKCpzZW5kKShzdHJ1Y3Qga3ZtX2ludHJvc3BlY3Rpb24gKiwKIAkJCQkJY29uc3Qgc3RydWN0
IGt2bWlfbXNnX2hkciosCmRpZmYgLS1naXQgYS92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWlf
bXNnLmMgYi92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWlfbXNnLmMKaW5kZXggNDQ3MTA1YTgy
ZWZmLi5iNTIyMzIyYjMyZjAgMTAwNjQ0Ci0tLSBhL3ZpcnQva3ZtL2ludHJvc3BlY3Rpb24va3Zt
aV9tc2cuYworKysgYi92aXJ0L2t2bS9pbnRyb3NwZWN0aW9uL2t2bWlfbXNnLmMKQEAgLTM2Nyw2
ICszNjcsMjcgQEAgc3RhdGljIGludCBoYW5kbGVfdmNwdV9ldmVudF9yZXBseShjb25zdCBzdHJ1
Y3Qga3ZtaV92Y3B1X21zZ19qb2IgKmpvYiwKIAlyZXR1cm4gZXhwZWN0ZWQtPmVycm9yOwogfQog
CitzdGF0aWMgaW50IGhhbmRsZV92Y3B1X2NvbnRyb2xfZXZlbnRzKGNvbnN0IHN0cnVjdCBrdm1p
X3ZjcHVfbXNnX2pvYiAqam9iLAorCQkJCSAgICAgIGNvbnN0IHN0cnVjdCBrdm1pX21zZ19oZHIg
Km1zZywKKwkJCQkgICAgICBjb25zdCB2b2lkICpfcmVxKQoreworCXN0cnVjdCBrdm1faW50cm9z
cGVjdGlvbiAqa3ZtaSA9IEtWTUkoam9iLT52Y3B1LT5rdm0pOworCWNvbnN0IHN0cnVjdCBrdm1p
X3ZjcHVfY29udHJvbF9ldmVudHMgKnJlcSA9IF9yZXE7CisJaW50IGVjOworCisJaWYgKHJlcS0+
cGFkZGluZzEgfHwgcmVxLT5wYWRkaW5nMiB8fCByZXEtPmVuYWJsZSA+IDEpCisJCWVjID0gLUtW
TV9FSU5WQUw7CisJZWxzZSBpZiAoIWt2bWlfaXNfa25vd25fdmNwdV9ldmVudChyZXEtPmV2ZW50
X2lkKSkKKwkJZWMgPSAtS1ZNX0VJTlZBTDsKKwllbHNlIGlmICgha3ZtaV9pc19ldmVudF9hbGxv
d2VkKGt2bWksIHJlcS0+ZXZlbnRfaWQpKQorCQllYyA9IC1LVk1fRVBFUk07CisJZWxzZQorCQll
YyA9IGt2bWlfY21kX3ZjcHVfY29udHJvbF9ldmVudHMoam9iLT52Y3B1LCByZXEtPmV2ZW50X2lk
LAorCQkJCQkJICByZXEtPmVuYWJsZSA9PSAxKTsKKworCXJldHVybiBrdm1pX21zZ192Y3B1X3Jl
cGx5KGpvYiwgbXNnLCBlYywgTlVMTCwgMCk7Cit9CisKIC8qCiAgKiBUaGVzZSBmdW5jdGlvbnMg
YXJlIGV4ZWN1dGVkIGZyb20gdGhlIHZDUFUgdGhyZWFkLiBUaGUgcmVjZWl2aW5nIHRocmVhZAog
ICogcGFzc2VzIHRoZSBtZXNzYWdlcyB1c2luZyBhIG5ld2x5IGFsbG9jYXRlZCAnc3RydWN0IGt2
bWlfdmNwdV9tc2dfam9iJwpAQCAtMzc0LDcgKzM5NSw4IEBAIHN0YXRpYyBpbnQgaGFuZGxlX3Zj
cHVfZXZlbnRfcmVwbHkoY29uc3Qgc3RydWN0IGt2bWlfdmNwdV9tc2dfam9iICpqb2IsCiAgKiBz
ZW5kaW5nIGJhY2sgdGhlIHJlcGx5KS4KICAqLwogc3RhdGljIGNvbnN0IGt2bWlfdmNwdV9tc2df
am9iX2ZjdCBtc2dfdmNwdVtdID0gewotCVtLVk1JX1ZDUFVfRVZFTlRdID0gaGFuZGxlX3ZjcHVf
ZXZlbnRfcmVwbHksCisJW0tWTUlfVkNQVV9FVkVOVF0gICAgICAgICAgPSBoYW5kbGVfdmNwdV9l
dmVudF9yZXBseSwKKwlbS1ZNSV9WQ1BVX0NPTlRST0xfRVZFTlRTXSA9IGhhbmRsZV92Y3B1X2Nv
bnRyb2xfZXZlbnRzLAogfTsKIAogc3RhdGljIGt2bWlfdmNwdV9tc2dfam9iX2ZjdCBnZXRfdmNw
dV9tc2dfaGFuZGxlcih1MTYgaWQpCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fClZpcnR1YWxpemF0aW9uIG1haWxpbmcgbGlzdApWaXJ0dWFsaXphdGlvbkBs
aXN0cy5saW51eC1mb3VuZGF0aW9uLm9yZwpodHRwczovL2xpc3RzLmxpbnV4Zm91bmRhdGlvbi5v
cmcvbWFpbG1hbi9saXN0aW5mby92aXJ0dWFsaXphdGlvbg==
