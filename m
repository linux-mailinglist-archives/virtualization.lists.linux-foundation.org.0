Return-Path: <virtualization-bounces@lists.linux-foundation.org>
X-Original-To: lists.virtualization@lfdr.de
Delivered-To: lists.virtualization@lfdr.de
Received: from hemlock.osuosl.org (smtp2.osuosl.org [140.211.166.133])
	by mail.lfdr.de (Postfix) with ESMTPS id 6EF00228B40
	for <lists.virtualization@lfdr.de>; Tue, 21 Jul 2020 23:26:31 +0200 (CEST)
Received: from localhost (localhost [127.0.0.1])
	by hemlock.osuosl.org (Postfix) with ESMTP id 2DE8488503;
	Tue, 21 Jul 2020 21:26:30 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from hemlock.osuosl.org ([127.0.0.1])
	by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id iwY8pbmWQ7u6; Tue, 21 Jul 2020 21:26:24 +0000 (UTC)
Received: from lists.linuxfoundation.org (lf-lists.osuosl.org [140.211.9.56])
	by hemlock.osuosl.org (Postfix) with ESMTP id 079AE88553;
	Tue, 21 Jul 2020 21:26:22 +0000 (UTC)
Received: from lf-lists.osuosl.org (localhost [127.0.0.1])
	by lists.linuxfoundation.org (Postfix) with ESMTP id ED25FC016F;
	Tue, 21 Jul 2020 21:26:21 +0000 (UTC)
X-Original-To: virtualization@lists.linux-foundation.org
Delivered-To: virtualization@lists.linuxfoundation.org
Received: from silver.osuosl.org (smtp3.osuosl.org [140.211.166.136])
 by lists.linuxfoundation.org (Postfix) with ESMTP id 50045C016F
 for <virtualization@lists.linux-foundation.org>;
 Tue, 21 Jul 2020 21:26:16 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by silver.osuosl.org (Postfix) with ESMTP id 12D89227AD
 for <virtualization@lists.linux-foundation.org>;
 Tue, 21 Jul 2020 21:26:16 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from silver.osuosl.org ([127.0.0.1])
 by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id c11Uy7sCCadX
 for <virtualization@lists.linux-foundation.org>;
 Tue, 21 Jul 2020 21:26:03 +0000 (UTC)
X-Greylist: from auto-whitelisted by SQLgrey-1.7.6
Received: from mx01.bbu.dsd.mx.bitdefender.com
 (mx01.bbu.dsd.mx.bitdefender.com [91.199.104.161])
 by silver.osuosl.org (Postfix) with ESMTPS id B855722785
 for <virtualization@lists.linux-foundation.org>;
 Tue, 21 Jul 2020 21:25:56 +0000 (UTC)
Received: from smtp.bitdefender.com (smtp02.buh.bitdefender.net [10.17.80.76])
 by mx01.bbu.dsd.mx.bitdefender.com (Postfix) with ESMTPS id
 2D608305D504; Wed, 22 Jul 2020 00:09:31 +0300 (EEST)
Received: from localhost.localdomain (unknown [91.199.104.27])
 by smtp.bitdefender.com (Postfix) with ESMTPSA id 0B879304FA13;
 Wed, 22 Jul 2020 00:09:31 +0300 (EEST)
From: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>
To: kvm@vger.kernel.org
Subject: [PATCH v9 76/84] KVM: introspection: restore the state of MSR
 interception on unhook
Date: Wed, 22 Jul 2020 00:09:14 +0300
Message-Id: <20200721210922.7646-77-alazar@bitdefender.com>
In-Reply-To: <20200721210922.7646-1-alazar@bitdefender.com>
References: <20200721210922.7646-1-alazar@bitdefender.com>
MIME-Version: 1.0
Cc: =?UTF-8?q?Adalbert=20Laz=C4=83r?= <alazar@bitdefender.com>,
 Paolo Bonzini <pbonzini@redhat.com>,
 =?UTF-8?q?Nicu=C8=99or=20C=C3=AE=C8=9Bu?= <ncitu@bitdefender.com>,
 virtualization@lists.linux-foundation.org
X-BeenThere: virtualization@lists.linux-foundation.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Linux virtualization <virtualization.lists.linux-foundation.org>
List-Unsubscribe: <https://lists.linuxfoundation.org/mailman/options/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=unsubscribe>
List-Archive: <http://lists.linuxfoundation.org/pipermail/virtualization/>
List-Post: <mailto:virtualization@lists.linux-foundation.org>
List-Help: <mailto:virtualization-request@lists.linux-foundation.org?subject=help>
List-Subscribe: <https://lists.linuxfoundation.org/mailman/listinfo/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: virtualization-bounces@lists.linux-foundation.org
Sender: "Virtualization" <virtualization-bounces@lists.linux-foundation.org>

RnJvbTogTmljdciZb3IgQ8OuyJt1IDxuY2l0dUBiaXRkZWZlbmRlci5jb20+CgpUaGlzIGNvbW1p
dCBhbHNvIGVuc3VyZXMgdGhhdCB0aGUgaW50cm9zcGVjdGlvbiB0b29sIGFuZCB0aGUgdXNlcnNw
YWNlCmRvIG5vdCBkaXNhYmxlIGVhY2ggb3RoZXIgdGhlIE1TUiBhY2Nlc3MgVk0tZXhpdC4KClNp
Z25lZC1vZmYtYnk6IE5pY3XImW9yIEPDrsibdSA8bmNpdHVAYml0ZGVmZW5kZXIuY29tPgpTaWdu
ZWQtb2ZmLWJ5OiBBZGFsYmVydCBMYXrEg3IgPGFsYXphckBiaXRkZWZlbmRlci5jb20+Ci0tLQog
YXJjaC94ODYvaW5jbHVkZS9hc20va3ZtaV9ob3N0LmggfCAgMTIgKysrCiBhcmNoL3g4Ni9rdm0v
a3ZtaS5jICAgICAgICAgICAgICB8IDEzMyArKysrKysrKysrKysrKysrKysrKysrKysrKystLS0t
CiBhcmNoL3g4Ni9rdm0vc3ZtL3N2bS5jICAgICAgICAgICB8ICAxMSArKysKIGFyY2gveDg2L2t2
bS92bXgvdm14LmMgICAgICAgICAgIHwgIDExICsrKwogNCBmaWxlcyBjaGFuZ2VkLCAxNTAgaW5z
ZXJ0aW9ucygrKSwgMTcgZGVsZXRpb25zKC0pCgpkaWZmIC0tZ2l0IGEvYXJjaC94ODYvaW5jbHVk
ZS9hc20va3ZtaV9ob3N0LmggYi9hcmNoL3g4Ni9pbmNsdWRlL2FzbS9rdm1pX2hvc3QuaAppbmRl
eCA1ZjI5NjdkODZiNzIuLmFjYzAwMzQwM2M5NSAxMDA2NDQKLS0tIGEvYXJjaC94ODYvaW5jbHVk
ZS9hc20va3ZtaV9ob3N0LmgKKysrIGIvYXJjaC94ODYvaW5jbHVkZS9hc20va3ZtaV9ob3N0LmgK
QEAgLTI2LDYgKzI2LDEyIEBAIHN0cnVjdCBrdm1pX2ludGVyY2VwdGlvbiB7CiAJCQlERUNMQVJF
X0JJVE1BUChsb3csIEtWTUlfTlVNX01TUik7CiAJCQlERUNMQVJFX0JJVE1BUChoaWdoLCBLVk1J
X05VTV9NU1IpOwogCQl9IGt2bWlfbWFzazsKKwkJc3RydWN0IHsKKwkJCURFQ0xBUkVfQklUTUFQ
KGxvdywgS1ZNSV9OVU1fTVNSKTsKKwkJCURFQ0xBUkVfQklUTUFQKGhpZ2gsIEtWTUlfTlVNX01T
Uik7CisJCX0ga3ZtX21hc2s7CisJCWJvb2wgKCptb25pdG9yX2ZjdCkoc3RydWN0IGt2bV92Y3B1
ICp2Y3B1LCB1MzIgbXNyLAorCQkJCSAgICBib29sIGVuYWJsZSk7CiAJfSBtc3J3OwogfTsKIApA
QCAtNDgsNiArNTQsOCBAQCB2b2lkIGt2bWlfeHNldGJ2X2V2ZW50KHN0cnVjdCBrdm1fdmNwdSAq
dmNwdSwgdTggeGNyLAogYm9vbCBrdm1pX21vbml0b3JfZGVzY19pbnRlcmNlcHQoc3RydWN0IGt2
bV92Y3B1ICp2Y3B1LCBib29sIGVuYWJsZSk7CiBib29sIGt2bWlfZGVzY3JpcHRvcl9ldmVudChz
dHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsIHU4IGRlc2NyaXB0b3IsIGJvb2wgd3JpdGUpOwogYm9vbCBr
dm1pX21zcl9ldmVudChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsIHN0cnVjdCBtc3JfZGF0YSAqbXNy
KTsKK2Jvb2wga3ZtaV9tb25pdG9yX21zcndfaW50ZXJjZXB0KHN0cnVjdCBrdm1fdmNwdSAqdmNw
dSwgdTMyIG1zciwgYm9vbCBlbmFibGUpOworYm9vbCBrdm1pX21zcndfaW50ZXJjZXB0X29yaWdp
bmF0b3Ioc3RydWN0IGt2bV92Y3B1ICp2Y3B1KTsKIAogI2Vsc2UgLyogQ09ORklHX0tWTV9JTlRS
T1NQRUNUSU9OICovCiAKQEAgLTY4LDYgKzc2LDEwIEBAIHN0YXRpYyBpbmxpbmUgYm9vbCBrdm1p
X2Rlc2NyaXB0b3JfZXZlbnQoc3RydWN0IGt2bV92Y3B1ICp2Y3B1LCB1OCBkZXNjcmlwdG9yLAog
CQkJCQkgYm9vbCB3cml0ZSkgeyByZXR1cm4gdHJ1ZTsgfQogc3RhdGljIGlubGluZSBib29sIGt2
bWlfbXNyX2V2ZW50KHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwgc3RydWN0IG1zcl9kYXRhICptc3Ip
CiAJCQkJeyByZXR1cm4gdHJ1ZTsgfQorc3RhdGljIGlubGluZSBib29sIGt2bWlfbW9uaXRvcl9t
c3J3X2ludGVyY2VwdChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsIHUzMiBtc3IsCisJCQkJCSAgICAg
ICBib29sIGVuYWJsZSkgeyByZXR1cm4gZmFsc2U7IH0KK3N0YXRpYyBpbmxpbmUgYm9vbCBrdm1p
X21zcndfaW50ZXJjZXB0X29yaWdpbmF0b3Ioc3RydWN0IGt2bV92Y3B1ICp2Y3B1KQorCQkJCXsg
cmV0dXJuIGZhbHNlOyB9CiAKICNlbmRpZiAvKiBDT05GSUdfS1ZNX0lOVFJPU1BFQ1RJT04gKi8K
IApkaWZmIC0tZ2l0IGEvYXJjaC94ODYva3ZtL2t2bWkuYyBiL2FyY2gveDg2L2t2bS9rdm1pLmMK
aW5kZXggYTQ4ZTcyZjUyMGRhLi4wYjEzMDFlYmFmYmEgMTAwNjQ0Ci0tLSBhL2FyY2gveDg2L2t2
bS9rdm1pLmMKKysrIGIvYXJjaC94ODYva3ZtL2t2bWkuYwpAQCAtNDI0LDIyICs0MjQsMjUgQEAg
c3RhdGljIGJvb2wga3ZtaV9tc3JfdmFsaWQodW5zaWduZWQgaW50IG1zcikKIAlyZXR1cm4gbXNy
IDw9IDB4MWZmZiB8fCAobXNyID49IDB4YzAwMDAwMDAgJiYgbXNyIDw9IDB4YzAwMDFmZmYpOwog
fQogCi1zdGF0aWMgdW5zaWduZWQgbG9uZyAqbXNyX21hc2soc3RydWN0IGt2bV92Y3B1ICp2Y3B1
LCB1bnNpZ25lZCBpbnQgKm1zcikKK3N0YXRpYyB1bnNpZ25lZCBsb25nICptc3JfbWFzayhzdHJ1
Y3Qga3ZtX3ZjcHUgKnZjcHUsIHVuc2lnbmVkIGludCAqbXNyLAorCQkJICAgICAgIGJvb2wga3Zt
aSkKIHsKIAlzd2l0Y2ggKCptc3IpIHsKIAljYXNlIDAgLi4uIDB4MWZmZjoKLQkJcmV0dXJuIHZj
cHUtPmFyY2gua3ZtaS0+bXNydy5rdm1pX21hc2subG93OworCQlyZXR1cm4ga3ZtaSA/IHZjcHUt
PmFyY2gua3ZtaS0+bXNydy5rdm1pX21hc2subG93IDoKKwkJCSAgICAgIHZjcHUtPmFyY2gua3Zt
aS0+bXNydy5rdm1fbWFzay5sb3c7CiAJY2FzZSAweGMwMDAwMDAwIC4uLiAweGMwMDAxZmZmOgog
CQkqbXNyICY9IDB4MWZmZjsKLQkJcmV0dXJuIHZjcHUtPmFyY2gua3ZtaS0+bXNydy5rdm1pX21h
c2suaGlnaDsKKwkJcmV0dXJuIGt2bWkgPyB2Y3B1LT5hcmNoLmt2bWktPm1zcncua3ZtaV9tYXNr
LmhpZ2ggOgorCQkJICAgICAgdmNwdS0+YXJjaC5rdm1pLT5tc3J3Lmt2bV9tYXNrLmhpZ2g7CiAJ
fQogCiAJcmV0dXJuIE5VTEw7CiB9CiAKLXN0YXRpYyBib29sIHRlc3RfbXNyX21hc2soc3RydWN0
IGt2bV92Y3B1ICp2Y3B1LCB1bnNpZ25lZCBpbnQgbXNyKQorc3RhdGljIGJvb2wgdGVzdF9tc3Jf
bWFzayhzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsIHVuc2lnbmVkIGludCBtc3IsIGJvb2wga3ZtaSkK
IHsKLQl1bnNpZ25lZCBsb25nICptYXNrID0gbXNyX21hc2sodmNwdSwgJm1zcik7CisJdW5zaWdu
ZWQgbG9uZyAqbWFzayA9IG1zcl9tYXNrKHZjcHUsICZtc3IsIGt2bWkpOwogCiAJaWYgKCFtYXNr
KQogCQlyZXR1cm4gZmFsc2U7CkBAIC00NDcsOSArNDUwLDI3IEBAIHN0YXRpYyBib29sIHRlc3Rf
bXNyX21hc2soc3RydWN0IGt2bV92Y3B1ICp2Y3B1LCB1bnNpZ25lZCBpbnQgbXNyKQogCXJldHVy
biAhIXRlc3RfYml0KG1zciwgbWFzayk7CiB9CiAKLXN0YXRpYyBib29sIG1zcl9jb250cm9sKHN0
cnVjdCBrdm1fdmNwdSAqdmNwdSwgdW5zaWduZWQgaW50IG1zciwgYm9vbCBlbmFibGUpCisvKgor
ICogUmV0dXJucyB0cnVlIGlmIG9uZSBzaWRlIChrdm0gb3Iga3ZtaSkgdHJpZXMgdG8gZGlzYWJs
ZSB0aGUgTVNSIHdyaXRlCisgKiBpbnRlcmNlcHRpb24gd2hpbGUgdGhlIG90aGVyIHNpZGUgaXMg
c3RpbGwgdHJhY2tpbmcgaXQuCisgKi8KK2Jvb2wga3ZtaV9tb25pdG9yX21zcndfaW50ZXJjZXB0
KHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwgdTMyIG1zciwgYm9vbCBlbmFibGUpCiB7Ci0JdW5zaWdu
ZWQgbG9uZyAqbWFzayA9IG1zcl9tYXNrKHZjcHUsICZtc3IpOworCXN0cnVjdCBrdm1pX2ludGVy
Y2VwdGlvbiAqYXJjaF92Y3B1aTsKKworCWlmICghdmNwdSkKKwkJcmV0dXJuIGZhbHNlOworCisJ
YXJjaF92Y3B1aSA9IFJFQURfT05DRSh2Y3B1LT5hcmNoLmt2bWkpOworCisJcmV0dXJuIChhcmNo
X3ZjcHVpICYmIGFyY2hfdmNwdWktPm1zcncubW9uaXRvcl9mY3QodmNwdSwgbXNyLCBlbmFibGUp
KTsKK30KK0VYUE9SVF9TWU1CT0woa3ZtaV9tb25pdG9yX21zcndfaW50ZXJjZXB0KTsKKworc3Rh
dGljIGJvb2wgbXNyX2NvbnRyb2woc3RydWN0IGt2bV92Y3B1ICp2Y3B1LCB1bnNpZ25lZCBpbnQg
bXNyLCBib29sIGVuYWJsZSwKKwkJCWJvb2wga3ZtaSkKK3sKKwl1bnNpZ25lZCBsb25nICptYXNr
ID0gbXNyX21hc2sodmNwdSwgJm1zciwga3ZtaSk7CiAKIAlpZiAoIW1hc2spCiAJCXJldHVybiBm
YWxzZTsKQEAgLTQ2Miw2ICs0ODMsNjMgQEAgc3RhdGljIGJvb2wgbXNyX2NvbnRyb2woc3RydWN0
IGt2bV92Y3B1ICp2Y3B1LCB1bnNpZ25lZCBpbnQgbXNyLCBib29sIGVuYWJsZSkKIAlyZXR1cm4g
dHJ1ZTsKIH0KIAorc3RhdGljIGJvb2wgbXNyX2ludGVyY2VwdGVkX2J5X2t2bWkoc3RydWN0IGt2
bV92Y3B1ICp2Y3B1LCB1MzIgbXNyKQoreworCXJldHVybiB0ZXN0X21zcl9tYXNrKHZjcHUsIG1z
ciwgdHJ1ZSk7Cit9CisKK3N0YXRpYyBib29sIG1zcl9pbnRlcmNlcHRlZF9ieV9rdm0oc3RydWN0
IGt2bV92Y3B1ICp2Y3B1LCB1MzIgbXNyKQoreworCXJldHVybiB0ZXN0X21zcl9tYXNrKHZjcHUs
IG1zciwgZmFsc2UpOworfQorCitzdGF0aWMgdm9pZCByZWNvcmRfbXNyX2ludGVyY2VwdF9zdGF0
dXNfZm9yX2t2bWkoc3RydWN0IGt2bV92Y3B1ICp2Y3B1LCB1MzIgbXNyLAorCQkJCQkJIGJvb2wg
ZW5hYmxlKQoreworCW1zcl9jb250cm9sKHZjcHUsIG1zciwgZW5hYmxlLCB0cnVlKTsKK30KKwor
c3RhdGljIHZvaWQgcmVjb3JkX21zcl9pbnRlcmNlcHRfc3RhdHVzX2Zvcl9rdm0oc3RydWN0IGt2
bV92Y3B1ICp2Y3B1LCB1MzIgbXNyLAorCQkJCQkJYm9vbCBlbmFibGUpCit7CisJbXNyX2NvbnRy
b2wodmNwdSwgbXNyLCBlbmFibGUsIGZhbHNlKTsKK30KKworc3RhdGljIGJvb2wgbW9uaXRvcl9t
c3J3X2ZjdF9rdm1pKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwgdTMyIG1zciwgYm9vbCBlbmFibGUp
Cit7CisJYm9vbCByZXQgPSBmYWxzZTsKKworCWlmIChlbmFibGUpIHsKKwkJaWYgKGt2bV94ODZf
b3BzLm1zcl93cml0ZV9pbnRlcmNlcHRlZCh2Y3B1LCBtc3IpKQorCQkJcmVjb3JkX21zcl9pbnRl
cmNlcHRfc3RhdHVzX2Zvcl9rdm0odmNwdSwgbXNyLCB0cnVlKTsKKwl9IGVsc2UgeworCQlpZiAo
dW5saWtlbHkoIW1zcl9pbnRlcmNlcHRlZF9ieV9rdm1pKHZjcHUsIG1zcikpKQorCQkJcmV0ID0g
dHJ1ZTsKKworCQlpZiAobXNyX2ludGVyY2VwdGVkX2J5X2t2bSh2Y3B1LCBtc3IpKQorCQkJcmV0
ID0gdHJ1ZTsKKwl9CisKKwlyZWNvcmRfbXNyX2ludGVyY2VwdF9zdGF0dXNfZm9yX2t2bWkodmNw
dSwgbXNyLCBlbmFibGUpOworCisJcmV0dXJuIHJldDsKK30KKworc3RhdGljIGJvb2wgbW9uaXRv
cl9tc3J3X2ZjdF9rdm0oc3RydWN0IGt2bV92Y3B1ICp2Y3B1LCB1MzIgbXNyLCBib29sIGVuYWJs
ZSkKK3sKKwlib29sIHJldCA9IGZhbHNlOworCisJaWYgKCEobXNyX2ludGVyY2VwdGVkX2J5X2t2
bWkodmNwdSwgbXNyKSkpCisJCXJldHVybiBmYWxzZTsKKworCWlmICghZW5hYmxlKQorCQlyZXQg
PSB0cnVlOworCisJcmVjb3JkX21zcl9pbnRlcmNlcHRfc3RhdHVzX2Zvcl9rdm0odmNwdSwgbXNy
LCBlbmFibGUpOworCisJcmV0dXJuIHJldDsKK30KKwogc3RhdGljIHVuc2lnbmVkIGludCBtc3Jf
bWFza190b19iYXNlKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwgdW5zaWduZWQgbG9uZyAqbWFzaykK
IHsKIAlpZiAobWFzayA9PSB2Y3B1LT5hcmNoLmt2bWktPm1zcncua3ZtaV9tYXNrLmhpZ2gpCkBA
IC00NzAsOCArNTQ4LDE2IEBAIHN0YXRpYyB1bnNpZ25lZCBpbnQgbXNyX21hc2tfdG9fYmFzZShz
dHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsIHVuc2lnbmVkIGxvbmcgKm1hc2spCiAJcmV0dXJuIDA7CiB9
CiAKLXN0YXRpYyB2b2lkIGt2bWlfYXJjaF9kaXNhYmxlX21zcl9pbnRlcmNlcHQoc3RydWN0IGt2
bV92Y3B1ICp2Y3B1LAotCQkJCQkgICAgdW5zaWduZWQgbG9uZyAqbWFzaykKK3N0YXRpYyB2b2lk
IGt2bWlfY29udHJvbF9tc3J3X2ludGVyY2VwdChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsIHUzMiBt
c3IsCisJCQkJCWJvb2wgZW5hYmxlKQoreworCXZjcHUtPmFyY2gua3ZtaS0+bXNydy5tb25pdG9y
X2ZjdCA9IG1vbml0b3JfbXNyd19mY3Rfa3ZtaTsKKwlrdm1feDg2X29wcy5jb250cm9sX21zcl9p
bnRlcmNlcHQodmNwdSwgbXNyLCBNU1JfVFlQRV9XLCBlbmFibGUpOworCXZjcHUtPmFyY2gua3Zt
aS0+bXNydy5tb25pdG9yX2ZjdCA9IG1vbml0b3JfbXNyd19mY3Rfa3ZtOworfQorCitzdGF0aWMg
dm9pZCBrdm1pX2FyY2hfZGlzYWJsZV9tc3J3X2ludGVyY2VwdChzdHJ1Y3Qga3ZtX3ZjcHUgKnZj
cHUsCisJCQkJCSAgICAgdW5zaWduZWQgbG9uZyAqbWFzaykKIHsKIAl1bnNpZ25lZCBpbnQgbXNy
X2Jhc2UgPSBtc3JfbWFza190b19iYXNlKHZjcHUsIG1hc2spOwogCWludCBvZmZzZXQgPSAtMTsK
QEAgLTQ4Miw4ICs1NjgsNyBAQCBzdGF0aWMgdm9pZCBrdm1pX2FyY2hfZGlzYWJsZV9tc3JfaW50
ZXJjZXB0KHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwKIAkJaWYgKG9mZnNldCA+PSBLVk1JX05VTV9N
U1IpCiAJCQlicmVhazsKIAotCQlrdm1feDg2X29wcy5jb250cm9sX21zcl9pbnRlcmNlcHQodmNw
dSwgbXNyX2Jhc2UgKyBvZmZzZXQsCi0JCQkJCQkgICBNU1JfVFlQRV9XLCBmYWxzZSk7CisJCWt2
bWlfY29udHJvbF9tc3J3X2ludGVyY2VwdCh2Y3B1LCBtc3JfYmFzZSArIG9mZnNldCwgZmFsc2Up
OwogCX0KIAogCWJpdG1hcF96ZXJvKG1hc2ssIEtWTUlfTlVNX01TUik7CkBAIC01MzUsOCArNjIw
LDggQEAgc3RhdGljIHZvaWQga3ZtaV9hcmNoX3Jlc3RvcmVfaW50ZXJjZXB0aW9uKHN0cnVjdCBr
dm1fdmNwdSAqdmNwdSkKIAlrdm1pX2FyY2hfZGlzYWJsZV9icF9pbnRlcmNlcHQodmNwdSk7CiAJ
a3ZtaV9hcmNoX2Rpc2FibGVfY3Izd19pbnRlcmNlcHQodmNwdSk7CiAJa3ZtaV9hcmNoX2Rpc2Fi
bGVfZGVzY19pbnRlcmNlcHQodmNwdSk7Ci0Ja3ZtaV9hcmNoX2Rpc2FibGVfbXNyX2ludGVyY2Vw
dCh2Y3B1LCBhcmNoX3ZjcHVpLT5tc3J3Lmt2bWlfbWFzay5sb3cpOwotCWt2bWlfYXJjaF9kaXNh
YmxlX21zcl9pbnRlcmNlcHQodmNwdSwgYXJjaF92Y3B1aS0+bXNydy5rdm1pX21hc2suaGlnaCk7
CisJa3ZtaV9hcmNoX2Rpc2FibGVfbXNyd19pbnRlcmNlcHQodmNwdSwgYXJjaF92Y3B1aS0+bXNy
dy5rdm1pX21hc2subG93KTsKKwlrdm1pX2FyY2hfZGlzYWJsZV9tc3J3X2ludGVyY2VwdCh2Y3B1
LCBhcmNoX3ZjcHVpLT5tc3J3Lmt2bWlfbWFzay5oaWdoKTsKIH0KIAogYm9vbCBrdm1pX2FyY2hf
Y2xlYW5fdXBfaW50ZXJjZXB0aW9uKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSkKQEAgLTU2MywxMiAr
NjQ4LDE0IEBAIGJvb2wga3ZtaV9hcmNoX3ZjcHVfYWxsb2NfaW50ZXJjZXB0aW9uKHN0cnVjdCBr
dm1fdmNwdSAqdmNwdSkKIAlhcmNoX3ZjcHVpLT5icmVha3BvaW50Lm1vbml0b3JfZmN0ID0gbW9u
aXRvcl9icF9mY3Rfa3ZtOwogCWFyY2hfdmNwdWktPmNyM3cubW9uaXRvcl9mY3QgPSBtb25pdG9y
X2NyM3dfZmN0X2t2bTsKIAlhcmNoX3ZjcHVpLT5kZXNjcmlwdG9yLm1vbml0b3JfZmN0ID0gbW9u
aXRvcl9kZXNjX2ZjdF9rdm07CisJYXJjaF92Y3B1aS0+bXNydy5tb25pdG9yX2ZjdCA9IG1vbml0
b3JfbXNyd19mY3Rfa3ZtOwogCiAJLyoKIAkgKiBwYWlyZWQgd2l0aDoKIAkgKiAgLSBrdm1pX21v
bml0b3JfYnBfaW50ZXJjZXB0KCkKIAkgKiAgLSBrdm1pX21vbml0b3JfY3Izd19pbnRlcmNlcHQo
KQogCSAqICAtIGt2bWlfbW9uaXRvcl9kZXNjX2ludGVyY2VwdCgpCisJICogIC0ga3ZtaV9tb25p
dG9yX21zcndfaW50ZXJjZXB0KCkKIAkgKi8KIAlzbXBfd21iKCk7CiAJV1JJVEVfT05DRSh2Y3B1
LT5hcmNoLmt2bWksIGFyY2hfdmNwdWkpOwpAQCAtOTg2LDYgKzEwNzMsMjAgQEAgYm9vbCBrdm1p
X2Rlc2NyaXB0b3JfZXZlbnQoc3RydWN0IGt2bV92Y3B1ICp2Y3B1LCB1OCBkZXNjcmlwdG9yLCBi
b29sIHdyaXRlKQogfQogRVhQT1JUX1NZTUJPTChrdm1pX2Rlc2NyaXB0b3JfZXZlbnQpOwogCiti
b29sIGt2bWlfbXNyd19pbnRlcmNlcHRfb3JpZ2luYXRvcihzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUp
Cit7CisJc3RydWN0IGt2bWlfaW50ZXJjZXB0aW9uICphcmNoX3ZjcHVpOworCisJaWYgKCF2Y3B1
KQorCQlyZXR1cm4gZmFsc2U7CisKKwlhcmNoX3ZjcHVpID0gUkVBRF9PTkNFKHZjcHUtPmFyY2gu
a3ZtaSk7CisKKwlyZXR1cm4gKGFyY2hfdmNwdWkgJiYKKwkJYXJjaF92Y3B1aS0+bXNydy5tb25p
dG9yX2ZjdCA9PSBtb25pdG9yX21zcndfZmN0X2t2bWkpOworfQorRVhQT1JUX1NZTUJPTChrdm1p
X21zcndfaW50ZXJjZXB0X29yaWdpbmF0b3IpOworCiBpbnQga3ZtaV9hcmNoX2NtZF92Y3B1X2Nv
bnRyb2xfbXNyKHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwKIAkJCQkgICBjb25zdCBzdHJ1Y3Qga3Zt
aV92Y3B1X2NvbnRyb2xfbXNyICpyZXEpCiB7CkBAIC05OTUsOSArMTA5Niw3IEBAIGludCBrdm1p
X2FyY2hfY21kX3ZjcHVfY29udHJvbF9tc3Ioc3RydWN0IGt2bV92Y3B1ICp2Y3B1LAogCWlmICgh
a3ZtaV9tc3JfdmFsaWQocmVxLT5tc3IpKQogCQlyZXR1cm4gLUtWTV9FSU5WQUw7CiAKLQlrdm1f
eDg2X29wcy5jb250cm9sX21zcl9pbnRlcmNlcHQodmNwdSwgcmVxLT5tc3IsIE1TUl9UWVBFX1cs
Ci0JCQkJCSAgcmVxLT5lbmFibGUgPT0gMSk7Ci0JbXNyX2NvbnRyb2wodmNwdSwgcmVxLT5tc3Is
IHJlcS0+ZW5hYmxlKTsKKwlrdm1pX2NvbnRyb2xfbXNyd19pbnRlcmNlcHQodmNwdSwgcmVxLT5t
c3IsIHJlcS0+ZW5hYmxlKTsKIAogCXJldHVybiAwOwogfQpAQCAtMTAzMyw3ICsxMTMyLDcgQEAg
c3RhdGljIGJvb2wgX19rdm1pX21zcl9ldmVudChzdHJ1Y3Qga3ZtX3ZjcHUgKnZjcHUsIHN0cnVj
dCBtc3JfZGF0YSAqbXNyKQogCXU2NCByZXRfdmFsdWUgPSBtc3ItPmRhdGE7CiAJdTMyIGFjdGlv
bjsKIAotCWlmICghdGVzdF9tc3JfbWFzayh2Y3B1LCBtc3ItPmluZGV4KSkKKwlpZiAoIXRlc3Rf
bXNyX21hc2sodmNwdSwgbXNyLT5pbmRleCwgdHJ1ZSkpCiAJCXJldHVybiB0cnVlOwogCWlmIChr
dm1feDg2X29wcy5nZXRfbXNyKHZjcHUsICZvbGRfbXNyKSkKIAkJcmV0dXJuIHRydWU7CmRpZmYg
LS1naXQgYS9hcmNoL3g4Ni9rdm0vc3ZtL3N2bS5jIGIvYXJjaC94ODYva3ZtL3N2bS9zdm0uYwpp
bmRleCAyMGY2OTA1YjQ1YWEuLjVjMmQ0YTBjM2QzMSAxMDA2NDQKLS0tIGEvYXJjaC94ODYva3Zt
L3N2bS9zdm0uYworKysgYi9hcmNoL3g4Ni9rdm0vc3ZtL3N2bS5jCkBAIC01OTIsNiArNTkyLDE3
IEBAIHN0YXRpYyB2b2lkIHNldF9tc3JfaW50ZXJjZXB0aW9uKHN0cnVjdCBrdm1fdmNwdSAqdmNw
dSwKIAl1bnNpZ25lZCBsb25nIHRtcDsKIAl1MzIgb2Zmc2V0OwogCisjaWZkZWYgQ09ORklHX0tW
TV9JTlRST1NQRUNUSU9OCisJaWYgKCh0eXBlICYgTVNSX1RZUEVfVykgJiYKKwkgICAga3ZtaV9t
b25pdG9yX21zcndfaW50ZXJjZXB0KHZjcHUsIG1zciwgIXZhbHVlKSkKKwkJdHlwZSAmPSB+TVNS
X1RZUEVfVzsKKworCS8qCisJICogQXZvaWQgdGhlIGJlbG93IHdhcm5pbmcgZm9yIGt2bWkgaW50
ZXJjZXB0ZWQgbXNycy4KKwkgKi8KKwlpZiAoIWt2bWlfbXNyd19pbnRlcmNlcHRfb3JpZ2luYXRv
cih2Y3B1KSkKKyNlbmRpZiAvKiBDT05GSUdfS1ZNX0lOVFJPU1BFQ1RJT04gKi8KKwogCS8qCiAJ
ICogSWYgdGhpcyB3YXJuaW5nIHRyaWdnZXJzIGV4dGVuZCB0aGUgZGlyZWN0X2FjY2Vzc19tc3Jz
IGxpc3QgYXQgdGhlCiAJICogYmVnaW5uaW5nIG9mIHRoZSBmaWxlCmRpZmYgLS1naXQgYS9hcmNo
L3g4Ni9rdm0vdm14L3ZteC5jIGIvYXJjaC94ODYva3ZtL3ZteC92bXguYwppbmRleCA4ZDM5NmEy
ZDIzMDkuLmY1NzU4N2RkYjNiZSAxMDA2NDQKLS0tIGEvYXJjaC94ODYva3ZtL3ZteC92bXguYwor
KysgYi9hcmNoL3g4Ni9rdm0vdm14L3ZteC5jCkBAIC0zNzUyLDYgKzM3NTIsMTIgQEAgc3RhdGlj
IF9fYWx3YXlzX2lubGluZSB2b2lkIHZteF9kaXNhYmxlX2ludGVyY2VwdF9mb3JfbXNyKHN0cnVj
dCBrdm1fdmNwdSAqdmNwdSwKIAlpZiAoIWNwdV9oYXNfdm14X21zcl9iaXRtYXAoKSkKIAkJcmV0
dXJuOwogCisjaWZkZWYgQ09ORklHX0tWTV9JTlRST1NQRUNUSU9OCisJaWYgKCh0eXBlICYgTVNS
X1RZUEVfVykgJiYKKwkgICAga3ZtaV9tb25pdG9yX21zcndfaW50ZXJjZXB0KHZjcHUsIG1zciwg
ZmFsc2UpKQorCQl0eXBlICY9IH5NU1JfVFlQRV9XOworI2VuZGlmIC8qIENPTkZJR19LVk1fSU5U
Uk9TUEVDVElPTiAqLworCiAJaWYgKHN0YXRpY19icmFuY2hfdW5saWtlbHkoJmVuYWJsZV9ldm1j
cykpCiAJCWV2bWNzX3RvdWNoX21zcl9iaXRtYXAoKTsKIApAQCAtMzc5MSw2ICszNzk3LDExIEBA
IHN0YXRpYyBfX2Fsd2F5c19pbmxpbmUgdm9pZCB2bXhfZW5hYmxlX2ludGVyY2VwdF9mb3JfbXNy
KHN0cnVjdCBrdm1fdmNwdSAqdmNwdSwKIAlpZiAoIWNwdV9oYXNfdm14X21zcl9iaXRtYXAoKSkK
IAkJcmV0dXJuOwogCisjaWZkZWYgQ09ORklHX0tWTV9JTlRST1NQRUNUSU9OCisJaWYgKHR5cGUg
JiBNU1JfVFlQRV9XKQorCQlrdm1pX21vbml0b3JfbXNyd19pbnRlcmNlcHQodmNwdSwgbXNyLCB0
cnVlKTsKKyNlbmRpZiAvKiBDT05GSUdfS1ZNX0lOVFJPU1BFQ1RJT04gKi8KKwogCWlmIChzdGF0
aWNfYnJhbmNoX3VubGlrZWx5KCZlbmFibGVfZXZtY3MpKQogCQlldm1jc190b3VjaF9tc3JfYml0
bWFwKCk7CiAKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18K
VmlydHVhbGl6YXRpb24gbWFpbGluZyBsaXN0ClZpcnR1YWxpemF0aW9uQGxpc3RzLmxpbnV4LWZv
dW5kYXRpb24ub3JnCmh0dHBzOi8vbGlzdHMubGludXhmb3VuZGF0aW9uLm9yZy9tYWlsbWFuL2xp
c3RpbmZvL3ZpcnR1YWxpemF0aW9u
