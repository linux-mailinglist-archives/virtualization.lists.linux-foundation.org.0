Return-Path: <virtualization-bounces@lists.linux-foundation.org>
X-Original-To: lists.virtualization@lfdr.de
Delivered-To: lists.virtualization@lfdr.de
Received: from hemlock.osuosl.org (smtp2.osuosl.org [140.211.166.133])
	by mail.lfdr.de (Postfix) with ESMTPS id 3A7F12FB451
	for <lists.virtualization@lfdr.de>; Tue, 19 Jan 2021 09:39:31 +0100 (CET)
Received: from localhost (localhost [127.0.0.1])
	by hemlock.osuosl.org (Postfix) with ESMTP id 7DA6E870DA;
	Tue, 19 Jan 2021 08:39:29 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from hemlock.osuosl.org ([127.0.0.1])
	by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id M5+1qILcxacC; Tue, 19 Jan 2021 08:39:25 +0000 (UTC)
Received: from lists.linuxfoundation.org (lf-lists.osuosl.org [140.211.9.56])
	by hemlock.osuosl.org (Postfix) with ESMTP id 626AD870D6;
	Tue, 19 Jan 2021 08:39:24 +0000 (UTC)
Received: from lf-lists.osuosl.org (localhost [127.0.0.1])
	by lists.linuxfoundation.org (Postfix) with ESMTP id 3E0AAC013A;
	Tue, 19 Jan 2021 08:39:24 +0000 (UTC)
X-Original-To: virtualization@lists.linux-foundation.org
Delivered-To: virtualization@lists.linuxfoundation.org
Received: from fraxinus.osuosl.org (smtp4.osuosl.org [140.211.166.137])
 by lists.linuxfoundation.org (Postfix) with ESMTP id F0459C013A
 for <virtualization@lists.linux-foundation.org>;
 Tue, 19 Jan 2021 08:39:21 +0000 (UTC)
Received: from localhost (localhost [127.0.0.1])
 by fraxinus.osuosl.org (Postfix) with ESMTP id ECECC8480D
 for <virtualization@lists.linux-foundation.org>;
 Tue, 19 Jan 2021 08:39:21 +0000 (UTC)
X-Virus-Scanned: amavisd-new at osuosl.org
Received: from fraxinus.osuosl.org ([127.0.0.1])
 by localhost (.osuosl.org [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id qju4EZN-J4j7
 for <virtualization@lists.linux-foundation.org>;
 Tue, 19 Jan 2021 08:39:18 +0000 (UTC)
X-Greylist: domain auto-whitelisted by SQLgrey-1.7.6
Received: from mga18.intel.com (mga18.intel.com [134.134.136.126])
 by fraxinus.osuosl.org (Postfix) with ESMTPS id 6FD2185CAA
 for <virtualization@lists.linux-foundation.org>;
 Tue, 19 Jan 2021 08:39:18 +0000 (UTC)
IronPort-SDR: eoItw9SNKHuHdhWtRuIc30lwlN7Smug9aALoGnMSD1MJpvsjRZ+SBX88r9bgBEvfphFHmq5FHO
 GLKPe1w4xmZw==
X-IronPort-AV: E=McAfee;i="6000,8403,9868"; a="166562891"
X-IronPort-AV: E=Sophos;i="5.79,358,1602572400"; d="scan'208";a="166562891"
Received: from fmsmga002.fm.intel.com ([10.253.24.26])
 by orsmga106.jf.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 19 Jan 2021 00:39:13 -0800
IronPort-SDR: PX4KVZbTVDarbY0UUDN5Z0f9Mq2WrOByWI9NiYpvwei8CizIqDFlyAvN9TlcwY7QS0e4PMmLsC
 gcOAeguqcuqQ==
X-IronPort-AV: E=Sophos;i="5.79,358,1602572400"; d="scan'208";a="402291662"
Received: from vkasired-desk2.fm.intel.com ([10.105.128.127])
 by fmsmga002-auth.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384;
 19 Jan 2021 00:39:13 -0800
From: Vivek Kasireddy <vivek.kasireddy@intel.com>
To: virtualization@lists.linux-foundation.org
Subject: [RFC 1/3] virtio: Introduce Vdmabuf driver
Date: Tue, 19 Jan 2021 00:28:10 -0800
Message-Id: <20210119082812.822291-2-vivek.kasireddy@intel.com>
X-Mailer: git-send-email 2.26.2
In-Reply-To: <20210119082812.822291-1-vivek.kasireddy@intel.com>
References: <20210119082812.822291-1-vivek.kasireddy@intel.com>
MIME-Version: 1.0
Cc: dongwon.kim@intel.com
X-BeenThere: virtualization@lists.linux-foundation.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Linux virtualization <virtualization.lists.linux-foundation.org>
List-Unsubscribe: <https://lists.linuxfoundation.org/mailman/options/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=unsubscribe>
List-Archive: <http://lists.linuxfoundation.org/pipermail/virtualization/>
List-Post: <mailto:virtualization@lists.linux-foundation.org>
List-Help: <mailto:virtualization-request@lists.linux-foundation.org?subject=help>
List-Subscribe: <https://lists.linuxfoundation.org/mailman/listinfo/virtualization>, 
 <mailto:virtualization-request@lists.linux-foundation.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Errors-To: virtualization-bounces@lists.linux-foundation.org
Sender: "Virtualization" <virtualization-bounces@lists.linux-foundation.org>

VGhpcyBkcml2ZXIgInRyYW5zZmVycyIgYSBkbWFidWYgY3JlYXRlZCBvbiB0aGUgR3Vlc3QgdG8g
dGhlIEhvc3QuCkEgY29tbW9uIHVzZS1jYXNlIGZvciBzdWNoIGEgdHJhbnNmZXIgaW5jbHVkZXMg
c2hhcmluZyB0aGUgc2Nhbm91dApidWZmZXIgY3JlYXRlZCBieSBhIGRpc3BsYXkgc2VydmVyIG9y
IGEgY29tcG9zaXRvciBydW5uaW5nIGluIHRoZQpHdWVzdCB3aXRoIFFlbXUgVUkgLS0gcnVubmlu
ZyBvbiB0aGUgSG9zdC4KClRoZSAidHJhbnNmZXIiIGlzIGFjY29tcGxpc2hlZCBieSBzaGFyaW5n
IHRoZSBQRk5zIG9mIGFsbCB0aGUgcGFnZXMKYXNzb2NpYXRlZCB3aXRoIHRoZSBkbWFidWYgYW5k
IGhhdmluZyBhIG5ldyBkbWFidWYgY3JlYXRlZCBvbiB0aGUKSG9zdCB0aGF0IGlzIGJhY2tlZCB1
cCBieSB0aGUgcGFnZXMgbWFwcGVkIGZyb20gdGhlIEd1ZXN0LgoKU2lnbmVkLW9mZi1ieTogRG9u
Z3dvbiBLaW0gPGRvbmd3b24ua2ltQGludGVsLmNvbT4KU2lnbmVkLW9mZi1ieTogVml2ZWsgS2Fz
aXJlZGR5IDx2aXZlay5rYXNpcmVkZHlAaW50ZWwuY29tPgotLS0KIGRyaXZlcnMvdmlydGlvL0tj
b25maWcgICAgICAgICAgICAgIHwgICA4ICsKIGRyaXZlcnMvdmlydGlvL01ha2VmaWxlICAgICAg
ICAgICAgIHwgICAxICsKIGRyaXZlcnMvdmlydGlvL3ZpcnRpb192ZG1hYnVmLmMgICAgIHwgOTcz
ICsrKysrKysrKysrKysrKysrKysrKysrKysrKysKIGluY2x1ZGUvbGludXgvdmlydGlvX3ZkbWFi
dWYuaCAgICAgIHwgMjcxICsrKysrKysrCiBpbmNsdWRlL3VhcGkvbGludXgvdmlydGlvX2lkcy5o
ICAgICB8ICAgMSArCiBpbmNsdWRlL3VhcGkvbGludXgvdmlydGlvX3ZkbWFidWYuaCB8ICA5OSAr
KysKIDYgZmlsZXMgY2hhbmdlZCwgMTM1MyBpbnNlcnRpb25zKCspCiBjcmVhdGUgbW9kZSAxMDA2
NDQgZHJpdmVycy92aXJ0aW8vdmlydGlvX3ZkbWFidWYuYwogY3JlYXRlIG1vZGUgMTAwNjQ0IGlu
Y2x1ZGUvbGludXgvdmlydGlvX3ZkbWFidWYuaAogY3JlYXRlIG1vZGUgMTAwNjQ0IGluY2x1ZGUv
dWFwaS9saW51eC92aXJ0aW9fdmRtYWJ1Zi5oCgpkaWZmIC0tZ2l0IGEvZHJpdmVycy92aXJ0aW8v
S2NvbmZpZyBiL2RyaXZlcnMvdmlydGlvL0tjb25maWcKaW5kZXggN2I0MTEzMGQzZjM1Li5lNTYz
YzEyZjcxMWUgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvdmlydGlvL0tjb25maWcKKysrIGIvZHJpdmVy
cy92aXJ0aW8vS2NvbmZpZwpAQCAtMTM5LDQgKzEzOSwxMiBAQCBjb25maWcgVklSVElPX0RNQV9T
SEFSRURfQlVGRkVSCiAJIFRoaXMgb3B0aW9uIGFkZHMgYSBmbGF2b3Igb2YgZG1hIGJ1ZmZlcnMg
dGhhdCBhcmUgYmFja2VkIGJ5CiAJIHZpcnRpbyByZXNvdXJjZXMuCiAKK2NvbmZpZyBWSVJUSU9f
VkRNQUJVRgorCWJvb2wgIkVuYWJsZXMgVmRtYWJ1ZiBkcml2ZXIgaW4gZ3Vlc3Qgb3MiCisJZGVm
YXVsdCBuCisJZGVwZW5kcyBvbiBWSVJUSU8KKwloZWxwCisJIFRoaXMgZHJpdmVyIHByb3ZpZGVz
IGEgd2F5IHRvIHNoYXJlIHRoZSBkbWFidWZzIGNyZWF0ZWQgaW4KKwkgdGhlIEd1ZXN0IHdpdGgg
dGhlIEhvc3QuCisKIGVuZGlmICMgVklSVElPX01FTlUKZGlmZiAtLWdpdCBhL2RyaXZlcnMvdmly
dGlvL01ha2VmaWxlIGIvZHJpdmVycy92aXJ0aW8vTWFrZWZpbGUKaW5kZXggNTkxZTZmNzJhYTU0
Li5iNGJiMDczODAwOWMgMTAwNjQ0Ci0tLSBhL2RyaXZlcnMvdmlydGlvL01ha2VmaWxlCisrKyBi
L2RyaXZlcnMvdmlydGlvL01ha2VmaWxlCkBAIC05LDMgKzksNCBAQCBvYmotJChDT05GSUdfVklS
VElPX0lOUFVUKSArPSB2aXJ0aW9faW5wdXQubwogb2JqLSQoQ09ORklHX1ZJUlRJT19WRFBBKSAr
PSB2aXJ0aW9fdmRwYS5vCiBvYmotJChDT05GSUdfVklSVElPX01FTSkgKz0gdmlydGlvX21lbS5v
CiBvYmotJChDT05GSUdfVklSVElPX0RNQV9TSEFSRURfQlVGRkVSKSArPSB2aXJ0aW9fZG1hX2J1
Zi5vCitvYmotJChDT05GSUdfVklSVElPX1ZETUFCVUYpICs9IHZpcnRpb192ZG1hYnVmLm8KZGlm
ZiAtLWdpdCBhL2RyaXZlcnMvdmlydGlvL3ZpcnRpb192ZG1hYnVmLmMgYi9kcml2ZXJzL3ZpcnRp
by92aXJ0aW9fdmRtYWJ1Zi5jCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAw
MC4uZTM3NzExNGMyYTJiCi0tLSAvZGV2L251bGwKKysrIGIvZHJpdmVycy92aXJ0aW8vdmlydGlv
X3ZkbWFidWYuYwpAQCAtMCwwICsxLDk3MyBAQAorLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6
IChNSVQgT1IgR1BMLTIuMCkKKworLyoKKyAqIENvcHlyaWdodCDCqSAyMDIxIEludGVsIENvcnBv
cmF0aW9uCisgKgorICogUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFy
Z2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEKKyAqIGNvcHkgb2YgdGhpcyBzb2Z0d2FyZSBh
bmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgIlNvZnR3YXJlIiksCisgKiB0
byBkZWFsIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0
aG91dCBsaW1pdGF0aW9uCisgKiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJn
ZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwKKyAqIGFuZC9vciBzZWxsIGNvcGll
cyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZQorICog
U29mdHdhcmUgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcg
Y29uZGl0aW9uczoKKyAqCisgKiBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBw
ZXJtaXNzaW9uIG5vdGljZSAoaW5jbHVkaW5nIHRoZSBuZXh0CisgKiBwYXJhZ3JhcGgpIHNoYWxs
IGJlIGluY2x1ZGVkIGluIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhl
CisgKiBTb2Z0d2FyZS4KKyAqCisgKiBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgIkFTIElTIiwg
V0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUgorICogSU1QTElFRCwgSU5D
TFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJ
VFksCisgKiBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VN
RU5ULiAgSU4gTk8gRVZFTlQgU0hBTEwKKyAqIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xE
RVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSCisgKiBMSUFCSUxJ
VFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwg
QVJJU0lORworICogRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdB
UkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUworICogSU4gVEhFIFNPRlRXQVJFLgorICoK
KyAqIEF1dGhvcnM6CisgKiAgICBEb25nd29uIEtpbSA8ZG9uZ3dvbi5raW1AaW50ZWwuY29tPgor
ICogICAgTWF0ZXVzeiBQb2xyb2xhIDxtYXRldXN6LnBvbHJvbGFAZ21haWwuY29tPgorICogICAg
Vml2ZWsgS2FzaXJlZGR5IDx2aXZlay5rYXNpcmVkZHlAaW50ZWwuY29tPgorICoKKyAqLworCisj
aW5jbHVkZSA8bGludXgvaW5pdC5oPgorI2luY2x1ZGUgPGxpbnV4L2tlcm5lbC5oPgorI2luY2x1
ZGUgPGxpbnV4L2Vycm5vLmg+CisjaW5jbHVkZSA8bGludXgvbW9kdWxlLmg+CisjaW5jbHVkZSA8
bGludXgvZGV2aWNlLmg+CisjaW5jbHVkZSA8bGludXgvdWFjY2Vzcy5oPgorI2luY2x1ZGUgPGxp
bnV4L21pc2NkZXZpY2UuaD4KKyNpbmNsdWRlIDxsaW51eC9kZWxheS5oPgorI2luY2x1ZGUgPGxp
bnV4L3JhbmRvbS5oPgorI2luY2x1ZGUgPGxpbnV4L3BvbGwuaD4KKyNpbmNsdWRlIDxsaW51eC9z
cGlubG9jay5oPgorI2luY2x1ZGUgPGxpbnV4L2RtYS1idWYuaD4KKyNpbmNsdWRlIDxsaW51eC92
aXJ0aW8uaD4KKyNpbmNsdWRlIDxsaW51eC92aXJ0aW9faWRzLmg+CisjaW5jbHVkZSA8bGludXgv
dmlydGlvX2NvbmZpZy5oPgorI2luY2x1ZGUgPGxpbnV4L3ZpcnRpb192ZG1hYnVmLmg+CisKKyNk
ZWZpbmUgVklSVElPX1ZETUFCVUZfTUFYX0lEIElOVF9NQVgKKyNkZWZpbmUgUkVGU19QRVJfUEFH
RSAoUEFHRV9TSVpFL3NpemVvZihsb25nKSkKKyNkZWZpbmUgTkVXX0JVRl9JRF9HRU4odm1pZCwg
Y250KSAoKCh2bWlkICYgMHhGRkZGRkZGRikgPDwgMzIpIHwgXAorCQkJCSAgICAoKGNudCkgJiAw
eEZGRkZGRkZGKSkKKworLyogb25lIGdsb2JhbCBkcnYgb2JqZWN0ICovCitzdGF0aWMgc3RydWN0
IHZpcnRpb192ZG1hYnVmX2luZm8gKmRydl9pbmZvOworCitzdHJ1Y3QgdmlydGlvX3ZkbWFidWYg
eworCS8qIHZpcnRpbyBkZXZpY2Ugc3RydWN0dXJlICovCisJc3RydWN0IHZpcnRpb19kZXZpY2Ug
KnZkZXY7CisKKwkvKiB2aXJ0dWFsIHF1ZXVlIGFycmF5ICovCisJc3RydWN0IHZpcnRxdWV1ZSAq
dnE7CisKKwkvKiBJRCBvZiBndWVzdCBPUyAqLworCXU2NCB2bWlkOworCisJLyogc3BpbiBsb2Nr
IHRoYXQgbmVlZHMgdG8gYmUgYWNxdWlyZWQgYmVmb3JlIGFjY2Vzc2luZworCSAqIHZpcnR1YWwg
cXVldWUKKwkgKi8KKwlzcGlubG9ja190IHZxX2xvY2s7CisJc3RydWN0IG11dGV4IHJ4X2xvY2s7
CisKKwkvKiB3b3JrcXVldWUgKi8KKwlzdHJ1Y3Qgd29ya3F1ZXVlX3N0cnVjdCAqd3E7CisJc3Ry
dWN0IHdvcmtfc3RydWN0IHJ4X3dvcms7CisJc3RydWN0IHZpcnRpb192ZG1hYnVmX2V2ZW50X3F1
ZXVlICpldnE7Cit9OworCitzdGF0aWMgdmlydGlvX3ZkbWFidWZfYnVmX2lkX3QgZ2V0X2J1Zl9p
ZCh2b2lkKQoreworCXN0cnVjdCB2aXJ0aW9fdmRtYWJ1ZiAqdmRtYWJ1ZiA9IGRydl9pbmZvLT5w
cml2OworCXZpcnRpb192ZG1hYnVmX2J1Zl9pZF90IGJ1Zl9pZCA9IHswLCB7MCwgMH0gfTsKKwlz
dGF0aWMgaW50IGNvdW50ID0gMDsKKworCWNvdW50ID0gY291bnQgPCBWSVJUSU9fVkRNQUJVRl9N
QVhfSUQgPyBjb3VudCArIDEgOiAwOworCWJ1Zl9pZC5pZCA9IE5FV19CVUZfSURfR0VOKHZkbWFi
dWYtPnZtaWQsIGNvdW50KTsKKworCS8qIHJhbmRvbSBkYXRhIGVtYmVkZGVkIGluIHRoZSBpZCBm
b3Igc2VjdXJpdHkgKi8KKwlnZXRfcmFuZG9tX2J5dGVzKCZidWZfaWQucm5nX2tleVswXSwgOCk7
CisKKwlyZXR1cm4gYnVmX2lkOworfQorCisvKiBzaGFyaW5nIHBhZ2VzIGZvciBvcmlnaW5hbCBE
TUFCVUYgd2l0aCBIb3N0ICovCitzdGF0aWMgc3RydWN0IHZpcnRpb192ZG1hYnVmX3NoYXJlZF9w
YWdlcworKnZpcnRpb192ZG1hYnVmX3NoYXJlX2J1ZihzdHJ1Y3QgcGFnZSAqKnBhZ2VzLCBpbnQg
bmVudHMsCisJCQkgIGludCBmaXJzdF9vZnN0LCBpbnQgbGFzdF9sZW4pCit7CisJc3RydWN0IHZp
cnRpb192ZG1hYnVmX3NoYXJlZF9wYWdlcyAqcGFnZXNfaW5mbzsKKwlpbnQgaTsKKwlpbnQgbl9s
MnJlZnMgPSBuZW50cy9SRUZTX1BFUl9QQUdFICsKKwkJICAgICAgICgobmVudHMgJSBSRUZTX1BF
Ul9QQUdFKSA/IDEgOiAwKTsKKworCXBhZ2VzX2luZm8gPSBrdmNhbGxvYygxLCBzaXplb2YoKnBh
Z2VzX2luZm8pLCBHRlBfS0VSTkVMKTsKKwlpZiAoIXBhZ2VzX2luZm8pCisJCXJldHVybiBOVUxM
OworCisJcGFnZXNfaW5mby0+cGFnZXMgPSBwYWdlczsKKwlwYWdlc19pbmZvLT5uZW50cyA9IG5l
bnRzOworCXBhZ2VzX2luZm8tPmZpcnN0X29mc3QgPSBmaXJzdF9vZnN0OworCXBhZ2VzX2luZm8t
Pmxhc3RfbGVuID0gbGFzdF9sZW47CisJcGFnZXNfaW5mby0+bDNyZWZzID0gKGdwYV90ICopX19n
ZXRfZnJlZV9wYWdlKEdGUF9LRVJORUwpOworCisJaWYgKCFwYWdlc19pbmZvLT5sM3JlZnMpIHsK
KwkJa3ZmcmVlKHBhZ2VzX2luZm8pOworCQlyZXR1cm4gTlVMTDsKKwl9CisKKwlwYWdlc19pbmZv
LT5sMnJlZnMgPSAoZ3BhX3QgKiopX19nZXRfZnJlZV9wYWdlcyhHRlBfS0VSTkVMLAorCQkJCQln
ZXRfb3JkZXIobl9sMnJlZnMgKiBQQUdFX1NJWkUpKTsKKworCWlmICghcGFnZXNfaW5mby0+bDJy
ZWZzKSB7CisJCWZyZWVfcGFnZSgoZ3BhX3QpcGFnZXNfaW5mby0+bDNyZWZzKTsKKwkJa3ZmcmVl
KHBhZ2VzX2luZm8pOworCQlyZXR1cm4gTlVMTDsKKwl9CisKKwkvKiBTaGFyZSBwaHlzaWNhbCBh
ZGRyZXNzIG9mIHBhZ2VzICovCisJZm9yIChpID0gMDsgaSA8IG5lbnRzOyBpKyspCisJCXBhZ2Vz
X2luZm8tPmwycmVmc1tpXSA9IChncGFfdCAqKXBhZ2VfdG9fcGh5cyhwYWdlc1tpXSk7CisKKwlm
b3IgKGkgPSAwOyBpIDwgbl9sMnJlZnM7IGkrKykKKwkJcGFnZXNfaW5mby0+bDNyZWZzW2ldID0K
KwkJCXZpcnRfdG9fcGh5cygodm9pZCAqKXBhZ2VzX2luZm8tPmwycmVmcyArCisJCQkJICAgICBp
ICogUEFHRV9TSVpFKTsKKworCXBhZ2VzX2luZm8tPnJlZiA9IChncGFfdCl2aXJ0X3RvX3BoeXMo
cGFnZXNfaW5mby0+bDNyZWZzKTsKKworCXJldHVybiBwYWdlc19pbmZvOworfQorCisvKiBzdG9w
IHNoYXJpbmcgcGFnZXMgKi8KK3N0YXRpYyB2b2lkCit2aXJ0aW9fdmRtYWJ1Zl9mcmVlX2J1Zihz
dHJ1Y3QgdmlydGlvX3ZkbWFidWZfc2hhcmVkX3BhZ2VzICpwYWdlc19pbmZvKQoreworCWludCBu
X2wycmVmcyA9IChwYWdlc19pbmZvLT5uZW50cy9SRUZTX1BFUl9QQUdFICsKKwkJICAgICAgICgo
cGFnZXNfaW5mby0+bmVudHMgJSBSRUZTX1BFUl9QQUdFKSA/IDEgOiAwKSk7CisKKwlmcmVlX3Bh
Z2VzKChncGFfdClwYWdlc19pbmZvLT5sMnJlZnMsIGdldF9vcmRlcihuX2wycmVmcyAqIFBBR0Vf
U0laRSkpOworCWZyZWVfcGFnZSgoZ3BhX3QpcGFnZXNfaW5mby0+bDNyZWZzKTsKKworCWt2ZnJl
ZShwYWdlc19pbmZvKTsKK30KKworc3RhdGljIGludCBzZW5kX21zZ190b19ob3N0KGVudW0gdmly
dGlvX3ZkbWFidWZfY21kIGNtZCwgaW50ICpvcCkKK3sKKwlzdHJ1Y3QgdmlydGlvX3ZkbWFidWYg
KnZkbWFidWYgPSBkcnZfaW5mby0+cHJpdjsKKwlzdHJ1Y3QgdmlydGlvX3ZkbWFidWZfbXNnICpt
c2c7CisJc3RydWN0IHNjYXR0ZXJsaXN0IHNnOworCXVuc2lnbmVkIGxvbmcgZmxhZ3M7CisJaW50
IGksIHR4X3NpemUsIHJldCA9IDA7CisKKwlzd2l0Y2ggKGNtZCkgeworCWNhc2UgVklSVElPX1ZE
TUFCVUZfQ01EX05FRURfVk1JRDoKKwkJbXNnID0ga3ZjYWxsb2MoMSwgc2l6ZW9mKHN0cnVjdCB2
aXJ0aW9fdmRtYWJ1Zl9tc2cpLAorCQkJICAgICAgIEdGUF9LRVJORUwpOworCQlpZiAoIW1zZykK
KwkJCXJldHVybiAtRU5PTUVNOworCisJCWlmIChvcCkKKwkJCWZvciAoaSA9IDA7IGkgPCA0OyBp
KyspCisJCQkJbXNnLT5vcFtpXSA9IG9wW2ldOworCisJCXR4X3NpemUgPSBzaXplb2Yoc3RydWN0
IHZpcnRpb192ZG1hYnVmX21zZyk7CisJCWJyZWFrOworCisJY2FzZSBWSVJUSU9fVkRNQUJVRl9D
TURfRVhQT1JUOgorCQltc2cgPSBrdmNhbGxvYygxLCBzaXplb2Yoc3RydWN0IHZpcnRpb192ZG1h
YnVmX21zZyksCisJCQkgICAgICAgR0ZQX0tFUk5FTCk7CisJCWlmICghbXNnKQorCQkJcmV0dXJu
IC1FTk9NRU07CisKKwkJbWVtY3B5KCZtc2ctPm9wWzBdLCAmb3BbMF0sIDkgKiBzaXplb2YoaW50
KSArIG9wWzldKTsKKwkJdHhfc2l6ZSA9IHNpemVvZihzdHJ1Y3QgdmlydGlvX3ZkbWFidWZfbXNn
KTsKKwkJYnJlYWs7CisKKwlkZWZhdWx0OgorCQkvKiBubyBjb21tYW5kIGZvdW5kICovCisJCXJl
dHVybiAtRUlOVkFMOworCX0KKworCW1zZy0+Y21kID0gY21kOworCXNnX2luaXRfb25lKCZzZywg
bXNnLCB0eF9zaXplKTsKKworCXNwaW5fbG9ja19pcnFzYXZlKCZ2ZG1hYnVmLT52cV9sb2NrLCBm
bGFncyk7CisKKwlyZXQgPSB2aXJ0cXVldWVfYWRkX2luYnVmKHZkbWFidWYtPnZxLCAmc2csIDEs
IG1zZywgR0ZQX0tFUk5FTCk7CisJaWYgKHJldCkKKwkJZ290byBlcnI7CQorCisJcmV0ID0gdmly
dHF1ZXVlX2tpY2sodmRtYWJ1Zi0+dnEpOworZXJyOgorCXNwaW5fdW5sb2NrX2lycXJlc3RvcmUo
JnZkbWFidWYtPnZxX2xvY2ssIGZsYWdzKTsKKworCXJldHVybiByZXQ7Cit9CisKK3N0YXRpYyBp
bnQgYWRkX2V2ZW50X2J1Zl9yZWwoc3RydWN0IHZpcnRpb192ZG1hYnVmX2J1ZiAqYnVmX2luZm8p
Cit7CisJc3RydWN0IHZpcnRpb192ZG1hYnVmICp2ZG1hYnVmID0gZHJ2X2luZm8tPnByaXY7CisJ
c3RydWN0IHZpcnRpb192ZG1hYnVmX2V2ZW50ICplX29sZGVzdCwgKmVfbmV3OworCXN0cnVjdCB2
aXJ0aW9fdmRtYWJ1Zl9ldmVudF9xdWV1ZSAqZXEgPSB2ZG1hYnVmLT5ldnE7CisJdW5zaWduZWQg
bG9uZyBpcnFmbGFnczsKKworCWVfbmV3ID0ga3Z6YWxsb2Moc2l6ZW9mKCplX25ldyksIEdGUF9L
RVJORUwpOworCWlmICghZV9uZXcpCisJCXJldHVybiAtRU5PTUVNOworCisJZV9uZXctPmVfZGF0
YS5oZHIuYnVmX2lkID0gYnVmX2luZm8tPmJ1Zl9pZDsKKwllX25ldy0+ZV9kYXRhLmRhdGEgPSAo
dm9pZCAqKWJ1Zl9pbmZvLT5wcml2OworCWVfbmV3LT5lX2RhdGEuaGRyLnNpemUgPSBidWZfaW5m
by0+c3pfcHJpdjsKKworCXNwaW5fbG9ja19pcnFzYXZlKCZlcS0+ZV9sb2NrLCBpcnFmbGFncyk7
CisKKwkvKiBjaGVjayBjdXJyZW50IG51bWJlciBvZiBldmVudHMgYW5kIGlmIGl0IGhpdHMgdGhl
IG1heCBudW0gKDMyKQorCSAqIHRoZW4gcmVtb3ZlIHRoZSBvbGRlc3QgZXZlbnQgaW4gdGhlIGxp
c3QKKwkgKi8KKwlpZiAoZXEtPnBlbmRpbmcgPiAzMSkgeworCQllX29sZGVzdCA9IGxpc3RfZmly
c3RfZW50cnkoJmVxLT5lX2xpc3QsCisJCQkJCSAgICBzdHJ1Y3QgdmlydGlvX3ZkbWFidWZfZXZl
bnQsIGxpbmspOworCQlsaXN0X2RlbCgmZV9vbGRlc3QtPmxpbmspOworCQllcS0+cGVuZGluZy0t
OworCQlrdmZyZWUoZV9vbGRlc3QpOworCX0KKworCWxpc3RfYWRkX3RhaWwoJmVfbmV3LT5saW5r
LCAmZXEtPmVfbGlzdCk7CisKKwllcS0+cGVuZGluZysrOworCisJd2FrZV91cF9pbnRlcnJ1cHRp
YmxlKCZlcS0+ZV93YWl0KTsKKwlzcGluX3VubG9ja19pcnFyZXN0b3JlKCZlcS0+ZV9sb2NrLCBp
cnFmbGFncyk7CisKKwlyZXR1cm4gMDsKK30KKworc3RhdGljIHZvaWQgdmlydGlvX3ZkbWFidWZf
Y2xlYXJfYnVmKHN0cnVjdCB2aXJ0aW9fdmRtYWJ1Zl9idWYgKmV4cCkKK3sKKwkvKiBTdGFydCBj
bGVhbnVwIG9mIGJ1ZmZlciBpbiByZXZlcnNlIG9yZGVyIHRvIGV4cG9ydGluZyAqLworCXZpcnRp
b192ZG1hYnVmX2ZyZWVfYnVmKGV4cC0+cGFnZXNfaW5mbyk7CisKKwlkbWFfYnVmX3VubWFwX2F0
dGFjaG1lbnQoZXhwLT5hdHRhY2gsIGV4cC0+c2d0LAorCQkJCSBETUFfQklESVJFQ1RJT05BTCk7
CisKKwlpZiAoZXhwLT5kbWFfYnVmKSB7CisJCWRtYV9idWZfZGV0YWNoKGV4cC0+ZG1hX2J1Ziwg
ZXhwLT5hdHRhY2gpOworCQkvKiBjbG9zZSBjb25uZWN0aW9uIHRvIGRtYS1idWYgY29tcGxldGVs
eSAqLworCQlkbWFfYnVmX3B1dChleHAtPmRtYV9idWYpOworCQlleHAtPmRtYV9idWYgPSBOVUxM
OworCX0KK30KKworc3RhdGljIGludCByZW1vdmVfYnVmKHN0cnVjdCB2aXJ0aW9fdmRtYWJ1ZiAq
dmRtYWJ1ZiwKKwkJICAgICAgc3RydWN0IHZpcnRpb192ZG1hYnVmX2J1ZiAqZXhwKQoreworCWlu
dCByZXQ7CisKKwlyZXQgPSBhZGRfZXZlbnRfYnVmX3JlbChleHApOworCWlmIChyZXQpCisJCXJl
dHVybiByZXQ7CisKKwl2aXJ0aW9fdmRtYWJ1Zl9jbGVhcl9idWYoZXhwKTsKKworCXJldCA9IHZp
cnRpb192ZG1hYnVmX2RlbF9idWYoZHJ2X2luZm8sICZleHAtPmJ1Zl9pZCk7CisJaWYgKHJldCkK
KwkJcmV0dXJuIHJldDsKKworCWlmIChleHAtPnN6X3ByaXYgPiAwICYmICFleHAtPnByaXYpCisJ
CWt2ZnJlZShleHAtPnByaXYpOworCisJa3ZmcmVlKGV4cCk7CisJcmV0dXJuIDA7Cit9CisKK3N0
YXRpYyBpbnQgcGFyc2VfbXNnX2Zyb21faG9zdChzdHJ1Y3QgdmlydGlvX3ZkbWFidWYgKnZkbWFi
dWYsCisJCSAgICAgCSAgICAgICBzdHJ1Y3QgdmlydGlvX3ZkbWFidWZfbXNnICptc2cpCit7CisJ
c3RydWN0IHZpcnRpb192ZG1hYnVmX2J1ZiAqZXhwOworCXZpcnRpb192ZG1hYnVmX2J1Zl9pZF90
IGJ1Zl9pZDsKKwlpbnQgcmV0OworCisJLyogZW1wdHkgbWVzc2FnZSBub3QgYWxsb3dlZCBhbmQg
aWdub3JlZCAqLworCWlmICghbXNnLT5jbWQpIHsKKwkJZGV2X2VycihkcnZfaW5mby0+ZGV2LCAi
ZW1wdHkgY21kXG4iKTsKKwkJcmV0dXJuIC1FSU5WQUw7CisJfQorCisJbWVtY3B5KCZidWZfaWQs
IG1zZy0+b3AsIHNpemVvZihidWZfaWQpKTsKKworCWV4cCA9IHZpcnRpb192ZG1hYnVmX2ZpbmRf
YnVmKGRydl9pbmZvLCAmYnVmX2lkKTsKKwlpZiAoIWV4cCkgeworCQlkZXZfZXJyKGRydl9pbmZv
LT5kZXYsICJjYW4ndCBmaW5kIGJ1ZmZlclxuIik7CisJCXJldHVybiAtRUlOVkFMOworCX0KKwor
CXN3aXRjaCAobXNnLT5jbWQpIHsKKwljYXNlIFZJUlRJT19WRE1BQlVGX0NNRF9ETUFCVUZfUkVM
OgorCQlyZXQgPSByZW1vdmVfYnVmKHZkbWFidWYsIGV4cCk7CisJCWlmIChyZXQpCisJCQlyZXR1
cm4gcmV0OworCisJCWJyZWFrOworCWRlZmF1bHQ6CisJCXJldHVybiAtRUlOVkFMOworCX0KKwor
CXJldHVybiAwOworfQorCitzdGF0aWMgdm9pZCB2aXJ0aW9fdmRtYWJ1Zl9yeF93b3JrKHN0cnVj
dCB3b3JrX3N0cnVjdCAqd29yaykKK3sKKwlzdHJ1Y3QgdmlydGlvX3ZkbWFidWYgKnZkbWFidWYg
PSBkcnZfaW5mby0+cHJpdjsKKwlzdHJ1Y3QgdmlydHF1ZXVlICp2cSA9IHZkbWFidWYtPnZxOwor
CXN0cnVjdCB2aXJ0aW9fdmRtYWJ1Zl9tc2cgKm1zZzsKKwlpbnQgc3o7CisKKwltdXRleF9sb2Nr
KCZ2ZG1hYnVmLT5yeF9sb2NrKTsKKworCWRvIHsKKwkJdmlydHF1ZXVlX2Rpc2FibGVfY2IodnEp
OworCQltc2cgPSB2aXJ0cXVldWVfZ2V0X2J1Zih2cSwgJnN6KTsKKwkJaWYgKCFtc2cpCisJCQli
cmVhazsKKworCQkvKiB2YWxpZCBzaXplICovCisJCWlmIChzeiA9PSBzaXplb2Yoc3RydWN0IHZp
cnRpb192ZG1hYnVmX21zZykpIHsKKwkJCWlmIChtc2ctPmNtZCA9PSBWSVJUSU9fVkRNQUJVRl9D
TURfTkVFRF9WTUlEKSB7CisJCQkJdmRtYWJ1Zi0+dm1pZCA9IG1zZy0+b3BbMF07CisJCQl9IGVs
c2UgeworCQkJCWlmIChwYXJzZV9tc2dfZnJvbV9ob3N0KHZkbWFidWYsIG1zZykpCisJCQkJCWRl
dl9lcnIoZHJ2X2luZm8tPmRldiwKKwkJCQkJCSJtc2cgcGFyc2UgZXJyb3JcbiIpOworCQkJfQor
CQl9IGVsc2UgeworCQkJZGV2X2VycihkcnZfaW5mby0+ZGV2LAorCQkJCSJyZWNlaXZlZCBtYWxm
b3JtZWQgbWVzc2FnZVxuIik7CisJCX0KKwl9IHdoaWxlICghdmlydHF1ZXVlX2VuYWJsZV9jYih2
cSkpOworCisJbXV0ZXhfdW5sb2NrKCZ2ZG1hYnVmLT5yeF9sb2NrKTsKK30KKworc3RhdGljIHZv
aWQgcnhfZXZlbnQoc3RydWN0IHZpcnRxdWV1ZSAqdnEpCit7CisJc3RydWN0IHZpcnRpb192ZG1h
YnVmICp2ZG1hYnVmID0gZHJ2X2luZm8tPnByaXY7CisKKwlxdWV1ZV93b3JrKHZkbWFidWYtPndx
LCAmdmRtYWJ1Zi0+cnhfd29yayk7Cit9CisKK3N0YXRpYyBpbnQgcmVtb3ZlX2FsbF9idWZzKHN0
cnVjdCB2aXJ0aW9fdmRtYWJ1ZiAqdmRtYWJ1ZikKK3sKKwlzdHJ1Y3QgdmlydGlvX3ZkbWFidWZf
YnVmICpmb3VuZDsKKwlzdHJ1Y3QgaGxpc3Rfbm9kZSAqdG1wOworCWludCBia3Q7CisJaW50IHJl
dDsKKworCWhhc2hfZm9yX2VhY2hfc2FmZShkcnZfaW5mby0+YnVmX2xpc3QsIGJrdCwgdG1wLCBm
b3VuZCwgbm9kZSkgeworCQlyZXQgPSByZW1vdmVfYnVmKHZkbWFidWYsIGZvdW5kKTsKKwkJaWYg
KHJldCkKKwkJCXJldHVybiByZXQ7CisJfQorCisJcmV0dXJuIDA7Cit9CisKK3N0YXRpYyBpbnQg
dmlydGlvX3ZkbWFidWZfb3BlbihzdHJ1Y3QgaW5vZGUgKmlub2RlLCBzdHJ1Y3QgZmlsZSAqZmls
cCkKK3sKKwlpZiAoIWRydl9pbmZvKSB7CisJCXByX2VycigidmlydGlvIHZkbWFidWYgZHJpdmVy
IGlzIG5vdCByZWFkeVxuIik7CisJCXJldHVybiAtRUlOVkFMOworCX0KKworCWZpbHAtPnByaXZh
dGVfZGF0YSA9IGRydl9pbmZvLT5wcml2OworCisJcmV0dXJuIDA7Cit9CisKK3N0YXRpYyBpbnQg
dmlydGlvX3ZkbWFidWZfcmVsZWFzZShzdHJ1Y3QgaW5vZGUgKmlub2RlLCBzdHJ1Y3QgZmlsZSAq
ZmlscCkKK3sKKwlyZXR1cm4gMDsKK30KKworLyogTm90aWZ5IEhvc3QgYWJvdXQgdGhlIG5ldyB2
ZG1hYnVmICovCitzdGF0aWMgaW50IGV4cG9ydF9ub3RpZnkoc3RydWN0IHZpcnRpb192ZG1hYnVm
X2J1ZiAqZXhwLCBzdHJ1Y3QgcGFnZSAqKnBhZ2VzKQoreworCWludCAqb3A7CisJaW50IHJldDsK
KworCW9wID0ga3ZjYWxsb2MoMSwgc2l6ZW9mKGludCkgKiA2NSwgR0ZQX0tFUk5FTCk7CisJaWYg
KCFvcCkKKwkJcmV0dXJuIC1FTk9NRU07CisKKwltZW1jcHkob3AsICZleHAtPmJ1Zl9pZCwgc2l6
ZW9mKGV4cC0+YnVmX2lkKSk7CisKKwkvKiBpZiBuZXcgcGFnZXMgYXJlIHRvIGJlIHNoYXJlZCAq
LworCWlmIChwYWdlcykgeworCQlvcFs0XSA9IGV4cC0+cGFnZXNfaW5mby0+bmVudHM7CisJCW9w
WzVdID0gZXhwLT5wYWdlc19pbmZvLT5maXJzdF9vZnN0OworCQlvcFs2XSA9IGV4cC0+cGFnZXNf
aW5mby0+bGFzdF9sZW47CisKKwkJbWVtY3B5KCZvcFs3XSwgJmV4cC0+cGFnZXNfaW5mby0+cmVm
LCBzaXplb2YobG9uZykpOworCX0KKworCW9wWzldID0gZXhwLT5zel9wcml2OworCisJLyogZHJp
dmVyL2FwcGxpY2F0aW9uIHNwZWNpZmljIHByaXZhdGUgaW5mbyAqLworCW1lbWNweSgmb3BbMTBd
LCBleHAtPnByaXYsIG9wWzldKTsKKworCXJldCA9IHNlbmRfbXNnX3RvX2hvc3QoVklSVElPX1ZE
TUFCVUZfQ01EX0VYUE9SVCwgb3ApOworCisJa3ZmcmVlKG9wKTsKKwlyZXR1cm4gcmV0OworfQor
CisvKiByZXR1cm4gdG90YWwgbnVtYmVyIG9mIHBhZ2VzIHJlZmVyZW5jZWQgYnkgYSBzZ3QKKyAq
IGZvciBwcmUtY2FsY3VsYXRpb24gb2YgIyBvZiBwYWdlcyBiZWhpbmQgYSBnaXZlbiBzZ3QKKyAq
Lworc3RhdGljIGludCBudW1fcGdzKHN0cnVjdCBzZ190YWJsZSAqc2d0KQoreworCXN0cnVjdCBz
Y2F0dGVybGlzdCAqc2dsOworCWludCBsZW4sIGk7CisJLyogYXQgbGVhc3Qgb25lIHBhZ2UgKi8K
KwlpbnQgbl9wZ3MgPSAxOworCisJc2dsID0gc2d0LT5zZ2w7CisKKwlsZW4gPSBzZ2wtPmxlbmd0
aCAtIFBBR0VfU0laRSArIHNnbC0+b2Zmc2V0OworCisJLyogcm91bmQtdXAgKi8KKwluX3BncyAr
PSAoKGxlbiArIFBBR0VfU0laRSAtIDEpL1BBR0VfU0laRSk7CisKKwlmb3IgKGkgPSAxOyBpIDwg
c2d0LT5uZW50czsgaSsrKSB7CisJCXNnbCA9IHNnX25leHQoc2dsKTsKKworCQkvKiByb3VuZC11
cCAqLworCQluX3BncyArPSAoKHNnbC0+bGVuZ3RoICsgUEFHRV9TSVpFIC0gMSkgLworCQkJICBQ
QUdFX1NJWkUpOyAvKiByb3VuZC11cCAqLworCX0KKworCXJldHVybiBuX3BnczsKK30KKworLyog
ZXh0cmFjdCBwYWdlcyByZWZlcmVuY2VkIGJ5IHNndCAqLworc3RhdGljIHN0cnVjdCBwYWdlICoq
ZXh0cl9wZ3Moc3RydWN0IHNnX3RhYmxlICpzZ3QsIGludCAqbmVudHMsIGludCAqbGFzdF9sZW4p
Cit7CisJc3RydWN0IHNjYXR0ZXJsaXN0ICpzZ2w7CisJc3RydWN0IHBhZ2UgKipwYWdlczsKKwlz
dHJ1Y3QgcGFnZSAqKnRlbXBfcGdzOworCWludCBpLCBqOworCWludCBsZW47CisKKwkqbmVudHMg
PSBudW1fcGdzKHNndCk7CisJcGFnZXMgPQlrdm1hbGxvY19hcnJheSgqbmVudHMsIHNpemVvZihz
dHJ1Y3QgcGFnZSAqKSwgR0ZQX0tFUk5FTCk7CisJaWYgKCFwYWdlcykKKwkJcmV0dXJuIE5VTEw7
CisKKwlzZ2wgPSBzZ3QtPnNnbDsKKworCXRlbXBfcGdzID0gcGFnZXM7CisJKnRlbXBfcGdzKysg
PSBzZ19wYWdlKHNnbCk7CisJbGVuID0gc2dsLT5sZW5ndGggLSBQQUdFX1NJWkUgKyBzZ2wtPm9m
ZnNldDsKKworCWkgPSAxOworCXdoaWxlIChsZW4gPiAwKSB7CisJCSp0ZW1wX3BncysrID0gbnRo
X3BhZ2Uoc2dfcGFnZShzZ2wpLCBpKyspOworCQlsZW4gLT0gUEFHRV9TSVpFOworCX0KKworCWZv
ciAoaSA9IDE7IGkgPCBzZ3QtPm5lbnRzOyBpKyspIHsKKwkJc2dsID0gc2dfbmV4dChzZ2wpOwor
CQkqdGVtcF9wZ3MrKyA9IHNnX3BhZ2Uoc2dsKTsKKwkJbGVuID0gc2dsLT5sZW5ndGggLSBQQUdF
X1NJWkU7CisJCWogPSAxOworCisJCXdoaWxlIChsZW4gPiAwKSB7CisJCQkqdGVtcF9wZ3MrKyA9
IG50aF9wYWdlKHNnX3BhZ2Uoc2dsKSwgaisrKTsKKwkJCWxlbiAtPSBQQUdFX1NJWkU7CisJCX0K
Kwl9CisKKwkqbGFzdF9sZW4gPSBsZW4gKyBQQUdFX1NJWkU7CisKKwlyZXR1cm4gcGFnZXM7Cit9
CisKKy8qIGlvY3RsIC0gZXhwb3J0aW5nIG5ldyB2ZG1hYnVmCisgKgorICoJIGludCBkbWFidWZf
ZmQgLSBGaWxlIGhhbmRsZSBvZiBvcmlnaW5hbCBETUFCVUYKKyAqCSB2aXJ0aW9fdmRtYWJ1Zl9i
dWZfaWRfdCBidWZfaWQgLSByZXR1cm5lZCB2ZG1hYnVmIElECisgKgkgaW50IHN6X3ByaXYgLSBz
aXplIG9mIHByaXZhdGUgZGF0YSBmcm9tIHVzZXJzcGFjZQorICoJIGNoYXIgKnByaXYgLSBidWZm
ZXIgb2YgdXNlciBwcml2YXRlIGRhdGEKKyAqCisgKi8KK3N0YXRpYyBpbnQgZXhwb3J0X2lvY3Rs
KHN0cnVjdCBmaWxlICpmaWxwLCB2b2lkICpkYXRhKQoreworCXN0cnVjdCB2aXJ0aW9fdmRtYWJ1
Zl9leHBvcnQgKmF0dHIgPSBkYXRhOworCXN0cnVjdCBkbWFfYnVmICpkbWFidWY7CisJc3RydWN0
IGRtYV9idWZfYXR0YWNobWVudCAqYXR0YWNoOworCXN0cnVjdCBzZ190YWJsZSAqc2d0OworCXN0
cnVjdCB2aXJ0aW9fdmRtYWJ1Zl9idWYgKmV4cDsKKwlzdHJ1Y3QgcGFnZSAqKnBhZ2VzOworCWlu
dCBuZW50cywgbGFzdF9sZW47CisJdmlydGlvX3ZkbWFidWZfYnVmX2lkX3QgYnVmX2lkOworCWlu
dCByZXQgPSAwOworCisJZG1hYnVmID0gZG1hX2J1Zl9nZXQoYXR0ci0+ZmQpOworCWlmIChJU19F
UlIoZG1hYnVmKSkKKwkJcmV0dXJuIFBUUl9FUlIoZG1hYnVmKTsKKworCW11dGV4X2xvY2soJmRy
dl9pbmZvLT5nX211dGV4KTsKKworCWJ1Zl9pZCA9IGdldF9idWZfaWQoKTsKKworCWF0dGFjaCA9
IGRtYV9idWZfYXR0YWNoKGRtYWJ1ZiwgZHJ2X2luZm8tPmRldik7CisJaWYgKElTX0VSUihhdHRh
Y2gpKSB7CisJCXJldCA9IFBUUl9FUlIoYXR0YWNoKTsKKwkJZ290byBmYWlsX2F0dGFjaDsKKwl9
CisKKwlzZ3QgPSBkbWFfYnVmX21hcF9hdHRhY2htZW50KGF0dGFjaCwgRE1BX0JJRElSRUNUSU9O
QUwpOworCWlmIChJU19FUlIoc2d0KSkgeworCQlyZXQgPSBQVFJfRVJSKHNndCk7CisJCWdvdG8g
ZmFpbF9tYXBfYXR0YWNobWVudDsKKwl9CisKKwkvKiBhbGxvY2F0ZSBhIG5ldyBleHAgKi8KKwll
eHAgPSBrdmNhbGxvYygxLCBzaXplb2YoKmV4cCksIEdGUF9LRVJORUwpOworCWlmICghZXhwKSB7
CisJCXJldCA9IC1FTk9NRU07CisJCWdvdG8gZmFpbF9zZ3RfaW5mb19jcmVhdGlvbjsKKwl9CisK
KwkvKiBwb3NzaWJsZSB0cnVuY2F0aW9uICovCisJaWYgKGF0dHItPnN6X3ByaXYgPiBNQVhfU0la
RV9QUklWX0RBVEEpCisJCWV4cC0+c3pfcHJpdiA9IE1BWF9TSVpFX1BSSVZfREFUQTsKKwllbHNl
CisJCWV4cC0+c3pfcHJpdiA9IGF0dHItPnN6X3ByaXY7CisKKwkvKiBjcmVhdGluZyBidWZmZXIg
Zm9yIHByaXZhdGUgZGF0YSAqLworCWlmIChleHAtPnN6X3ByaXYgIT0gMCkgeworCQlleHAtPnBy
aXYgPSBrdmNhbGxvYygxLCBleHAtPnN6X3ByaXYsIEdGUF9LRVJORUwpOworCQlpZiAoIWV4cC0+
cHJpdikgeworCQkJcmV0ID0gLUVOT01FTTsKKwkJCWdvdG8gZmFpbF9wcml2X2NyZWF0aW9uOwor
CQl9CisJfQorCisJZXhwLT5idWZfaWQgPSBidWZfaWQ7CisJZXhwLT5hdHRhY2ggPSBhdHRhY2g7
CisJZXhwLT5zZ3QgPSBzZ3Q7CisJZXhwLT5kbWFfYnVmID0gZG1hYnVmOworCWV4cC0+dmFsaWQg
PSAxOworCisJaWYgKGV4cC0+c3pfcHJpdikgeworCQkvKiBjb3B5IHByaXZhdGUgZGF0YSB0byBz
Z3RfaW5mbyAqLworCQlyZXQgPSBjb3B5X2Zyb21fdXNlcihleHAtPnByaXYsIGF0dHItPnByaXYs
IGV4cC0+c3pfcHJpdik7CisJCWlmIChyZXQpIHsKKwkJCXJldCA9IC1FSU5WQUw7CisJCQlnb3Rv
IGZhaWxfZXhwOworCQl9CisJfQorCisJcGFnZXMgPSBleHRyX3BncyhzZ3QsICZuZW50cywgJmxh
c3RfbGVuKTsKKwlpZiAocGFnZXMgPT0gTlVMTCkgeworCQlyZXQgPSAtRU5PTUVNOworCQlnb3Rv
IGZhaWxfZXhwOworCX0KKworCWV4cC0+cGFnZXNfaW5mbyA9IHZpcnRpb192ZG1hYnVmX3NoYXJl
X2J1ZihwYWdlcywgbmVudHMsCisJCQkJCQkgICBzZ3QtPnNnbC0+b2Zmc2V0LAorCQkJCQkgCSAg
IGxhc3RfbGVuKTsKKwlpZiAoIWV4cC0+cGFnZXNfaW5mbykgeworCQlyZXQgPSAtRU5PTUVNOwor
CQlnb3RvIGZhaWxfY3JlYXRlX3BhZ2VzX2luZm87CisJfQorCisJYXR0ci0+YnVmX2lkID0gZXhw
LT5idWZfaWQ7CisJcmV0ID0gZXhwb3J0X25vdGlmeShleHAsIHBhZ2VzKTsKKwlpZiAocmV0IDwg
MCkKKwkJZ290byBmYWlsX3NlbmRfcmVxdWVzdDsKKworCS8qIG5vdyByZWdpc3RlciBpdCB0byB0
aGUgZXhwb3J0IGxpc3QgKi8KKwl2aXJ0aW9fdmRtYWJ1Zl9hZGRfYnVmKGRydl9pbmZvLCBleHAp
OworCisJZXhwLT5maWxwID0gZmlscDsKKworCW11dGV4X3VubG9jaygmZHJ2X2luZm8tPmdfbXV0
ZXgpOworCisJcmV0dXJuIHJldDsKKworLyogQ2xlYW4tdXAgaWYgZXJyb3Igb2NjdXJzICovCitm
YWlsX3NlbmRfcmVxdWVzdDoKKwl2aXJ0aW9fdmRtYWJ1Zl9mcmVlX2J1ZihleHAtPnBhZ2VzX2lu
Zm8pOworCitmYWlsX2NyZWF0ZV9wYWdlc19pbmZvOgorCWt2ZnJlZShwYWdlcyk7CisKK2ZhaWxf
ZXhwOgorCWt2ZnJlZShleHAtPnByaXYpOworCitmYWlsX3ByaXZfY3JlYXRpb246CisJa3ZmcmVl
KGV4cCk7CisKK2ZhaWxfc2d0X2luZm9fY3JlYXRpb246CisJZG1hX2J1Zl91bm1hcF9hdHRhY2ht
ZW50KGF0dGFjaCwgc2d0LAorCQkJCSBETUFfQklESVJFQ1RJT05BTCk7CisKK2ZhaWxfbWFwX2F0
dGFjaG1lbnQ6CisJZG1hX2J1Zl9kZXRhY2goZG1hYnVmLCBhdHRhY2gpOworCitmYWlsX2F0dGFj
aDoKKwlkbWFfYnVmX3B1dChkbWFidWYpOworCisJbXV0ZXhfdW5sb2NrKCZkcnZfaW5mby0+Z19t
dXRleCk7CisKKwlyZXR1cm4gcmV0OworfQorCitzdGF0aWMgY29uc3Qgc3RydWN0IHZpcnRpb192
ZG1hYnVmX2lvY3RsX2Rlc2MgdmlydGlvX3ZkbWFidWZfaW9jdGxzW10gPSB7CisJVklSVElPX1ZE
TUFCVUZfSU9DVExfREVGKFZJUlRJT19WRE1BQlVGX0lPQ1RMX0VYUE9SVCwgZXhwb3J0X2lvY3Rs
LCAwKSwKK307CisKK3N0YXRpYyBsb25nIHZpcnRpb192ZG1hYnVmX2lvY3RsKHN0cnVjdCBmaWxl
ICpmaWxwLCB1bnNpZ25lZCBpbnQgY21kLAorCQkgICAgICAgCQkgdW5zaWduZWQgbG9uZyBwYXJh
bSkKK3sKKwljb25zdCBzdHJ1Y3QgdmlydGlvX3ZkbWFidWZfaW9jdGxfZGVzYyAqaW9jdGwgPSBO
VUxMOworCXVuc2lnbmVkIGludCBuciA9IF9JT0NfTlIoY21kKTsKKwlpbnQgcmV0OworCXZpcnRp
b192ZG1hYnVmX2lvY3RsX3QgZnVuYzsKKwljaGFyICprZGF0YTsKKworCWlmIChuciA+PSBBUlJB
WV9TSVpFKHZpcnRpb192ZG1hYnVmX2lvY3RscykpIHsKKwkJZGV2X2VycihkcnZfaW5mby0+ZGV2
LCAiaW52YWxpZCBpb2N0bFxuIik7CisJCXJldHVybiAtRUlOVkFMOworCX0KKworCWlvY3RsID0g
JnZpcnRpb192ZG1hYnVmX2lvY3Rsc1tucl07CisKKwlmdW5jID0gaW9jdGwtPmZ1bmM7CisKKwlp
ZiAodW5saWtlbHkoIWZ1bmMpKSB7CisJCWRldl9lcnIoZHJ2X2luZm8tPmRldiwgIm5vIGZ1bmN0
aW9uXG4iKTsKKwkJcmV0dXJuIC1FSU5WQUw7CisJfQorCisJa2RhdGEgPSBrdm1hbGxvYyhfSU9D
X1NJWkUoY21kKSwgR0ZQX0tFUk5FTCk7CisJaWYgKCFrZGF0YSkKKwkJcmV0dXJuIC1FTk9NRU07
CisKKwlpZiAoY29weV9mcm9tX3VzZXIoa2RhdGEsICh2b2lkIF9fdXNlciAqKXBhcmFtLAorCQkJ
ICAgX0lPQ19TSVpFKGNtZCkpICE9IDApIHsKKwkJZGV2X2VycihkcnZfaW5mby0+ZGV2LAorCQkJ
ImZhaWxlZCB0byBjb3B5IGZyb20gdXNlciBhcmd1bWVudHNcbiIpOworCQlyZXQgPSAtRUZBVUxU
OworCQlnb3RvIGlvY3RsX2Vycm9yOworCX0KKworCXJldCA9IGZ1bmMoZmlscCwga2RhdGEpOwor
CisJaWYgKGNvcHlfdG9fdXNlcigodm9pZCBfX3VzZXIgKilwYXJhbSwga2RhdGEsCisJCQkgX0lP
Q19TSVpFKGNtZCkpICE9IDApIHsKKwkJZGV2X2VycihkcnZfaW5mby0+ZGV2LAorCQkJImZhaWxl
ZCB0byBjb3B5IHRvIHVzZXIgYXJndW1lbnRzXG4iKTsKKwkJcmV0ID0gLUVGQVVMVDsKKwkJZ290
byBpb2N0bF9lcnJvcjsKKwl9CisKK2lvY3RsX2Vycm9yOgorCWt2ZnJlZShrZGF0YSk7CisJcmV0
dXJuIHJldDsKK30KKworc3RhdGljIHVuc2lnbmVkIGludCB2aXJ0aW9fdmRtYWJ1Zl9ldmVudF9w
b2xsKHN0cnVjdCBmaWxlICpmaWxwLAorCQkJICAgIAkgICAgCSAgICAgIHN0cnVjdCBwb2xsX3Rh
YmxlX3N0cnVjdCAqd2FpdCkKK3sKKwlzdHJ1Y3QgdmlydGlvX3ZkbWFidWYgKnZkbWFidWYgPSBm
aWxwLT5wcml2YXRlX2RhdGE7CisKKwlwb2xsX3dhaXQoZmlscCwgJnZkbWFidWYtPmV2cS0+ZV93
YWl0LCB3YWl0KTsKKworCWlmICghbGlzdF9lbXB0eSgmdmRtYWJ1Zi0+ZXZxLT5lX2xpc3QpKQor
CQlyZXR1cm4gUE9MTElOIHwgUE9MTFJETk9STTsKKworCXJldHVybiAwOworfQorCitzdGF0aWMg
c3NpemVfdCB2aXJ0aW9fdmRtYWJ1Zl9ldmVudF9yZWFkKHN0cnVjdCBmaWxlICpmaWxwLCBjaGFy
IF9fdXNlciAqYnVmLAorCQkJICAgICAgIAkJIHNpemVfdCBjbnQsIGxvZmZfdCAqb2ZzdCkKK3sK
KwlzdHJ1Y3QgdmlydGlvX3ZkbWFidWYgKnZkbWFidWYgPSBmaWxwLT5wcml2YXRlX2RhdGE7CisJ
aW50IHJldDsKKworCS8qIG1ha2Ugc3VyZSB1c2VyIGJ1ZmZlciBjYW4gYmUgd3JpdHRlbiAqLwor
CWlmICghYWNjZXNzX29rKGJ1Ziwgc2l6ZW9mICgqYnVmKSkpIHsKKwkJZGV2X2VycihkcnZfaW5m
by0+ZGV2LCAidXNlciBidWZmZXIgY2FuJ3QgYmUgd3JpdHRlbi5cbiIpOworCQlyZXR1cm4gLUVJ
TlZBTDsKKwl9CisKKwlyZXQgPSBtdXRleF9sb2NrX2ludGVycnVwdGlibGUoJnZkbWFidWYtPmV2
cS0+ZV9yZWFkbG9jayk7CisJaWYgKHJldCkKKwkJcmV0dXJuIHJldDsKKworCWZvciAoOzspIHsK
KwkJc3RydWN0IHZpcnRpb192ZG1hYnVmX2V2ZW50ICplID0gTlVMTDsKKworCQlzcGluX2xvY2tf
aXJxKCZ2ZG1hYnVmLT5ldnEtPmVfbG9jayk7CisJCWlmICghbGlzdF9lbXB0eSgmdmRtYWJ1Zi0+
ZXZxLT5lX2xpc3QpKSB7CisJCQllID0gbGlzdF9maXJzdF9lbnRyeSgmdmRtYWJ1Zi0+ZXZxLT5l
X2xpc3QsCisJCQkJCSAgICAgc3RydWN0IHZpcnRpb192ZG1hYnVmX2V2ZW50LCBsaW5rKTsKKwkJ
CWxpc3RfZGVsKCZlLT5saW5rKTsKKwkJfQorCQlzcGluX3VubG9ja19pcnEoJnZkbWFidWYtPmV2
cS0+ZV9sb2NrKTsKKworCQlpZiAoIWUpIHsKKwkJCWlmIChyZXQpCisJCQkJYnJlYWs7CisKKwkJ
CWlmIChmaWxwLT5mX2ZsYWdzICYgT19OT05CTE9DSykgeworCQkJCXJldCA9IC1FQUdBSU47CisJ
CQkJYnJlYWs7CisJCQl9CisKKwkJCW11dGV4X3VubG9jaygmdmRtYWJ1Zi0+ZXZxLT5lX3JlYWRs
b2NrKTsKKwkJCXJldCA9IHdhaXRfZXZlbnRfaW50ZXJydXB0aWJsZSh2ZG1hYnVmLT5ldnEtPmVf
d2FpdCwKKwkJCQkJIWxpc3RfZW1wdHkoJnZkbWFidWYtPmV2cS0+ZV9saXN0KSk7CisKKwkJCWlm
IChyZXQgPT0gMCkKKwkJCQlyZXQgPSBtdXRleF9sb2NrX2ludGVycnVwdGlibGUoCisJCQkJCQkm
dmRtYWJ1Zi0+ZXZxLT5lX3JlYWRsb2NrKTsKKworCQkJaWYgKHJldCkKKwkJCQlyZXR1cm4gcmV0
OworCQl9IGVsc2UgeworCQkJdW5zaWduZWQgaW50IGxlbiA9IChzaXplb2YoZS0+ZV9kYXRhLmhk
cikgKworCQkJCQkgICAgZS0+ZV9kYXRhLmhkci5zaXplKTsKKworCQkJaWYgKGxlbiA+IGNudCAt
IHJldCkgeworcHV0X2JhY2tfZXZlbnQ6CisJCQkJc3Bpbl9sb2NrX2lycSgmdmRtYWJ1Zi0+ZXZx
LT5lX2xvY2spOworCQkJCWxpc3RfYWRkKCZlLT5saW5rLCAmdmRtYWJ1Zi0+ZXZxLT5lX2xpc3Qp
OworCQkJCXNwaW5fdW5sb2NrX2lycSgmdmRtYWJ1Zi0+ZXZxLT5lX2xvY2spOworCQkJCWJyZWFr
OworCQkJfQorCisJCQlpZiAoY29weV90b191c2VyKGJ1ZiArIHJldCwgJmUtPmVfZGF0YS5oZHIs
CisJCQkJCSBzaXplb2YoZS0+ZV9kYXRhLmhkcikpKSB7CisJCQkJaWYgKHJldCA9PSAwKQorCQkJ
CQlyZXQgPSAtRUZBVUxUOworCisJCQkJZ290byBwdXRfYmFja19ldmVudDsKKwkJCX0KKworCQkJ
cmV0ICs9IHNpemVvZihlLT5lX2RhdGEuaGRyKTsKKworCQkJaWYgKGNvcHlfdG9fdXNlcihidWYg
KyByZXQsIGUtPmVfZGF0YS5kYXRhLAorCQkJCQkgZS0+ZV9kYXRhLmhkci5zaXplKSkgeworCQkJ
CS8qIGVycm9yIHdoaWxlIGNvcHlpbmcgdm9pZCAqZGF0YSAqLworCisJCQkJc3RydWN0IHZpcnRp
b192ZG1hYnVmX2VfaGRyIGR1bW15X2hkciA9IHswfTsKKworCQkJCXJldCAtPSBzaXplb2YoZS0+
ZV9kYXRhLmhkcik7CisKKwkJCQkvKiBudWxsaWZ5aW5nIGhkciBvZiB0aGUgZXZlbnQgaW4gdXNl
ciBidWZmZXIgKi8KKwkJCQlpZiAoY29weV90b191c2VyKGJ1ZiArIHJldCwgJmR1bW15X2hkciwK
KwkJCQkJCSBzaXplb2YoZHVtbXlfaGRyKSkpCisJCQkJCWRldl9lcnIoZHJ2X2luZm8tPmRldiwK
KwkJCQkJICAgImZhaWwgdG8gbnVsbGlmeSBpbnZhbGlkIGhkclxuIik7CisKKwkJCQlyZXQgPSAt
RUZBVUxUOworCisJCQkJZ290byBwdXRfYmFja19ldmVudDsKKwkJCX0KKworCQkJcmV0ICs9IGUt
PmVfZGF0YS5oZHIuc2l6ZTsKKwkJCXZkbWFidWYtPmV2cS0+cGVuZGluZy0tOworCQkJa3ZmcmVl
KGUpOworCQl9CisJfQorCisJbXV0ZXhfdW5sb2NrKCZ2ZG1hYnVmLT5ldnEtPmVfcmVhZGxvY2sp
OworCisJcmV0dXJuIHJldDsKK30KKworc3RhdGljIGNvbnN0IHN0cnVjdCBmaWxlX29wZXJhdGlv
bnMgdmlydGlvX3ZkbWFidWZfZm9wcyA9IHsKKwkub3duZXIgPSBUSElTX01PRFVMRSwKKwkub3Bl
biA9IHZpcnRpb192ZG1hYnVmX29wZW4sCisJLnJlbGVhc2UgPSB2aXJ0aW9fdmRtYWJ1Zl9yZWxl
YXNlLAorCS5yZWFkID0gdmlydGlvX3ZkbWFidWZfZXZlbnRfcmVhZCwKKwkucG9sbCA9IHZpcnRp
b192ZG1hYnVmX2V2ZW50X3BvbGwsCisJLnVubG9ja2VkX2lvY3RsID0gdmlydGlvX3ZkbWFidWZf
aW9jdGwsCit9OworCitzdGF0aWMgc3RydWN0IG1pc2NkZXZpY2UgdmlydGlvX3ZkbWFidWZfbWlz
Y2RldiA9IHsKKwkubWlub3IgPSBNSVNDX0RZTkFNSUNfTUlOT1IsCisJLm5hbWUgPSAidmlydGlv
LXZkbWFidWYiLAorCS5mb3BzID0gJnZpcnRpb192ZG1hYnVmX2ZvcHMsCit9OworCitzdGF0aWMg
aW50IHZpcnRpb192ZG1hYnVmX3ZkZXZfcHJvYmUoc3RydWN0IHZpcnRpb19kZXZpY2UgKnZkZXYp
Cit7CisJdnFfY2FsbGJhY2tfdCAqY2JbXSA9IHtyeF9ldmVudH07CisJc3RhdGljIGNvbnN0IGNo
YXIgKiBjb25zdCBuYW1lW10gPSB7InZpcnRpb192ZG1hYnVmX3ZpcnRxdWV1ZSJ9OworCXN0cnVj
dCB2aXJ0aW9fdmRtYWJ1ZiAqdmRtYWJ1ZjsKKwlpbnQgcmV0ID0gMDsKKworCWlmICghZHJ2X2lu
Zm8pCisJCXJldHVybiAtRUlOVkFMOworCisJdmRtYWJ1ZiA9IGRydl9pbmZvLT5wcml2OworCisJ
aWYgKCF2ZG1hYnVmKQorCQlyZXR1cm4gLUVJTlZBTDsKKworCXZkbWFidWYtPnZkZXYgPSB2ZGV2
OworCXZkZXYtPnByaXYgPSB2ZG1hYnVmOworCisJLyogaW5pdGlhbGl6ZSBzcGlubG9jayBmb3Ig
c3luY2hyb25pemluZyB2aXJ0cXVldWUgYWNjZXNzZXMgKi8KKwlzcGluX2xvY2tfaW5pdCgmdmRt
YWJ1Zi0+dnFfbG9jayk7CisKKwlyZXQgPSB2aXJ0aW9fZmluZF92cXModmRtYWJ1Zi0+dmRldiwg
MSwgJnZkbWFidWYtPnZxLCBjYiwKKwkJCSAgICAgIG5hbWUsIE5VTEwpOworCWlmIChyZXQpIHsK
KwkJZGV2X2VycihkcnZfaW5mby0+ZGV2LCAiQ2Fubm90IGZpbmQgYW55IHZxc1xuIik7CisJCXJl
dHVybiByZXQ7CisJfQorCisJSU5JVF9XT1JLKCZ2ZG1hYnVmLT5yeF93b3JrLCB2aXJ0aW9fdmRt
YWJ1Zl9yeF93b3JrKTsKKworCXJldHVybiByZXQ7Cit9CisKK3N0YXRpYyB2b2lkIHZpcnRpb192
ZG1hYnVmX3ZkZXZfcmVtb3ZlKHN0cnVjdCB2aXJ0aW9fZGV2aWNlICp2ZGV2KQoreworCXN0cnVj
dCB2aXJ0aW9fdmRtYWJ1ZiAqdmRtYWJ1ZjsKKworCWlmICghZHJ2X2luZm8pCisJCXJldHVybjsK
KworCXZkbWFidWYgPSBkcnZfaW5mby0+cHJpdjsKKwlmbHVzaF93b3JrKCZ2ZG1hYnVmLT5yeF93
b3JrKTsKKworCXZkZXYtPmNvbmZpZy0+cmVzZXQodmRldik7CisJdmRldi0+Y29uZmlnLT5kZWxf
dnFzKHZkZXYpOworfQorCitzdGF0aWMgdm9pZCB2aXJ0aW9fdmRtYWJ1Zl92ZGV2X3NjYW4oc3Ry
dWN0IHZpcnRpb19kZXZpY2UgKnZkZXYpCit7CisJaW50IHJldDsKKworCS8qIFNlbmQgVklSVElP
X1ZETUFCVUZfQ01EX05FRURfVk1JRCByZXF1ZXN0IHRvIGtub3cgdm1pZAorCSAqLworCXJldCA9
IHNlbmRfbXNnX3RvX2hvc3QoVklSVElPX1ZETUFCVUZfQ01EX05FRURfVk1JRCwgMCk7CisJaWYg
KHJldCA8IDApCisJCWRldl9lcnIoZHJ2X2luZm8tPmRldiwgImZhaWwgdG8gcmVjZWl2ZSB2bWlk
XG4iKTsKKworCXJldHVybjsKK30KKworc3RhdGljIHN0cnVjdCB2aXJ0aW9fZGV2aWNlX2lkIGlk
X3RhYmxlW10gPSB7CisJeyBWSVJUSU9fSURfVkRNQUJVRiwgVklSVElPX0RFVl9BTllfSUQgfSwK
Kwl7IDAgfSwKK307CisKK3N0YXRpYyBzdHJ1Y3QgdmlydGlvX2RyaXZlciB2aXJ0aW9fdmRtYWJ1
Zl92ZGV2X2RydiA9IHsKKwkuZHJpdmVyLm5hbWUgPSAgS0JVSUxEX01PRE5BTUUsCisJLmRyaXZl
ci5vd25lciA9IFRISVNfTU9EVUxFLAorCS5pZF90YWJsZSA9ICAgICBpZF90YWJsZSwKKwkucHJv
YmUgPSAgICAgICAgdmlydGlvX3ZkbWFidWZfdmRldl9wcm9iZSwKKwkucmVtb3ZlID0gICAgICAg
dmlydGlvX3ZkbWFidWZfdmRldl9yZW1vdmUsCisJLnNjYW4gPSAgICAgICAgIHZpcnRpb192ZG1h
YnVmX3ZkZXZfc2NhbiwKK307CisKK3N0YXRpYyBpbnQgX19pbml0IHZpcnRpb192ZG1hYnVmX2lu
aXQodm9pZCkKK3sKKwlzdHJ1Y3QgdmlydGlvX3ZkbWFidWYgKnZkbWFidWY7CisJaW50IHJldCA9
IDA7CisKKwlkcnZfaW5mbyA9IE5VTEw7CisKKwlyZXQgPSBtaXNjX3JlZ2lzdGVyKCZ2aXJ0aW9f
dmRtYWJ1Zl9taXNjZGV2KTsKKwlpZiAocmV0KSB7CisJCXByX2VycigidmlydGlvLXZkbWFidWYg
bWlzYyBkcml2ZXIgY2FuJ3QgYmUgcmVnaXN0ZXJlZFxuIik7CisJCXJldHVybiByZXQ7CisJfQor
CisJZG1hX2NvZXJjZV9tYXNrX2FuZF9jb2hlcmVudCh2aXJ0aW9fdmRtYWJ1Zl9taXNjZGV2LnRo
aXNfZGV2aWNlLAorCQkJCSAgICAgRE1BX0JJVF9NQVNLKDY0KSk7CisKKwlkcnZfaW5mbyA9IGt2
Y2FsbG9jKDEsIHNpemVvZigqZHJ2X2luZm8pLCBHRlBfS0VSTkVMKTsKKwlpZiAoIWRydl9pbmZv
KSB7CisJCW1pc2NfZGVyZWdpc3RlcigmdmlydGlvX3ZkbWFidWZfbWlzY2Rldik7CisJCXJldHVy
biAtRU5PTUVNOworCX0KKworCXZkbWFidWYgPSBrdmNhbGxvYygxLCBzaXplb2YoKnZkbWFidWYp
LCBHRlBfS0VSTkVMKTsKKwlpZiAoIXZkbWFidWYpIHsKKwkJa3ZmcmVlKGRydl9pbmZvKTsKKwkJ
bWlzY19kZXJlZ2lzdGVyKCZ2aXJ0aW9fdmRtYWJ1Zl9taXNjZGV2KTsKKwkJcmV0dXJuIC1FTk9N
RU07CisJfQorCisJZHJ2X2luZm8tPnByaXYgPSAodm9pZCAqKXZkbWFidWY7CisJZHJ2X2luZm8t
PmRldiA9IHZpcnRpb192ZG1hYnVmX21pc2NkZXYudGhpc19kZXZpY2U7CisKKwltdXRleF9pbml0
KCZkcnZfaW5mby0+Z19tdXRleCk7CisKKwltdXRleF9pbml0KCZ2ZG1hYnVmLT5ldnEtPmVfcmVh
ZGxvY2spOworCXNwaW5fbG9ja19pbml0KCZ2ZG1hYnVmLT5ldnEtPmVfbG9jayk7CisKKwlJTklU
X0xJU1RfSEVBRCgmdmRtYWJ1Zi0+ZXZxLT5lX2xpc3QpOworCWluaXRfd2FpdHF1ZXVlX2hlYWQo
JnZkbWFidWYtPmV2cS0+ZV93YWl0KTsKKwloYXNoX2luaXQoZHJ2X2luZm8tPmJ1Zl9saXN0KTsK
KworCXZkbWFidWYtPmV2cS0+cGVuZGluZyA9IDA7CisJdmRtYWJ1Zi0+d3EgPSBjcmVhdGVfd29y
a3F1ZXVlKCJ2aXJ0aW9fdmRtYWJ1Zl93cSIpOworCisJcmV0ID0gcmVnaXN0ZXJfdmlydGlvX2Ry
aXZlcigmdmlydGlvX3ZkbWFidWZfdmRldl9kcnYpOworCWlmIChyZXQpIHsKKwkJZGV2X2Vycihk
cnZfaW5mby0+ZGV2LCAidmRtYWJ1ZiBkcml2ZXIgY2FuJ3QgYmUgcmVnaXN0ZXJlZFxuIik7CisJ
CW1pc2NfZGVyZWdpc3RlcigmdmlydGlvX3ZkbWFidWZfbWlzY2Rldik7CisJCWt2ZnJlZSh2ZG1h
YnVmKTsKKwkJa3ZmcmVlKGRydl9pbmZvKTsKKwkJcmV0dXJuIC1FRkFVTFQ7CisJfQorCisJcmV0
dXJuIDA7Cit9CisKK3N0YXRpYyB2b2lkIF9fZXhpdCB2aXJ0aW9fdmRtYWJ1Zl9kZWluaXQodm9p
ZCkKK3sKKwlzdHJ1Y3QgdmlydGlvX3ZkbWFidWYgKnZkbWFidWYgPSBkcnZfaW5mby0+cHJpdjsK
KwlzdHJ1Y3QgdmlydGlvX3ZkbWFidWZfZXZlbnQgKmUsICpldDsKKwl1bnNpZ25lZCBsb25nIGly
cWZsYWdzOworCisJbWlzY19kZXJlZ2lzdGVyKCZ2aXJ0aW9fdmRtYWJ1Zl9taXNjZGV2KTsKKwl1
bnJlZ2lzdGVyX3ZpcnRpb19kcml2ZXIoJnZpcnRpb192ZG1hYnVmX3ZkZXZfZHJ2KTsKKworCWlm
ICh2ZG1hYnVmLT53cSkKKwkJZGVzdHJveV93b3JrcXVldWUodmRtYWJ1Zi0+d3EpOworCisJc3Bp
bl9sb2NrX2lycXNhdmUoJnZkbWFidWYtPmV2cS0+ZV9sb2NrLCBpcnFmbGFncyk7CisKKwlsaXN0
X2Zvcl9lYWNoX2VudHJ5X3NhZmUoZSwgZXQsICZ2ZG1hYnVmLT5ldnEtPmVfbGlzdCwKKwkJCQkg
bGluaykgeworCQlsaXN0X2RlbCgmZS0+bGluayk7CisJCWt2ZnJlZShlKTsKKwkJdmRtYWJ1Zi0+
ZXZxLT5wZW5kaW5nLS07CisJfQorCisJc3Bpbl91bmxvY2tfaXJxcmVzdG9yZSgmdmRtYWJ1Zi0+
ZXZxLT5lX2xvY2ssIGlycWZsYWdzKTsKKworCS8qIGZyZWVpbmcgYWxsIGV4cG9ydGVkIGJ1ZmZl
cnMgKi8KKwlyZW1vdmVfYWxsX2J1ZnModmRtYWJ1Zik7CisKKwlrdmZyZWUodmRtYWJ1Zik7CisJ
a3ZmcmVlKGRydl9pbmZvKTsKK30KKworbW9kdWxlX2luaXQodmlydGlvX3ZkbWFidWZfaW5pdCk7
Cittb2R1bGVfZXhpdCh2aXJ0aW9fdmRtYWJ1Zl9kZWluaXQpOworCitNT0RVTEVfREVWSUNFX1RB
QkxFKHZpcnRpbywgdmlydGlvX3ZkbWFidWZfaWRfdGFibGUpOworTU9EVUxFX0RFU0NSSVBUSU9O
KCJWaXJ0aW8gVmRtYWJ1ZiBmcm9udGVuZCBkcml2ZXIiKTsKK01PRFVMRV9MSUNFTlNFKCJHUEwg
YW5kIGFkZGl0aW9uYWwgcmlnaHRzIik7CmRpZmYgLS1naXQgYS9pbmNsdWRlL2xpbnV4L3ZpcnRp
b192ZG1hYnVmLmggYi9pbmNsdWRlL2xpbnV4L3ZpcnRpb192ZG1hYnVmLmgKbmV3IGZpbGUgbW9k
ZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwLi4zYjE1MDI0MjMwYzAKLS0tIC9kZXYvbnVsbAor
KysgYi9pbmNsdWRlL2xpbnV4L3ZpcnRpb192ZG1hYnVmLmgKQEAgLTAsMCArMSwyNzEgQEAKKy8q
IFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiAoTUlUIE9SIEdQTC0yLjApICovCisKKy8qCisgKiBD
b3B5cmlnaHQgwqkgMjAyMSBJbnRlbCBDb3Jwb3JhdGlvbgorICoKKyAqIFBlcm1pc3Npb24gaXMg
aGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBh
CisgKiBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBm
aWxlcyAodGhlICJTb2Z0d2FyZSIpLAorICogdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91
dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbgorICogdGhlIHJpZ2h0
cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1Ymxp
Y2Vuc2UsCisgKiBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVy
bWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUKKyAqIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBz
bywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6CisgKgorICogVGhlIGFib3Zl
IGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2UgKGluY2x1ZGluZyB0
aGUgbmV4dAorICogcGFyYWdyYXBoKSBzaGFsbCBiZSBpbmNsdWRlZCBpbiBhbGwgY29waWVzIG9y
IHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZQorICogU29mdHdhcmUuCisgKgorICogVEhFIFNP
RlRXQVJFIElTIFBST1ZJREVEICJBUyBJUyIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQs
IEVYUFJFU1MgT1IKKyAqIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhF
IFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLAorICogRklUTkVTUyBGT1IgQSBQQVJUSUNV
TEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gIElOIE5PIEVWRU5UIFNIQUxMCisgKiBU
SEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwg
REFNQUdFUyBPUiBPVEhFUgorICogTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBD
T05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcKKyAqIEZST00sIE9VVCBPRiBPUiBJ
TiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElO
R1MKKyAqIElOIFRIRSBTT0ZUV0FSRS4KKyAqCisgKi8KKworI2lmbmRlZiBfTElOVVhfVklSVElP
X1ZETUFCVUZfSCAKKyNkZWZpbmUgX0xJTlVYX1ZJUlRJT19WRE1BQlVGX0ggCisKKyNpbmNsdWRl
IDx1YXBpL2xpbnV4L3ZpcnRpb192ZG1hYnVmLmg+CisjaW5jbHVkZSA8bGludXgvaGFzaHRhYmxl
Lmg+CisjaW5jbHVkZSA8bGludXgva3ZtX3R5cGVzLmg+CisKK3N0cnVjdCB2aXJ0aW9fdmRtYWJ1
Zl9zaGFyZWRfcGFnZXMgeworCS8qIGNyb3NzLVZNIHJlZiBhZGRyIGZvciB0aGUgYnVmZmVyICov
CisJZ3BhX3QgcmVmOworCisJLyogcGFnZSBhcnJheSAqLworCXN0cnVjdCBwYWdlICoqcGFnZXM7
CisJZ3BhX3QgKipsMnJlZnM7CisJZ3BhX3QgKmwzcmVmczsKKworCS8qIGRhdGEgb2Zmc2V0IGlu
IHRoZSBmaXJzdCBwYWdlCisJICogYW5kIGRhdGEgbGVuZ3RoIGluIHRoZSBsYXN0IHBhZ2UKKwkg
Ki8KKwlpbnQgZmlyc3Rfb2ZzdDsKKwlpbnQgbGFzdF9sZW47CisKKwkvKiBudW1iZXIgb2Ygc2hh
cmVkIHBhZ2VzICovCisJaW50IG5lbnRzOworfTsKKworc3RydWN0IHZpcnRpb192ZG1hYnVmX2J1
ZiB7CisJdmlydGlvX3ZkbWFidWZfYnVmX2lkX3QgYnVmX2lkOworCisJc3RydWN0IGRtYV9idWZf
YXR0YWNobWVudCAqYXR0YWNoOworCXN0cnVjdCBkbWFfYnVmICpkbWFfYnVmOworCXN0cnVjdCBz
Z190YWJsZSAqc2d0OworCXN0cnVjdCB2aXJ0aW9fdmRtYWJ1Zl9zaGFyZWRfcGFnZXMgKnBhZ2Vz
X2luZm87CisJaW50IHZtaWQ7CisKKwkvKiB2YWxpZGl0eSBvZiB0aGUgYnVmZmVyICovCisJYm9v
bCB2YWxpZDsKKworCS8qIHNldCBpZiB0aGUgYnVmZmVyIGlzIGltcG9ydGVkIHZpYSBpbXBvcnRf
aW9jdGwgKi8KKwlib29sIGltcG9ydGVkOworCisJLyogc2l6ZSBvZiBwcml2YXRlICovCisJc2l6
ZV90IHN6X3ByaXY7CisJLyogcHJpdmF0ZSBkYXRhIGFzc29jaWF0ZWQgd2l0aCB0aGUgZXhwb3J0
ZWQgYnVmZmVyICovCisJdm9pZCAqcHJpdjsKKworCXN0cnVjdCBmaWxlICpmaWxwOworCXN0cnVj
dCBobGlzdF9ub2RlIG5vZGU7Cit9OworCitzdHJ1Y3QgdmlydGlvX3ZkbWFidWZfZXZlbnQgewor
CXN0cnVjdCB2aXJ0aW9fdmRtYWJ1Zl9lX2RhdGEgZV9kYXRhOworCXN0cnVjdCBsaXN0X2hlYWQg
bGluazsKK307CisKK3N0cnVjdCB2aXJ0aW9fdmRtYWJ1Zl9ldmVudF9xdWV1ZSB7CisJd2FpdF9x
dWV1ZV9oZWFkX3QgZV93YWl0OworCXN0cnVjdCBsaXN0X2hlYWQgZV9saXN0OworCisJc3Bpbmxv
Y2tfdCBlX2xvY2s7CisJc3RydWN0IG11dGV4IGVfcmVhZGxvY2s7CisKKwkvKiAjIG9mIHBlbmRp
bmcgZXZlbnRzICovCisJaW50IHBlbmRpbmc7Cit9OworCisvKiBkcml2ZXIgaW5mb3JtYXRpb24g
Ki8KK3N0cnVjdCB2aXJ0aW9fdmRtYWJ1Zl9pbmZvIHsKKwlzdHJ1Y3QgZGV2aWNlICpkZXY7CisK
KwlzdHJ1Y3QgbGlzdF9oZWFkIGhlYWRfdmRtYWJ1Zl9saXN0OworCXN0cnVjdCBsaXN0X2hlYWQg
a3ZtX2luc3RhbmNlczsKKworCURFQ0xBUkVfSEFTSFRBQkxFKGJ1Zl9saXN0LCA3KTsKKworCXZv
aWQgKnByaXY7CisJc3RydWN0IG11dGV4IGdfbXV0ZXg7Cit9OworCisvKiBJT0NUTCBkZWZpbml0
aW9ucworICovCit0eXBlZGVmIGludCAoKnZpcnRpb192ZG1hYnVmX2lvY3RsX3QpKHN0cnVjdCBm
aWxlICpmaWxwLCB2b2lkICpkYXRhKTsKKworc3RydWN0IHZpcnRpb192ZG1hYnVmX2lvY3RsX2Rl
c2MgeworCXVuc2lnbmVkIGludCBjbWQ7CisJaW50IGZsYWdzOworCXZpcnRpb192ZG1hYnVmX2lv
Y3RsX3QgZnVuYzsKKwljb25zdCBjaGFyICpuYW1lOworfTsKKworI2RlZmluZSBWSVJUSU9fVkRN
QUJVRl9JT0NUTF9ERUYoaW9jdGwsIF9mdW5jLCBfZmxhZ3MpCVwKKwlbX0lPQ19OUihpb2N0bCld
ID0gewkJCVwKKwkJCS5jbWQgPSBpb2N0bCwJCVwKKwkJCS5mdW5jID0gX2Z1bmMsCQlcCisJCQku
ZmxhZ3MgPSBfZmxhZ3MsCVwKKwkJCS5uYW1lID0gI2lvY3RsCQlcCit9CisKKyNkZWZpbmUgVklS
VElPX1ZETUFCVUZfVk1JRChidWZfaWQpICgoKChidWZfaWQpLmlkKSA+PiAzMikgJiAweEZGRkZG
RkZGKQorCisvKiBNZXNzYWdlcyBiZXR3ZWVuIEhvc3QgYW5kIEd1ZXN0ICovCisKKy8qIExpc3Qg
b2YgY29tbWFuZHMgZnJvbSBHdWVzdCB0byBIb3N0OgorICoKKyAqIC0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQorICogQS4g
TkVFRF9WTUlECisgKgorICogIGd1ZXN0IGFza3MgdGhlIGhvc3QgdG8gcHJvdmlkZSBpdHMgdm1p
ZAorICoKKyAqIHJlcToKKyAqCisgKiBjbWQ6IFZJUlRJT19WRE1BQlVGX05FRURfVk1JRAorICoK
KyAqIGFjazoKKyAqCisgKiBjbWQ6IHNhbWUgYXMgcmVxCisgKiBvcFswXSA6IHZtaWQgb2YgZ3Vl
c3QKKyAqCisgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0KKyAqIEIuIEVYUE9SVAorICoKKyAqICBleHBvcnQgZG1hYnVm
IHRvIGhvc3QKKyAqCisgKiByZXE6CisgKgorICogY21kOiBWSVJUSU9fVkRNQUJVRl9DTURfRVhQ
T1JUCisgKiBvcDB+b3AzIDogSERNQUJVRiBJRAorICogb3A0IDogbnVtYmVyIG9mIHBhZ2VzIHRv
IGJlIHNoYXJlZAorICogb3A1IDogb2Zmc2V0IG9mIGRhdGEgaW4gdGhlIGZpcnN0IHBhZ2UKKyAq
IG9wNiA6IGxlbmd0aCBvZiBkYXRhIGluIHRoZSBsYXN0IHBhZ2UKKyAqIG9wNyA6IHVwcGVyIDMy
IGJpdCBvZiB0b3AtbGV2ZWwgcmVmIG9mIHNoYXJlZCBidWYKKyAqIG9wOCA6IGxvd2VyIDMyIGJp
dCBvZiB0b3AtbGV2ZWwgcmVmIG9mIHNoYXJlZCBidWYKKyAqIG9wOSA6IHNpemUgb2YgcHJpdmF0
ZSBkYXRhCisgKiBvcDEwIH4gb3A2NDogVXNlciBwcml2YXRlIGRhdGUgYXNzb2NpYXRlZCB3aXRo
IHRoZSBidWZmZXIKKyAqCSAgICAgICAgKGUuZy4gZ3JhcGhpYyBidWZmZXIncyBtZXRhIGluZm8p
CisgKgorICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tCisgKgorICogTGlzdCBvZiBjb21tYW5kcyBmcm9tIEhvc3QgdG8g
R3Vlc3QKKyAqCisgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KKyAqIEEuIFJFTEVBU0UKKyAqCisgKiAgbm90aWZ5aW5n
IGd1ZXN0IHRoYXQgdGhlIHNoYXJlZCBidWZmZXIgaXMgcmVsZWFzZWQgYnkgYW4gaW1wb3J0ZXIK
KyAqCisgKiByZXE6CisgKgorICogY21kOiBWSVJUSU9fVkRNQUJVRl9DTURfRE1BQlVGX1JFTAor
ICogb3Awfm9wMyA6IFZETUFCVUYgSUQKKyAqCisgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KKyAqLworCisvKiBtc2cg
c3RydWN0dXJlcyAqLworc3RydWN0IHZpcnRpb192ZG1hYnVmX21zZyB7CisJdW5zaWduZWQgaW50
IHJlcV9pZDsKKwl1bnNpZ25lZCBpbnQgc3RhdDsKKwl1bnNpZ25lZCBpbnQgY21kOworCXVuc2ln
bmVkIGludCBvcFs2NF07Cit9OworCitzdHJ1Y3QgdmlydGlvX3ZkbWFidWZfdHhtc2cgeworCXN0
cnVjdCB2aXJ0aW9fdmRtYWJ1Zl9tc2cgbXNnOworCXZvaWQgX191c2VyICptc2dfcHRyOworCWlu
dCBoZWFkOworfTsKKworZW51bSB2aXJ0aW9fdmRtYWJ1Zl9jbWQgeworCVZJUlRJT19WRE1BQlVG
X0NNRF9ORUVEX1ZNSUQsCisJVklSVElPX1ZETUFCVUZfQ01EX0VYUE9SVCA9IDB4MTAsCisJVklS
VElPX1ZETUFCVUZfQ01EX0RNQUJVRl9SRUwKK307CisKK2VudW0gdmlydGlvX3ZkbWFidWZfb3Bz
IHsKKwlWSVJUSU9fVkRNQUJVRl9IRE1BQlVGX0lEX0lEID0gMCwKKwlWSVJUSU9fVkRNQUJVRl9I
RE1BQlVGX0lEX1JOR19LRVkwLAorCVZJUlRJT19WRE1BQlVGX0hETUFCVUZfSURfUk5HX0tFWTEs
CisJVklSVElPX1ZETUFCVUZfTlVNX1BBR0VTX1NIQVJFRCwKKwlWSVJUSU9fVkRNQUJVRl9GSVJT
VF9QQUdFX0RBVEFfT0ZGU0VULAorCVZJUlRJT19WRE1BQlVGX0xBU1RfUEFHRV9EQVRBX0xFTkdU
SCwKKwlWSVJUSU9fVkRNQUJVRl9SRUZfQUREUl9VUFBFUl8zMkJJVCwKKwlWSVJUSU9fVkRNQUJV
Rl9SRUZfQUREUl9MT1dFUl8zMkJJVCwKKwlWSVJUSU9fVkRNQUJVRl9QUklWQVRFX0RBVEFfU0la
RSwKKwlWSVJUSU9fVkRNQUJVRl9QUklWQVRFX0RBVEFfU1RBUlQKK307CisKKy8qIGFkZGluZyBl
eHBvcnRlZC9pbXBvcnRlZCB2ZG1hYnVmIGluZm8gdG8gaGFzaCAqLworc3RhdGljIGlubGluZSBp
bnQKK3ZpcnRpb192ZG1hYnVmX2FkZF9idWYoc3RydWN0IHZpcnRpb192ZG1hYnVmX2luZm8gKmlu
Zm8sCisgICAgICAgICAgICAgICAgICAgICAgIHN0cnVjdCB2aXJ0aW9fdmRtYWJ1Zl9idWYgKm5l
dykKK3sKKwloYXNoX2FkZChpbmZvLT5idWZfbGlzdCwgJm5ldy0+bm9kZSwgbmV3LT5idWZfaWQu
aWQpOworCXJldHVybiAwOworfQorCisvKiBjb21wYXJpbmcgdHdvIHZkbWFidWYgSURzICovCitz
dGF0aWMgaW5saW5lIGJvb2wKK2lzX3NhbWVfYnVmKHZpcnRpb192ZG1hYnVmX2J1Zl9pZF90IGEs
CisgICAgICAgICAgICB2aXJ0aW9fdmRtYWJ1Zl9idWZfaWRfdCBiKQoreworCWludCBpOworCisJ
aWYgKGEuaWQgIT0gYi5pZCkKKwkJcmV0dXJuIDE7CisKKwkvKiBjb21wYXJlIGtleXMgKi8KKwlm
b3IgKGkgPSAwOyBpIDwgMjsgaSsrKSB7CisJCWlmIChhLnJuZ19rZXlbaV0gIT0gYi5ybmdfa2V5
W2ldKQorCQkJcmV0dXJuIGZhbHNlOworCX0KKworCXJldHVybiB0cnVlOworfQorCisvKiBmaW5k
IGJ1ZiBmb3IgZ2l2ZW4gdmRtYWJ1ZiBJRCAqLworc3RhdGljIGlubGluZSBzdHJ1Y3QgdmlydGlv
X3ZkbWFidWZfYnVmCisqdmlydGlvX3ZkbWFidWZfZmluZF9idWYoc3RydWN0IHZpcnRpb192ZG1h
YnVmX2luZm8gKmluZm8sCisJCQkgdmlydGlvX3ZkbWFidWZfYnVmX2lkX3QgKmJ1Zl9pZCkKK3sK
KwlzdHJ1Y3QgdmlydGlvX3ZkbWFidWZfYnVmICpmb3VuZDsKKworCWhhc2hfZm9yX2VhY2hfcG9z
c2libGUoaW5mby0+YnVmX2xpc3QsIGZvdW5kLCBub2RlLCBidWZfaWQtPmlkKQorCQlpZiAoaXNf
c2FtZV9idWYoZm91bmQtPmJ1Zl9pZCwgKmJ1Zl9pZCkpCisJCQlyZXR1cm4gZm91bmQ7CisKKwly
ZXR1cm4gTlVMTDsKK30KKworLyogZGVsZXRlIGJ1ZiBmcm9tIGhhc2ggKi8KK3N0YXRpYyBpbmxp
bmUgaW50Cit2aXJ0aW9fdmRtYWJ1Zl9kZWxfYnVmKHN0cnVjdCB2aXJ0aW9fdmRtYWJ1Zl9pbmZv
ICppbmZvLAorICAgICAgICAgICAgICAgICAgICAgICB2aXJ0aW9fdmRtYWJ1Zl9idWZfaWRfdCAq
YnVmX2lkKQoreworCXN0cnVjdCB2aXJ0aW9fdmRtYWJ1Zl9idWYgKmZvdW5kOworCisJZm91bmQg
PSB2aXJ0aW9fdmRtYWJ1Zl9maW5kX2J1ZihpbmZvLCBidWZfaWQpOworCWlmICghZm91bmQpCisJ
CXJldHVybiAtRU5PRU5UOworCisJaGFzaF9kZWwoJmZvdW5kLT5ub2RlKTsKKworCXJldHVybiAw
OworfQorCisjZW5kaWYKZGlmZiAtLWdpdCBhL2luY2x1ZGUvdWFwaS9saW51eC92aXJ0aW9faWRz
LmggYi9pbmNsdWRlL3VhcGkvbGludXgvdmlydGlvX2lkcy5oCmluZGV4IGJjMWMwNjIxZjVlZC4u
ZjFlYTFjMmY1Y2JmIDEwMDY0NAotLS0gYS9pbmNsdWRlL3VhcGkvbGludXgvdmlydGlvX2lkcy5o
CisrKyBiL2luY2x1ZGUvdWFwaS9saW51eC92aXJ0aW9faWRzLmgKQEAgLTU0LDUgKzU0LDYgQEAK
ICNkZWZpbmUgVklSVElPX0lEX0ZTCQkJMjYgLyogdmlydGlvIGZpbGVzeXN0ZW0gKi8KICNkZWZp
bmUgVklSVElPX0lEX1BNRU0JCQkyNyAvKiB2aXJ0aW8gcG1lbSAqLwogI2RlZmluZSBWSVJUSU9f
SURfTUFDODAyMTFfSFdTSU0JMjkgLyogdmlydGlvIG1hYzgwMjExLWh3c2ltICovCisjZGVmaW5l
IFZJUlRJT19JRF9WRE1BQlVGICAgICAgICAgIAkzMCAvKiB2aXJ0aW8gdmRtYWJ1ZiAqLwogCiAj
ZW5kaWYgLyogX0xJTlVYX1ZJUlRJT19JRFNfSCAqLwpkaWZmIC0tZ2l0IGEvaW5jbHVkZS91YXBp
L2xpbnV4L3ZpcnRpb192ZG1hYnVmLmggYi9pbmNsdWRlL3VhcGkvbGludXgvdmlydGlvX3ZkbWFi
dWYuaApuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAuLjdiZGRhYTA0ZGRk
NgotLS0gL2Rldi9udWxsCisrKyBiL2luY2x1ZGUvdWFwaS9saW51eC92aXJ0aW9fdmRtYWJ1Zi5o
CkBAIC0wLDAgKzEsOTkgQEAKKy8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiAoTUlUIE9SIEdQ
TC0yLjApCisKKy8qCisgKiBDb3B5cmlnaHQgwqkgMjAyMSBJbnRlbCBDb3Jwb3JhdGlvbgorICoK
KyAqIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkg
cGVyc29uIG9idGFpbmluZyBhCisgKiBjb3B5IG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0
ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlICJTb2Z0d2FyZSIpLAorICogdG8gZGVhbCBpbiB0
aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRh
dGlvbgorICogdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gs
IGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsCisgKiBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNv
ZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUKKyAqIFNvZnR3YXJlIGlz
IGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6
CisgKgorICogVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBu
b3RpY2UgKGluY2x1ZGluZyB0aGUgbmV4dAorICogcGFyYWdyYXBoKSBzaGFsbCBiZSBpbmNsdWRl
ZCBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZQorICogU29mdHdh
cmUuCisgKgorICogVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEICJBUyBJUyIsIFdJVEhPVVQgV0FS
UkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1IKKyAqIElNUExJRUQsIElOQ0xVRElORyBCVVQg
Tk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLAorICogRklU
TkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gIElOIE5P
IEVWRU5UIFNIQUxMCisgKiBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFC
TEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUgorICogTElBQklMSVRZLCBXSEVUSEVS
IElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcKKyAq
IEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBV
U0UgT1IgT1RIRVIgREVBTElOR1MKKyAqIElOIFRIRSBTT0ZUV0FSRS4KKyAqCisgKi8KKworI2lm
bmRlZiBfVUFQSV9MSU5VWF9WSVJUSU9fVkRNQUJVRl9ICisjZGVmaW5lIF9VQVBJX0xJTlVYX1ZJ
UlRJT19WRE1BQlVGX0gKKworI2RlZmluZSBNQVhfU0laRV9QUklWX0RBVEEgMTkyCisKK3R5cGVk
ZWYgc3RydWN0IHsKKwlfX3U2NCBpZDsKKwkvKiA4QiBsb25nIFJhbmRvbSBudW1iZXIgKi8KKwlp
bnQgcm5nX2tleVsyXTsKK30gdmlydGlvX3ZkbWFidWZfYnVmX2lkX3Q7CisKK3N0cnVjdCB2aXJ0
aW9fdmRtYWJ1Zl9lX2hkciB7CisJLyogYnVmX2lkIG9mIG5ldyBidWYgKi8KKwl2aXJ0aW9fdmRt
YWJ1Zl9idWZfaWRfdCBidWZfaWQ7CisJLyogc2l6ZSBvZiBwcml2YXRlIGRhdGEgKi8KKwlpbnQg
c2l6ZTsKK307CisKK3N0cnVjdCB2aXJ0aW9fdmRtYWJ1Zl9lX2RhdGEgeworCXN0cnVjdCB2aXJ0
aW9fdmRtYWJ1Zl9lX2hkciBoZHI7CisJLyogcHRyIHRvIHByaXZhdGUgZGF0YSAqLworCXZvaWQg
X191c2VyICpkYXRhOworfTsKKworI2RlZmluZSBWSVJUSU9fVkRNQUJVRl9JT0NUTF9JTVBPUlQg
XAorX0lPQyhfSU9DX05PTkUsICdHJywgMiwgc2l6ZW9mKHN0cnVjdCB2aXJ0aW9fdmRtYWJ1Zl9p
bXBvcnQpKQorI2RlZmluZSBWSVJUSU9fVkRNQUJVRl9JT0NUTF9SRUxFQVNFIFwKK19JT0MoX0lP
Q19OT05FLCAnRycsIDMsIHNpemVvZihzdHJ1Y3QgdmlydGlvX3ZkbWFidWZfaW1wb3J0KSkKK3N0
cnVjdCB2aXJ0aW9fdmRtYWJ1Zl9pbXBvcnQgeworCS8qIElOIHBhcmFtZXRlcnMgKi8KKwkvKiBh
aGRiIGJ1ZiBpZCB0byBiZSBpbXBvcnRlZCAqLworCXZpcnRpb192ZG1hYnVmX2J1Zl9pZF90IGJ1
Zl9pZDsKKwkvKiBmbGFncyAqLworCWludCBmbGFnczsKKwkvKiBPVVQgcGFyYW1ldGVycyAqLwor
CS8qIGV4cG9ydGVkIGRtYSBidWYgZmQgKi8KKwlpbnQgZmQ7Cit9OworCisjZGVmaW5lIFZJUlRJ
T19WRE1BQlVGX0lPQ1RMX0VYUE9SVCBcCitfSU9DKF9JT0NfTk9ORSwgJ0cnLCA0LCBzaXplb2Yo
c3RydWN0IHZpcnRpb192ZG1hYnVmX2V4cG9ydCkpCitzdHJ1Y3QgdmlydGlvX3ZkbWFidWZfZXhw
b3J0IHsKKwkvKiBJTiBwYXJhbWV0ZXJzICovCisJLyogRE1BIGJ1ZiBmZCB0byBiZSBleHBvcnRl
ZCAqLworCWludCBmZDsKKwkvKiBleHBvcnRlZCBkbWEgYnVmIGlkICovCisJdmlydGlvX3ZkbWFi
dWZfYnVmX2lkX3QgYnVmX2lkOworCWludCBzel9wcml2OworCWNoYXIgKnByaXY7Cit9OworCisj
ZGVmaW5lIFZJUlRJT19WRE1BQlVGX0lPQ1RMX1FVRVJZIFwKK19JT0MoX0lPQ19OT05FLCAnRycs
IDUsIHNpemVvZihzdHJ1Y3QgdmlydGlvX3ZkbWFidWZfcXVlcnkpKQorc3RydWN0IHZpcnRpb192
ZG1hYnVmX3F1ZXJ5IHsKKwkvKiBpbiBwYXJhbWV0ZXJzICovCisJLyogaWQgb2YgYnVmIHRvIGJl
IHF1ZXJpZWQgKi8KKwl2aXJ0aW9fdmRtYWJ1Zl9idWZfaWRfdCBidWZfaWQ7CisJLyogaXRlbSB0
byBiZSBxdWVyaWVkICovCisJaW50IGl0ZW07CisJLyogT1VUIHBhcmFtZXRlcnMgKi8KKwkvKiBW
YWx1ZSBvZiBxdWVyaWVkIGl0ZW0gKi8KKwl1bnNpZ25lZCBsb25nIGluZm87Cit9OworCisvKiBE
TUFCVUYgcXVlcnkgKi8KK2VudW0gdmlydGlvX3ZkbWFidWZfcXVlcnlfY21kIHsKKwlWSVJUSU9f
VkRNQUJVRl9RVUVSWV9TSVpFID0gMHgxMCwKKwlWSVJUSU9fVkRNQUJVRl9RVUVSWV9CVVNZLAor
CVZJUlRJT19WRE1BQlVGX1FVRVJZX1BSSVZfSU5GT19TSVpFLAorCVZJUlRJT19WRE1BQlVGX1FV
RVJZX1BSSVZfSU5GTywKK307CisKKyNlbmRpZgotLSAKMi4yNi4yCgpfX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpWaXJ0dWFsaXphdGlvbiBtYWlsaW5nIGxp
c3QKVmlydHVhbGl6YXRpb25AbGlzdHMubGludXgtZm91bmRhdGlvbi5vcmcKaHR0cHM6Ly9saXN0
cy5saW51eGZvdW5kYXRpb24ub3JnL21haWxtYW4vbGlzdGluZm8vdmlydHVhbGl6YXRpb24=
